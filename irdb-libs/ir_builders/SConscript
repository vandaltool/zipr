import os



Import('env')
myenv=env.Clone()
myenv.Replace(SECURITY_TRANSFORMS_HOME=os.environ['SECURITY_TRANSFORMS_HOME'])

installed=[]

if 'build_tools' not in myenv or myenv['build_tools'] is None or int(myenv['build_tools']) == 1:

	cpppath=''' 
		 $IRDB_SDK/include 
		 $SECURITY_TRANSFORMS_HOME/libEXEIO/include 
		 $SECURITY_TRANSFORMS_HOME/libehp/include 
		 $SECURITY_TRANSFORMS_HOME/libMEDSannotation/include/
		 $SECURITY_TRANSFORMS_HOME/third_party/elfio-code
		 $SECURITY_TRANSFORMS_HOME/third_party/pebliss/pe_lib
		'''

	LIBPATH="$SECURITY_TRANSFORMS_HOME/lib"
	LIBS=Split( 'irdb-cfg irdb-util pqxx ' + env.subst('$BASE_IRDB_LIBS')+ " ehp irdb-transform MEDSannotation EXEIO pebliss")

	myenv=myenv.Clone(CPPPATH=Split(cpppath))

	myenv.Append(CCFLAGS=" -std=c++14 -Wall")

	ehframe=myenv.SharedObject("read_ehframe.cpp");
	split_eh_frame=myenv.SharedObject("split_eh_frame.cpp");

	pgm=myenv.SharedLibrary("fill_in_indtargs.so",  ehframe+split_eh_frame+Split("fill_in_indtargs.cpp check_thunks.cpp"), LIBPATH=LIBPATH, LIBS=LIBS)
	install=myenv.Install("$SECURITY_TRANSFORMS_HOME/plugins_install", pgm)
	Default(install)
	installed=installed+install

	pgm=myenv.SharedLibrary("fill_in_cfg.so",  Split("fill_in_cfg.cpp")+split_eh_frame, LIBPATH=LIBPATH, LIBS=LIBS)
	install=myenv.Install("$SECURITY_TRANSFORMS_HOME/plugins_install", pgm)
	Default(install)
	installed=installed+install

	pgm=myenv.SharedLibrary("fix_calls.so",  ehframe+Split("fix_calls.cpp"), LIBPATH=LIBPATH, LIBS=LIBS)
	install=myenv.Install("$SECURITY_TRANSFORMS_HOME/plugins_install", pgm)
	Default(install)
	installed=installed+install

	# most programs go to $sectrans/bin
	pgms='''clone 
		'''
	for i in Split(pgms):
		# print "Registering pgm: "+ i
		pgm=myenv.Program(target=i+".exe",  source=Split(i+".cpp"), LIBPATH=LIBPATH, LIBS=LIBS)
		install=myenv.Install("$SECURITY_TRANSFORMS_HOME/plugins_install/", pgm)
		Default(install)
		installed=installed+install


	# ilr goes to $sectrans/plugins_install
	# pgm=myenv.Program(target="ilr.exe",  source=Split("ilr.cpp"), LIBPATH=LIBPATH, LIBS=LIBS)
	# install=myenv.Install("$SECURITY_TRANSFORMS_HOME/plugins_install/", pgm)
	# Default(install)
	# installed=installed+install

Return('installed')

