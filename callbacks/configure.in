
AC_INIT(myconfig, version-0.1)

AC_PROG_CC

AC_ARG_ENABLE([debugging],              [  --enable-debugging                enable -g when compiling])
AC_ARG_ENABLE([cgc],              	[  --enable-cgc                enable -DCGC when compiling for CGC binaries])
#AC_ARG_ENABLE([example],              	[  --enable-debugging                enable -g when compiling])
#AC_ARG_ENABLE([libc],              	[  --enable-libc                enable $1 for building ])

OPTIMIZE="-O3"
if test "$enable_debugging" = yes; then
        OPTIMIZE="-g "
fi

AC_SUBST(OPTIMIZE, $OPTIMIZE)


enable_dir()
{

	dir=$1
	shift 
	extra_makefiles="$*"
	eval enabled=\$enable_$dir

	echo "$dir enabled=$enabled"
	if test "$enabled" = yes; then
		bad_warnings="$bad_warnings $dir"
		AC_OUTPUT($dir/Makefile)
		for i in $extra_makefiles; do
			AC_OUTPUT($dir/$i/Makefile)
		done
		DIRS="$DIRS $dir"
	fi
}

LIB=$ZIPR_HOME/callbacks/lib/callbacks.a
AR=ar
CC=gcc
CFLAGS="$OPTIMIZE -nostdinc -fPIC -I$ZIPR_HOME/callbacks/libc/include  -fno-stack-protector"
LD=gcc
LDFLAGS="-r -nostdlib -fPIC"
AS=nasm
ASFLAGS="-felf"


if test "$enable_cgc" = yes; then
	echo Enabling CGC build.
	CFLAGS="$CFLAGS -DCGC"
	ASFLAGS="$ASFLAGS -DCGC"
fi

# output lib's makefile, which is always needed.
AC_OUTPUT(lib/Makefile)


enable_dir libc src/
enable_dir example

AC_OUTPUT(Makefile)

AC_SUBST(DIRS)
AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(LD)
AC_SUBST(LDFLAGS)
AC_SUBST(AS)
AC_SUBST(ASFLAGS)
AC_SUBST(ARCH)
AC_SUBST(AR)
AC_SUBST(OS)
AC_SUBST(LIB)

echo "------------------------------------------------"
echo "Ignore configure warnings about unknown --enable options for these items: $bad_warnings"
echo "------------------------------------------------"
