import os

print "In libIRDB/tests/SConscript"


Import('env')
env.Replace(SECURITY_TRANSFORMS_HOME=os.environ['SECURITY_TRANSFORMS_HOME'])


cpppath=''' 
	 $SECURITY_TRANSFORMS_HOME/include 
	 $SECURITY_TRANSFORMS_HOME/libIRDB/include 
	 $SECURITY_TRANSFORMS_HOME/beaengine/include 
	 $SECURITY_TRANSFORMS_HOME/libMEDSannotation/include 
	 $SECURITY_TRANSFORMS_HOME/tools/transforms 
	'''

CCFLAGS="-fPIC  -DCGC"

env=env.Clone(CPPPATH=Split(cpppath), CCFLAGS=CCFLAGS)
cgclibc=env.Object("cgclibc.cpp")
files1=Split("cgclibc_driver.cpp")+cgclibc
files2=Split("display_functions.cpp")+cgclibc 
files3=Split("infer_syscall_wrappers.cpp")+cgclibc 



LIBPATH="$SECURITY_TRANSFORMS_HOME/lib"
LIBS=Split("IRDB-core IRDB-cfg IRDB-syscall IRDB-util pqxx BeaEngine_s_d rewrite")

pgm=env.Program("cgclibc.exe",  files1,  LIBPATH=LIBPATH, LIBS=LIBS)
install=env.Install("$SECURITY_TRANSFORMS_HOME/bin/", pgm)
Default(install)

pgm=env.Program("display_functions.exe",  files2,  LIBPATH=LIBPATH, LIBS=LIBS)
install=env.Install("$SECURITY_TRANSFORMS_HOME/bin/", pgm)
Default(install)

pgm=env.Program("infer_syscall_wrappers.exe",  files3,  LIBPATH=LIBPATH, LIBS=LIBS)
install=env.Install("$SECURITY_TRANSFORMS_HOME/bin/", pgm)
Default(install)


