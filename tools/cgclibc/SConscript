import os



Import('env')
myenv=env.Clone()
myenv.Replace(SECURITY_TRANSFORMS_HOME=os.environ['SECURITY_TRANSFORMS_HOME'])


cpppath=''' 
	 $SECURITY_TRANSFORMS_HOME/include 
	 $SECURITY_TRANSFORMS_HOME/libIRDB/include 
	 $SECURITY_TRANSFORMS_HOME/libMEDSannotation/include 
	 $SECURITY_TRANSFORMS_HOME/tools/transforms 
	'''

myenv.Append(CCFLAGS="-DCGC")

myenv=myenv.Clone(CPPPATH=Split(cpppath))
cgclibc=myenv.Object("cgclibc.cpp")
files1=Split("cgclibc_driver.cpp")+cgclibc
files2=Split("display_functions.cpp")+cgclibc 
files3=Split("infer_syscall_wrappers.cpp")+cgclibc 



LIBPATH="$SECURITY_TRANSFORMS_HOME/lib"
LIBS=Split(env.subst('$BASE_IRDB_LIBS')+ " IRDB-cfg IRDB-syscall IRDB-util ")

pgm=myenv.Program("cgclibc.exe",  files1,  LIBPATH=LIBPATH, LIBS=LIBS)
install1=myenv.Install("$SECURITY_TRANSFORMS_HOME/bin/", pgm)
Default(install1)

pgm=myenv.Program("display_functions.exe",  files2,  LIBPATH=LIBPATH, LIBS=LIBS)
install2=myenv.Install("$SECURITY_TRANSFORMS_HOME/bin/", pgm)
Default(install2)

pgm=myenv.Program("infer_syscall_wrappers.exe",  files3,  LIBPATH=LIBPATH, LIBS=LIBS)
install3=myenv.Install("$SECURITY_TRANSFORMS_HOME/bin/", pgm)
Default(install3)

ret=[] + lib1 + lib2 + lib3;

Return('ret')
