            }
          }
        }
    $act_break = 0;
    $act_break = $1;
    $act_text = "";
    $act_text .= $_;
$act_text = "";
    $act_text .= "\@$act_break\@";
      $act_text =~ s/\@$i\@//;
    $act_text =~ s/(\\\S+)\s+/$1\_/g;
    $act_text =~ s/\\\S+\s+//g;  # usually font selector, but also backslash in the text
and C<[nn{mapfile}]>, C<[nnE<lt>pictureE<gt>]> and C<[nnE<lt>newlineE<gt>>
any later version.
B<findhyph> -- find words hyphenated by TeX in a document
B<findhyph [options]> F<foo.log>
    $br = $BREAKS{$br}{'prev'};
breaking algorithm in TeX (positive \emergencystretch); support for 
    %BREAKS = ();
    $BREAKS{$act_break}{'prev'} = $3;
  $br = $max_break;
B<tex> F<foo.tex>
  chomp;
close(O1);
close(O2) if $opt_p;
C<\mark{}> etc.) are shown as C<[]>. Math mode is indicated by C<$> sign.
configurable list of prepositions and conjunctions
conjunctions left at the end of line
              $context_before = $context_after = "";
            $context_before = $context_after = "";
Copy B<findhyph> or B<findhyph.bat> (depending on OS used) to a directory 
Copyright (c) Martin Budaj E<lt>m.b@speleo.skE<gt> 2000, 2001, 2009
C</usr/bin/> for Unix-like systems or in PATH when using B<findhyph.bat>.
    $demerits = 1e10;
      $demerits = $2;
die ($help_msg) if $opt_h || !$ARGV[0];
discretionary breaks in the first pass
display font selectors and other strings starting with a backslash character
display hyphenated words in context
display program version
    do_hyph();
  } else {
    $endgraf = 0;
    $endgraf = 1;
            "         -f           display font selectors\n" .
  $filename = $`;
$filename = $ARGV[0];
fixes in line breaks detection algorithm; support for third pass of line
  for $i (1..$max_break-1) {
formats used by pdfTeX; false page number detection should be much more rare)
from the typeset document. The reason is that TeX may need to break more 
generate file containing information about one-letter prepositions and 
getopts('cfphvl:');
            "         -h           display this help message\n" .
=head1 AUTHOR
=head1 HISTORY
=head1 INSTALLATION
=head1 LICENSE
=head1 NAME
=head1 OPTIONS
=head1 OUTPUT FILES
=head1 SYNOPSIS
=head4 1.0 (2001-04-08)
=head4 2.0 (2009-08-10)
$help_msg = "\nUsage: findhyph [options] <yourtexfile.log>\n" .
hyphenated words can be displayed in context
              if($act_text =~ /\@$i\@ ?(\S+)/) {$context_after = $1;}
            if ($act_text =~ /\@$i\@\S+\s+(\S+)/) {$context_after = $1;}
        if ($act_text =~ / (\S) \@$i\@/) {
        if ($act_text =~ /(\S+\@$i\@\S+)/) {        # only hyphenated words match
              if($act_text =~ /(\S+) \S \@$i\@/) {$context_before = $1;}
            if ($act_text =~ /(\S+)\s+\S+\@$i\@/) {$context_before = $1;}
    if (defined $USED[$i]) {
  if (/^\@emergencypass$/) {
    if ($endgraf && $2 < $demerits) {
if ($filename =~ /\.(log|tex|dvi|ps|pdf)$/) {
  if (/^\@firstpass$/) {
    if (not defined $USED[$i]) {
            if ($opt_c) {
          if ($opt_c) {
  if ($opt_f) {
if ($opt_p) {
      if ($opt_p) {                        # prepositions
          if ($out_text =~ /^[$opt_l]$/) {
    if ($pageno_allowed  && /\[(\-?\d+)(\.\-?\d+){0,9} ?(\]|\{|\<|$)/) {       # page number
  if ($search && /^@/) {
  if ($search) {
  if ($search && /^@\\discretionary via @@/) {
  if ($search && /^@@(\d+).+ t=(\d+) \-\> @@(\d+)/) {
  if ($search && $endgraf && $_ eq "") {
      if ($search_hyphens) {              # hyphenated words
  if ($search && /^@\\par via @@/) {
  if (/^\@secondpass$/) {
      if ($write_hyph_page) {
      if ($write_prep_page) {
included in system PATH. Perl interpreter is required to be in 
in this list. TeX constructs which are too difficult to display (C<\hbox{}>,
=item * 
=item 1)
=item 2)
=item 3)
=item B<-c>
=item B<-f>
=item B<-l=STRING>
=item B<-p>
=item B<-v>
=item F<foo.hyph> 
=item F<foo.prep> 
it under the terms of the GNU General Public License as published by
language
    last if ($br == 0);
List of hyphenated words. All punctuation characters, parentheses and
List of prepositions if option B<-p> is used.
            "         -l=STRING    use prepositions/conjunctions listed in STRING\n";
      $max_break = $1;
            "\n" .
    next;
    next;                  # using \discretionary
numbers when C<\count1> to C<\count9> registers are non-zero
open(IN, "$filename.log") or die ("Can't read $filename.log: $!\n");
open(O1, ">$filename.hyph") or die ("Can't write $filename.hyph: $!\n");
  open(O2, ">$filename.prep") or die ("Can't write $filename.prep: $!\n");
$opt_c = $opt_f = $opt_h = $opt_v = 0;
            "Options: -c           display hyphenated words in context\n" .
$opt_l = 'kKsSvVzZoOuUiIA';             # defaults for Slovak and Czech
other character immediately preceding or following displayed words are included
          $out_text = $1;
              $out_text = "$context_before $out_text $context_after";
            $out_text = "$context_before $out_text $context_after";
              $out_text =~ s/\@\d+\@//g;                 # very narrow columns
          $out_text =~ s/\@\d+\@//g;                 # very narrow columns
              $out_text =~ s/-//g;
          $out_text =~ s/-//g;
          $out_text =~ s/\@$i\@/-/g;
      $pageno = $1;
      $pageno_allowed = 0;
    $pageno_allowed = 0;
$pageno_allowed = 0;
    $pageno_allowed = 1;
page number detection improved (recognized negative page numbers, compound page
Page numbers in square brackets refer to LOG file and may occasionally differ
paragraph in which the footnote is referenced.
paragraphs than it would eventually fit on the page in order to find a page
            "         -p           generate file with prepositions left at the end of line\n" .
prepositions and conjunctions C<kKsSvVzZoOuUiIA> used for Slovak and Czech
          print O1 "$out_text\n";
        print O1 "[$pageno]\n\n";
            print O2 "$out_text\n";
        print O2 "[$pageno]\n\n";
print ($version_msg) if $opt_v;
public release
    $search = 0;
$search = 0;
    $search = 1;
    $search_hyphens = 0;
    $search_hyphens = 1;
    $search_hyphens = 1;   # @firstpass may contain words hyphenated by user
set C<\tracingparagraphs=1> in a TeX document F<foo.tex> and run:
sub do_hyph {
suggestions and testing by Pavel Striz
the Free Software Foundation; either version 2 of the License, or
This program is free software; you can redistribute it and/or modify
    @USED = ();
    $USED[$br] = 1;
use Getopt::Std;
use prepositions/conjunctions listed in STRING instead of default list of 
use warnings;
#!/usr/bin/perl
            "         -v           display version\n" .
$version_msg = "findhyph version 2.0\n";
  while (1) {
while(<IN>) {
Words hyphenated in footnotes are listed before the words hyphenated in the 
        $write_hyph_page = 0;
$write_hyph_page = 0;
          $write_hyph_page = 1;
        $write_prep_page = 0;
$write_prep_page = 0;
            $write_prep_page = 1;
