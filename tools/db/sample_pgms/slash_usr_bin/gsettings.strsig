Arguments:
bindtextdomain
bind_textdomain_codeset
__bss_start
changed::%s
Check if KEY is writable
[COMMAND]
Commands:
  COMMAND   The (optional) command to explain
Could not load schemas from %s: %s
dcgettext
Empty path given.
Empty schema name given
g_clear_error
  get                       Get the value of a key
Get the value of KEY
GLIBC_2.0
GLIBC_2.2
g_main_loop_new
g_main_loop_run
__gmon_start__
g_object_get
g_object_unref
g_printerr
g_settings_apply
g_settings_delay
g_settings_get_child
g_settings_get_range
g_settings_get_value
g_settings_is_writable
g_settings_list_children
g_settings_list_keys
g_settings_list_relocatable_schemas
g_settings_list_schemas
g_settings_new
g_settings_new_full
g_settings_range_check
g_settings_reset
  gsettings [--schemadir SCHEMADIR] COMMAND [ARGS...]
  gsettings [--schemadir SCHEMADIR] %s %s
g_settings_schema_get_id
g_settings_schema_get_path
g_settings_schema_source_get_default
g_settings_schema_source_lookup
g_settings_schema_source_new_from_directory
g_settings_schema_source_ref
g_settings_schema_source_unref
g_settings_schema_unref
g_settings_set_value
g_settings_sync
g_signal_connect_data
g_strdup_printf
g_str_equal
g_strfreev
g_str_has_suffix
g_string_append
g_string_append_printf
g_string_free
g_string_new
g_string_printf
g_strsplit
g_type_init
g_variant_get
g_variant_get_type
g_variant_get_type_string
g_variant_iter_init
g_variant_iter_loop
g_variant_new_string
g_variant_parse
g_variant_print
g_variant_type_equal
g_variant_unref
  help                      Show this information
If no KEY is specified, monitor all keys in SCHEMA.
If no SCHEMA is given, list all keys
_IO_stdin_used
_Jv_RegisterClasses
  KEY       The key within the schema
  KEY       The (optional) key within the schema
libc.so.6
__libc_start_main
libgio-2.0.so.0
libglib-2.0.so.0
libgobject-2.0.so.0
/lib/ld-linux.so.2
list-children
  list-children             List children of a schema
list-keys
List keys and values, recursively
  list-keys                 List keys in a schema
list-recursively
  list-recursively          List keys and values, recursively
list-relocatable-schemas
  list-relocatable-schemas  List relocatable schemas
list-schemas
  list-schemas              List installed schemas
List the children of SCHEMA
List the installed (non-relocatable) schemas
List the installed relocatable schemas
List the keys in SCHEMA
Monitor KEY for changes.
  monitor                   Watch for changes
No such key '%s'
No such schema '%s'
Path must begin with a slash (/)
Path must end with a slash (/)
Path must not contain two adjacent slashes (//)
  PATH      The path, for relocatable schemas
Print help
Query the range of valid values for KEY
  range                     Queries the range of a key
range %s %s %s
Reset all keys in SCHEMA to their defaults
Reset KEY to its default value
reset-recursively
  reset-recursively         Reset all values in a given schema
  reset                     Reset the value of a key
--schemadir
  SCHEMADIR A directory to search for additional schemas
[SCHEMA[:PATH]]
SCHEMA[:PATH]
SCHEMA[:PATH] KEY
SCHEMA[:PATH] [KEY]
SCHEMA[:PATH] KEY VALUE
Schema '%s' is not relocatable (path must not be specified)
Schema '%s' is relocatable (path must be specified)
  SCHEMA    The name of the schema
setlocale
  set                       Set the value of a key
Set the value of KEY to VALUE
settings-schema
%-*s   %s
%-*s   %s:%s
<'t1<"t-
The provided value is outside of the valid range
Unknown command %s
Use ^C to stop monitoring.
Use 'gsettings help COMMAND' to get detailed help.
/usr/share/locale
  VALUE     The value to set
  writable                  Check if a key is writable
