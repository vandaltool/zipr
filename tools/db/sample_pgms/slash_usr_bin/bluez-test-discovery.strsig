	adapter = dbus.Interface(bus.get_object("org.bluez", adapter_path),
		adapter_path = manager.DefaultAdapter()
		adapter_path = manager.FindAdapter(options.dev_id)
	adapter.StartDiscovery()
	bus.add_signal_receiver(device_found,
	bus.add_signal_receiver(property_changed,
	bus = dbus.SystemBus()
			dbus_interface = "org.bluez.Adapter",
	dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)
def device_found(address, properties):
def property_changed(name, value):
	for key in properties.keys():
from optparse import OptionParser, make_option
		if (key == "Class"):
	if (name == "Discovering" and not value):
if __name__ == '__main__':
	if options.dev_id:
import dbus
import dbus.mainloop.glib
import gobject
	mainloop = gobject.MainLoop()
		mainloop.quit()
	mainloop.run()
			make_option("-i", "--device", action="store",
	manager = dbus.Interface(bus.get_object("org.bluez", "/"),
	option_list = [
	(options, args) = parser.parse_args()
							"org.bluez.Adapter")
							"org.bluez.Manager")
	parser = OptionParser(option_list=option_list)
	print "[ " + address + " ]"
			print "    %s = 0x%06x" % (key, value)
			print "    %s = %s" % (key, value)
					signal_name = "DeviceFound")
					signal_name = "PropertyChanged")
					type="string", dest="dev_id"),
#!/usr/bin/python
		value = properties[key]
