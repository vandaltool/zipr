            {
            }
        {
        }
# ----------------
# --------------------------
# --------------------------------
# ---------------------------------
################################################################
	      #
	  $! = 0;
# 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software Foundation,
		    ('AC_DEFUN',
#   AC_DEFUN([macroname], ...)
#   AC_DEFUN(macroname, ...)
		     'AC_DEFUN_ONCE',
     'acdir=s'		=> \&handle_acdir_option,
	   . "acinclude.m4 but never used")
# aclocal - create aclocal.m4 by scanning configure.ac
aclocal (GNU $PACKAGE) $VERSION
# ACLOCAL_PATH environment variable, and reset with the `--system-acdir'
	      # aclocal removes all definitions from M4 file with the
  # aclocal sees the potential definition, but this definition is
      # AC_SUBSTs.
  # actually never processed and the Autoconf implementation is used
      $ac_version = $arg1 if $macro eq '_AM_AUTOCONF_VERSION';
# Add a macro to the output.
# Add any directory listed in the `ACLOCAL_PATH' environment variable
      add_file ('acinclude.m4');
# add_file ($FILE)
  &add_file ($map{$macro});
# Add $FILE to output.
  add_macro ($_) foreach (@rlist);
  # a file A if it is going to be output before a file B that includes
# Alexandre Duret-Lutz <adl@gnu.org>.
  `all'           all the warnings (default)
  # All candidate files.
  # All candidate macros.
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
  # Always include acinclude.m4, even if it does not appear to be used.
		     '_AM_AUTOCONF_VERSION')),
       and Alexandre Duret-Lutz <adl\@gnu.org>.
	  # and when --install is used.  But the above diagnostics are
  # another one with a serial).
# any later version.
	      # are hard to work around, especially when you must
  "(?:AU_ALIAS|A[CU]_DEFUN|AC_DEFUN_ONCE)\\((?:\\[([^]]+)\\]|([^],)\n]+))";
		     'AU_DEFUN',
# Autoconf version
      --automake-acdir=DIR  directory holding automake-provided m4 files
     'automake-acdir=s'	=> sub { shift; @automake_includes = @_; },
	  Automake::FileUtils::handle_exec_errors "@cmd", 1
  Automake::Getopt::parse_options %cli_options;
		   . "automake.html#Extending-aclocal")
  @automake_includes = ();
# @automake_includes can be reset with the `--automake-acdir' option.
# automake macros, and finally the system-wide directories for
      # Avoid running all the following regexes on white lines.
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# but WITHOUT ANY WARRANTY; without even the implied warranty of
  # can happen when an Autoconf macro is conditionally defined:
                              changed (implies --install and --dry-run)
		   # characters (like newlines).
check_acinclude;
# Check macros in acinclude.m4.  If one is not used, warn.
      # Check the time stamp of this file, and of all files it includes.
          chomp;
      chomp;
      closedir (DIR);
      close (DIRLIST);
  # come first in ACLOCAL_PATH take precedence over directories
  # coming later, which is why the result of split is reversed.
# Compare two lists of numbers.
  # complain when we trace for macro usage later.
  # configure.ac is implicitly included.
# configure.ac or configure.in.
$configure_ac = require_configure_ac;
  # Construct a new function that does the searching.  We use a
      $contents .= $_;
# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
Copyright (C) 2011 Free Software Foundation, Inc.
	      # Copy the file into aclocal.m4.
## cperl-brace-offset: 0
## cperl-continued-brace-offset: 0
## cperl-continued-statement-offset: 2
## cperl-extra-newline-before-brace: t
## cperl-indent-level: 2
## cperl-label-offset: -2
## cperl-merge-trailing-else: nil
  # creates aclocal.m4t and then rename it to aclocal.m4, but the
# (Definitions in first files we have scanned should override those from
	  $defun_seen = 1;
		  # Delete any definition we knew from the old macro.
  delete $files{$configure_ac};
	  delete $files{$ifile};
		      delete $map{$def};
	      # $dest does not exist.  We create an empty one just to
		  $dest = "$user_includes[0]/" . basename $ifile;
	  # diagnose later #serial numbers and underquoted macros).
  # "die" is correctly and easily propagated if run.
# --diff
      $diff_command = 'diff -u' if $diff_command eq '';
      --diff[=COMMAND]      run COMMAND [diff -u] on M4 files that would be
      @diff_command = split (' ', $diff_command);
	  $diff_dest = $dest;
		  $diff_dest = $dest;
		  $diff_dest = '/dev/null';
# different aclocal.m4.
     'diff:s'		=> \$diff_command,
  # Directories in ACLOCAL_PATH should take precedence over system
  # directories, so we use unshift.  However, directories that
# Ditto, but records the last definition of each macro as returned by --trace.
# does not exist.
  # doing so invalidate Autom4te's cache and therefore slows down
      # Do not do it earlier, because the serial line is a comment.
  # Do not explicitly include a file that is already indirectly included.
  # Do not scan a file twice.
  # Do not scan the same file twice.
		   # Do not trace $1 for all other macros as we do
      # Do not use "$output_file" here for the same reason we do not
      # don't match things that look like macro assignments or
# --dry-run
      $dry_run = 1;
     'dry-run'		=> \$dry_run,
      --dry-run             pretend to, but do not actually update any file
	      # duplicated macro.  However, this turns out to be
# Each key in %FILES is a file that must be present in the output.
      else
	      else
      elsif (0 == @r)
	  elsif ($defun_seen)
      elsif (!$dry_run)
	  elsif ($install && $type != FT_AUTOMAKE)
      elsif ($l[0] < $r[0])
      elsif ($l[0] > $r[0])
	      # Encountering a serial after some macros will undefine
END { unlink_tmp }
	      $erase_me = $dest;
# Erase temporary file ERASE_ME.  Handle signals.
  `error'         treat warnings as errors
eval 'case $# in 0) exec /usr/bin/perl -S "$0";; *) exec /usr/bin/perl -S "$0" "$@";; esac'
  eval $search;
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# except `]'.  Otherwise macroname stops on the first `]', `,', `)',
      || !exists $file_contents{$dest}
      exit 0;
  exit 0;
exit $exit_code;
  exit $status;
		   . "expecting a version string with only digits and dots");
	      # extremely unpopular.  It causes actual problems which
      fatal "could not remove `$erase_me': $!";
	  fatal "could not remove `$output_file': $!";
	  fatal "couldn't open directory `$m4dir': $!";
      fatal ("--install should copy macros in the directory indicated by the"
  fatal "$where: file `$file' does not exist" if ! -e $file;
		  $f->close;
  %file_added = ();
  $file_added{$file} = 1;
  # file A, not the converse.
  %file_contents = ();
  $file_contents{$file} = $contents;
    $file_contents{$file} : contents $file;
      || $file_contents{$src} ne $file_contents{$dest})
					"$file:$inc_lines{$_}") } @copy);
  # File included by $configure_ac are redundant.
  %file_includes = ();
  $file_includes{$file} = \@all_inc_files;
	  || $file =~ m,^(?:\w:)?[\\/],)
	      # file name.
  @file_order = ();
  $files{'acinclude.m4'} = 1 if -f 'acinclude.m4';
  # Files at the end of @file_order should override those at the beginning,
  $files{$configure_ac} = 1;
      $files{$map{$m}} = 1
  %files = strip_redundant_includes %files;
# Files that have already been scanned.
# Files which have already been added.
  %file_type = ();
  $file_type{$file} = $type;
  # (Filter out unused macro definitions with $map_traced_defs.  This
  # Finally, adds any directory listed in the `dirlist' file.
  # Finally, scan all files in our search paths.
  # First, scan configure.ac.  It may contain macro definitions,
  # FIXME: Shouldn't we diagnose this?
      # FIXME: should print line number of acinclude.m4.
      --force               always update output file
     'force'		=> \$force_output,
		  foreach my $def (@{$invmap{$basename}})
          foreach my $dir (glob)
  foreach my $dir (reverse split /:/, $ENV{"ACLOCAL_PATH"})
  foreach my $file (reverse @file_order)
      foreach my $file (reverse sort grep (! /^\./, readdir (DIR)))
      foreach my $ifile (@{$file_includes{$file}})
  foreach my $key (keys %map)
  foreach my $key (reverse sort keys %map)
  foreach my $m4dir (@dirlist)
  foreach (split ("\n", $contents))
  for my $file (grep { exists $files{$_} } @file_order)
      for my $ifile ($file, @{$file_includes{$file}})
	      for my $ifile (@{$file_includes{$file}}, $file)
  for my $m (@macros)
  # For some reason I don't understand, it does not work
# for uses of known macros and AC_REQUIREs of possibly unknown macros.
		  . '"); $found = 1; }' . "\n");
  # function (instead of just evaluating $search in the loop) so that
General help using GNU software: <http://www.gnu.org/gethelp/>.
Generate `aclocal.m4' by scanning `configure.ac' or `configure.in'
# Generated from aclocal.in; do not edit by hand.
  # Get the list of files containing definitions for the macros used.
# gives unlimited permission to copy and/or distribute it,
GNU Automake home page: <http://www.gnu.org/software/automake/>.
# GNU General Public License for more details.
	      # good when diff is run with options that display the
  $greatest_mtime = 0;
  $greatest_mtime = $mtime if $greatest_mtime < $mtime;
	  $greatest_mtime = $mtime if $greatest_mtime < $mtime;
      && $greatest_mtime < mtime ($output_file)
		    (grep { exists $files{$_} } @file_order))) . " ";
      --help                print this help, then exit
     'help'		=> sub { usage(0); },
# hence it should be output at a different position in aclocal.m4.  If
# However some of these files might already include other files in %FILES,
  -I DIR                    add directory to search list for .m4 files
    if 0;
      if (0 == @l)
  if ($ac_version)
	      # If creating $dest fails, fall back to /dev/null.  At
	  if (! defined $1)
  if (defined $diff_command)
	  if (! defined $diff_dest)
  if (defined $erase_me && -e $erase_me && !unlink ($erase_me))
	      if (! defined $f)
      if (@diff_command)
  if (!$dry_run)
      if (-e $dest)
      if (-e $output_file && !unlink $output_file)
	if (exists $map_traced_defs{$m}
    if exists $scanned_configure_dep{$file};
	      if (!exists $serial{$basename}
  if (-f 'acinclude.m4')
      if ($file_type{$file} != FT_USER
  if (!$force_output
  if ($force_output
  if ($installed)
	  if (!$install || $file_type{$file} != FT_SYSTEM)
  if ($install && !@user_includes)
      if ($line =~ /$serial_line_rx/go)
	if ($macro eq 'AC_DEFUN'
	if $map{$key} eq 'acinclude.m4' && ! exists $macro_seen{$key};
	  if ($number !~ /$serial_number_rx/go)
      if (! opendir (DIR, $m4dir))
  if (open (DIRLIST, "$system_includes[0]/dirlist"))
  if ($print_and_exit)
	    if $res;
      if (! &search && /(^|\s+)(AM_[A-Z0-9_]+)($|[^\]\)=A-Z0-9_])/)
    if ($serial_older ||
	  if (!$serial_older && !defined $map{$macro})
# If set, names a temporary file that must be erased on abnormal exit.
  if ($sig)
      # If the file to add looks like outside the project, copy it
	  # If this macro does not have a serial and we have already
If you have problems, you may need to regenerate the build system entirely.
  # Ignore any file that has an old serial (or no serial if we know
          # Ignore '#' lines.
      # Ignore `##' lines.
	  # ignore the macro (don't exit immediately so we can still
  # Ignore unknown required macros.  Either they are not really
	  $inc_lines{$ifile} = $.;
# Include paths for searching macros.  We search macros in this order:
      $install = 1;
      --install             copy third-party files to the first -I directory
	      $installed = 1;
		  install_file ($ifile, $dest);
# install_file ($SRC, $DEST)
     'install'          => \$install,
	      # Install the file (and any file it includes).
  # instead.)
  %invmap = ();
		  $invmap{$basename} = [];
# is that once the file has been moved from /usr/share/aclocal/ to the
     'I=s'		=> \@user_includes,
# it should not happen more than once.  The reason we must run again
# It's important to output the contents of aclocal.m4 in the opposite order.
# it under the terms of the GNU General Public License as published by
      kill $sig => $$;
    last if $dry_run;
    last if $exit_code;
    last if write_aclocal ($output_file, keys %macro_traced);
# later files.  So they must appear last in the output.)
	      # least one diff implementation (Tru64's) cannot deal
License GPLv2+: GNU GPL version 2 or later <http://gnu.org/licenses/gpl-2.0.html>
      ++$line;
      $line =~ s/\#.*$//;
      $line =~ s/\bdnl\b.*$//;
		  || list_compare (@new, @{$serial{$basename}}) > 0)
# local m4/ directory it appears at a new place in the search path,
## Local Variables:
    ++$loop;
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
m4_if(m4_defn([AC_AUTOCONF_VERSION]), [$ac_version],,
[m4_warning([this file was generated for autoconf $ac_version.
	    || $macro eq 'AC_DEFUN_ONCE'
	    || $macro eq 'AU_DEFUN');
	  # Macro not found, but AM_ prefix found.
  %macro_seen = ();
  $macro_seen{$macro} = 1;
	  # made regardless of this, because not using --install is
  # Make sure we include acinclude.m4 if it exists.
	  # Make this just a warning, because we do not know whether
  #     make to call aclocal in loop.)
  %map = ();
		   (map { "'$_'" }
# Map basenames to macro names.
# Map file names to file contents.
# Map file names to file types.
# Map file names to included files (transitively closed).
	      $map{$macro} = $file;
# Map macro names to file names.
	    && $map{$m} eq $map_traced_defs{$m});
		       map { scan_file ($type, $_,
  %map_traced_defs = ();
      $map_traced_defs{$arg1} = $file
		   (map { "--trace='$_:\$f::\$n::\$1'" }
		   (map { "--trace='$_:\$f::\$n'" } (keys %macro_seen)));
# Match a serial number.
# Matches a macro definition.
# Matches an AC_REQUIRE line.
# Matches an m4_include line.
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	      # mix-and-match tool versions.
# Modification time of the youngest dependency.
	  msg 'note', "installing `$dest' from `$src'";
	  msg 'note', "overwriting `$dest' with `$src'";
  msg 'obsolete', '', "`--acdir' is deprecated\n";
	      msg ('syntax', "$file:$.",
	      msg ('syntax', "$file:$.", "warning: underquoted definition of $2"
      msg ('syntax', "warning: macro `$key' defined in "
	  msg ('unsupported', "$file:$line",
my $ac_defun_rx =
my $ac_require_rx = "AC_REQUIRE\\((?:\\[([^]]+)\\]|([^],)\n]+))\\)";
my $ac_version;
  my @all_inc_files = (@inc_files,
my @automake_includes = ("/usr/share/aclocal-$APIVERSION");
  my $basename = basename $file;
  my %cli_options =
	  my @cmd = (@diff_command, $diff_dest, $src);
my $configure_ac;
  my $contents = '';
  my $contents = exists $file_contents{$file} ?
  my @copy = @inc_files;
  my $defun_seen = 0;
	      my $dest;
  my $diff_command;
my @diff_command;
  my $diff_dest;
my $dry_run = 0;
my $erase_me;
  my $fh = new Automake::XFile $file;
  my ($file) = @_;
my %file_added = ();
my %file_contents = ();
my %file_includes = ();
      my ($file, $macro, $arg1) = split (/::/);
my @file_order = ();
  my %files = ();
  my %files = @_;
  my %files = map { $map{$_} => 1 } keys %macro_seen;
my %file_type = ();
	      my $f = new IO::File "> $dest";
my $force_output = 0;
	  my $fullfile = File::Spec->canonpath ("$m4dir/$file");
my $greatest_mtime = 0;
	  my $ifile = $2 || $3;
  my @ilist = ();
  my @inc_files = ();
  my %inc_lines = ();
my $install = 0;
  my $installed = 0;
my %invmap = ();
  my @l = @{$_[0]};
      my $line = $_;
  my $line = 0;
my $loop = 0;
my $m4_include_rx = "(m4_|m4_s|s)include\\((?:\\[([^]]+)\\]|([^],)\n]+))\\)";
  my ($macro) = @_;
	  my $macro = $1 || $2;
my %macro_seen = ();
    my %macro_traced = trace_used_macros;
my %map = ();
my %map_traced_defs = ();
  my $mtime = mtime $file;
	  my $mtime = mtime $ifile;
	      my @new = split (/\./, $number);
	  my $number = $1;
      my $out = new Automake::XFile "> $output_file";
  my $output = '';
my $output_file = 'aclocal.m4';
  my ($output_file, @macros) = @_;
  my $perllibdir = $ENV{'perllibdir'} || '/usr/share/automake-1.11';
  my $print_and_exit = 0;
  my @r = @{$_[1]};
	  my $res = system (@cmd);
  my @rlist = ();
my %scanned_configure_dep = ();
  my $search = "sub search {\nmy \$found = 0;\n";
my %serial = ();
my $serial_line_rx = '^#\s*serial\s+(\S*)';
my $serial_number_rx = '^\d+(?:\.\d+)*$';
  my $serial_older = 0;
  my $serial_seen = 0;
  my ($sig) = @_;
  my ($src, $dest) = @_;
  my ($status) = @_;
my @system_includes = ('/usr/share/aclocal');
  my %traced = ();
  my $tracefh = new Automake::XFile ("$traces $configure_ac |");
  my $traces = ($ENV{AUTOM4TE} || 'autom4te');
  my ($type, @dirlist) = @_;
  my ($type, $file, $where) = @_;
my $underquoted_manual_once = 0;
my @user_includes = ();
  # name in the header.
  # needed (e.g., a conditional AC_REQUIRE), in which case aclocal
          next if /^#/;
      next if /^##/;
	  next if $1 ne 'm4_' && ! -f $ifile;
	  next if $file eq 'aclocal.m4';
      next if /^\s*$/;
      next unless exists $files{$file};
	  next unless exists $files{$ifile};
	  next unless $file =~ /\.m4$/;
	     . "\nfirst -I option, but no -I was supplied.");
  `no-CATEGORY'   turn off warnings in CATEGORY
  `none'          turn off all the warnings
	  # not a reason not the fix macro files.
	      # Note: we used to give an error here if we saw a
  # Nothing to output?!
		   # not need it and it might contains harmful
  #     (Not updating $output_file in this situation would cause
		   . "\n  run info '(automake)Extending aclocal'\n"
  #   * One of the dependencies is younger.
  # Only add a file once.
	  # Only examine .m4 files.
# on where the file comes from.
# option.
# Option --force.
Options:
  # or may include other files that define macros.
# or `\n' encountered.
		   . "  or see http://www.gnu.org/software/automake/manual/"
	  # Otherwise, simply include the file.
$output";
      && $output eq contents ($output_file))
	      $output .= $file_contents{$file} . "\n";
# Output file name.
      --output=FILE         put output in FILE (default aclocal.m4)
  $output = "# generated automatically by aclocal $VERSION -*- Autoconf -*-
      $output = "m4_ifndef([AC_AUTOCONF_VERSION],
	  $output .= "m4_include([$file])\n";
     'output=s'		=> \$output_file,
parse_ACLOCAL_PATH;
parse_arguments;
# Parse command line.
parse_WARNINGS;		    # Parse the WARNINGS environment variable.
# PARTICULAR PURPOSE.
# -*- perl -*-
## perl-brace-imaginary-offset: 0
## perl-brace-offset: 0
## perl-continued-brace-offset: 0
## perl-continued-statement-offset: 2
## perl-indent-level: 2
## perl-label-offset: -2
$perl_threads = 0;
# Point to the documentation for underquoted AC_DEFUN only once.
  # Prevent potential infinite recursion (if two files include each other).
     'print-ac-dir'     => \$print_and_exit,
      --print-ac-dir        print name of directory holding system-wide
  print <<EOF;
      print $out $output;
      print "@system_includes\n";
  print "Usage: aclocal [OPTIONS] ...
# Print usage and exit.
# Print version and exit.
  prog_error "$@\n search is $search" if $@;
    prog_error "Too many loops." if $loop > 2;
	  push @ilist, $ifile;
	  push (@inc_files, $ifile);
	      push @{$invmap{$basename}}, $macro;
	  push (@rlist, $1 || $2);
              push (@system_includes, $dir) if -d $dir;
	      # read-only tree anyway.
  # rebuild rules generated by Automake create aclocal.m4 directly --
# Recursively scan m4_included files.
# Register each file as of type $TYPE (one of the FT_* constants).
# Remember the order into which we scanned the files.
      # Remove comments from current line.
" . 'Report bugs to <bug-automake@gnu.org>.
  # reraise default handler.
    reset_maps;
  return ()
      return 0;
# Return 0 iff some files were installed locally.
	  return (0 == @r) ? 0 : -1;
      return 1;
  return 1;
	  return -1;
	  return 1;
  return 1 if ! length ($output);
  return @all_inc_files;
  return @{$file_includes{$file}} if exists $file_includes{$file};
  return %files;
  return () if exists $file_contents{$file};
  return if ($file_added{$file});
  return if not defined $ENV{"ACLOCAL_PATH"};
# Return the list of included files.
  return %traced;
  return unless defined $map{$macro};
	      # run diff, and we erase it afterward.  Using the real
      s/\#.*$//;
	      # same basename if a greater serial number is found.
      s/\bdnl\b.*$//;
# Scan a configure dependency (configure.ac, or separate m4 files)
# Scan all M4 files installed in @DIRS for new macro definitions.
# Scan all the installed m4 files and construct a map.
# Scan a single M4 file ($FILE), and all files it includes.
    scan_configure;
  scan_configure_dep ($configure_ac);
  scan_configure_dep $file;
# scan_configure_dep ($file)
  &scan_configure_dep ($_) foreach @ilist;
      &scan_file (FT_USER, 'acinclude.m4', 'aclocal');
  &scan_file (FT_USER, $configure_ac, 'aclocal');
# scan_file ($TYPE, $FILE, $WHERE)
	    &scan_file ($type, $fullfile, 'aclocal');
  scan_m4_dirs (FT_AUTOMAKE, @automake_includes);
  scan_m4_dirs (FT_SYSTEM, @system_includes);
  scan_m4_dirs (FT_USER, @user_includes);
# scan_m4_dirs($TYPE, @DIRS)
    scan_m4_files;
      # scan_m4_files.  The last parenthetical match makes sure we
  %scanned_configure_dep = ();
  $scanned_configure_dep{$file} = 1;
      $search .= ('if (/\b\Q' . $key . '\E(?!\w)/) { & add_macro ("' . $key
  $search .= "return \$found;\n};\n";
	  # seen a macro with the same basename earlier, we should
  %serial = ();
		  $serial{$basename} = \@new;
# Serial numbers, for files that have one.
		  $serial_older = 1;
	  $serial_older ||= ($type != FT_AUTOMAKE
	      $serial_seen = 1;
			     && !$serial_seen && exists $serial{$basename});
# Set by trace_used_macros.
### Setup "GNU" style for perl-mode and cperl-mode.
      shift @l;
      shift @r;
  # should be quiet, or they are needed and Autoconf itself will
$SIG{'INT'} = $SIG{'TERM'} = $SIG{'QUIT'} = $SIG{'HUP'} = 'unlink_tmp';
      $SIG{$sig} = 'DEFAULT';
	  # Skip missing `sinclude'd files.
	  # Skip some files when running out of srcdir.
  # so it is important to preserve these trailing files.  We can remove
# Some globals.
# so there is no point in including them another time.
          s/\s*\#.*$//;
          # strip off newlines and end-of-line comments
# strip_redundant_includes (%FILES)
sub add_file ($)
sub add_macro ($)
sub check_acinclude ()
sub handle_acdir_option ($$)
sub install_file ($$)
sub list_compare (\@\@)
sub parse_ACLOCAL_PATH ()
sub parse_arguments ()
sub reset_maps ()
sub scan_configure ()
sub scan_configure_dep ($)
sub scan_file ($$$)
sub scan_m4_dirs ($@)
sub scan_m4_files ()
sub strip_redundant_includes (%)
sub trace_used_macros ()
sub unlink_tmp
sub usage ($)
sub version()
sub write_aclocal ($@)
  `syntax'        dubious syntactic constructs (default)
      --system-acdir=DIR    directory holding third-party system-wide files
     'system-acdir=s'	=> sub { shift; @system_includes = @_; },
  @system_includes = ($_[1]);
# @system_includes can be augmented with the `dirlist' file or the
  #   * The contents of the current file are different from what
	      # the destination file (rather than a temporary file) is
      # the file in the diagnostic anyway.
  #   * The --force option is in use.
# the Free Software Foundation; either version 2, or (at your option)
# The key is the basename of the file,
	  # the macro is actually used (it could be called conditionally).
  # Then, scan acinclude.m4 if it exists.
# the public (unversioned) system directory.  This usage is obsolete.
There is NO WARRANTY, to the extent permitted by law.
      # The search function is constructed dynamically by
	      # these macros...
		   'the serial number must appear before any macro definition');
# the value is the serial number represented as a list.
      # things like `/', `\', or `c:\'.
                              third-party m4 files, then exit
# third-party macros.
  # this creates spurious differences when using autoreconf.  Autoreconf
# This file is free software; the Free Software Foundation
This is free software: you are free to change and redistribute it.
# This program is distributed in the hope that it will be useful,
# This program is free software; you can redistribute it and/or modify
# This removes items of %FILES which are already included by another file.
  # this would gives two ways to get the same file, with a different
  # to do `map { scan_file ($_, ...) } @inc_files' below.
To do so, use the procedure documented by the package, typically `autoreconf'.])])
  # tools called after aclocal.
# to the list of system include directories.
      # to the output.  The regex catches filenames starting with
      $traced{$macro} = 1 if exists $macro_seen{$macro};
  $tracefh->close;
  $traces .= join (' ',
  $traces .= " --language Autoconf-without-aclocal-m4 ";
	($type != FT_AUTOMAKE && !$serial_seen && exists $serial{$basename}));
# $TYPE is one of FT_USER, FT_AUTOMAKE, or FT_SYSTEM, depending
  undef $erase_me;
		  undef $erase_me;
  undef &search;
	      $underquoted_manual_once = 1;
		unless $underquoted_manual_once;
	  unlink_tmp;
  unshift @file_order, $file;
  unshift @INC, (split ':', $perllibdir);
      unshift (@system_includes, $dir) if $dir ne '' && -d $dir;
  `unsupported'   unknown macros (default)
use Automake::ChannelDefs;
use Automake::Channels;
use Automake::Config;
use Automake::Configure_ac;
use Automake::FileUtils;
use Automake::General;
  use Automake::Getopt ();
use Automake::XFile;
use constant FT_AUTOMAKE => 2;
use constant FT_SYSTEM => 3;
use constant FT_USER => 1;
use Cwd;
      # used in preference to foo1.m4.
use File::Basename;
use File::stat;
      # use it in the header below.  autom4te will output the name of
# @user_includes can be augmented with -I.
# user-supplied directories first, then the directory containing the
use strict;
# Using --acdir overrides both the automake (versioned) directory and
#!/usr/bin/perl -w
      verb "caught SIG$sig, bailing out";
		      verb "$file:$.: ignoring previous definition of $def";
	      verb "$file:$.: serial $number";
	      verb "found macro $macro in $file: $.";
	  verb "$ifile is already included by $file";
	      verb "ignoring macro $macro in $file: $.";
		  verb "installing $ifile to $dest";
      --verbose             don't be silent
     'verbose'		=> sub { setup_channel 'verb', silent => 0; },
      verb "$output_file unchanged";
      verb "running aclocal anew, because some files were installed locally";
	  verb "running: @cmd";
  verb "running $traces $configure_ac";
  verb "saw macro $macro";
  verb "writing $output_file";
      --version             print version number, then exit
     'version'		=> \&version,
Warning categories include:
		   "warning: ill-formed serial number `$number', "
	       "warning: macro `$2' not found in library");
# we did not rerun aclocal, the next run of aclocal would produce a
# We do not operate in threaded mode.
  #     we have computed.
# We may have to rerun aclocal if some file have been installed, but
  # We need to overwrite $output_file in the following situations.
	  # We really care about serials only for non-automake macros
      # We reverse the directory contents so that foo2.m4 gets
  # We try not to update $output_file unless necessary, because
  # We used to print `# $output_file generated automatically etc.'  But
# When macroname is `['-quoted , we accept any character in the name,
# $WHERE is the location to use in the diagnostic if the file
# Whether we should copy M4 file in $user_includes[0].
# Which macros have been seen.
  while (1)
while (1)
      while (/$ac_require_rx/go)
      while (<DIRLIST>)
  while ($_ = $fh->getline)
      while ($line =~ /$ac_defun_rx/go)
      while ($line =~ /$m4_include_rx/go)
      while (/$m4_include_rx/go)
  while ($_ = $tracefh->getline)
	      # with /dev/null.  However working around this is not
# with or without modifications, as long as this notice is preserved.
  # With Perl 5.8.2 it undefines @inc_files.
	      # worth the trouble since nobody run aclocal on a
# Write output.
Written by Tom Tromey <tromey\@redhat.com>
# Written by Tom Tromey <tromey@redhat.com>, and
  -W, --warnings=CATEGORY   report the warnings falling in CATEGORY
     'W|warnings=s'     => \&parse_warnings,
	  xsystem ('cp', $src, $dest);
You have another version of autoconf.  It may work, but is not guaranteed to.
# You should have received a copy of the GNU General Public License
