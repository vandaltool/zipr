            {
            }
        {
        }
##############################################################################
$0 =~ s!.*/!!;
Added support for PostScript-flavored (F<otf>) OpenType fonts.
                $afm = <AFM>;
            $afm = <AFM>;
All these utilities need to be available on your system.
        ($base, $ext) = ($1, $2);
B<font2afm> generates font metrics (in Adobe's F<afm> format) for Type1,
B<font2afm> is just a wrapper script around several utilities (B<cfftot1>, 
B<pf2afm>, B<ttf2afm>, B<pfm2kpx> and B<ot2kpx>) that do the real work. 
    chop(@ARGV = <LIST>);
	    close AFM;
	close AFM;
                    die "Error: can't create `${base}.afm' - $!\n";
                die "Error: can't create `${base}.afm' - $!\n";
                    die "Error: can't open `${base}.afm' - $!\n";
                die "Error: can't open `${base}.afm' - $!\n";
    	die "Error: you've just found a bug in `$0' - congratulations!\n";
die "Usage: $0 fontfile ...\n   or: $0 \@fontlist\n" if @ARGV < 1;
        else {
    else {
	    else {
    elsif ($ext =~ m!otf!) {
    elsif ($ext =~ m!ttf!) {
	    	    	    EndFontMetrics!sx) 
	    	    	EndFontMetrics!sx) 
F<afm2afm>, F<autoinst>, F<cmap2enc>, F<ot2kpx>, F<pfm2kpx>, F<cfftot1> 
First version
font2afm - create font metrics (in F<afm> format) for (almost) any font file 
font2afm [options] @I<filelist>
font2afm [options] I<font> ...
for (@ARGV) {
Force overwriting of existing F<afm> files.
F<pf2afm> (part of I<GhostScript>), F<ttf2afm> (part of I<pdfTeX>),
getopts "f", \%options;
=head1 AUTHOR
=head1 DESCRIPTION
=head1 FILES
=head1 HISTORY
=head1 NAME
=head1 OPTIONS
=head1 SEE ALSO
=head1 SYNOPSIS
	    if ($afm =~ m!^(.+?)(?:StartKernData.+EndKernData\n)?
	if ($afm =~ m!^(.+?)(?:StartKernData.+EndKernData\n)?
if ($ARGV[0] =~ m!^@(.+)!) {
        if (-e "${base}.otf") {
        if (-e "${base}.pfm") {
    if ($ext =~ m!pf(?:a|b)!) {
    if (m!(.+)\.(pfb|pfa|ttf|otf)!) {
Improved the documentation
=item B<-f>
=item I<2005-04-15>
=item I<2005-04-29>
=item I<2005-05-23>
=item I<2005-07-29>
=item I<2005-08-08>
=item I<filelist>
=item I<font>
                $kpx = <KPX>;
            $kpx = <KPX>;
                local $/;
            local $/;
    map {m!\S+! and $_ = $&} @ARGV;
Marc Penninga <marc@penninga.info>
        next;
    next if -e "${base}.afm" and !$options{f};
            open AFM, "<${base}.afm" or 
            open AFM, ">${base}.afm" or 
        open AFM, "<${base}.afm" or 
        open AFM, ">${base}.afm" or 
            open KPX, "<${base}.kpx" or 
        open KPX, "<${base}.kpx" or 
    open LIST, "<$1" or die "Error: can't open `$1' - $!\n";
OpenType (both PostScript- and TrueType-flavored) font.
=over 12
(part of Eddie Kohler's I<LCDF TypeTools>).
	    print AFM "$1${kpx}EndFontMetrics\n";
		print AFM "$1${kpx}EndFontMetrics\n";
	    	print AFM $afm;
	    print AFM $afm;
        redo;
        system "cfftot1 -b -o ${base}.pfb $_";
            system "ot2kpx '${base}.otf' >'${base}.kpx'";
        system "ot2kpx '${base}.ttf' >'${base}.kpx'";
            system "pf2afm '$_'";
            system "pfm2kpx '${base}.pfm'";
        system "ttf2afm -o '${base}.afm' '$_'";
This can be any Type1 (in either F<pfa> or F<pfb> format), TrueType or 
This should contain a newline-separated list of font filenames.
TrueType and OpenType fonts.
	    unlink "${base}.kpx";
	unlink "${base}.kpx";
use Getopt::Std;
use integer;
use warnings; no warnings qw(uninitialized);
#!/usr/bin/perl
	    	warn "Warning: `${base}.afm' seems rotten - please check\n";
	    warn "Warning: `${base}.afm' seems rotten - please check\n";
                    warn("Warning: can't open `${base}.kpx' - $!\n"), next;
                warn("Warning: can't open `${base}.kpx' - $!\n"), next;
        warn "Warning: unrecognised font file `$_' skipped\n";
