    } else {
	for ( $i = 0 ; $i < $n ; $i++ ) {
    if ( open(RANDOM, '<', '/dev/random') ||
    my($n) = @_;
    my($v, $i);
	# No real RNG available...
	 open(RANDOM, '<', '/dev/urandom') ) {
($pass, $salt) = @ARGV;
print unix_md5_crypt($pass, $salt), "\n";
	read(RANDOM, $v, $n);
    return $v;
    $salt = MIME::Base64::encode(random_bytes(6), '');
    $salt =~ tr/\+/./;		# . not +
	srand($$ ^ time);
sub random_bytes($) {
unless (defined($salt)) {
use bytes;
use Crypt::PasswdMD5;
use MIME::Base64;
#!/usr/bin/perl
	$v = '';
	    $v .= ord(int(rand() * 256));
