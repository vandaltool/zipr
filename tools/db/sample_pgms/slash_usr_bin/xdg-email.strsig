            ;;
            }
         ;;
        ;;
        }
      -*)
      *)
      *@*)
      *\?)
      *\?*)
#--------------------------------------
#----------------------------------------
#-----------------------------------------
#---------------------------------------------
#------------------------------------------------------------
#-------------------------------------------------------------
#----------------------------------------------------------------------------
    "$1" --compose "$2"
addresses may be provided as separate arguments.
address(es) or mailto-uri. RFC2368 defines mailto: URIs. xdg-email limits
All information provided on the command line is used to prefill corresponding
    # All output to stderr
    #   and if we are running Lubuntu, fallback to sylpheed
#   and/or sell copies of the Software, and to permit persons to whom the
An exit code of 0 indicates success while a non-zero exit code indicates
    A required tool could not be found.
#   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
      --attach)
    ATTACH=$(echo "$MAILTO" | sed 's/^attach=/\n\nfile:\/\//g' | awk '/^file:/ { printf "%s,",$0 }' | sed 's/,$//')
--attach file
] [--attach file] [ mailto-uri | address(es) ]
       [a-zA-Z]*-*)
      --bcc)
--bcc address
    BCC=$(echo "$MAILTO" | grep '^bcc=' | sed 's/^bcc=//' | awk '{ printf "%s,",$0 }')
    before actually sending the e-mail, this can be used to provide the user
    BEGIN {
    # Be silent
#!/bin/sh
      --body)
          --body 'Attached you find the logo for the contest.' \
    BODY=$(echo "$MAILTO" | grep '^body=' | tail -n 1)
--body text
    BROWSER=links2:links:lynx:w3m
            browser_with_arg=`printf "$browser" "$1" 2>/dev/null`
        BROWSER=x-www-browser:firefox:mozilla:epiphany:konqueror:chromium-browser:google-chrome:$BROWSER
can change the e-mail composer that is used.
case "$DE" in
    case "$file" in
case $mailto in
        case "$parm" in
    case "$parm" in
cat << _MANUALPAGE
cat << _USAGE
      --cc)
--cc address
    CC=$(echo "$MAILTO" | grep '^cc=' | sed 's/^cc=//' | awk '{ printf "%s,",$0 }')
change any of this information before actually sending the e-mail.
check_common_commands "$@"
check_common_commands()
check_input_file()
        check_input_file "$1"
check_output_file()
# Checks for known desktop environments
# Checks for shared commands, e.g. --help
check_vendor_prefix()
    client=`desktop_file_to_binary "$browser"`
    client=`desktop_file_to_binary "$desktop"`
        client=`desktop_file_to_binary "sylpheed.desktop"`
    client=`kreadconfig --file emaildefaults --group PROFILE_"$kde_email_profile_name" --key EmailClient | cut -d ' ' -f 1`
        command="`grep -E "^Exec(\[[^]=]*])?=" "$file" | cut -d= -f 2- | sed -e 's/ .*$//'`"
        command="`which "$command"`"
#   Common utility functions included in all XDG wrapper scripts
Configuration
configure xdg-email to use the email client of your choice.
#   copy of this software and associated documentation files (the "Software"),
#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
            c = substr ($0, i, 1)
    DEBUG 1 "Running $1 --compose \"$2\""
    DEBUG 1 "Running exo-open \"$1\""
        DEBUG 1 "Running gnome-open \"$1\""
        DEBUG 1 "Running gvfs-open \"$1\""
    DEBUG 1 "Running kmailservice \"$1\""
    DEBUG 1 "Running $THUNDERBIRD -compose \"$NEWMAILTO\""
    DEBUG 2 "DE is \"$DE\""
            DEBUG 3 "KDE has $client configured as email client which isn't installed"
    DEBUG 3 "Running open_lxde \"$1\""
        DEBUG 3 "Running run_sylpheed \"$client\" \"$1\""
               DEBUG 3 "Try gnome-open instead"
	DE=envvar
    DE=generic
Description
    desktop="`basename "$1"`"
desktop_file_to_binary()
    desktop=`xdg-mime query default "x-scheme-handler/mailto"`
detectDE
detectDE()
        [ "$dir" -a -d "$dir/applications" ] || continue
        DIR=`dirname "$1"`
    done
        e = ""
        echo
        echo "$@"
  echo "$@" >&2
    echo 'A vendor prefix consists of alpha characters ([a-zA-Z]) and is terminated' >&2
    echo $client | grep sylpheed > /dev/null 2>&1
    echo $client | grep thunderbird > /dev/null 2>&1
    echo "$MAILTO" | grep -qs "^?"
        echo "Try 'xdg-email --help' for more information." >&2
            echo "Use 'man xdg-email' or 'xdg-email --manual' for additional info."
        echo "Use 'man xdg-email' or 'xdg-email --manual' for additional info."
    echo "Use --novendor to override or 'xdg-email --manual' for additional info." >&2
    echo 'with a dash ("-"). An example '"$file_label"' is '"'example-$file'" >&2
            echo "xdg-email 1.0.2"
        echo "xdg-email: $@" >&2
    echo "xdg-email: $file_label '$file' does not have a proper vendor prefix" >&2
            e = e "%0D%0A"
                e = e c
                e = e "%" sprintf("%02X", ord [c])
    elif `dbus-send --print-reply --dest=org.freedesktop.DBus /org/freedesktop/DBus org.freedesktop.DBus.GetNameOwner string:org.gnome.SessionManager > /dev/null 2>&1` ; then DE=gnome;
    elif [ -r ~/.muttrc ] && which mutt > /dev/null 2>&1; then
    elif [ x"$DESKTOP_SESSION" = x"LXDE" ]; then DE=lxde;
    elif [ x"$GNOME_DESKTOP_SESSION_ID" != x"" ]; then DE=gnome;
    elif [ x"$KDE_FULL_SESSION" = x"true" ]; then DE=kde;
    elif xprop -root _DT_SAVE_MODE 2> /dev/null | grep ' = \"xfce4\"$' >/dev/null 2>&1; then DE=xfce;
    elif [ x"$XDG_CURRENT_DESKTOP" = x"LXDE" ]; then DE=lxde;
    else
        else
            } else {
            else $browser_with_arg;
    else DE=""
            } else if ( c ~ /[@a-zA-Z0-9.-\\\/]/ ) {
e-mail composer
    END {
Environment Variables
    envvar)
    Error in command line syntax.
    esac
        esac
	eval "$i" '"$1"'
Examples
    exit 0
    exit 1
    exit 2
    exit 3
    exit 4
    exit 5
    exit 6
Exit Codes
exit_failure_file_missing()
            exit_failure_file_missing "file '$1' does not exist"
        exit_failure_file_missing "file '$1' does not exist"
exit_failure_file_permission_read()
        exit_failure_file_permission_read "no permission to read file '$1'"
exit_failure_file_permission_write()
            exit_failure_file_permission_write "no permission to create file '$1'"
            exit_failure_file_permission_write "no permission to write to file '$1'"
        exit_failure_operation_failed
    exit_failure_operation_failed
exit_failure_operation_failed()
exit_failure_operation_impossible()
    exit_failure_operation_impossible "no method available for opening '$1'"
    exit_failure_operation_impossible "no method available for opening '${mailto}'"
exit_failure_syntax()
            exit_failure_syntax "email address argument missing for --bcc"
             exit_failure_syntax "email address argument missing for --cc"
            exit_failure_syntax "email address argument missing for --to"
            exit_failure_syntax "file argument missing for --attach option"
            exit_failure_syntax "text argument missing for --body option"
            exit_failure_syntax "text argument missing for --subject option"
        exit_failure_syntax "unexpected argument '$parm'"
        exit_failure_syntax "unexpected option '$parm'"
# Exit script on failure returned by a tool application
# Exit script on failure to locate necessary tool applications
# Exit script on insufficient permission to read a specified file
# Exit script on insufficient permission to write a specified file
# Exit script on malformed arguments, not enough arguments
# Exit script on missing file specified on command line
# Exit script on successfully completing the desired operation
            exit_success
        exit_success
	    exit_success
exit_success()
    exo-open "$1"
failure. The following failure codes can be returned:
        fi
            fi
fields in the user's e-mail composer. The user will have the opportunity to
    file=`basename "$1"`
        file="$dir/applications/$desktop"
    file_label="$2"
        file=`readlink -f "$1"` # Normalize path
#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    for browser in $BROWSER; do
    for dir in $search; do
        for ( i=1; i<=255; ++i ) ord [ sprintf ("%c", i) "" ] = i + 0
        for ( i=1; i<=length ($0); ++i ) {
    for i in $MAILER; do
    generic)
    gnome)
        gnome-open "$1"
        gvfs-open "$1"
            --help)
    if [ "$?" = "0" ] ; then
# if BROWSER variable is not set, check some well known browsers instead
    if [ -e "$1" ]; then
    if [ ! -e "$1" ]; then
    if [ $? -eq 0 ] ; then
    if [ $? -eq 0 ]; then
	if [ $? -eq 0 ]; then
            if [ $? -eq 0 ]; then exit_success;
    if [ -f /etc/SuSE-release ] ; then
    if [ $# -gt 0 ]; then
    if gvfs-open --help 2>/dev/null 1>&2; then
    # if it does not exists, check if we are allowed to write on the directory
        if ( linenr++ != 1 ) {
    if [ -n "$ATTACH" ] ; then
    if [ -n "$BCC" ] ; then
    if [ -n "$BODY" ] ; then
    if [ -n "$CC" ] ; then
    if [ -n "$DISPLAY" ]; then
            if [ $? -ne 0 ]; then browser_with_arg=$browser;
    # If no xdg-mime default was set, 
    if [ -n "$SUBJECT" ] ; then
            if ( ord [c] > 127 ) {
    if [ ! -r "$1" ]; then
    IFS=:
    IFS=":"
	IFS="$OLDIFS"
    # if the file exists, check if it is writeable
        if [ ! -w "$1" ]; then
        if [ ! -w "$DIR" -o ! -x "$DIR" ]; then
        if ! which "$client" > /dev/null 2> /dev/null; then
            if which gnome-open > /dev/null 2> /dev/null && which evolution > /dev/null 2> /dev/null; then
if which xdg-email-hook.sh > /dev/null 2> /dev/null; then
            if [ x"$browser_with_arg" = x"$browser" ]; then "$browser" "$1";
        if [ x"$browser" != x"" ]; then
if [ x"$BROWSER" = x"" ]; then
if [ x"$DE" = x"" ]; then
if [ ${XDG_UTILS_DEBUG_LEVEL-0} -lt 1 ]; then
    if [ x"$KDE_SESSION_VERSION" = x"4" ]; then
    if [ x"$MAILER" != x"" ]; then DE=envvar;
        if [ -z "$1" ] ; then
    if [ -z "$desktop" -a "$DESKTOP_SESSION" = "Lubuntu" ]; then
        if [ -z "$file" -o ! -f "$file" ] ; then
        if [ -z "${mailto}" ] ; then
if [ -z "${mailto}" ] ; then
    if [ -z "$TO" ] ; then
#   in all copies or substantial portions of the Software.
    increases the verbosity.
    Indicates that all command line options that follow are in utf8. Without
# It also always returns 1 in KDE 3.4 and earlier
          'jwhite@example.com'
          'jwhite@example.com' 'bastian@example.com' 'whipple@example.com'
    kde)
    kde_email_profile_name=`kreadconfig --file emaildefaults --group Defaults --key Profile`
    # KDE uses locale's encoding when decoding the URI, so set it to UTF-8
# kfmclient exec/openURL can give bogus exit value in KDE <= 3.5.4
    kfmclient_fix_exit_code $?
kfmclient_fix_exit_code()
        KMAILSERVICE=`kde4-config --locate kmailservice --path exe 2>/dev/null`
        KMAILSERVICE=`which kmailservice 2>/dev/null`
    LC_ALL=C.UTF-8 $KMAILSERVICE "$1"
#   LICENSE:
    line.
        linenr = 1
    local client
    local client kde_email_profile_name
    local desktop
    locale. If the locale already specifies utf8 this option has no effect.
    local OLDIFS="$IFS"
    local THUNDERBIRD MAILTO NEWMAILTO TO CC BCC SUBJECT BODY ATTACH
    lxde)
	MAILER="x-terminal-emulator -e mutt"
      mailto:*)
    MAILTO=$(echo "$2" | sed 's/^mailto://')
mailto=`echo "${mailto}"| sed 's/[?&]$//'`
        MAILTO=$(echo "$MAILTO" | sed 's/^?//')
    MAILTO=$(echo "$MAILTO" | sed 's/&/\n/g')
        MAILTO=$(echo "$MAILTO" | sed 's/^/to=/' | sed 's/?/\&/')
    mailto="mailto:?"
        mailto="${mailto}?${options}"
        mailto="${mailto}${options}"
        mailto="${mailto}&${options}"
            mailto="mailto:"${result}"?"
        mailto="$parm"
    major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
            --manual)
--manual
            manualpage
manualpage()
_MANUALPAGE
    minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
        NEWMAILTO=
    NEWMAILTO=$(echo "$NEWMAILTO" | sed 's/^,//')
        NEWMAILTO="${NEWMAILTO},attachment='${ATTACH}'"
        NEWMAILTO="${NEWMAILTO},bcc='$BCC'"
        NEWMAILTO="${NEWMAILTO},$BODY"
        NEWMAILTO="${NEWMAILTO},cc='$CC'"
        NEWMAILTO="${NEWMAILTO},$SUBJECT"
        NEWMAILTO="to='$TO'"
    [ -n "$file_label" ] || file_label="filename"
    No permission to read one of the files passed on the command line.
    One of the files passed on the command line did not exist.
open_envvar()
    open_envvar "${mailto}"
open_generic()
    open_generic "${mailto}"
open_gnome()
               open_gnome "$1"
    open_gnome "${mailto}"
open_kde()
    open_kde "${mailto}"
open_lxde()
    open_lxde "${mailto}"
open_xfce()
    open_xfce "${mailto}"
options=
        options="${options}attach=${result}&"
        options="${options}bcc=${result}&"
        options="${options}body=${result}&"
        options="${options}cc=${result}&"
        options="${options}subject=${result}&"
            options="${options}to=${result}&"
        options="${options}to=${result}&"
#   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# or missing required option.
#   OTHER DEALINGS IN THE SOFTWARE.
#   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
        parm="$1"
    parm="$1"
#   Permission is hereby granted, free of charge, to any person obtaining a
        print e
# prints usage information
        readlink -f "$command"
#   Refer to the usage() function below for usage.
    release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
        # Remove any arguments (%F, %f, %U, %u, etc.).
result=$(echo "$1" | $utf8 | awk '
        return
         return
    return 0
    returns.
#       RFC 2368 mailto: URI spec
        [ -r "$file" ] || continue
run_sylpheed()
        run_sylpheed "$client" "$1"
run_thunderbird()
        run_thunderbird "$client" "$1"
    search="${XDG_DATA_HOME:-$HOME/.local/share}:${XDG_DATA_DIRS:-/usr/local/share:/usr/share}"
See http://portland.freedesktop.org/EmailConfig for information on how the user
    Setting this environment variable to a non-zero numerical value makes
# set variable DE to the desktop environments name, lowercase
    shift
        shift
# Shouldn't happen
    Show command synopsis.
    Show the xdg-utils version information.
    Show this manualpage.
silently ignored. address(es) must follow the syntax of RFC822. Multiple
# Simply return 0 in such case
#   Software is furnished to do so, subject to the following conditions:
    Some e-mail applications require the file to remain present after xdg-email
    Specify a body for the e-mail. Since the user will be able to make changes
    Specify an attachment for the e-mail. file must point to an existing file.
    Specify a recipient to be blindly copied on the e-mail.
    Specify a recipient to be copied on the e-mail.
    Specify a subject for the e-mail.
# Strip trailing ? and &
      --subject)
    SUBJECT=$(echo "$MAILTO" | grep '^subject=' | tail -n 1)
          --subject 'Logo contest' \
--subject text
support to, cc, subject and body fields in mailto-uri, all other fields are
Synopsis
    test "$major" -gt 3 && return $1
    test "$minor" -gt 5 && return $1
    test "$release" -gt 4 && return $1
#   The above copyright notice and this permission notice shall be included
    The action failed.
#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    this option, command line options are expected to be encoded according to
    This option does not affect mailto URIs that are passed on the command
    THUNDERBIRD="$1"
    "$THUNDERBIRD" -compose "$NEWMAILTO"
      --to)
    # TO address is optional
#   to deal in the Software without restriction, including without limitation
    TO=$(echo "$MAILTO" | grep '^to=' | sed 's/^to=//' | awk '{ printf "%s,",$0 }')
        unset IFS
url_encode()
        url_encode "$1"
        url_encode "$file"
        url_encode "$parm"
        usage
            usage
use xdg-email as root.
      --utf8)
        utf8="cat"
utf8="iconv -t utf8"
#   Utility script to open the users favorite email program, using the
            --version)
--version
    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
Visit http://portland.freedesktop.org/EmailConfig for information how to
    while [ $# -gt 0 ] ; do
while [ $# -gt 0 ] ; do
    with a template for the e-mail. text may contain linebreaks.
        # Workaround for SUSE 10.0
#   xdg-email
xdg-email --attach /tmp/logo.png \
xdg-email - command line tool for sending mail using the user's preferred
    xdg-email do more verbose reporting on stderr. Setting a higher value
xdg-email { --help | --manual | --version }
xdg-email honours the following environment variables:
    xdg-email-hook.sh "${mailto}"
xdg-email is for use inside a desktop session only. It is not recommended to
xdg-email 'Jeremy White <jwhite@example.com>'
xdg-email opens the user's preferred e-mail composer in order to send a mail to
xdg-email --subject 'Your password is about to expire' \
xdg-email [--utf8] [--cc address] [--bcc address] [--subject text] [--body text
    xdg_redirect_output=" >&2"
    xdg_redirect_output=" > /dev/null 2> /dev/null"
#@xdg-utils-common@
XDG_UTILS_DEBUG_LEVEL
  [ ${XDG_UTILS_DEBUG_LEVEL} -lt $1 ] && return 0;
    xfce)
[ x"${mailto}" != x"" ] || exit_failure_syntax
        [ -z "$client" ] && client="kmail"
  [ -z "${XDG_UTILS_DEBUG_LEVEL}" ] && return 0;
[ -z "${XDG_UTILS_DEBUG_LEVEL}" ] && unset XDG_UTILS_DEBUG_LEVEL;
