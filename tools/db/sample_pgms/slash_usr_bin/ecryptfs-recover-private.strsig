	[ "$1" = "--rw" ] && opts="rw"
	# Allow for target directories on the command line
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
		answer=$(head -n1)
#    Authors: Dustin Kirkland <kirkland@ubuntu.com>
#!/bin/sh -e
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
		case "$answer" in n*|N*) continue ;; esac
	case $(echo "$sigs" | wc -l) in
		case "$lpw" in
		continue
			continue
#    Copyright (C) 2010 Canonical Ltd.
	# Determine if filename encryption is on
	dirs="$@"
	dirs=$(find / -type d -name ".Private")
	echo "ERROR: $@" 1>&2
	echo "INFO: $@"
		echo -n "Do you know your LOGIN passphrase? [Y/n] "
		echo -n "Enter your MOUNT passphrase: "
		echo -n "Try to recover this directory? [Y/n]: "
				ecryptfs-insert-wrapped-passphrase-into-keyring "$d/../.ecryptfs/wrapped-passphrase"
#    ecryptfs-recover-private
error() {
		error "No private directories found; make sure that your root filesystem is mounted."
# Examine directories
		# Fall back to mount passphrase
			fnek_sig=
			fnek_sig=$(echo "$sigs" | tail -n1)
for d in $dirs; do
#    GNU General Public License for more details.
# Handle parameters
[ "$(id -u)" = "0" ] || error "This program must be run as root."
if [ -d "$1" ]; then
	if [ -d "$d" ]; then
	if [ -f "$d/../.ecryptfs/wrapped-passphrase" ]; then
	if [ "$use_mount_passphrase" = "1" ]; then
	if [ -z "$dirs" ]; then
info() {
		info "Could not find your wrapped passphrase file."
				info "Enter your LOGIN passphrase..."
		info "Found [$d]."
		info "Found your wrapped-passphrase"
		info "Hint: click 'Places' and select your hard disk, then run this again."
		info "It should be 32 characters long, consisting of [0-9] and [a-f]."
	info "Searching for encrypted private directories (this might take a while)..."
	info "Success!  Private data mounted read-only at [$tmpdir]."
		info "To recover this directory, you MUST have your original MOUNT passphrase."
		info "When you first setup your encrypted private directory, you were told to record"
		info "your MOUNT passphrase."
#    it under the terms of the GNU General Public License as published by
	(keyctl list @u | grep -qs "$fnek_sig") || error "The key required to access this private data is not available."
	(keyctl list @u | grep -qs "$mount_sig") || error "The key required to access this private data is not available."
		lpw=$(head -n1)
	ls "$d/ECRYPTFS_FNEK_ENCRYPTED"* >/dev/null 2>&1 && fnek="--fnek" || fnek=
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	mount -i -t ecryptfs -o "$mount_opts" "$d" "$tmpdir"
			mount_opts="$opts,ecryptfs_sig=$mount_sig,ecryptfs_cipher=aes,ecryptfs_key_bytes=16"
			mount_opts="$opts,ecryptfs_sig=$mount_sig,ecryptfs_fnek_sig=$fnek_sig,ecryptfs_cipher=aes,ecryptfs_key_bytes=16"
			mount_sig=$(echo "$sigs" | head -n1)
opts="ro"
	# Otherwise, search the system for directories named ".Private"
		passphrase=$(head -n1)
		sigs=$(printf "%s\0" "$passphrase" | ecryptfs-add-passphrase $fnek | grep "^Inserted" | sed -e "s/^.*\[//" -e "s/\].*$//" -e "s/[^0-9a-f]//g")
				sigs=$(sed -e "s/[^0-9a-f]//g" "$d/../.ecryptfs/Private.sig")
		stty -echo
		stty_orig=$(stty -g)
		stty $stty_orig
#    the Free Software Foundation, version 2 of the License.
#    This program is distributed in the hope that it will be useful,
#    This program is free software: you can redistribute it and/or modify
	tmpdir=$(mktemp -d /tmp/ecryptfs.XXXXXXXX)
				use_mount_passphrase=0
				use_mount_passphrase=1
		use_mount_passphrase=1
				# Use the wrapped-passphrase, if available
# We need root access to do the deep find and the mount
#    You should have received a copy of the GNU General Public License
			y|Y|"")
