    command = sys.argv[1]
            current_output_name = m.group(1)
    current_output_name = None
                else:
    for line in xrandr_stdout.split("\n"):
                if command == "current-resolution":
            if command == "outputs":
    if len(sys.argv) < 2:
    if len(sys.argv) > 2:
                    if line.find('*') != -1:
        if m:
            if m and current_output_name == output_name:
if __name__ == "__main__":
        if "resolution" in command:
import re
import subprocess
import sys
    # indicates this through indentation and is kinda wordy, so we have to keep
        m = re_output.match(line)
            m = re_res.match(line)
    # One device can have zero or more associated modes.  Unfortunately xrandr
    output_name = None
        output_name = sys.argv[2]
        print
        print "Commands:"
                print current_output_name
        print "  current-resolution [output-name]"
        print "  outputs"
                        print res
                    print res
        print "  resolutions [output-name]"
        print "Usage:  xrandr-tool <command>"
    process = subprocess.Popen(['xrandr'], stdout=subprocess.PIPE)
    re_output = re.compile("^(.*) (?:disconnected|connected) (.*)")
    re_res    = re.compile("^   (\d+x\d+) *(.*)")
                res = m.group(1)
        sys.exit(1)
    # The results from xrandr are given in terms of the available display devices.
    # TODO: optparse
    # track of the context we see mode names in as we parse the results.
#!/usr/bin/python
    xrandr_stdout, xrandr_stderr = process.communicate()
