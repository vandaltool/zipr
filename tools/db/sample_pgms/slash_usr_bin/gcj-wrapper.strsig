        # An extended Sun option (which we don't support).
        # An unsupported option with a following argument.
        # An unsupported standalone option.
        # Append it to $appendNextArg and then copy directly.
        $appendNextArg = '';
        $appendNextArg = '-' . $arg . '=';
        $appendNextArg = '--classpath=';
             $arg eq '-extdirs') {
# Based on the original gcj-wrapper-3.2 shell script.
# Build the command-line from the arguments given.
# Call the real Java compiler.
# Command-line arguments should be in the style of Sun's Java compiler;
        # Copy it directly.
        $copyNextArg = 0;
        $copyNextArg = 1;
# Copyright (C) 2002-2003 by Ben Burton <bab@debian.org>
    } else {
    } elsif ($appendNextArg) {
    } elsif ($arg =~ /^-/) {
    } elsif ($arg eq '-classpath' or $arg eq '--classpath' or $arg eq '--cp') {
    } elsif ($arg eq '-d') {
    } elsif ($arg eq '-encoding' or $arg eq '-bootclasspath' or
    } elsif ($arg eq '-h' or $arg eq '-help') {
    } elsif ($arg eq '-nowarn') {
    } elsif ($arg eq '-O') {
    } elsif ($arg eq '-source' or $arg eq '-sourcepath' or $arg eq '-target') {
    } elsif ($arg eq '-Xss') {
    } elsif ($arg =~ /^-g/) {
    } elsif ($arg =~ /^-X/) {
    } elsif ($copyNextArg or not $parsingOptions) {
exec @fullCommandLine or exit(1);
foreach my $arg (@ARGV) {
# gcj itself.
    if ($arg eq '-version') {
    if ($ignoreNextArg) {
        $ignoreNextArg = 0;
        $ignoreNextArg = 1;
my $appendNextArg = '';
my @commandLine;
my $copyNextArg = 0;
my @fullCommandLine = ( $javaCompiler, '-C' );
my $ignoreNextArg = 0;
my $javaCompiler = '/usr/bin/gcj-4.6';
my $parsingOptions = 1;
my $warnings = '-Wall';
        next;
        $parsingOptions = 0;
        push @commandLine, ($appendNextArg . $arg);
push @commandLine, $appendNextArg if ($appendNextArg);
        push @commandLine, $arg;
        push @commandLine, '-d';
        push @commandLine, '-g' if ($arg ne '-g:none');
        push @commandLine, '--help';
        push @commandLine, '--help' if ($arg eq '-X');
        push @commandLine, '-O2';
        push @commandLine, '--version';
push @fullCommandLine, @commandLine;
push @fullCommandLine, $warnings if ($warnings);
    # See if we already know what to do with this argument.
        # Some kind of debugging option - just switch debugging on.
        # Some non-option argument has been given.
# Starts the GNU Java compiler.
        # Stop parsing options at this point.
# The command-line arguments to pass to the real Java compiler:
# The real Java compiler:
# these will be converted to gcj arguments before being passed to the
# The warning flags to pass to the GNU Java compiler:
        # Throw it away.
    # Try to interpret Sun-style options.
use strict;
#!/usr/bin/perl -w
        $warnings = '';
# Was there a partial argument that was never completed?
