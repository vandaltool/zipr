======================================
                          
0123456789ab
./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzmd5crypt
          0x%02X,0x%02X - 
     0x%02X,0x%02X,0x%02X - 
0x%02X,0x%02X,0x%02X,0x%02X - 
<0x%04X>
  %-10s: 
	%-10s	%s
 %11.2f 
 %11.2fk
%-11s:%-25s
%-14s base64 encode/decode, depending on encryption flag
%-14s buffer size
%-14s decrypt
%-14s disable standard block padding
%-14s encrypt
%-14s   from a passphrase.  One of md2, md5, sha or sha1
%-14s hex
%-14s input file
%-14s key/iv in hex is the next argument
%-14s number of checks
%-14s output file
%-14s passphrase is the first line of the file argument
%-14s passphrase is the next argument
%-14s pass phrase source
%-14s print the iv/key (then exit if -P)
%-14s salt in hex is the next argument
%-14s the next argument is the md to use to create a key
-%-14s to use the %s message digest algorithm
%-14s use engine e, possibly a hardware device.
%18ssign    verify    sign/s verify/s
-1                 MD5-based password algorithm
2.99999.3
%2d s:%s
 -2            generate parameters using  2 as the generator value
 -2        - use 2 as the generator value
%30sop      op/s
%30ssign    verify    sign/s verify/s
 -3              use 3 for the E value
4ah7=.J[
%4ld cache full overflows (%ld allowed)
%4ld callback cache hits
%4ld client connects (SSL_connect())
%4ld client connects that finished
%4ld client renegotiates (SSL_connect())
%4ld items in the session cache
%4ld server accepts (SSL_accept())
%4ld server accepts that finished
%4ld server renegotiates (SSL_accept())
%4ld session cache hits
%4ld session cache misses
%4ld session cache timeouts
%4u bit ecdh (%s) %8.4fs %8.1f
%4u bit ecdsa (%s) %8.4fs %8.4fs %8.1f %8.1f
 -5            generate parameters using  5 as the generator value
 -5        - use 5 as the generator value
%7d bytes
a2i_ASN1_INTEGER
a2i_GENERAL_NAME
-a/-base64
aborted!
Acceptable client certificate CA names
 -accept arg   - port to accept on (default is %d)
 access_denied
 -add            add an user and srp verifier
Adding Entry with serial number %s to DB for %s
-addreject
 -addreject arg  - reject certificate for a given purpose
-addtrust
 -addtrust arg   - trust certificate for a given purpose
add_word failure
           - a DSA parameter file as generated by the dsaparam command
aes      
 -aes128, -aes192, -aes256
aes-128 cbc
aes-128-cbc
aes-128-cbc aes-192-cbc aes-256-cbc 
aes-128-ecb
aes-128 ige
aes-128-ige
aes-128-ige aes-192-ige aes-256-ige 
aes-192 cbc
aes-192-cbc
aes-192-ecb
aes-192 ige
aes-192-ige
aes-256 cbc
aes-256-cbc
aes-256-ecb
aes-256 ige
aes-256-ige
AES_cbc_encrypt
AES_encrypt
AES_ige_encrypt
AES_options
AES_set_encrypt_key
affiliationChanged
-algorithm
-algorithm alg     the public key algorithm
Algorithm already set!
Algorithm %s not found
 -alias          - output certificate alias
Allocation error in generating RSA key
already locked
apps_ssl_info_callback
-apr1              MD5-based password algorithm, Apache variant
A private key is needed for this operation
                 are supported.
 argument "/lib/libdriver.so".
               a series of these can be used to 'dig' into multiple
ASN.1 %2d:'
               ASN1 blob wrappings
ASN1_d2i_bio
ASN1_ENUMERATED_free
ASN1_ENUMERATED_new
ASN1_ENUMERATED_set
ASN1_GENERALIZEDTIME_free
ASN1_GENERALIZEDTIME_new
ASN1_GENERALIZEDTIME_print
ASN1_GENERALIZEDTIME_set_string
ASN1_generate_nconf
ASN1_i2d_bio
ASN1_INTEGER_free
ASN1_INTEGER_get
ASN1_INTEGER_new
ASN1_INTEGER_set
ASN1_INTEGER_to_BN
ASN1_item_d2i_bio
ASN1_item_i2d_bio
 -asn1-kludge   Output the 'request' in a format that is wrong but some CA's
ASN1_OBJECT_free
-asn1parse
ASN1_parse_dump
ASN1_PRINTABLE_type
ASN1_STRING_cmp
ASN1_STRING_data
ASN1_STRING_length
ASN1_STRING_set
ASN1_STRING_set_default_mask_asc
ASN1_TIME_free
ASN1_TIME_new
ASN1_TIME_print
ASN1_TIME_set_string
ASN1_TYPE_free
ASN1_TYPE_get
ASN1_TYPE_new
ASN1_UNIVERSALSTRING_to_string
ASN1_UTCTIME_free
ASN1_UTCTIME_new
ASN1_UTCTIME_set_string
__assert_fail
 [-attime timestamp]
Authority
AUTH TLS
[ available ]
Available options:
Available values:
b2i_PrivateKey_bio
b2i_PublicKey_bio
b2i_PVK_bio
 bad_certificate
 BAD-CERTIFICATE-ERROR
 bad_certificate_hash_value
 bad_certificate_status_response
bad decrypt
bad digest, %d bytes must be specified
bad exit
Bad format specified for key
bad gethostbyaddr
Bad input format for CMS file
Bad input format for PKCS#7 file
Bad input format for receipt
bad input format specified
bad input format specified for input crl
bad input format specified for key
bad input format specified for key file
bad input format specified for pkcs7 object
bad input format specified for %s
bad input format specified for X509 request
bad magic number
bad multi count
bad number of days
Bad output format for CMS file
Bad output format for PKCS#7 file
bad output format specified for outfile
bad password read
 bad_record_mac
bad select %d
Bag Attributes
-base64               - base64 encode output
 -batch         do not ask anything during request generation
 -batch          - Don't ask questions
BF_cbc_encrypt
BF_options
BF_set_key
	BIGNUM   *tmp_1 = NULL, *tmp_2 = NULL, *tmp_3 = NULL;
-binary        don't translate message to text
-binary         output in binary form
BIO_ctrl
BIO_debug_callback
BIO_dump
bio_dump_callback
BIO_dump_indent
BIO_f_base64
BIO_f_buffer
BIO_f_cipher
BIO_f_md
BIO_f_nbio_test
BIO_free
BIO_free_all
BIO_f_ssl
BIO_f_zlib
BIO_get_callback_arg
BIO_gets
BIO_int_ctrl
BIO_new_accept
BIO_new_connect
BIO_new_dgram
BIO_new_fd
BIO_new_file
BIO_new_fp
BIO_new_socket
BIO_new_ssl
BIO_number_read
BIO_number_written
BIO_printf
BIO_push
BIO_puts
BIO_read
BIO_s_connect
BIO_set_callback
BIO_set_callback_arg
BIO_set_flags
BIO_s_file
BIO_s_mem
BIO_snprintf
BIO_s_null
BIO_socket_ioctl
BIO_sock_should_retry
BIO_test_flags
BIO_write
blowfish
blowfish cbc
BN_add_word
BN_bin2bn
BN_bn2bin
BN_bn2dec
BN_bn2hex
BN_CTX_free
BN_CTX_new
BN_dec2bn
		BN_free(tmp_1);
		BN_free(tmp_2);
		BN_free(tmp_3);
BN_generate_prime_ex
BN_hex2bn
BN_is_prime_ex
BN_mod_exp
BN_num_bits
BN_options
BN_print
BN_pseudo_rand
BN_rshift1
BN_set_word
BN_to_ASN1_INTEGER
</BODY></HTML>
BUF_MEM_free
BUF_MEM_grow
BUF_MEM_grow_clean
BUF_MEM_new
-bufsize
bufsize=%d
-bufsize <n>
BUF_strdup
BUF_strlcat
BUF_strlcpy
 -bugs         - Switch on all SSL implementation bug workarounds
 -bugs         - Turn on SSL bug compatibility
-bugs         - Turn on SSL bug compatibility
	/* build generator */
bytes read   :%8ld
bytes written:%8ld
 -CA arg         - set the CA certificate, must be PEM format.
CA certificate
CA certificate and CA private key do not match
CA certificate (%s) and the request (%s)
-cacerts
-cacerts      only output CA certificates.
CACompromise
-CAcreateserial
 -CAcreateserial - create serial number file if it does not exist
ca_default
 -CAfile arg   - PEM format file of CA's
-CAfile arg   - PEM format file of CA's
-CA file		 CA certificate
-CAfile file       trusted certificates file
-CAfile file   trusted certificates file
 -CAfile  name   - verify CRL using certificates in file "name"
 -CAform arg     - CA format - default PEM
 -CAkey arg      - set the CA key, must be PEM format
-CAkeyform
 -CAkeyform arg  - CA key format - default PEM
CAkeyTime
camellia
camellia 
-camellia128
 -camellia128, -camellia192, -camellia256
-camellia128, -camellia192, -camellia256
camellia-128 cbc
camellia-128-cbc
camellia-128-cbc camellia-192-cbc camellia-256-cbc 
camellia-128-ecb
-camellia192
camellia-192 cbc
camellia-192-cbc
camellia-192-ecb
-camellia256
camellia-256 cbc
camellia-256-cbc
camellia-256-ecb
Camellia_cbc_encrypt
Camellia_set_key
-caname "nm"  use nm as CA friendly name (can be used more than once).
                (can be used more than once)
cannot convert %s to OID
Cannot create srp verifier for user "%s", operation abandoned .
Cannot create srp verifier for user "%s", operation abandoned.
Cannot initialize SRP verifier file "%s":ret=%d
cannot load %s from engine
cannot lookup how long until the next CRL is issued
cannot lookup how many days to certify for
Cannot modifiy certificate subject
Can't access file descriptor %s
Can't find 'asn1' in '%s'
Can't find keygen engine %s
Can't find SPKAC called "%s"
Can't get connection fd
Can't open BIO for stdin
Can't open file %s
Can't open input file %s
Can't open output file %s
Can't open parameter file %s
Can't open receipt file %s
Can't open session file %s
Can't open signature file %s
Can't parse %s type
Can't read content file %s
Can't read environment variable %s
Can't read Password
Can't use SSL_get_servername
can't use that engine
. CAPABILITY
 -CApath arg   - PEM format directory of CA's
-CApath arg   - PEM format directory of CA's
-CApath dir        trusted certificates directory
-CApath dir    trusted certificates directory
 -CApath  dir    - verify CRL using certificates in "dir"
CA private key
-CAserial
 -CAserial arg   - serial file
cast5-cbc
cast5-cfb
cast5-ecb
cast5-ofb
cast cbc
cast-cbc
CAST_cbc_encrypt
CAST_set_key
 cert1 cert2 ...
 -cert2 arg    - certificate file to use for servername
 -cert arg     - certificate file to use
 -cert arg     - certificate file to use, PEM format assumed
-cert arg     - certificate file to use, PEM format assumed
-certfile
 -certfile arg  certificates file of chain to a trusted CA
-cert file         certificate to check
-certfile f   add all certs in f
-certfile file other certificates file
 -cert file      - The CA certificate
-certform
 -certform arg - certificate format (PEM or DER) PEM default
, Certificate
Certificate bag
Certificate chain
Certificate Details:
 certificate_expired
certificate file name too long
certificateHold
Certificate is to be certified until 
Certificate purposes:
, CertificateRequest
Certificate request and CA private key do not match
 certificate_revoked
certificates from certfile
 certificate_unknown
 certificate_unobtainable
, CertificateVerify
Certificate will expire
CERTIFICATE WILL NOT BE CERTIFIED
CERTIFICATE WILL NOT BE CERTIFIED: I/O error
Certificate will not expire
CERTIFICATION CANCELED
CERTIFICATION CANCELED: I/O error
-certin         input is a certificate carrying an RSA public key
-certin         input is a certificate carrying a public key
-certopt
cert_opt
 -certopt arg    - various certificate text options
 -cert           - output certificate 
-certpbe
-certpbe alg  specify certificate PBE algorithm (default RC2-40)
cert.pem       recipient certificate(s) for encryption
-certsout
-certsout file certificate output file
cert_status: AIA URL: %s
cert_status: callback called
cert_status: can't parse AIA URL
cert_status: Can't retrieve issuer certificate.
cert_status: error querying responder
cert_status: no AIA and no default responder URL
cert_status: ocsp response sent:
cert type
cessationOfOperation
 -c          - for each engine, also list the capabilities
-chain        add certificate chain
 -chain        - Read a certificate chain
-challenge
 -challenge arg challenge string
ChangeCipherSpec
 -check        check the DH parameters
-checkend
 -checkend arg   - check whether the cert expires in the next arg seconds
checking elliptic curve parameters: 
-checks <n>
-check_ss_sig
Check that the request matches the signature
Check that the SPKAC request matches the signature
      check the database/serial_file for corruption
 -check            validate the ec parameters
 -check          verify key consistency
 -cipher arg   - play with 'openssl ciphers' to see what goes here
Cipher commands (see the `enc' command for more details)
CIPHER is %s
-cipher       - preferred cipher to use, play with 'openssl ciphers'
 -cipher       - preferred cipher to use, use the 'openssl ciphers'
Ciphers common between both SSL end points:
Ciphers common between both SSL endpoints:
Ciphers supported in s_server binary
                 cipher supported by OpenSSL can be used
Cipher Types
-<cipher>          use cipher <cipher> to encrypt the key
-clcerts
-clcerts      only output client certificates.
client authz
Client certificate
, CLIENT-CERTIFICATE
client certificate file
client certificate private key file
client certificate URL
, CLIENT-FINISHED
, ClientHello
, CLIENT-HELLO
Client_identity
, ClientKeyExchange
, CLIENT-MASTER-KEY
 close_notify
 -clrext         - delete extensions before signing and input certificate
-clrreject
 -clrreject      - clear all rejected purposes
-clrtrust
 -clrtrust       - clear all trusted purposes
CMS_add0_recipient_key
CMS_add0_recipient_password
CMS_add1_ReceiptRequest
CMS_add1_signer
CMS_compress
CMS_ContentInfo_free
CMS_ContentInfo_print_ctx
CMS_data
CMS_data_create
CMS_decrypt
CMS_decrypt_set1_key
CMS_decrypt_set1_password
CMS_decrypt_set1_pkey
CMS_digest_create
CMS_digest_verify
CMS_encrypt
CMS_EncryptedData_decrypt
CMS_EncryptedData_encrypt
CMS_final
CMS_get0_SignerInfos
CMS_get0_signers
CMS_get1_certs
CMS_get1_ReceiptRequest
-cmsout        output CMS structure
CMS_ReceiptRequest_create0
CMS_ReceiptRequest_free
CMS_ReceiptRequest_get0_values
CMS_set1_eContentType
CMS_sign
CMS_sign_receipt
CMS_uncompress
CMS_verify
CMS_verify_receipt
Collecting connection statistics for %d seconds
                 command to see what is available
compatible
-compress
Compression: %s
COMP_zlib_cleanup
 -config file    - A config file
 -config file    A config file
 -config file   request template file.
CONF_modules_load
CONF_modules_unload
-connect
CONNECTED(%08X)
connect:errno=%d
-connect host:port - host:port to connect to (default is %s)
 -connect host:port - who to connect to (default is %s:%s)
CONNECTION CLOSED
Consider setting the RANDFILE environment variable to point at a file that
-content
-content file  supply or override content for detached signature
Content-Length: %d
Content-type: application/ocsp-response
Content-type: text/html
Content-type: text/plain
-context
 -context arg  - set session ID context
 -context arg    - set the session ID context
Context too long
-conv_form
 -conv_form arg    specifies the point conversion form 
 -conv_form arg  specifies the point conversion form 
cookie_initialized
cookie_secret
copy_extensions
Could not convert PSK key '%s' to BIGNUM
could not create nonce
could not create query
could not save serial number to %s
 -C            Output C code
 -C                print a 'C' function creating the parameters
 -C              - print out C code forms
cP"/XXyk
created identity '%s' len=%d
created PSK len=%d
-create_serial
Creating
crl2pkcs7
-crl_CA_compromise
-crl_check
-crl_check_all
-crl_check_all check revocation status of signer's certificate chain using CRLs
 -crl_check_all - check the peer certificate has not been revoked by its CA
-crl_check     check revocation status of signer's certificate using CRLs
 -crl_check    - check the peer certificate has not been revoked by its CA.
-crl_compromise
-crldays
 -crldays days   - Days is when the next CRL is due
crl_extensions
-crlexts
 -crlexts ..     - CRL extension section (override value in config file)
 -crlf         - convert LF from terminal into CRLF
-crlfeol
-CRLfile
-crl_hold
-crlhours
 -crlhours hours - Hours is when the next CRL is due
-crlnumber
crlNumber=
 -crlnumber      - print CRL number
[CRL path]
-crl_reason
CRYPTO_cleanup_all_ex_data
CRYPTO_dbg_free
CRYPTO_dbg_get_options
CRYPTO_dbg_malloc
CRYPTO_dbg_realloc
CRYPTO_dbg_set_options
CRYPTO_free
CRYPTO_gcm128_aad
CRYPTO_gcm128_new
CRYPTO_gcm128_release
CRYPTO_gcm128_setiv
CRYPTO_malloc
CRYPTO_mem_ctrl
CRYPTO_mem_leaks
CRYPTO_realloc
CRYPTO_r_unlock on write lock
CRYPTO_set_locking_callback
CRYPTO_set_mem_debug_functions
CRYPTO_set_mem_debug_options
CRYPTO_set_mem_functions
CRYPTO_w_unlock on read lock
-crypt             standard Unix password algorithm (default)
-CSP name     Microsoft CSP name
-c              to output the digest with separating colons
__ctype_b_loc
__ctype_toupper_loc
CURVE DESCRIPTION NOT AVAILABLE
d2i_ASN1_TYPE
d2i_CMS_bio
d2i_DHparams
d2i_DSAparams
d2i_ECPKParameters
d2i_ECPrivateKey_bio
d2i_EC_PUBKEY_bio
d2i_OCSP_REQUEST
d2i_OCSP_RESPONSE
d2i_PBEPARAM
d2i_PKCS12_bio
d2i_PKCS7_bio
d2i_PKCS8_bio
d2i_PKCS8_PRIV_KEY_INFO_bio
d2i_PrivateKey_bio
d2i_PUBKEY_bio
d2i_RSA_NET
d2i_RSAPrivateKey
d2i_RSAPublicKey_bio
d2i_SSL_SESSION
d2i_TS_REQ_bio
d2i_TS_RESP_bio
d2i_X509_bio
d2i_X509_CRL_bio
d2i_X509_REQ_bio
database
Database has no g N information.
Database initialised
Data Base Updated
-data_create
-data_out
 -dates          - both Before and After dates
 -days arg       - How long till expiry of a signed certificate - def 30 days
 -days arg       - number of days to certify the certificate for
 -days          number of days a certificate generated by -x509 is valid for.
-dbfile and -configfile cannot be specified together.
 -dcert arg    - second certificate file to use (usually for DSA)
-dcertform
 -dcertform x  - second certificate format (PEM or DER) PEM default
%d connections in %.2fs; %.2f connections/user sec, bytes read %ld
%d connections in %ld real seconds, %ld bytes read per connection
 -debug        - extra output
 -debug        - Print more output
 decode_error
 decompression_failure
-decrypt
-decrypt       decrypt encrypted message
-decrypt        decrypt with private key
 decrypt_error
decryption
 decryption_failed
-decrypt        time decryption instead of encryption (only EVP).
default_bits
default_ca
default_config_file
default_crl_days
default_crl_hours
default_days
default_enddate
Default g and N
                 (default is nistp256).
                 (default is %s)
default_keyfile
default_md
default_srp
default_startdate
 -delete         delete user from verifier file
%d entries loaded from the database
depth=%d 
-derive         derive shared secret
des      
 -des3           encrypt PEM output with ede cbc des using 168 bit key
-des3         encrypt private keys with triple DES (default)
 -des3           encrypt the generated key with DES in ede cbc mode (168 bit key)
 -des3     - encrypt the generated key with DES in ede cbc mode (168 bit key)
-des3          encrypt with triple DES
des-cbc  des-ede3 
-descert
-descert      encrypt PKCS#12 certificates with triple DES (default RC2-40)
DES_crypt
des ede3
des-ede3
des-ede3-cbc
DES_ede3_cbc_encrypt
des-ede3-cfb
des-ede3-ofb
des-ede-cbc
des-ede-cfb
des-ede-ofb
 -des            encrypt PEM output, instead of 'des' every other 
 -des            encrypt PEM output with cbc des
-des          encrypt private keys with DES
 -des            encrypt the generated key with DES in cbc mode
 -des      - encrypt the generated key with DES in cbc mode
-des           encrypt with DES
DES_ncbc_encrypt
DES_options
DES_set_key_unchecked
-<dgst alg>     use specified digest in the request
dgst_main
DH_check
	DH *dh;
		{ DH_free(dh); return(NULL); }
	dh->g=BN_bin2bn(dh%d_g,sizeof(dh%d_g),NULL);
DH_generate_parameters_ex
DH *get_dh%d()
	dh->length = %ld;
-dhparam
 -dhparam arg  - DH parameter file to use, in cert file if not specified
dhparam.c
DH parameters appear to be ok.
DHparams_print
	dh->p=BN_bin2bn(dh%d_p,sizeof(dh%d_p),NULL);
didn't found starttls in server response, try anyway...
-digest_create
 -[digest]      Digest to sign with (md5, sha1, md2, mdc2, md4)
-digest_verify
distinguished_name
 -dkey arg     - second private key file to use (usually for DSA)
-dkeyform
 -dkeyform arg - second key format (PEM, DER or ENGINE) PEM default
 -dlimit arg   dump the first arg bytes of unknown data in hex form
Doing %d bit %s %s's for %ds: 
Doing %s for %ds on %d size blocks: 
Done. %d entries marked as expired
Don't understand line '%s' from child %d
do_passwd
%d out of %d certificate requests certified, commit? [y/n]
 -dpass arg    - second private key file pass phrase source
drop connection and then reconnect
  %d = "%s"
dsa %4u bits %8.6fs %8.6fs %8.1f %8.1f
dsa512   dsa1024  dsa2048
	DSA *dsa;
DSA_dup_DH
DSA_free
		{ DSA_free(dsa); return(NULL); }
	dsa->g=BN_bin2bn(dsa%d_g,sizeof(dsa%d_g),NULL);
DSA_generate_key
DSA_generate_parameters_ex
DSA *get_dsa%d()
-dsaparam
dsaparam.c
DSA parameters included in PrivateKey
 dsaparam-file
dsaparam_main
 -dsaparam     read or generate DSA parameters, convert to DH
DSAparams_dup
DSAparams_print
	dsa->p=BN_bin2bn(dsa%d_p,sizeof(dsa%d_p),NULL);
DSA_print
DSA private key value is negative
DSA public key include in PrivateKey
	dsa->q=BN_bin2bn(dsa%d_q,sizeof(dsa%d_q),NULL);
DSA sign failure.  No DSA sign will be done.
DSA verify failure.  No DSA verify will be done.
%d %s's in %.2fs
DTLS 1.0 
DTLS 1.0 (bad) 
 -dtls1        - Just talk DTLSv1
 -dtls1        - just use DTLSv1
DTLSv1_client_method
DTLSv1_server_method
-d              to output debug info
+DTP:%d:%s:%s:%d
+DT:%s:%d:%d
dump_all
dump_der
 -dump         dump unknown data in hex form
dump_nostr
dump_unknown
dup failed
ec_cofactor
ecdhb163
ecdhb163  ecdhb233  ecdhb283  ecdhb409  ecdhb571
ecdhb233
ecdhb283
ecdhb409
ecdhb571
ECDH computations don't match.
ECDH_compute_key
ECDH failure.
ecdhk163
ecdhk163  ecdhk233  ecdhk283  ecdhk409  ecdhk571
ecdhk233
ecdhk283
ecdhk409
ecdhk571
ECDH key generation failure.
ecdhp160
ecdhp160  ecdhp192  ecdhp224  ecdhp256  ecdhp384  ecdhp521
ecdhp192
ecdhp224
ecdhp256
ecdhp384
ecdhp521
ecdsab163
ecdsab163 ecdsab233 ecdsab283 ecdsab409 ecdsab571
ecdsab233
ecdsab283
ecdsab409
ecdsab571
ECDSA failure.
ecdsak163
ecdsak163 ecdsak233 ecdsak283 ecdsak409 ecdsak571
ecdsak233
ecdsak283
ecdsak409
ecdsak571
ecdsap160
ecdsap160 ecdsap192 ecdsap224 ecdsap256 ecdsap384 ecdsap521
ecdsap192
ecdsap224
ecdsap256
ecdsap384
ecdsap521
ECDSA_sign
ECDSA sign failure
ECDSA sign failure.  No ECDSA sign will be done.
ECDSA_verify
ECDSA verify failure
ECDSA verify failure.  No ECDSA verify will be done.
EC_get_builtin_curves
EC_GROUP_check
EC_GROUP_free
		EC_GROUP_free(group);
EC_GROUP_get0_generator
EC_GROUP_get_cofactor
EC_GROUP_get_curve_GFp
EC_GROUP_get_degree
EC_GROUP *get_ec_group_%d(void)
EC_GROUP_get_order
EC_GROUP_get_point_conversion_form
	EC_GROUP *group = NULL;
EC_GROUP_method_of
EC_GROUP_new_by_curve_name
EC_GROUP_set_asn1_flag
EC_GROUP_set_point_conversion_form
EC_GROUP_set_seed
EC_KEY_free
EC_KEY_generate_key
EC_KEY_get0_group
EC_KEY_get0_public_key
EC_KEY_new
EC_KEY_new_by_curve_name
EC_KEY_precompute_mult
EC_KEY_print
EC_KEY_set_asn1_flag
EC_KEY_set_conv_form
EC_KEY_set_group
EC_METHOD_get_field_type
-econtent_type
ec_order
ecparam.c
ecparam_main
ECPKParameters_print
EC point formats
		EC_POINT_free(point);
EC_POINT_point2bn
	EC_POINT *point = NULL;
 Eg. '-pre "SO_PATH:/lib/libdriver.so"' calls command "SO_PATH" with
EHLO openssl.client.net
e is %ld (0x%lX)
-elapsed
elliptic curves
emailAddress type needs to be of type IA5STRING
email_in_dn
 -email          - print email address(es)
-embed          use (nonstandard) embedded DSA parameters format
 <empty>
enabling auto ENGINE support
enc_main
-encrypt
-EncryptedData_decrypt
-EncryptedData_encrypt
-encrypt       encrypt message
-encrypt        encrypt with public key
encryption
encrypt_key
                 encrypt PEM output with cbc aes
               encrypt PEM output with cbc aes
              encrypt PEM output with cbc aes
                 encrypt PEM output with cbc camellia
               encrypt PEM output with cbc camellia
              encrypt PEM output with cbc camellia
                 encrypt PEM output with cbc seed
encrypt_rsa_key
-enddate
end date is invalid, it should be YYMMDDHHMMSSZ or YYYYMMDDHHMMSSZ
 -enddate        - notAfter field
 -enddate YYMMDDHHMMSSZ    - certificate validity notAfter (overrides -days)
end of string encountered while processing type of subject name element #%d
ENGINE_by_id
engine.c
ENGINE_cleanup
ENGINE_ctrl
ENGINE_ctrl_cmd
ENGINE_ctrl_cmd_string
 [-engine e]
-engine e
 -engine e         - use engine e, possibly a hardware device.
 -engine e         use engine e, possibly a hardware device
 -engine e       - use engine e, possibly a hardware device.
 -engine e       use engine e, possibly a hardware device.
 -engine e      use engine e, possibly a hardware device
 -engine e      use engine e, possibly a hardware device.
 -engine e     use engine e, possibly a hardware device.
 -engine e - use engine e, possibly a hardware device.
-engine e             - use engine e, possibly a hardware device.
-engine e          use engine e, possibly a hardware device.
-engine e       use engine e, possibly a hardware device.
-engine e      use engine e, possibly a hardware device.
-engine e     use engine e, possibly a hardware device.
ENGINE_finish
ENGINE_free
ENGINE_get_ciphers
ENGINE_get_DH
ENGINE_get_digests
ENGINE_get_DSA
ENGINE_get_first
ENGINE_get_id
ENGINE_get_name
ENGINE_get_next
ENGINE_get_pkey_asn1_meth_str
ENGINE_get_pkey_meths
ENGINE_get_RAND
ENGINE_get_RSA
 -engine id    - Initialise and use the specified engine
ENGINE_init
ENGINE_load_builtin_engines
ENGINE_load_private_key
ENGINE_load_public_key
ENGINE_register_all_complete
ENGINE_set_default
engine "%s" set.
Enter Encryption Password:
Enter Export Password:
Enter Import Password:
Enter MAC Password:
Enter Password:
enter %s %s password:
entry %d: bad serial number characters, char pos %ld, char is '%c'
entry %d: bad serial number length (%d)
entry %d: invalid expiry date
entry %d: not revoked yet, but has a revocation date
ERR_clear_error
ERR_error_string_n
ERR_free_strings
ERR_get_error
ERR_get_string_table
ERR_load_crypto_strings
errno=%d 
__errno_location
    Error
, ERROR:
Error accepting connection
Error adding attribute
ERROR: adding extensions from request
ERROR: adding extensions in section %s
Error allocating DSA object
Error allocating keygen context
ERROR:Already revoked, serial number %s
Error: bad option or value
ERROR: cannot modify subject
Error: client did not send PSK identity
[Error]: command name too long
Error configuring OpenSSL
Error connecting BIO
Error converting key
error converting number from bin to BIGNUM
Error converting serial number %s
error converting serial to ASN.1 format
Error creating CMS structure
Error creating connect BIO
error creating name index:(%ld,%ld,%ld)
Error Creating OCSP request
Error Creating Output File
Error creating PKCS#7 structure
error creating serial number index:(%ld,%ld,%ld)
Error creating SSL context.
Error decrypting CMS structure
Error decrypting CMS using password
Error decrypting CMS using private key
Error decrypting CMS using secret key
Error decrypting key
Error decrypting PKCS#7 structure
Error, DSA key generation failed
Error during serial number generation.
Error encrypting key
Error generating key
Error generating parameters
Error getting client auth engine
Error getting context
Error getting CRL issuer certificate
Error getting CRL issuer public key
Error getting password
Error getting password.
Error getting passwords
Error getting public key
Error getting RSA key
Error in cipher list
Error initialising X509 store
Error initializing context
Error initializing keygen context
Error initializing %s context
Error in PSK client callback
Error in PSK server callback
Error in revocation arguments
[Error]: internal stack error
error loading certificates
Error loading config file '%s'
Error Loading CRL extension section %s
Error loading directory %s
Error Loading extension section %s
Error loading file %s
Error loading PKCS12 file for %s
Error Loading request extension section %s
Error loading responder certificate
Error loading signer certificate
Error loading SPKAC
error loading the config file '%s'
ERROR: loading the config file '%s'
ERROR:name does not match %s
error, no objects specified in config file
ERROR: No Status found.
Error: offset too large
error on line %ld of config file '%s'
ERROR: on line %ld of config file '%s'
error on line %ld of db attribute file '%s'
error on line %ld of %s
Error opening file %s
Error opening input file
Error opening input file %s
Error Opening OCSP request file
Error Opening OCSP response file
Error opening output file
Error opening output file %s
Error opening '%s'
Error opening signature file %s
Error opening %s %s
error opening the file, %s
Error outputting keys and certificates
Error parsing config file
Error parsing -nextprotoneg argument
Error parsing OCSP request
Error parsing response
Error parsing structure
Error parsing timestamp %s
Error parsing URL
Error printing key
Error querying OCSP responsder
Error reading certificate request in %s
Error reading certs file %s
Error reading header on certificate
Error reading input Data
error reading input file
Error reading key
Error reading OCSP request
Error reading OCSP response
Error Reading Output File
Error reading parameter file %s
Error reading parameters
Error reading password from BIO
Error reading peer key %s
Error reading receipt
Error reading sequence file %s
Error reading signature data
Error reading signature file %s
Error reading S/MIME message
Error reading %s %s
error reading the file, %s
ERROR:Serial number %s has already been issued,
error setting certificate
error setting cipher list
Error setting cipher %s
Error setting client auth engine
Error setting context
error setting CRL nextUpdate
Error setting digest %s
error setting 'id_prefix'
error setting private key
error setting PSK identity hint to context
error setting random cookie secret
Error setting RSA keysize
Error setting up accept BIO
Error %s getting chain.
Error Signing Data
Error signing OCSP request
ERROR:There is already a certificate for %s
error unpacking public key
error unpacking SPKAC public key
Error Verifying Data
Error verifying serial %s!
error while loading CRL number
error while loading serial number
error with certificate - error %d at depth %d
error with certificate to be certified - should be self signed
Error writing certs to %s
Error writing key
Error writing output
error writing output file
Error writing session file %s
Error writing signers to %s
ERR_peek_error
ERR_peek_last_error
ERR_print_errors
ERR_print_errors_fp
ERR_reason_error_string
ERR_remove_thread_state
esc_2253
escape character at end of string
esc_ctrl
etaonrishdlcupfm
Everything appears to be ok, creating and signing the certificate
EVP_aes_128_cbc
EVP_aes_192_cbc
EVP_aes_256_cbc
EVP_BytesToKey
EVP_camellia_128_cbc
EVP_camellia_192_cbc
EVP_camellia_256_cbc
EVP_CIPHER_CTX_cleanup
EVP_CIPHER_CTX_init
EVP_CIPHER_CTX_set_flags
EVP_CIPHER_CTX_set_padding
EVP_CIPHER_do_all_sorted
EVP_CipherInit_ex
EVP_CIPHER_iv_length
EVP_CIPHER_nid
EVP_cleanup
EVP_DecryptFinal_ex
EVP_DecryptInit_ex
EVP_DecryptUpdate
EVP_des_cbc
EVP_des_ede3_cbc
EVP_Digest
EVP_DigestFinal
EVP_DigestFinal_ex
EVP_DigestInit
EVP_DigestInit_ex
EVP_DigestSignFinal
EVP_DigestSignInit
EVP_DigestUpdate
EVP_DigestVerifyFinal
EVP_DigestVerifyInit
EVP_EncryptFinal_ex
EVP_EncryptInit_ex
EVP_EncryptUpdate
-evp e          use EVP e.
EVP_get_cipherbyname
EVP_get_digestbyname
EVP_MD_CTX_cleanup
EVP_MD_CTX_init
EVP_MD_CTX_md
EVP_MD_CTX_set_flags
EVP_MD_do_all_sorted
EVP_MD_flags
EVP_MD_size
EVP_MD_type
EVP_PKCS82PKEY
EVP_PKEY2PKCS8_broken
EVP_PKEY_add1_attr_by_NID
EVP_PKEY_asn1_find
EVP_PKEY_asn1_find_str
EVP_PKEY_asn1_get0
EVP_PKEY_asn1_get0_info
EVP_PKEY_asn1_get_count
EVP_PKEY_base_id
EVP_PKEY_bits
EVP_PKEY_copy_parameters
EVP_PKEY_CTX_ctrl
EVP_PKEY_CTX_ctrl_str
EVP_PKEY_CTX_free
EVP_PKEY_CTX_get_app_data
EVP_PKEY_CTX_get_keygen_info
EVP_PKEY_CTX_new
EVP_PKEY_CTX_new_id
EVP_PKEY_CTX_set_app_data
EVP_PKEY_CTX_set_cb
EVP_PKEY_decrypt
EVP_PKEY_decrypt_init
EVP_PKEY_derive
EVP_PKEY_derive_init
EVP_PKEY_derive_set_peer
EVP_PKEY_encrypt
EVP_PKEY_encrypt_init
EVP_PKEY_free
EVP_PKEY_get0_asn1
EVP_PKEY_get1_DSA
EVP_PKEY_get1_RSA
EVP_PKEY_get_default_digest_nid
EVP_PKEY_id
EVP_PKEY_keygen
EVP_PKEY_keygen_init
EVP_PKEY_missing_parameters
EVP_PKEY_new
EVP_PKEY_new_mac_key
EVP_PKEY_paramgen
EVP_PKEY_paramgen_init
EVP_PKEY_print_params
EVP_PKEY_print_private
EVP_PKEY_print_public
EVP_PKEY_save_parameters
EVP_PKEY_set1_DSA
EVP_PKEY_set1_RSA
EVP_PKEY_sign
EVP_PKEY_sign_init
EVP_PKEY_size
EVP_PKEY_verify
EVP_PKEY_verify_init
EVP_PKEY_verify_recover
EVP_PKEY_verify_recover_init
EVP_rc2_40_cbc
EVP_rc2_64_cbc
EVP_rc2_cbc
EVP_read_pw_string
EVP_ripemd160
EVP_seed_cbc
EVP_sha1
Exactly one of the options -add, -delete, -modify -list must be specified.
                   exit 1 if so, 0 if not
Expansion: %s
Expires on    :%s
                                  explicit
                                    explicit
-explicit_policy
-export       output PKCS12 file
 export_restriction
ext_default
ext_dump
-extended_crl
-extensions
 -extensions ..  - Extension section (override value in config file)
 -extensions     - section from config file with X509V3 extensions to add
 -extensions .. specify certificate extension section (override value in config file)
External
ext_error
-extfile
 -extfile        - configuration file with X509V3 extensions to add
 -extfile file   - Configuration file with X509v3 extentions to add
ext_parse
Extra configuration file found
+F2:%u:%u:%f:%f
+F3:%u:%u:%f:%f
 -f4             use F4 (0x10001) for the E value
+F4:%u:%u:%f:%f
+F5:%u:%u:%f:%f
failed to update database
failed to update srpvfile
[Failure]: %s
__fdelt_chk
+F:%d:%s
fetched PSK len=%d
                file if not specified by this option
File name     :%s
file name too long
 -fingerprint    - print the certificate fingerprint
 -fingerprint    - print the crl fingerprint
, Finished
-fips-fingerprint
FIPS mode not supported.
: First Tier
Forked child %d
For some fields there will be a default value,
                 for those protocols that support it, where
__fprintf_chk
-from ad       from address
From: %s
-genconf
 -genconf file file to generate ASN1 structure from
 -gencrl         - Generate a new CRL
GENERAL_NAME_free
GENERAL_NAME_print
GENERAL_NAMES_free
GENERAL_NAMES_new
-generate
generate_cookie_callback
Generating a %ld bit %s private key
Generating certificate request
Generating DH parameters, %d bit long safe prime, generator %d
Generating DSA key, %d bits
Generating DSA parameters, %d bit long prime
generating index
Generating RSA private key, %d bit long modulus
Generating temp (%d bit) RSA key...
generator may not be chosen for DSA parameters
 -genkey       generate a DSA key
 -genkey           generate ec key
-genparam
-genparam          generate parameters, not key
 -genstr str   string to generate ASN1 structure from
gethostbyaddr
gethostbyname
gethostbyname addr is not AF_INET
gethostbyname failure
getservbyname
getservbyname failure for %s
GET %s HTTP/1.0
getsockname
getsockname:errno=%d
GET /stats 
Getting CA Private Key
Getting Private key
Getting request Private Key
GLIBC_2.0
GLIBC_2.1
GLIBC_2.15
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.7
__gmon_start__
 -gn arg         g and N values to be used for new verifier
g N entry
gNid=%s salt ="%s"
		goto err;
Got: %s from %d
		group = NULL;
Handshake
 handshake_failure
 -hash           - print hash value
 -hash           - synonym for -subject_hash
hash != ((void *)0)
                have been reported as requiring
heartbeat
, Heartbeat
HEARTBEATING
, HeartbeatRequest
, HeartbeatResponse
, HelloRequest
, HelloVerifyRequest
-hexdump
-hexdump        hex dump output
-hex                  - hex encode output
-hex            output as hex dump
hex string is too long
hmac     
-hmac arg       set the HMAC key to arg
HMAC_CTX_cleanup
HMAC_CTX_init
HMAC_Final
HMAC_Init_ex
-hmac key       create hashed MAC with key
hmac(md5)
HMAC_Update
holdInstruction
-host host:n       send OCSP request to host on port n
 -host host     - use -connect instead
Hostname in TLS extension: "%s"
<HTML><BODY BGCOLOR="#ffffff">
HTTP/1.0 200 ok
 -HTTP         - Respond to a 'GET /<path> HTTP/1.0' with file ./<path>
                                   hybrid
                                    hybrid
i2a_ASN1_INTEGER
i2a_ASN1_OBJECT
i2b_PrivateKey_bio
i2b_PublicKey_bio
i2b_PVK_bio
i2d_ASN1_TYPE
i2d_CMS_bio_stream
i2d_DHparams
i2d_DSAparams
i2d_DSAPrivateKey_bio
i2d_DSA_PUBKEY_bio
i2d_ECPKParameters
i2d_ECPrivateKey_bio
i2d_EC_PUBKEY_bio
i2d_OCSP_REQUEST
i2d_OCSP_RESPONSE
i2d_PKCS12_bio
i2d_PKCS7_bio
i2d_PKCS7_bio_stream
i2d_PKCS8_bio
i2d_PKCS8_PRIV_KEY_INFO_bio
i2d_PrivateKey_bio
i2d_PUBKEY_bio
i2d_RSA_NET
i2d_RSAPrivateKey_bio
i2d_RSA_PUBKEY_bio
i2d_RSAPublicKey_bio
i2d_SSL_SESSION
i2d_TS_REQ_bio
i2d_TS_RESP_bio
i2d_X509
i2d_X509_bio
i2d_X509_CRL_bio
i2d_X509_NAME
i2d_X509_PUBKEY
i2d_X509_REQ_bio
IA5STRING:'
I am unable to access the %s directory
idea cbc
identity_len=%d identity=%s
-id_prefix
 -id_prefix arg - Generate SSL/TLS session IDs prefixed by 'arg'
id_prefix '%s' set.
	if ((dh=DH_new()) == NULL) return(NULL);
	if ((dh->p == NULL) || (dh->g == NULL))
	if ((dsa=DSA_new()) == NULL) return(NULL);
	if ((dsa->p == NULL) || (dsa->q == NULL) || (dsa->g == NULL))
	if (!EC_GROUP_set_generator(group, point, tmp_2, tmp_3))
	if ((group = EC_GROUP_new_curve_GFp(tmp_1, tmp_2, tmp_3, NULL)) == NULL)
#ifndef HEADER_DH_H
	if (!ok)
	if (point)
	if (point == NULL)
	if (tmp_1)
	if ((tmp_1 = BN_bin2bn(ec_gen_%d, sizeof(ec_gen_%d), tmp_1)) == NULL)
	if ((tmp_1 = BN_bin2bn(ec_p_%d, sizeof(ec_p_%d), NULL)) == NULL)
	if (tmp_2)
	if ((tmp_2 = BN_bin2bn(ec_a_%d, sizeof(ec_a_%d), NULL)) == NULL)
	if ((tmp_2 = BN_bin2bn(ec_order_%d, sizeof(ec_order_%d), tmp_2)) == NULL)
	if (tmp_3)
	if ((tmp_3 = BN_bin2bn(ec_b_%d, sizeof(ec_b_%d), NULL)) == NULL)
	if ((tmp_3 = BN_bin2bn(ec_cofactor_%d, sizeof(ec_cofactor_%d), tmp_3)) == NULL)
If you enter '.', the field will be left blank.
-ign_eof
 -ign_eof      - ignore input eof (default when -quiet)
-ignore_critical
-ignore_err
ignore_type
 -i            indent entries
Illegal accept count %s
  <illegal flags!>
Illegal -inkey without -signer
 illegal_parameter
Illegal timeout value %s
Illegal update period %s
Illegal validity age %s
Illegal validity period %s
 -in arg         input file
 -in arg        input file
 -in arg       input file
 -in  arg          input file  - default stdin
 -in arg         - input file - default stdin
#include <openssl/dh.h>
-index file	 certificate status index file
 in entry %d
-in <file>
-in file        input file
-in file       input file
-in file  input file
-in file           read passwords from file
-infiles
 -infiles ....   - The last argument, requests to process
 -in file        - The input PEM encoded certificate request(s)
-info         give info about PKCS#12 structure.
 -inform arg       input format - default PEM (DER or PEM)
 -inform arg     - input format - default PEM (DER or PEM)
 -inform arg     - input format - default PEM (one of DER, NET or PEM)
 -inform arg     input format - DER or PEM
 -inform arg    input format - DER or PEM
 -inform arg   input format - DER or PEM
 -inform arg     input format - one of DER NET PEM
 -inform arg   input format - one of DER PEM
-inform arg    input format SMIME (default), PEM or DER
-inform X       input format (DER or PEM)
-inhibit_any
-inhibit_map
-in  infile   input filename
-inkey file     input key
-inkey file    input private key (if not signer or recipient)
-inkey file   private key if not infile
input_password
in_stdin
in_stdin == 0
 insufficient_security
[Internal] 
 internal_error
Internal error: can't find key algorithm
Internal error creating SRP verifier
internal error loading RSA key number %d
Internal error validating SRP verifier
                   in the asn1 der encoding
                 in the asn1 der encoding
	int ok=0;
into your certificate request.
invalid 'bufsize' specified.
Invalid certificate options: "%s"
invalid compromised time %s
invalid depth
invalid digest string
invalid engine "%s"
Invalid extension copy option: "%s"
Invalid global string mask setting %s
invalid hex iv value
invalid hex key value
invalid hex salt value
Invalid id %s
invalid IP address
Invalid key %s
invalid mode
Invalid name options: "%s"
invalid object identifier %s
Invalid OID %s
Invalid password argument "%s"
Invalid password for user "%s", operation abandoned.
Invalid Policy "%s"
invalid reason code %s
Invalid reject object value %s
Invalid request
invalid revocation date %s
Invalid time format %s. Need YYYYMMDDHHMMSSZ
Invalid trust object value %s
invalid type, Data base error
_IO_stdin_used
__isoc99_sscanf
 is %sprime
issuer= 
issuer certificate
-issuer_checks
-issuer file       issuer certificate
-issuer_hash
-issuer_hash_old
 -issuer_hash_old    - print old-style (MD5) issuer hash value
 -issuer_hash    - print issuer hash value
 -issuer         - print issuer DN
/* issuer :%s */
issuer=%s
It does not contain a public key
it needs to be at least %d bits, not %ld
iv undefined
_Jv_RegisterClasses
keepalive
 -key2 arg     - Private Key file to use for servername, in cert file if
 -key arg       create SPKAC using private key
 -key arg        - key to decode the private key if it is encrypted
 -key arg      - Private key file to use, in cert file if
-key arg      - RSA file to use, PEM format assumed, key is in cert file
Key Attributes
keyCompromise
-keyex        set MS key exchange type
-keyfile
 -keyfile arg    - private key file
 -key file      use the private key contained in file
-keyform
-keyform arg   input private key format (PEM or ENGINE)
 -keyform arg   key file format
-keyform arg    key file format (PEM or ENGINE)
 -keyform arg  - key format (PEM, DER or ENGINE) PEM default
 -keyform arg  - key format (PEM or DER) PEM default
 -keyform arg    - private key file format (PEM or ENGINE)
 -keyform arg    - private key format - default PEM
-keyform arg    private key format - default PEM
-keygen_engine
-keyid         use subject key identifier
    Keying material: 
Keying material exporter:
-keymatexport
 -keymatexport label   - Export keying material using label
-keymatexportlen
 -keymatexportlen len  - Export len bytes of keying material (default 20)
 -keyout arg    file to send the key to
-keypbe alg   specify private key PBE algorithm (default 3DES)
-keysig       set MS key signature type
Key Type does not match parameters
    Label: '%s'
-lastupdate
lastUpdate=
 -lastupdate     - lastUpdate field
 (%ld days)
%ld %d bit DSA signs in %.2fs
%ld %d bit DSA verify in %.2fs
%ld %d-bit ECDH ops in %.2fs
%ld %d bit ECDSA signs in %.2fs 
%ld %d bit ECDSA verify in %.2fs
%ld %d bit private RSA's in %.2fs
%ld %d bit public RSA's in %.2fs
%ld semi-random bytes loaded
-legacy_renegotiation
 -legacy_renegotiation - enable use of legacy renegotiation (dangerous)
-legacy_server_connect
 -length arg   length of section in file
    Length: %i bytes
Lets print some clear text
lf_num == 0
lh_insert
lh_node_stats_bio
lh_node_usage_stats_bio
lh_retrieve
lh_stats_bio
lh_strhash
libcrypto.so.1.0.0
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
libssl.so.1.0.0
 line, or all supported ENGINEs if none are specified.
List all users
list-cipher-algorithms
list-cipher-commands
-list_curves
 -list_curves      prints a list of all currently available curve 'short names'
 -list           list user
list-message-digest-algorithms
list-message-digest-commands
list-public-key-algorithms
list-standard-commands
-LMK          Add local machine keyset attribute to private key
Loaded: (%s) %s
                 load the file (or the files in the directory) into
                load the file (or the files in the directory) into
               - load the file (or the files in the directory) into
               load the file (or the files in the directory) into
              load the file (or the files in the directory) into
localhost
LOOKUP done %s
LOOKUP during accept %s
LOOKUP not successful
LOOKUP renego during read
LOOKUP renego during write
-macalg alg   digest algorithm used in MAC (default SHA1)
-mac algorithm  create MAC (not neccessarily HMAC)
MAC and Signing key cannot both be specified
-maciter
MAC Iteration %ld
-maciter      use MAC iteration
-macopt nm:v    MAC algorithm parameters or key
MAC parameter error "%s"
MAC verified OK
Mac verify error: invalid password?
Mac verify error (wrong password?) in PKCS12 file for %s
making CRL
malloc error
Malloc failure
max fragment length
 -md2/-md5/-sha1/-mdc2 - digest to use
md4      
md5      
 -md arg         - md to use, one of md2, md5, sha or sha1
__memcpy_chk
Memory allocation error
memory allocation failure
Message Digest commands (see the `dgst' command for more details)
message digest is %s
missing compromised time
missing hold instruction
                   missing, it is assumed to be in the CA file.
Modifying Request's Subject
 -modify         modify the srp verifier of an existing user
-modulus
Modulus=
 -modulus        print the DSA public value
 -modulus        - print the RSA key modulus
 -modulus        print the RSA key modulus
 -modulus       RSA modulus
Modulus=unavailable
-mr             produce machine readable output.
 -msg          - Show protocol messages
-msie_hack
 -msie_hack      - msie modifications to handle all those universal strings
 -mtu          - Set link layer MTU
 -mtu          - set the link layer MTU
-multi n        run n benchmarks in parallel.
Multiple signers or keys not allowed
-multivalue-rdn
 -multivalue-rdn - enable support for multivalued RDNs
 -multivalue-rdn enable support for multivalued RDNs
 -name arg       - The particular CA definition to use
 -name arg       The particular srp definition to use
 -name arg         use the ec parameters with 'short name' name
-named_curve
 -named_curve arg  - Elliptic curve name to use for ephemeral ECDH keys.
-name "name"  use name as friendly name
-nameopt
name_opt
 -nameopt arg    - various certificate name options
Name: %s
Name '%s' too long
 -nbio         - Run with non-blocking IO
-nbio         - Run with non-blocking IO
-nbio_test
 -nbio_test    - more ssl protocol testing
 -nbio_test    - test with the non-blocking test bio
NB: options order may be important!  See the manual page.
 NB: -pre and -post will be applied to all ENGINEs supplied on the command
NCONF_free
NCONF_get_number_e
NCONF_get_section
NCONF_get_string
NCONF_load
NCONF_load_bio
NCONF_new
-ndays n	 	 number of days before next update
Need an OCSP request for this operation!
Need a responder certificate, key and CA for this operation!
Need at least one user for options -add, -delete, -modify. 
need_rand
need to specify a CAkey if using the CA command
Netscape certificate sequence utility
NETSCAPE_CERT_SEQUENCE_free
NETSCAPE_CERT_SEQUENCE_new
Netscape SPKAC structure not found in %s
NETSCAPE_SPKI_b64_decode
NETSCAPE_SPKI_b64_encode
NETSCAPE_SPKI_free
NETSCAPE_SPKI_get_pubkey
NETSCAPE_SPKI_new
NETSCAPE_SPKI_print
NETSCAPE_SPKI_set_pubkey
NETSCAPE_SPKI_sign
NETSCAPE_SPKI_verify
NETSCAPE_X509_free
NETSCAPE_X509_it
new_certs_dir
 -newhdr        output "NEW" in the header lines
-new          - Just time new connections
 -newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'
 -newkey ec:file generate a new EC key, parameters taken from CA in 'file'
 -newkey rsa:bits generate a new RSA key of 'bits' in size
 -new           new request.
new subject=
next protocol
Next protocol: (%d) 
NEXTPROTO is 
-nextprotoneg
 -nextprotoneg arg - enable NPN extension, considering named protocols supported (comma-separated list)
 -nextprotoneg arg - set the advertised protocols for the NPN extension (comma-separated list)
-next_serial
next serial number is 00
next serial number is %s
-nextupdate
nextUpdate=
	Next Update: 
 -nextupdate     - nextUpdate field
nistb163
nistb233
nistb283
nistb409
nistb571
nistk163
nistk233
nistk283
nistk409
nistk571
nistp192
nistp224
nistp256
nistp384
nistp521
-nmin n	 	 number of minutes before next update
<No Alias>
-no-asn1-kludge
-noattr        don't include any signed attributes
no_attributes
-no_attr_verify
-no_cache
<no cert>
-no_cert_checks
-no_cert_checks    don't do additional checks on signing certificate
 -nocert       - Don't use any certificates (Anon-DH)
 NO-CERTIFICATE-ERROR
No certificate matches private key
No certificate present
-nocerts
-no_certs
-no_certs          don't include any certificates in signed request
-nocerts       don't include signers certificate when signing
-nocerts      don't output certificates.
-no_cert_verify
-no_cert_verify    don't check signing certificate
-nochain
-no_chain
-no_chain          don't chain verify response
 NO-CIPHER-ERROR
No CIPHER specified
no client certificate available
No client certificate CA names sent
-no_comp
-no_content_verify
 -nocrl         no crl to load, just certs from '-certfile'
-nocrypt
-nocrypt        use or expect unencrypted private key
no default digest
<no description>
-nodes        don't encrypt private keys
 -nodes         don't encrypt the output key
-nodetach
-nodetach      use opaque signing
 -no_dhe       - Disable ephemeral DH
-no_ecdhe
 -no_ecdhe     - Disable ephemeral ECDH
-noemailDN
 -noemailDN      - Don't add the EMAIL field into certificate' subject
no engine given
no engine specified
No entries found to mark expired
no EVP given
-no_explicit
no_extensions
<no flags>
No g and N value for index "%s"
no_header
-no_ign_eof
 -no_ign_eof   - don't ignore input eof
-noindef
NO_INPUT
no input files
-nointern
-no_intern
-no_intern         don't search certificates contained in response for signer
-nointern      don't search certificates in message for signer
no_issuer
No issuer certificate specified
-noiter       don't use encryption iteration
-noiter         use 1 as iteration count
no keyfile specified
-nokeys       don't output private keys.
No keytype specified
-no_legacy_server_connect
-nomac        don't generate MAC
-nomaciter
-nomaciter    don't use MAC iteration
-nomacver
-nomacver     don't verify MAC.
no multi count given
no name/value pairs found in %s
-nonce             add OCSP nonce to request
Nonce Verify error
-non-fips-allow
-non-fips-allow allow use of non FIPS digest
non-hex digit
-no_nonce
-no_nonce          don't add OCSP nonce to request
No Octet String in PrivateKey
-nooct          use (nonstandard) no octet format
-nooldmime
 -noout arg    don't produce any output
 -noout         do not output REQ
 -noout            do not print the ec parameter
-noout        don't output anything, just verify.
 -noout        don't output encoded data
-noout          don't output encoded parameters
 -noout          don't print key out
 -noout         don't print SPKAC
 -noout          - no certificate output
 -noout          - no CRL output
 -noout        no output
no peer certificate available
no port defined
No prime specified
no_pubkey
  No Receipt Request
No recipient certificate or key specified
No recipient(s) certificate(s) specified
 no_renegotiation
no request key file specified
no response sent
No secret key id
-no_seed
 -no_seed          if 'explicit' parameters are chosen do not use the seed
no_serial
no_sigdump
no_signame
No signature file specified for verify
No signature to verify: use the -signature option
-no_signature_verify
-no_signature_verify don't check signature on response
No Signed Receipts Recipients
No signer certificate specified
-no_signer_cert_verify
-nosigs        don't verify message signature
-nosmimecap
-no_ssl2
 -no_ssl2      - Just disable SSLv2
-no_ssl3
 -no_ssl3      - Just disable SSLv3
no_subject
notAfter=
Not a hex number '%s'
notBefore=
No template, please set one up.
Nothing to do!
-no_ticket
 -no_ticket        - disable use of RFC4507bis session tickets
 -no_ticket    - disable use of RFC4507bis session tickets
not locked
-no_tls1
-no_tls1_1
 -no_tls1_1    - Just disable TLSv1.1
-no_tls1_2
 -no_tls1_2    - Just disable TLSv1.2
 -no_tls1_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that protocol
 -no_tls1      - Just disable TLSv1
-no_tmp_rsa
 -no_tmp_rsa   - Do not generate a tmp RSA key
                 not specified but cert file is.
                 not specified (default is %s)
no_validity
No value provided for Subject Attribute %s, skipped
<No Values>
-noverify
-noverify          don't verify response at all
-noverify      don't verify signers certificate
-noverify          never verify when reading password from terminal
no_version
Now timing with session id reuse.
-nrequest
-nrequest n        number of requests to accept (default unlimited)
-nsdb           use (nonstandard) DSA Netscape DB format
NULL received PSK identity hint, continuing anyway
 number        number of bits to use for generating private key
 numbits       number of bits in to generate (default 512)
-oaep           use PKCS#1 OAEP
OBJ_cleanup
OBJ_create
OBJ_create_objects
OBJ_NAME_do_all_sorted
OBJ_nid2ln
OBJ_nid2obj
OBJ_nid2sn
OBJ_obj2nid
OBJ_sn2nid
OBJ_txt2nid
OBJ_txt2obj
OCSP_basic_add1_status
OCSP_BASICRESP_free
OCSP_BASICRESP_new
OCSP_basic_sign
OCSP_basic_verify
OCSP_CERTID_free
OCSP_cert_id_new
OCSP_cert_status_str
OCSP_cert_to_id
OCSP_check_nonce
OCSP_check_validity
OCSP_copy_nonce
OCSP_crl_reason_str
OCSP_id_get0_info
OCSP_id_issuer_cmp
 -ocspid         - print OCSP hash values for the subject name and public key
OCSP_onereq_get0_id
OCSP_parse_url
OCSP_REQ_CTX_add1_header
OCSP_REQ_CTX_free
OCSP_REQ_CTX_set1_req
OCSP_request_add0_id
OCSP_request_add1_nonce
OCSP_REQUEST_add_ext
OCSP_REQUEST_free
OCSP_REQUEST_new
OCSP_request_onereq_count
OCSP_request_onereq_get0
OCSP_REQUEST_print
OCSP_request_sign
OCSP_resp_find_status
OCSP response: 
OCSP_response_create
OCSP_RESPONSE_free
OCSP_response_get1_basic
OCSP_RESPONSE_new
OCSP_RESPONSE_print
OCSP_response_status
OCSP_response_status_str
OCSP_sendreq_nbio
OCSP_sendreq_new
OCSP_SINGLERESP_add1_ext_i2d
-ocsp_uri
 -ocsp_uri       - print OCSP Responder URL(s)
OCSP utility
 -offset arg   offset into file
oid_file
 -oid file     file of extra oid definitions
	OID: %s
oid_section
old subject=
Only private keys can be checked
                 only "smtp", "pop3", "imap", "ftp" and "xmpp"
               (only used if -t is also provided)
OpenSSL> 
OPENSSL_1.0.0
OPENSSL_1.0.1
OpenSSL 1.0.1 14 Mar 2012
OPENSSL_add_all_algorithms_noconf
OpenSSL application user interface
OPENSSL_cleanse
openssl.cnf
OPENSSL_CONF
OPENSSL_DEBUG_MEMORY
OpenSSLDie
openssl:Error: '%s' is an invalid command.
OPENSSL_FIPS
OPENSSL_load_builtin_modules
openssl (lock_dbg_cb): %s (mode=%d, type=%d) at %s:%d
OPENSSL_malloc
OPENSSL_malloc failure %ld
OPENSSL_uni2asc
optional
options:
options:  
                 or a default set of parameters is used
                 or any other CRL in the CA chain. CRL(s) are appened to the
other CRLs
 -out arg        output file
 -out arg       output file
 -out arg      output file
 -out arg          output file - default stdout
 -out arg        - output file - default stdout
 -out arg      output file (output format is always DER
 -outdir dir     - Where to put output certificates
-out <file>
-out filename   output to filename rather than stdout
-out file          output file
-out file       output file
-out file      output file
-out file output file
-out file          output filename
 -out file       output the key to 'file
 -out file - output the key to 'file
 -out file - output the key to 'file'
 -out file       - Where to put the output file(s)
-out file             - write to file
-outform
 -outform arg      output format - default PEM
 -outform arg    - output format - default PEM
 -outform arg    - output format - default PEM (one of DER, NET or PEM)
 -outform arg    output format - DER or PEM
 -outform arg   output format - DER or PEM
 -outform arg  output format - DER or PEM
 -outform arg    output format - one of DER NET PEM
 -outform arg  output format - one of DER PEM
-outform arg   output format SMIME (default), PEM or DER
-outform X         output format (DER or PEM)
-outform X      output format (DER or PEM)
out of mem
out of memory
-out outfile  output filename
output == out_buf + strlen(out_buf)
output_password
-param_enc
 -param_enc arg    specifies the way the ec parameters are encoded
 -param_enc arg  specifies the way the ec parameters are encoded
Parameters already set!
parameter setting error
-paramfile
-paramfile file    parameters file
-param_out
 -param_out      print the elliptic curve parameters
-pass <arg>
-pass arg          output file pass phrase source
 -pass arg     - private key file pass phrase source
 -passin arg     input file pass phrase source
 -passin arg    input file pass phrase source
-passin arg     input file pass phrase source
-passin arg    input file pass phrase source
-passin arg     pass phrase source
-passin arg    pass phrase source
 -passin arg     - private key password source
-passin, -passout arguments only valid with one user.
-passin p     input file pass phrase source
 -passin        private key password source
-passout
 -passout arg    output file pass phrase source
-passout arg    output file pass phrase source
-passout p    output file pass phrase source
Passpharse callback error for %s
pass phrase
passwd.c
passwd_main
*passwds != ((void *)0)
passwd != ((void *)0)
-password
Password: 
password_callback
Password for user "%s" ok.
-password p   set import/export password source
-path              path to use in OCSP request
 -pause        - sleep(1) after each read(2) and write(2) system call
PBEPARAM_free
-peerform
Peer has incorrect TLSv1 block padding
-peerkey
Peer Key
-peerkey command before -inkey
PEM_read_bio_CMS
PEM_read_bio_DHparams
PEM_read_bio_DSAparams
PEM_read_bio_ECPKParameters
PEM_read_bio_ECPrivateKey
PEM_read_bio_EC_PUBKEY
PEM_read_bio_NETSCAPE_CERT_SEQUENCE
PEM_read_bio_Parameters
PEM_read_bio_PKCS7
PEM_read_bio_PKCS8
PEM_read_bio_PKCS8_PRIV_KEY_INFO
PEM_read_bio_PrivateKey
PEM_read_bio_PUBKEY
PEM_read_bio_RSAPublicKey
PEM_read_bio_SSL_SESSION
PEM_read_bio_X509
PEM_read_bio_X509_AUX
PEM_read_bio_X509_CRL
PEM_read_bio_X509_REQ
	PEM string: %s
PEM_write_bio_CMS_stream
PEM_write_bio_DHparams
PEM_write_bio_DSAparams
PEM_write_bio_DSAPrivateKey
PEM_write_bio_DSA_PUBKEY
PEM_write_bio_ECPKParameters
PEM_write_bio_ECPrivateKey
PEM_write_bio_EC_PUBKEY
PEM_write_bio_NETSCAPE_CERT_SEQUENCE
PEM_write_bio_Parameters
PEM_write_bio_PKCS7
PEM_write_bio_PKCS7_stream
PEM_write_bio_PKCS8
PEM_write_bio_PKCS8_PRIV_KEY_INFO
PEM_write_bio_PrivateKey
PEM_write_bio_PUBKEY
PEM_write_bio_RSAPrivateKey
PEM_write_bio_RSA_PUBKEY
PEM_write_bio_RSAPublicKey
PEM_write_bio_SSL_SESSION
PEM_write_bio_X509
PEM_write_bio_X509_AUX
PEM_write_bio_X509_CRL
PEM_write_bio_X509_REQ
PEM_write_bio_X509_REQ_NEW
PEM_X509_INFO_read_bio
pipe failure
-pk7out        output PKCS#7 structure
PKCS12_certbag2x509
PKCS12_create
PKCS12_decrypt_skey
PKCS12_free
PKCS12_get_attr_gen
PKCS12_parse
PKCS12_SAFEBAG_free
PKCS12_set_mac
PKCS12_unpack_authsafes
PKCS12_unpack_p7data
PKCS12_unpack_p7encdata
PKCS12_verify_mac
PKCS7 Data
PKCS7_decrypt
PKCS7_encrypt
PKCS7 Encrypted data: 
PKCS7_final
PKCS7_free
PKCS7_get0_signers
PKCS7_new
PKCS7_print_ctx
PKCS7_sign
PKCS7_sign_add_signer
PKCS7_SIGNED_new
PKCS7_to_TS_TST_INFO
PKCS7_verify
PKCS8_decrypt
PKCS8_encrypt
PKCS8_PRIV_KEY_INFO_free
-pkcs           use PKCS#1 v1.5 padding (default)
-pkeyopt
-pkeyopt command before -inkey
-pkeyopt opt:value set the public key algorithm option <opt>
-pkeyopt X:Y    public key options
pkeyparam
pkeyutl.c
Please enter the following 'extra' attributes
	point = EC_POINT_bn2point(group, tmp_1, NULL, NULL);
 -policy arg     - The CA 'policy' to support
-policy_check
policy is %s
-policy_print
-port num		 port to run responder on
 -port port     - use -connect instead
                   possible values: compressed
                 possible values: compressed
                   possible values: named_curve (default)
                 possible values: named_curve (default)
 -post <cmd> - runs command 'cmd' against the ENGINE after loading it
 -pre <cmd>  - runs command 'cmd' against the ENGINE before any attempts
preserve
-preserveDN
 -preserveDN     - Don't re-order the DN
PRINTABLE:'
-print_certs
 -print_certs  print any certs or crl in the input
__printf_chk
private_key
Private key
Private key does not match the certificate public key
private key length is too short,
problem creating object %s=%s
problem loading oid section %s
problems making Certificate Request
problems opening %s
<proceed
Processing user "%s"
                 'prot' defines which one to assume.  Currently,
Protocols advertised by server: 
 protocol_version
-prverify
-prverify file  verify a signature using private key in file
 -psk arg      - PSK in hex (without 0x)
psk buffer of callback is too small (%d) for key (%d)
psk_client_cb
PSK client identity found
PSK error: client identity not found (got '%s' expected '%s')
-psk_hint
 -psk_hint arg - PSK identity hint to use
-psk_identity
 -psk_identity arg - PSK identity
PSK key given or JPAKE in use, setting client callback
PSK key given or JPAKE in use, setting server callback
psk_server_cb
 -pubin          expect a public key in input file
-pubin          input is an RSA public
-pubin          input is a public key
 -pubkey        output public key
 -pubkey         - output the public key
Public Key
Public Key=
Public Key operation error
 -pubout         output a public key
-purpose
 -purpose        - print out certificate purposes
p value is not a safe prime
p value is not prime
-pvk-none
-pvk-strong
-pvk-weak
-pwri_password
-queryfile
 -quiet        - no s_client output
 -quiet        - No server output
-quiet             no warnings
+R1:%ld:%d:%.2f
+R2:%ld:%d:%.2f
+R3:%ld:%d:%.2f
+R4:%ld:%d:%.2f
+R5:%ld:%d:%.2f
+R6:%ld:%d:%.2f
+R7:%ld:%d:%.2f
RAND_bytes
RAND_cleanup
RAND_egd
RANDFILE
 -rand file%cfile%c...
-rand file%cfile%c... - seed PRNG from files
 -rand file        files to use for random number input
RAND_file_name
 -rand         files to use for random number input
RAND_load_file
'random' data can be kept in (the file will be overwritten).
RAND_pseudo_bytes
RAND_seed
RAND_status
RAND_write_file
-raw            use no padding
rc2      
-rc2-128
-rc2-128       encrypt with RC2-128
rc2-40-cbc
-rc2-40        encrypt with RC2-40 (default)
rc2-64-cbc
-rc2-64        encrypt with RC2-64
rc2-cbc  
RC2_cbc_encrypt
RC2_set_key
RC4_options
RC4_set_key
rc5-32/12 cbc
-rctform
+R:%d:%s:%f
Read BLOCK
read DSA key
read EC key
read:errno=%d
Read Error in %s
read from %p [%p] (%lu bytes => %ld (0x%lX))
read R BLOCK
read W BLOCK
read X BLOCK
	Reason: %s
-receipt_request_all
-receipt_request_first
-receipt_request_from
  Receipt Request Parse Error
-receipt_request_print
-receipt_request_to
  Receipts From
receipt signer certificate file
  Receipts To:
Received PSK identity hint '%s'
-recip  file   recipient certificate file for decryption
recipient certificate file
recognized usages:
-reconnect
 -reconnect    - Drop and re-make the connection with the same Session-ID
 record_overflow
removeFromCRL
RENEGOTIATING
renegotiation info
req_extensions
-reqexts
 -reqexts ..    specify request extension section (override value in config file)
-reqin file        read DER encoded OCSP request from "file"
 -req            - input is a certificate request, sign and output.
 -reqopt arg    - various request text options
-reqout file       write DER encoded OCSP request to "file"
-req_text
-req_text          print text form of request
, REQUEST-CERTIFICATE
request key
Require explicit Policy: %s
-respin file       read DER encoded OCSP reponse from "file"
-resp_key_id
-resp_key_id       identify reponse by signing certificate key ID
-resp_no_certs
-resp_no_certs     don't include any certificates in response
responder certificate
Responder Error: %s (%d)
responder other certificates
responder private key
Response has been generated.
Response is not generated.
response parse error
Response Verify Failure
Response verify OK
-respout
-respout file      write DER encoded OCSP reponse to "file"
-resp_text
-resp_text         print text form of response
	return(dh);
	return(dsa);
	return(group);
		return(NULL);
Reused, 
Reused session-id
-reuse        - Just time connection reuse
-reverse
-reverse           switch table columns
	Revocation Time: 
 -revoke file    - Revoke a certificate (given in file)
Revoking Certificate %s.
ripemd160
-rkey file	 responder key to sign responses with
-rother file	 other certificates to include in response
rsa      
rsa %4u bits %8.6fs %8.6fs %8.1f %8.1f
rsa512   rsa1024  rsa2048  rsa4096
RSA_check_key
RSA_free
RSA_generate_key_ex
RSA key error: %s
RSA key ok
RSA_new_method
RSA operation error
RSA_PKCS1_SSLeay
RSA_print
RSA_private_decrypt
RSA_private_encrypt
RSA_public_decrypt
RSA_public_encrypt
-RSAPublicKey_in
-RSAPublicKey_out
RSA_set_default_method
RSA_sign
RSA sign failure
RSA sign failure.  No RSA sign will be done.
RSA_size
rsautl.c
RSA_verify
RSA verify failure
RSA verify failure.  No RSA verify will be done.
-rsigner
-rsigner file	 responder certificate to sign responses with
-r              to output the digest in coreutils format
rwrite W BLOCK
s2i_ASN1_INTEGER
Safe Contents bag
Salted__
salt_len <= 8
salt_malloc_p != ((void *)0)
*salt_p != ((void *)0)
-salt string       use provided salt
%s.attr.%s
%s: bad error code
%s, Cipher is %s
s_client
s_client.c
s_client_main
'%s' contains '..' reference
%s_default
second certificate private key file
second server certificate file
second server certificate private key file
secp160r1
secp192r1
secp256r1
-secretkey
-secretkeyid
-section
Secure Renegotiation IS%s supported
seed     
seed cbc
seed-cbc
seed-cbc 
SEED_cbc_encrypt
seed-cfb
seed-ecb
 -seed           encrypt PEM output with cbc seed
-seed         encrypt private keys with seed
-seed          encrypt with SEED
seed-ofb
SEED_set_key
Select error
-selfsign
 -selfsign       - sign a certificate with the key associated with it
%s: <Empty Attributes>
sep_comma_plus
sep_comma_plus_space
sep_multiline
sep_semi_plus_space
-serial n          serial number to check
Serial Number :%s
 -serial         - print serial number value
Serial %s not present in db.
%serror %d at %d depth lookup:%s
%s:error in %s
server2.pem
server authz
Server certificate
server certificate file
server certificate private key file
, SERVER-FINISHED
, ServerHello
, SERVER-HELLO
, ServerHelloDone
, ServerKeyExchange
-servername
server name
-servername_fatal
 -servername_fatal - on mismatch send fatal alert (default warning alert)
 -servername host - servername for HostName TLS extension
 -servername host  - Set TLS extension servername in ClientHello
server.pem
-serverpref
 -serverpref   - Use server's cipher preferences
 -serverpref   - Use server's cipher preferences (only SSLv2)
Server public key is %d bit
, SERVER-VERIFY
-sess_in
 -sess_in arg  - file to read SSL session from
session ticket
-sess_out
 -sess_out arg - file to write SSL session to
-setalias
 -setalias arg   - set certificate alias
-set_serial
 -set_serial     - serial number to use
 -set_serial    serial number to use for a certificate generated by -x509.
setsockopt
Setting secondary ctx parameters
Setting temp DH parameters
Setting temp ECDH parameters
SET_USER_INTERFACE
SET x509v3 extension 3
%s=Expired
%s=Expired (%c)
%s:failed in %s
%s Fingerprint=
 -sgckey         Use IIS SGC key format
sha1     
sha256   
sha512   
Shared ciphers:%s
-showcerts
 -showcerts    - show all certificates in the chain
show_type
Shrouded Keybag: 
shutdown
shutdown accept socket
shutting down SSL
-sigfile
-sigfile file signature file (verify operation only)
-signature
signature algorithms
Signature did not match the certificate
Signature did not match the certificate request
Signature Failure
-signature file signature to verify
Signature file specified for non verify
Signature ok
Signature verification error
signature verification failed on SPKAC public key
Signature Verification Failure
Signature verification problems....
Signature Verified Successfully
  Signed Content ID:
Signed Receipt Request Creation Error
Signed receipts only allowed with -sign
signer certificate
signer certificates
Signer %d:
-signer file       certificate to sign OCSP request with
-signer file   signer certificate file
signer private key
-sign   file    sign digest using private key in file
signing CRL
signing key file
-signkey
 -signkey arg    - self sign cert with arg
-signkey file      private key to sign OCSP request with
-sign_other
-sign_other file   additional certificates to include in signed request
-sign_receipt
-sign          sign message
-sign           sign with private key
Sign the certificate? [y/n]:
-sigopt nm:v    signature parameter
%s:invalid type in 'policy' configuration
'%s' is a directory
'%s' is an invalid file name
'%s' is an invalid number
'%s' is an invalid path
%s is an unknown cipher
%s is an unknown cipher or digest
%s is an unsupported message digest type
%s, Iteration %ld
sk_delete
sk_new_null
sk_pop_free
sk_shift
sk_value
%s (Library: %s)
SMIME_read_CMS
SMIME_read_PKCS7
SMIME_write_CMS
SMIME_write_PKCS7
%s need to be a directory
%s: <No Attributes>
%s [options]
%s [options] [bits] <infile >outfile
%s [options] <infile
%s [options] <infile >outfile
%s [options] [numbits]
space_eq
Specifiy the number of bits.
 -spkac arg     alternative SPKAC name
 -spkac file     - File contains DN and signed public key and challenge
SPKAC=%s
-spksect
%s Policies:
%s=Revoked (%c)
SRP_check_known_gN_param
SRP_create_verifier
SRP_get_default_gN
-srp_lateuser
 -srp_lateuser     - SRP username into second ClientHello message
SRP minimal length for N is %d
-srp_moregroups
 -srp_moregroups   - Tolerate other than the known g N values.
SRP parameters:
SRP parameters set: username = "%s" info="%s" 
SRP param N and g are not known params, going to check deeper.
SRP param N and g rejected.
-srppass
 -srppass arg      - password for 'user'
-srp_strength
 -srp_strength int - minimal mength in bits for N (default %d).
SRP terminating with code %d.
-srpuser
SRP user
SRP username = "%s"
 srp_usersalt="%s"
-srpuserseed
 -srpuserseed string - A seed string for a default user salt.
 -srpuser user     - SRP authentification for 'user'
SRP_VBASE_get_by_user
SRP_VBASE_init
SRP_VBASE_new
 srp_verifier="%s"
-srpvfile
 -srpvfile arg   The srp verifier file name
 -srpvfile file      - The verifier file for SRP
srpvfile updated.
SRTP Extension negotiated, profile=%s
srtp_profiles
%s => %s
%s [%s]:
-ss_cert
 -ss_cert file   - File contains a self signed cert to sign
s_server
s_server.c
%s%s(input flags): 
 -ssl2         - Just talk SSLv2
 -ssl2         - just use SSLv2
-ssl2         - Just use SSLv2
 -ssl2       - SSL2 mode
SSL 3.0 
SSL3 alert %s:%s:%s
 -ssl3         - Just talk SSLv3
 -ssl3         - just use SSLv3
-ssl3         - Just use SSLv3
 -ssl3       - SSL3 mode
SSL_accept
SSL_alert_desc_string_long
SSL_alert_type_string_long
SSL_cache_hit
SSL_callback_ctrl
SSL_CIPHER
SSL_CIPHER_description
SSL_CIPHER_get_id
SSL_CIPHER_get_name
SSL_CIPHER_get_version
SSL_clear
-ssl_client_engine
SSL_COMP_get_name
SSL_connect
SSL_ctrl
SSL_CTX_callback_ctrl
SSL_CTX_check_private_key
SSL_CTX_ctrl
SSL_CTX_free
SSL_CTX_get_cert_store
SSL_CTX_load_verify_locations
SSL_CTX_new
SSL_CTX_set1_param
SSL_CTX_set_cipher_list
SSL_CTX_set_client_CA_list
SSL_CTX_set_client_cert_engine
SSL_CTX_set_cookie_generate_cb
SSL_CTX_set_cookie_verify_cb
SSL_CTX_set_default_verify_paths
SSL_CTX_set_generate_session_id
SSL_CTX_set_info_callback
SSL_CTX_set_next_protos_advertised_cb
SSL_CTX_set_next_proto_select_cb
SSL_CTX_set_psk_client_callback
SSL_CTX_set_psk_server_callback
SSL_CTX_set_quiet_shutdown
SSL_CTX_set_session_id_context
SSL_CTX_set_srp_cb_arg
SSL_CTX_set_srp_client_pwd_callback
SSL_CTX_set_srp_strength
SSL_CTX_set_srp_username
SSL_CTX_set_srp_username_callback
SSL_CTX_set_srp_verify_param_callback
SSL_CTX_set_tlsext_use_srtp
SSL_CTX_set_tmp_rsa_callback
SSL_CTX_set_verify
SSL_CTX_use_certificate
SSL_CTX_use_certificate_file
SSL_CTX_use_PrivateKey
SSL_CTX_use_PrivateKey_file
SSL_CTX_use_psk_identity_hint
SSL_do_handshake
SSL_do_handshake -> %d
SSLEAY_CONF
SSLeay_version
SSL_export_keying_material
SSL_free
SSL_get0_next_proto_negotiated
SSL_get_certificate
SSL_get_cipher_list
SSL_get_ciphers
SSL_get_client_CA_list
SSL_get_current_cipher
SSL_get_current_compression
SSL_get_current_expansion
SSL_get_error
SSL_get_fd
SSL_get_peer_cert_chain
SSL_get_peer_certificate
SSL_get_rbio
SSL_get_selected_srtp_profile
SSL_get_servername
SSL_get_servername_type
SSL_get_session
SSL_get_shared_ciphers
SSL_get_srp_g
SSL_get_srp_N
SSL_get_srp_username
SSL_get_SSL_CTX
SSL_get_verify_result
SSL_get_wbio
SSL handshake has read %ld bytes and written %ld bytes
SSL_has_matching_session_id
SSL_library_init
SSL_load_client_CA_file
SSL_load_error_strings
SSL_pending
SSL_read
SSL_renegotiate
SSL_select_next_proto
SSL_SESSION_free
SSL_SESSION_get0_peer
SSL_SESSION_new
SSL_SESSION_print
SSL_SESSION_set1_id_context
SSL_set_accept_state
SSL_set_bio
SSL_set_connect_state
SSL_set_debug
SSL_set_msg_callback
SSL_set_session
SSL_set_session_id_context
SSL_set_shutdown
SSL_set_srp_server_param
SSL_set_SSL_CTX
SSL_set_verify
SSL_shutdown
SSL_state
SSL_state_string_long
-ssl            use SSL v2 padding
SSLv23_client_method
SSLv23_server_method
SSLv3_client_method
SSLv3_server_method
SSL_version
SSL_write
s_socket.c
%s-%s(%s)= 
%s %s%s [length %04lx]%s%s
%s=Suspended (%c)
__stack_chk_fail
Standard commands
-startdate
start date is invalid, it should be YYMMDDHHMMSSZ or YYYYMMDDHHMMSSZ
 -startdate      - notBefore field
 -startdate YYMMDDHHMMSSZ  - certificate validity notBefore
starting
Starting user processing
-starttls
STARTTLS
. STARTTLS
 -starttls prot - use the STARTTLS command before starting TLS
<starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'
<starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>
 -state        - print the 'ssl' states
 -state        - Print the SSL states
	static unsigned char dh%d_g[]={
static unsigned char dh%d_g[]={
	static unsigned char dh%d_p[]={
static unsigned char dh%d_p[]={
static unsigned char dsa%d_g[]={
static unsigned char dsa%d_p[]={
static unsigned char dsa%d_q[]={
static unsigned char %s_%d[] = {
-status_age
-status_age n      maximum status age in seconds
status request
 -status           - request certificate status from server
 -status serial  - Shows certificate status given the serial number
-status_timeout
-status_url
-status_verbose
-stdin             read passwords from stdin
<stdout>
(stdout)
strcasecmp
__strcat_chk
__strcpy_chk
/stream:features>
<stream:stream xmlns:stream='http://etherx.jabber.org/streams' xmlns='jabber:client' to='%s' version='1.0'>
string is too long, it needs to be less than  %d bytes long
string is too short, it needs to be at least %d bytes long
string_mask
string_to_hex
string to make the random number generator think it has entropy
strlen(out_buf) <= 6 + 8
strlen(out_buf) < sizeof(out_buf)
strlen(passwd) <= pw_maxlen
__strncat_chk
-strparse
 -strparse offset
 -subj arg      set or modify request subject
 -subj arg       - Use arg instead of request's subject
-subject
subject= 
Subject Attribute %s has no known NID, skipped
Subject does not start with '/'.
-subject_hash
-subject_hash_old
 -subject_hash_old   - print old-style (MD5) subject hash value
 -subject_hash   - print subject hash value
Subject Name  :%s
 -subject       output the request's subject
 -subject        - print subject DN
/* subject:%s */
subject=%s
Subject: %s
-subject s     subject
Successfully added extensions from config
Successfully added extensions from file.
Successfully loaded extensions file %s
[Success]: %s
%s=Unknown (%c).
%s:unknown object type in 'policy' configuration
superseded
supplied
%s=Valid (%c)
%s_value
Switching server context.
T61STRING:'
+t$`9t$\
-table             format output as table
t)<Dt%<tu)
Temporary srpvfile created.
-text          include or delete text MIME headers
 -text         print as text
 -text         print a text form of the DH parameters
 -text         print full details of certificates
 -text           - print out a text format version
-text           print parameters as text
 -text           - print ssl session id details
-text              print text form of request and response
 -text           - print the certificate in text form
 -text             print the ec parameters in text form
-text              print the in text
 -text           print the key
 -text           print the key in text
-text_pub
 -text          text form of request
                 the certificate file.
The certificate request appears to corrupted
                 The CRL(s) are appended to the certificate file
the g value is not a generator
The mandatory %s field was missing
The matching entry has the following details
The 'numbers' are in 1000s of bytes per second processed.
the 'policy' is misconfigured
                 the random number generator
                the random number generator
               the random number generator
              the random number generator
There are quite a few fields but you can leave some blank
there needs to be defined a directory for new certificate to be placed in
The %s field does not exist in the CA certificate,
The %s field needed to be supplied and was missing
The %s field needed to be the same in the
The string contains characters that are illegal for the ASN.1 type
The subject name appears to be ok, checking data base for clashes
The Subject's Distinguished Name is as follows
This could take some time
This is a key...
This is going to take a long time
This means that the random number generator has not been seeded
	This Update: 
-time arg     - max number of seconds to collect data, default %d
-timeout
 -timeout      - Enable timeouts
TIMEOUT occured
Timeout on connect
Timeout on request
TLS 1.1 
 -tls1_1       - Just talk TLSv1.1
 -tls1_1       - just use TLSv1.1
TLS 1.2 
 -tls1_2       - Just talk TLSv1.2
 -tls1_2       - just use TLSv1.2
 -tls1         - Just talk TLSv1
 -tls1         - just use TLSv1
 -tls1       - TLS1 mode
tlsext_cb
-tlsextdebug
 -tlsextdebug      - hex dump of all TLS extensions received
 -tlsextdebug  - hex dump of all TLS extensions received
TLS %s extension "%s" (id=%d), len=%d
TLSv1_1_client_method
TLSv1_1_server_method
TLSv1_2_client_method
TLSv1_2_server_method
-to addr       to address
to be sent with your certificate request
-token_in
-token_out
               to load it (if -t is used)
-topk8          output PKCS8 file
-toseq    output NS Sequence file
                   to value <value>
truncated HMAC
-trusted
trusted CA keys
-trust_other
-trust_other       don't verify additional certificates
-trustout
 -trustout       - output a "trusted" certificate
trying to read default_srp in " BASE_SECTION "
Trying to read SRP verifier file "%s"
trying to read srpvfile in section "%s"
Trying to update srpvfile.
TS_CONF_get_tsa_section
TS_CONF_load_certs
TS_CONF_set_accuracy
TS_CONF_set_certs
TS_CONF_set_clock_precision_digits
TS_CONF_set_crypto_device
TS_CONF_set_def_policy
TS_CONF_set_digests
TS_CONF_set_ess_cert_id_chain
TS_CONF_set_ordering
TS_CONF_set_policies
TS_CONF_set_serial
TS_CONF_set_signer_cert
TS_CONF_set_signer_key
TS_CONF_set_tsa_name
TS_MSG_IMPRINT_free
TS_MSG_IMPRINT_new
TS_MSG_IMPRINT_set_algo
TS_MSG_IMPRINT_set_msg
ts -query [-rand file%cfile%c...] [-config configfile] [-data file_to_hash] [-digest digest_bytes][-md2|-md4|-md5|-sha|-sha1|-mdc2|-ripemd160] [-policy object_id] [-no_nonce] [-cert] [-in request.tsq] [-out request.tsq] [-text]
ts -reply [-config configfile] [-section tsa_section] [-queryfile request.tsq] [-passin password] [-signer tsa_cert.pem] [-inkey private_key.pem] [-chain certs_file.pem] [-policy object_id] [-in response.tsr] [-token_in] [-out response.tsr] [-token_out] [-text] [-engine id]
TS_REQ_free
TS_REQ_new
TS_REQ_print_bio
TS_REQ_set_cert_req
TS_REQ_set_msg_imprint
TS_REQ_set_nonce
TS_REQ_set_policy_id
TS_REQ_set_version
TS_REQ_to_TS_VERIFY_CTX
TS_RESP_create_response
TS_RESP_CTX_add_failure_info
TS_RESP_CTX_free
TS_RESP_CTX_new
TS_RESP_CTX_set_status_info
TS_RESP_free
TS_RESP_get_token
TS_RESP_get_tst_info
TS_RESP_new
TS_RESP_print_bio
TS_RESP_set_status_info
TS_RESP_set_tst_info
TS_RESP_verify_response
TS_RESP_verify_token
TS_STATUS_INFO_free
TS_STATUS_INFO_new
TS_TST_INFO_free
TS_TST_INFO_print_bio
TS_VERIFY_CTX_free
TS_VERIFY_CTX_new
ts -verify [-data file_to_hash] [-digest digest_bytes] [-queryfile request.tsq] -in response.tsr [-token_in] -CApath ca_path -CAfile ca_file.pem -untrusted cert_file.pem
 -t[t]       - for each engine, check that they are really available
               -tt will display error trace for unavailable engines
turning on non blocking io
-twopass
-twopass      separate MAC, encryption passwords
TXT_DB_create_index
TXT_DB error number %ld
TXT_DB_free
TXT_DB_get_by_index
TXT_DB_insert
TXT_DB_read
TXT_DB_write
type        
	Type: Alias to %s
type out of bounds
Type	  :%s
	Type: %s Algorithm
UI_add_input_string
UI_add_verify_string
UI_construct_prompt
UI_create_method
UI_destroy_method
UI_get0_user_data
UI_get_input_flags
UI_get_string_type
UI_method_get_closer
UI_method_get_opener
UI_method_get_reader
UI_method_get_writer
UI_method_set_closer
UI_method_set_opener
UI_method_set_reader
UI_method_set_writer
UI_new_method
UI_OpenSSL
UI_process
UI_set_result
unable to check the generator value
unable to create BIO for output
unable to create curve (nistp256)
unable to create curve (%s)
unable to find 'section' for %s
unable to find '%s' in config
unable to get certificate from '%s'
Unable to get connection
unable to get private key from '%s'
unable to get '%s' section
unable to load certificate
Unable to load config info from %s
unable to load CRL
unable to load DH parameters
unable to load DSA parameter file
unable to load DSA parameters
unable to load elliptic curve parameters
unable to load Key
unable to load Netscape SPKAC structure
unable to load number from %s
unable to load PKCS7 object
unable to load 'random state'
unable to load %s
unable to load SSL_SESSION
unable to load X509 request
unable to open '%s'
unable to read key from '%s'
unable to rename %s to %s
Unable to set SRP username
Unable to set TLS servername extension.
unable to write certificate
unable to write CRL
unable to write DH parameters
unable to write DSA parameters
unable to write elliptic curve parameters
unable to write key
unable to write pkcs7 object
unable to write private key
unable to write 'random state'
unable to write SSL_SESSION
unable to write X509
unable to write X509 certificate
unable to write X509 request
[ unavailable ]
-uncompress
uncompressed
                                    uncompressed (default)
                                  uncompressed (default)
undefined
<undefined>
 unexpected_message
Unexpected retry condition
unique_subject
unique_subject = %s
UNIVERSALSTRING:'
Unknown algorithm %.*s
Unknown broken type
 unknown_ca
Unknown cipher %s
Unknown CRL reason %s
unknown curve name (%s)
 Unknown (%d)
Unknown digest algorithm %s
Unknown digest %s
unknown option '%s'
unknown option %s
Unknown option '%s'
Unknown PBE algorithm %s
 unknown_psk_identity
Unknown type '%s' from child %d
 unrecognized_name
unrecognized purpose
unsigned char XXX_certificate[%d]={
unsigned char XXX_public_key[%d]={
unsigned char XXX_subject_name[%d]={
unspecified
 unsupported_certificate
 UNSUPPORTED-CERTIFICATE-TYPE-ERROR
 unsupported_extension
<Unsupported tag %d>
-untrusted
untrusted certificates
-updatedb
 -updatedb       - Updates db for expired certificates
Updating %s ...
-url URL           OCSP responder URL
usage: ca args
usage: ciphers args
Usage cms [options] cert.pem ...
usage: crl args
usage: engine opts [engine ...]
usage: errstr [-stats] <errno> ...
usage: gendh [args] [numbits]
usage: gendsa [args] dsaparam-file
Usage: genpkey [options]
usage: genrsa [args] [numbits]
Usage nseq [options]
Usage ocsp [options]
Usage: passwd [options] [passwords]
Usage: pkcs12 [options]
Usage pkcs8 [options]
Usage pkey [options]
Usage pkeyparam [options]
Usage: pkeyutl [options]
Usage: rand [options] num
Usage: rsautl [options]
usage: s_client args
usage: sess_id args
Usage smime [options] cert.pem ...
usage: srp [args] [user] 
usage: s_server [args ...]
usage: s_time <args>
usage: verify [-verbose] [-CApath path] [-CAfile file] [-purpose purpose] [-crl_check]
usage:version -[avbofpd]
usage: x509 args
use -clrext instead of -crlext
-use_deltas
                 Use "openssl ecparam -list_curves" for all names
use_quote
 user_canceled
User entry
User errors %d.
-userinfo
 -userinfo arg   additional info to be set for user
User interface error
user mapping
User procession done.
   user="%s"
 user="%s"
user "%s" already updated, operation ignored.
user "%s" does not exist, ignored. t
user "%s" does not exist, operation ignored.
user "%s" does not exist, operation ignored. t
User %s doesn't exist
user "%s" reactivated.
user "%s" revoked. t
-use_srtp
use SRTP
 -use_srtp profiles - Offer SRTP key management with a colon-separated profile list
Using configuration from %s
using curve name prime192v1 instead of secp192r1
using curve name prime256v1 instead of secp256r1
Using default temp DH parameters
Using default temp ECDH parameters
 -utf8           - input characters are UTF8 (default ASCII)
 -utf8          input characters are UTF8 (default ASCII)
%u.%u.%u.%u
-v1 obj         use PKCS#5 v1.5 and cipher "alg"
-v2 alg         use PKCS#5 v2.0 and cipher "alg"
-VAfile file       validator certificates file
Validating
validator certificate
-validity_period
-validity_period n maximum validity discrepancy in seconds
variable lookup failed for %s::%s
-verbose
 -verbose        - Talk a lot while doing things
 -verbose        Talk alot while doing things
Verification: 
Verification failure
Verification successful
Verified OK
 verifier ="%s"
 -verify arg   - turn on peer certificate verification
-verify arg   - turn on peer certificate verification, arg == depth
 -Verify arg   - turn on peer certificate verification, must have a cert.
verify_callback
verify_cookie_callback
-verify_depth
verify_depth
verify depth is %d
verify depth is %d, must return a certificate
verify_err
verify_error
verify error:num=%d:%s
verify error:%s
-verify file    verify a signature using public key in file
Verifying password for user "%s"
-verify_other
-verify_other file additional certificates to search for signer
-verify_receipt
-verifyrecover
-verifyrecover  verify with public key, recover original data
-verify_retcode
verify return:%d
-verify_return_error
verify_return_error
 -verify        verify signature on REQ
-verify        verify signed message
 -verify        verify SPKAC signature
-verify         verify with public key
 -V          - even more verbose
 -v          - verbose mode, a textual listing of the SSL/TLS ciphers in OpenSSL
 -v[v[v[v]]] - verbose mode, for each engine, list its 'control commands'
               -vvvv will also show internal input flags
               -vvv will also add the input flags for each command
               -vv will additionally display each command's description
Waiting for OCSP client connections...
, warning
Warning: broken key encoding: 
WARNING: can't open config file: %s
Warning: could not open file %s for reading, using serial number: 1
warning: id_prefix is too long if you use SSLv2
warning: id_prefix is too long, only one new session will be possible
WARNING: no nonce in response
warning, not much extra random data, consider using the -rand option
WARNING: Status times invalid.
Warning: truncating password to %u characters
Warning unsupported bag type: 
Was revoked on:%s
weird input :-(
We need a private key to sign with
What you are about to enter is what is called a Distinguished Name or a DN.
where options are
where options  are
where options may be
whirlpool
with much random data.
                 with the assumption it contains a complete HTTP response.
Write BLOCK
write:errno=%d
Write out database with %d new entries
write R BLOCK
write to %p [%p] (%lu bytes => %ld (0x%lX))
write X BLOCK
writing DSA key
writing EC key
writing new certificates
writing new private key to '%s'
writing new private key to stdout
writing RSA key
writing %s
Wrong Algorithm type
-www option too long
-www page     - Retrieve 'page' from the site
 -WWW          - Respond to a 'GET /<path> HTTP/1.0' with file ./<path>
 -www          - Respond to a 'GET /' with a status page
X509_add1_reject_object
X509_add1_trust_object
X509_add_ext
X509_ALGOR_free
X509_ALGOR_new
X509_alias_get0
X509_alias_set1
X509_check_private_key
X509_check_purpose
X509_cmp_time
X509_CRL_add0_revoked
X509_CRL_add1_ext_i2d
X509_CRL_digest
X509_CRL_free
X509_CRL_get_ext_d2i
X509_CRL_new
X509_CRL_print
X509_CRL_set_issuer_name
X509_CRL_set_lastUpdate
X509_CRL_set_nextUpdate
X509_CRL_set_version
X509_CRL_sign_ctx
X509_CRL_sort
X509_CRL_verify
X509_delete_ext
X509_digest
X509_email_free
X509_EXTENSION_free
X509_EXTENSION_get_object
x509_extensions
X509_get0_pubkey_bitstr
X509_get1_email
X509_get1_ocsp
X509_get_default_cert_area
X509_get_ext
X509_get_ext_by_OBJ
X509_get_ext_count
X509_get_issuer_name
X509_get_pubkey
X509_get_serialNumber
X509_get_subject_name
X509_gmtime_adj
X509_INFO_free
X509_issuer_name_hash
X509_issuer_name_hash_old
X509_keyid_set1
X509_LOOKUP_ctrl
X509_LOOKUP_file
X509_LOOKUP_hash_dir
x509_main
X509_NAME_add_entry
X509_NAME_add_entry_by_NID
X509_NAME_add_entry_by_txt
X509_NAME_delete_entry
X509_NAME_dup
X509_NAME_entry_count
X509_NAME_ENTRY_free
X509_NAME_ENTRY_get_data
X509_NAME_ENTRY_get_object
X509_NAME_free
X509_NAME_get_entry
X509_NAME_get_index_by_NID
X509_NAME_get_index_by_OBJ
X509_NAME_hash
X509_NAME_new
X509_NAME_oneline
X509_NAME_print_ex
X509_NAME_print_ex_fp
X509_new
X509_OBJECT_free_contents
X509_ocspid_print
 -x509          output a x509 structure instead of a cert. req.
X509_POLICY_NODE_print
X509_policy_tree_get0_policies
X509_policy_tree_get0_user_policies
X509_print
X509_print_ex
X509_PURPOSE_get0
X509_PURPOSE_get0_name
X509_PURPOSE_get0_sname
X509_PURPOSE_get_by_sname
X509_PURPOSE_get_count
X509_PURPOSE_get_id
X509_reject_clear
X509_REQ_add1_attr_by_NID
X509_REQ_add1_attr_by_txt
X509_REQ_check_private_key
X509_REQ_free
X509_REQ_get_extensions
X509_REQ_get_pubkey
X509_REQ_new
X509_REQ_print
X509_REQ_print_ex
X509_REQ_set_pubkey
X509_REQ_set_subject_name
X509_REQ_set_version
X509_REQ_sign_ctx
X509_REQ_verify
X509_REVOKED_add1_ext_i2d
X509_REVOKED_new
X509_REVOKED_set_revocationDate
X509_REVOKED_set_serialNumber
X509_set_issuer_name
X509_set_pubkey
X509_set_serialNumber
X509_set_subject_name
X509_set_version
X509_SIG_free
X509_sign
X509_sign_ctx
X509_STORE_add_lookup
X509_STORE_CTX_cleanup
X509_STORE_CTX_free
X509_STORE_CTX_get0_parent_ctx
X509_STORE_CTX_get0_policy_tree
X509_STORE_CTX_get1_chain
X509_STORE_CTX_get_current_cert
X509_STORE_CTX_get_error
X509_STORE_CTX_get_error_depth
X509_STORE_CTX_get_explicit_policy
X509_STORE_CTX_init
X509_STORE_CTX_new
X509_STORE_CTX_set0_crls
X509_STORE_CTX_set_cert
X509_STORE_CTX_set_flags
X509_STORE_CTX_trusted_stack
X509_STORE_free
X509_STORE_get_by_subject
X509_STORE_load_locations
X509_STORE_new
X509_STORE_set1_param
X509_STORE_set_default_paths
X509_STORE_set_flags
X509_STORE_set_verify_cb
-x509_strict
X509_subject_name_hash
X509_subject_name_hash_old
X509_time_adj_ex
-x509toreq
 -x509toreq      - output a certification request object
X509_to_X509_REQ
X509_trust_clear
X509V3_add_value
X509V3_conf_free
X509V3_EXT_add_nconf
X509V3_EXT_CRL_add_nconf
X509V3_EXT_REQ_add_nconf
X509V3_parse_list
X509V3_set_ctx
X509V3_set_nconf
X509_verify
X509_verify_cert
X509_verify_cert_error_string
X509_VERIFY_PARAM_add0_policy
X509_VERIFY_PARAM_free
X509_VERIFY_PARAM_new
X509_VERIFY_PARAM_set_depth
X509_VERIFY_PARAM_set_flags
X509_VERIFY_PARAM_set_purpose
X509_VERIFY_PARAM_set_time
Yes (WARNING code=%d)
You are about to be asked to enter information that will be incorporated
You have chosen to measure elapsed time instead of user CPU time.
you need to specify a private key
zDlocalhost:4433
zero length password
