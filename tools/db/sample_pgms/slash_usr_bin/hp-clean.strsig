# along with this program; if not, write to the Free Software
                app.exec_()
            app = QApplication(sys.argv)
# (at your option) any later version.
# Author: Don Welch
                    break
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# (c) Copyright 2003-2008 Hewlett-Packard Development Company, L.P.
                clean_type = d.mq.get('clean-type', CLEAN_TYPE_NONE)
                                        CleanUI1, CleanUI2, CleanUI3,
            cleanup_spinner()
# -*- coding: utf-8 -*-
                    continue
                d.close()
            d.close()
            d = device.Device(device_uri, printer_name)
def CleanUI1():
def CleanUI2():
def CleanUI3():
def CleanUIx(level):
    device_uri = mod.getDeviceUri(device_uri, printer_name,
            dlg = CleanDialog(None, device_uri)
            dlg.show()
__doc__ = "Cartridge cleaning utility for HPLIP supported inkjet printers."
                    d.open()
                d.open()
                    elif clean_type == CLEAN_TYPE_LIDIL:
                    elif clean_type == CLEAN_TYPE_PCL:
                    elif clean_type == CLEAN_TYPE_PCL_WITH_PRINTOUT:
                    else:
            else:
    else:
                except Error:
            except Error:
                except Error, e:
        except Error, e:
        except ImportError:
            except KeyboardInterrupt:
except KeyboardInterrupt:
       filter={'clean-type': (operator.ne, CLEAN_TYPE_NONE)})
        #finally:
        finally:
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
from base.g import *
from base import device, utils, maint, tui, module
from prnt import cups
            from PyQt4.QtGui import QApplication
            from ui4.cleandialog import CleanDialog
    global d
# GNU General Public License for more details.
                                'hp-pqdiag'])
        if 1:
                    if clean_type == CLEAN_TYPE_UNSUPPORTED:
                if d.isIdleAndNoError():
            if d.isIdleAndNoError():
    if mode == GUI_MODE:
    if mode == INTERACTIVE_MODE:
        if not utils.canEnterGUIMode4():
    if ok:
                if timeout > 45:
import getopt
import operator
import os
import re
import sys
import time
                        (INTERACTIVE_MODE, GUI_MODE), (UI_TOOLKIT_QT4,))
# it under the terms of the GNU General Public License as published by
                log.debug("Clean type=%d" % clean_type)
                log.debug("Starting GUI loop...")
                    log.error("An error occured: %s" % e[0])
                        log.error("Cleaning not needed or supported on this device.")
                        log.error("Cleaning through HPLIP not supported for this printer. Please use the printer's front panel to perform cartridge cleaning.")
                log.error("Device is busy or in an error state. Please check device and try again.")
            log.error("%s -u/--gui requires Qt4 GUI support. Entering interactive mode." % __mod__)
                    log.error("Timeout waiting for print to finish.")
            log.error("Unable to load Qt4 support. Is it installed?")
            log.error("Unable to open device: %s" % e.msg)
                log.error("Unable to print to printer. Please check device and try again.")
    log.error("User exit")
log.info("")
log.info("Done.")
    log.info("\nLevel 1 cleaning complete. If the printout looks OK, enter 'q' to quit or <enter> to do a level 2 cleaning.")
    log.info("\nLevel 2 cleaning complete. If the printout looks OK, enter 'q' to quit or <enter> to do a level 3 cleaning.")
    log.info("\nLevel 3 cleaning complete. Check this page to see if the problem was fixed. If the test page was not printed OK, replace the print cartridge(s).")
    log.note("Please wait for page to complete printing before continuing.")
    log.warn("Level 3 uses a lot of ink.")
                        maint.cleaning(d, clean_type, maint.cleanType1, maint.primeType1,
                        maint.cleaning(d, clean_type, maint.cleanType2, maint.primeType2,
                                        maint.wipeAndSpitType1, tui.load_paper_prompt,
                                        maint.wipeAndSpitType2, tui.load_paper_prompt,
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
            mode = INTERACTIVE_MODE
__mod__ = 'hp-clean'
    mod = module.Module(__mod__, __title__, __version__, __doc__, None,
        mod.parseStdOpts()
    mod.setUsage(module.USAGE_FLAG_DEVICE_ARGS,
                                        None)
    ok = tui.continue_prompt("Ready to perform level %d cleaning (Note: Wait for previous print to finish)." % level)
    opts, device_uri, printer_name, mode, ui_toolkit, lang = \
    return CleanUIx(2)
    return CleanUIx(3)
    return ok
                 see_also_list=['hp-align', 'hp-clean', 'hp-linefeedcal',
#Std Lib
                    sys.exit(0)
                sys.exit(0)
            sys.exit(0)
                sys.exit(1)
            sys.exit(1)
# the Free Software Foundation; either version 2 of the License, or
# This program is distributed in the hope that it will be useful,
# This program is free software; you can redistribute it and/or modify
        timeout = 0
                timeout += 1
                    timeout += 2
                time.sleep(1)
                    time.sleep(2)
        time.sleep(5)
__title__ = 'Printer Cartridge Cleaning Utility'
                try:
            try:
        #try:
        try:
                update_spinner()
#!/usr/bin/python
__version__ = '4.0'
            while True:
# You should have received a copy of the GNU General Public License
