        ;;
        #
      ;;
      *)
All other options are passed to the mysqld program
# All unrecognized arguments to this script are passed to mysqld.
# along with this program; if not, write to the Free Software
                       and directories created by mysqld will be owned by this
          args="$args $arg"
          #args="$args "`echo "$arg" | sed -e 's,\([^a-zA-Z0-9_.-]\),\\\\\1,g'`
  args="$args --user=$user"
        # as 'user' (crucial e.g. if log-bin=/some_other_path/
basedir=""
  --basedir=$basedir --datadir=$ldata --log-warnings=0 --loose-skip-innodb \
      --basedir=*) basedir=`parse_arg "$arg"` ;;
  basedir="$builddir"
#   --basedir=path pointing to installed binary location
  --basedir=path       The path to the MySQL installation directory.
  basedir="/usr"
  bindir="$basedir/bin"
  bindir="$basedir/client"
  bindir="/usr/bin"
#!/bin/sh
      break
builddir=""
      --builddir=*) builddir=`parse_arg "$arg"` ;;
  --builddir=path      If using --srcdir with out-of-directory builds, you
    builddir="$srcdir"
# but WITHOUT ANY WARRANTY; without even the implied warranty of
cannot_find_file()
    cannot_find_file errmsg.sys $basedir/share/english $basedir/share/mysql/english
    cannot_find_file "$f"
    cannot_find_file fill_help_tables.sql $basedir/share $basedir/share/mysql
    cannot_find_file "$langdir/errmsg.sys"
    cannot_find_file my_print_defaults $basedir/bin $basedir/extra
  cannot_find_file "$mysqld"
    cannot_find_file mysqld $basedir/libexec $basedir/sbin $basedir/bin
  cannot_find_file "$print_defaults"
  case "$1" in
    case "$arg" in
  cat <<EOF
# Check if hostname is valid
    chmod 700 $dir
    chown $user $dir
# Configure mysqld command line
# Configure paths to support files
# Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.
# Create database directories
create_system_tables="$pkgdatadir/mysql_system_tables.sql"
# Create the system and help tables by passing them to "mysqld --bootstrap"
cross_bootstrap=0
        cross_bootstrap=1 ;;
  --cross-bootstrap    For internal use.  Used when building the MySQL system
      --cross-bootstrap|--windows)
        # --datadir on the host can be copied to the target system.
  --datadir=path       The path to the MySQL data directory.
defaults=""
        defaults="$arg" ;;
  --defaults-extra-file=name
  --defaults-file=name Only read default options from the given file name.
  --default-storage-engine=myisam \
    --dir)
                       directories that it creates will be owned by you.
                       directory where built files reside.
    done
# Don't output verbose information if running inside bootstrap or using
                       during the MySQL installation process.
    echo
    echo "$1"
  echo "$1" | sed -e 's/^[^=]*=//'
  echo "Alternatively you can run:"
  echo "and use the command line tool $bindir/mysql"
        echo "$basedir/$dir"
        echo "$basedir/$dir/$file"
  echo "$bindir/mysqladmin -u root -h $hostname password 'new-password'"
  echo "$bindir/mysqladmin -u root password 'new-password'"
  echo "$bindir/mysql_secure_installation"
      echo "Cannot change ownership of the database directories to the '$user'"
    echo "cd $basedir ; $bindir/mysqld_safe &"
    echo "cd $basedir/mysql-test ; perl mysql-test-run.pl"
  echo "copy the software into the correct location ready for operation."
  echo "databases and anonymous user created by default.  This is"
  echo "describes problems on your OS.  Another information source are the"
      echo "    $dir"
  echo "ERROR: Specify either --basedir or --srcdir, not both."
      echo "$extra_bindir/resolveip"
  echo "FATAL ERROR: Could not find $1"
  echo "gives you a log in $ldata that may be helpful."
      echo "hostname."
  echo "If you are using a binary release, you must either be at the top"
  echo "If you compiled from source, you need to run 'make install' to"
      echo "If you want to solve this at a later stage, restart this script"
  echo "Installation of system tables failed!  Examine the logs in"
  echo "$ldata for more information."
  echo "level of the extracted archive, or pass the --basedir option"
  echo "MySQL email archives available at http://lists.mysql.com/."
  echo "    mysql> show tables"
      echo "Neither host '$hostname' nor 'localhost' could be looked up with"
    echo "normally with the exception that host name resolving will not work."
  echo "Please check all of the above before mailing us!  And remember, if"
      echo "Please configure the 'hostname' command to return a correct"
  echo "Please consult the MySQL manual section"
  echo "PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !"
  echo "Please report any problems with the $scriptdir/mysqlbug script!"
  echo "pointing to that location."
  echo "'Problems running mysql_install_db', and the manual section that"
  echo "See the manual for more instructions."
  echo "    shell> $bindir/mysql -u root mysql"
  echo "    shell> $mysqld --skip-grant &"
  echo "strongly recommended for production servers."
    echo "The following directories were searched:"
  echo "The \"HELP\" command might not work properly."
    echo "This means that you should use IP addresses instead of hostnames"
    echo "This probably means that your libc libraries are not 100 % compatible"
  echo "to connect to the mysql database and look at the grant tables:"
  echo "To do so, start the server, then issue the following commands:"
  echo "Try 'mysqld --help' if you have problems with paths.  Using --log"
      echo "user.  Check that you have the necessary permissions and try again."
  echo "WARNING: HELP FILES ARE NOT COMPLETELY INSTALLED!"
    echo "WARNING: The host '$hostname' could not be looked up with resolveip."
    echo "when specifying MySQL privileges !"
  echo "which will also give you the option of removing the test"
      echo "with the --force option"
    echo "with this binary MySQL version. The MySQL daemon, mysqld, should work"
    echo "You can start the MySQL daemon with:"
    echo "You can test the MySQL daemon with mysql-test-run.pl"
  echo "You can try to start the mysqld daemon with:"
  echo "you do mail us, you MUST use the $scriptdir/mysqlbug script!"
elif test -n "$basedir"
      else
    esac
      exit 1
    exit 1
  exit 1
  extra_bindir="$basedir/extra"
  extra_bindir="$bindir"
      fi
        fi
  file=$1; shift
fill_help_tables="$pkgdatadir/fill_help_tables.sql"
fill_system_tables="$pkgdatadir/mysql_system_tables_data.sql"
  filter_cmd_line="cat"
  filter_cmd_line="sed -e '/@current_hostname/d'"
find_in_basedir()
  for arg
  --force              Causes mysql_install_db to run even if DNS does not
      --force) force=1 ;;
    for dir in "$@"
  for dir in "$@"
for dir in $ldata $ldata/mysql $ldata/test
for f in $fill_help_tables $create_system_tables $fill_system_tables
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# GNU General Public License for more details.
                       grant table entries.  This option can be useful if
  # handle them here.  So, we collect unrecognized options (passed on
  --help               Display this help and exit.                     
      --help) usage ;;
  hostname=`echo "$resolved" | awk '/ /{print $6}'`
hostname=`hostname`
# host should be added to the system tables.  So we filter out any
if { echo "use mysql;"; cat $create_system_tables $fill_system_tables; } | eval "$filter_cmd_line" | $mysqld_install_cmd_line > /dev/null
if { echo "use mysql;"; cat $fill_help_tables; } | $mysqld_install_cmd_line > /dev/null
  if test "$1" = PICK-ARGS-FROM-ARGV
if test "$cross_bootstrap" -eq 0 -a "$in_rpm" -eq 0 -a "$force" -eq 0
if test "$cross_bootstrap" -eq 0 && test -z "$srcdir"
if test $cross_bootstrap -eq 1
  if test ! -d $dir
    if test -f "$basedir/$dir/$file"
  if test ! -f "$f"
  if test ! -f "$langdir/errmsg.sys"
  if test "$in_rpm" -eq 0
  if test "$in_rpm" -eq 0 -a "$cross_bootstrap" -eq 0
if test "$ip_only" -eq 1
    if test $? -ne 0
  if test $? -ne 0
  if test $# -ne 0
if test -n "$langdir"
        if test -n "$pick_args"
      if test -n "$return_dir"
if test -n "$srcdir"
if test -n "$srcdir" && test -n "$basedir"
  if test -n "$user"
if test -n "$user"
if test ! -x "$mysqld"
if test ! -x "$print_defaults"
  if test -z "$builddir"
  if test -z "$langdir"
  if test -z "$mysqld"
  if test -z "$pkgdatadir"
  if test -z "$print_defaults"
in_rpm=0
# in the my.cfg file, then re-run to merge with command line arguments.
ip_only=0
# it under the terms of the GNU General Public License as published by
langdir=""
  langdir=`find_in_basedir --dir errmsg.sys share/english share/mysql/english`
  langdir="$srcdir/sql/share/english"
      --ldata=*|--datadir=*) ldata=`parse_arg "$arg"` ;;
  --ldata=path         The path to the MySQL data directory. Same as --datadir.
ldata="/var/lib/mysql"
# lines which contain the current host name.
  --loose-skip-ndbcluster $args --max_allowed_packet=8M \
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    mkdir -p $dir
# my_print_defaults so that we can execute it first, then later re-parse
  mysqld="$basedir/sql/mysqld"
mysqld_bootstrap="${MYSQLD_BOOTSTRAP-$mysqld}"
  mysqld=`find_in_basedir mysqld libexec sbin bin`
mysqld_install_cmd_line="$mysqld_bootstrap $defaults $mysqld_opt --bootstrap \
mysqld_opt=""
  mysqld_opt="--lc-messages-dir=$langdir/.."
                       mysqld runs using your current login name and files and
  mysqld="/usr/sbin/mysqld"
                       MySQL yet and just want to create the system tables.
  --net_buffer_length=16K"
      --no-defaults|--defaults-file=*|--defaults-extra-file=*)
  --no-defaults        Don't read default options from any option file.
        # Note that the user will be passed to mysqld so that it runs
# Now we can get arguments from the groups [mysqld] and [mysql_install_db]
# Ok, let's go.  We first need to parse arguments which are required by
# or default to compiled-in locations.
parse_arg()
parse_arguments()
parse_arguments PICK-ARGS-FROM-ARGV "$@"
parse_arguments `$print_defaults $defaults mysqld mysql_install_db`
  pick_args=
    pick_args=1
  pkgdatadir=`find_in_basedir --dir fill_help_tables.sql share share/mysql`
  pkgdatadir="$srcdir/scripts"
  pkgdatadir="/usr/share/mysql"
  print_defaults="$builddir/extra/my_print_defaults"
  print_defaults=`find_in_basedir my_print_defaults bin extra`
  print_defaults="/usr/bin/my_print_defaults"
          # quoting of every single arg ($basedir, $ldata, etc.)
                       Read this file after the global files are read.
# release or installed source directory and return the path.
  resolved=`$extra_bindir/resolveip $hostname 2>&1`
    resolved=`$extra_bindir/resolveip localhost 2>&1`
      return_dir=1; shift
  --rpm                For internal use.  This option is used by RPM files
      --rpm) in_rpm=1 ;;
  scriptdir="$basedir/scripts"
  scriptdir="$srcdir/scripts"
  scriptdir="/usr/bin"
  s_echo
s_echo()
s_echo "Filling help tables..."
s_echo "Installing MySQL system tables..."
  s_echo "OK"
  s_echo "support-files/mysql.server to the right place for your system"
  s_echo "To start mysqld at boot time you have to copy"
# Set up paths to SQL scripts required for bootstrap
    shift
      --skip-name-resolve) ip_only=1 ;;
  --skip-name-resolve  Use IP addresses rather than hostnames when creating
          # so the arg gets passed exactly to the server.
                       source tree, useful for if you don't want to install
srcdir=""
# --srcdir for testing.  In such cases, there's no end user looking at
#   --srcdir=path pointing to compiled source tree
  --srcdir=path        The path to the MySQL source directory.  This option
      --srcdir=*)  srcdir=`parse_arg "$arg"` ;;
                       tables on a different host than the target.
  # the command line) into the args variable.
# the command line to add any extra bits that we need.
# the Free Software Foundation; version 2 of the License.
        # the install package.  See top-level 'dist-hook' make target.
        # The most common use for this feature is in the Windows installer
    then
      then
        then
# the screen.
        # the target. The platform-independent files that are created in
# This program is distributed in the hope that it will be useful,
# This program is free software; you can redistribute it and/or modify
# This scripts creates the MySQL Server system tables
          # This sed command makes sure that any special chars are quoted,
# Try to determine the hostname
# Try to find a specific file within --basedir which can either be a binary
Usage: $0 [OPTIONS]
        # Used when building the MySQL system tables on a different host than
                       use hostnames will use IP addresses.
      --user=*)
        user=`parse_arg "$arg"` ;;
  --user=user_name     The login username to use for running mysqld.  Files
                       user.  You must be root to use this option.  By default
                       uses the compiled binaries and support files within the
      --verbose) verbose=1 ;; # Obsolete
# We can now find my_print_defaults.  This script supports:
  # We only need to pass arguments through to the server if we don't
# When doing a "cross bootstrap" install, no reference to the current
        # where a chown of datadir won't help)
        # which will take the files from datadir and include them as part of
                       will need to set this to the location of the build
        # --windows is a deprecated alias
                       work.  In that case, grant table entries that normally
          # XXX: This is broken; true fix requires using eval and proper
                       your DNS does not work.
# You should have received a copy of the GNU General Public License
