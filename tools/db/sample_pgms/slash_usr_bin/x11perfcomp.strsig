    	 				   }'
	    } \
# $2 to force x11perfcomp to use the labels stored in file $2.  (You can run
allfiles=
	allfiles="$allfiles$tmp/rates/$n "
	 awk '$2 == "reps" || $2 == "trep" { \
		awk '$2 == "reps" || $2 == "trep" { print $0; next; }' $file |
 		awk 'NR > 1 	{ printf ("%s %s\n", prev, $0); } \
	base=`basename $i`
#! /bin/sh
case $1 in
case x$ratio in
# Collects multiple outputs of x11perf.  Just feed it a list of files, each
# compare the results.  But note that x11perffill requires the labels file
# containing the output from an x11perf run, and this shell will extract the
# descriptions, so you can run x11perf on a subset of the test and then
	done | tsort 2>/dev/null | sed 's/_/ /g' > $tmp/labels
	 echo '--------'
	(echo "     $n  "
	echo "$n: $i"
(echo Operation; echo '---------'; cat $tmp/labels) |
export PATH
# files given.
	 fillblnk $tmp/$n.avg $tmp/labels |
*)	for file in "$@"; do
# Get either the provided label file, or construct one from all the
# Get lines with average numbers, fill in any tests that may be missing
# Go through all files, and create a corresponding rate file for each
# Include relative rates in output?  Report only relative rates?
# is big enough to compare 4 different servers.
	 ' $i > $tmp/$n.avg
# Joel McCormack, DEC Western Research Lab <joel@decwrl.dec.com>
-l)	cp $2 $tmp/labels
		line=""; \
		line = $0; \
# Mark Moraes, University of Toronto <moraes@csri.toronto.edu>
mkdir $tmp || exit 1
mkdir $tmp/rates
	n=`expr $n + 1`
		next; \
	    NF == 0 && line != "" { \
	 					n = substr($6,2,length($6)-7); \
# object/second information and show it in tabular form.  An 80-column line
paste $allfiles - | sed 's/	/  /g' | $ratio
PATH=/usr/lib/X11/x11perfcomp:.:$PATH
				{ prev = $0; }'
						printf "%8s\n", n; \
		print line; \
# (quite possible on non-DEC servers :), you can use -l <filename> as $1 and
	ratio=1
	ratio=2
	ratio=/bin/cat
	ratio="perfboth $n"
	ratio="perfratio $n"
rm -rf $tmp
 		sed 's/^.*: //' |
	 sed 's/( *\([0-9]*\)/(\1/'   |
 		sed 's/ /_/g' |
	shift; shift
# situation in which none of the servers completes the desired tests 
# then extract the rate field
# This script normally uses the results from $1 to extract the test label
	) > $tmp/rates/$n
tmp=${TMPDIR-/tmp}/rates.$$
# to be a superset of the x11perf results file.  If you run into an ugly
trap "rm -rf $tmp" 0 1 2 15
# x11perf with the -labels option to generate such a file.)
# $XFree86$
