    agent => $opt{agent} || "lwp-dump/$VERSION ",
    'agent=s',
   --agent <str>
Also dump the request sent.
appended.
@ARGV && usage();
binary content.  The escapes syntax used is the same as for Perl's double
B<lwp-dump> in order to show the headers exactly as the server provided them.
B<lwp-dump> [ I<options> ] I<URL>
By default B<lwp-dump> will not try to initialize headers by looking at the
    die <<"EOT";
dump the response object to STDOUT.  This will display the headers returned and
    env_proxy => 1,
eval 'exec /usr/bin/perl -w -S $0 ${1+"$@"}'
GetOptions(\my %opt,
=head1 DESCRIPTION
=head1 NAME
=head1 SEE ALSO
=head1 SYNOPSIS
head section of HTML documents.  This option enables this.  This corresponds to
How much of the content to show.  The default is 512.  Set this
    if 0; # not running under some shell
if ($opt{request}) {
If the content is longer then the string is chopped at the
=item B<--agent> I<str>
=item B<--keep-client-headers>
=item B<--max-length> I<n>
=item B<--method> I<str>
=item B<--parse-head>
=item B<--request>
its place.
    keep_alive => 1,
    'keep-client-headers',
   --keep-client-headers
limit and the string "...\n(### more bytes not shown)"
L<lwp-request>, L<LWP>, L<HTTP::Message/"dump">
L<LWP::UserAgent/"parse_head">.
lwp-dump - See what headers and content is returned for a URL
LWP internally generate various C<Client-*> headers that are stripped by
    'max-length=n',
   --max-length <n>
    'method=s',
   --method <str>
    (my $progname = $0) =~ s,.*/,,;
my $req = HTTP::Request->new($opt{method} || 'GET' => decode(locale => $url));
my $res = $ua->simple_request($req);
my $ua = LWP::UserAgent->new(
my $url = shift || usage();
my $VERSION = "6.00";
Override the user agent string passed to the server.
    'parse-head',
   --parse-head
    parse_head => $opt{'parse-head'} || 0,
    print "\n";
quoted strings.  If there is no content the string "(no content)" is shown in
Recognized options are:
    'request',
   --request
$res->dump(maxlength => $opt{'max-length'});
        ($res->header("Client-Warning") || "") eq "Internal response";
$res->remove_header(grep /^Client-/, $res->header_field_names)
    $res->request->dump;
sub usage {
The B<lwp-dump> program will get the resource indentified by the URL and then
The following options are recognized:
the initial part of the content, escaped so that it's safe to display even
This option will suppress this.
to 0 for unlimited.
    unless $opt{'keep-client-headers'} or
) || usage();
Usage: $progname [options] <url>
use Encode;
use Encode::Locale;
use Getopt::Long qw(GetOptions);
use LWP::UserAgent ();
use strict;
Use the given method for the request instead of the default "GET".
#!/usr/bin/perl -w
