## -----------------------------------------------------------------------
0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 e8 83 0 69 73 6f 6c 69 6e 75 78 2e 62 69 6e 20 6d 69 73 73 69 6e 67 20
0 66 40 80 c7 2 e2 f2 66 81 3e 40 7c fb c0 78 70 75 9 fa bc ec 7b ea 44 7c
0 7c bf 0 6 b9 0 1 f3 a5 ea 75 6 0 0 52 b4 41 bb aa 55 31 c9 30 f6 f9 cd 13
10 83 e1 1 74 b 66 c7 6 fa 6 b4 42 eb 15 eb 0 5a 51 b4 8 cd 13 83 e1 3f 5b
10 89 e6 66 f7 36 e8 7b c0 e4 6 88 e1 88 c5 92 f6 36 ee 7b 88 c6 8 e1 41 b8
1 2 8a 16 f2 7b cd 13 8d 64 10 66 61 c3 e8 1e 0 4f 70 65 72 61 74 69 6e 67
13 8d 64 10 66 61 c3 e8 1e 0 4f 70 65 72 61 74 69 6e 67 20 73 79 73 74 65
1 6a 10 89 e6 66 f7 36 e8 7b c0 e4 6 88 e1 88 c5 92 f6 36 ee 7b 88 c6 8 e1
17 4 4 74 2 b2 80 52 be 0 7c bf 0 6 b9 0 1 f3 a5 ea 7e 6 0 0 52 b4 41 bb aa
1e 0 4f 70 65 72 61 74 69 6e 67 20 73 79 73 74 65 6d 20 6c 6f 61 64 20 65
20 73 79 73 74 65 6d 20 6c 6f 61 64 20 65 72 72 6f 72 2e d a 5e ac b4 e 8a
2e d a 66 60 66 31 d2 66 3 6 f8 7b 66 13 16 fc 7b 66 52 66 50 6 53 6a 1 6a
33 ed 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90
3c a 75 f1 cd 18 f4 eb fd 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
3e 62 4 b3 7 cd 10 3c a 75 f1 cd 18 f4 eb fd 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
40 7c fb c0 78 70 75 9 fa bc ec 7b ea 44 7c 0 0 e8 83 0 69 73 6f 6c 69 6e
41 b8 1 2 8a 16 f2 7b cd 13 8d 64 10 66 61 c3 e8 1e 0 4f 70 65 72 61 74 69
50 bb 0 7c b9 4 0 66 a1 b0 7 e8 44 0 f 82 80 0 66 40 80 c7 2 e2 f2 66 81 3e
51 b4 8 cd 13 83 e1 3f 5b 51 f b6 c6 40 50 f7 e1 53 52 50 bb 0 7c b9 4 0 66
51 f b6 c6 40 50 f7 e1 53 52 50 bb 0 7c b9 4 0 66 a1 b0 7 e8 44 0 f 82 80
52 be 0 7c bf 0 6 b9 0 1 f3 a5 ea 77 6 0 0 52 b4 41 bb aa 55 31 c9 30 f6 f9
53 52 50 bb 0 7c b9 4 0 66 a1 b0 7 e8 44 0 f 82 80 0 66 40 80 c7 2 e2 f2 66
55 31 c9 30 f6 f9 cd 13 72 16 81 fb 55 aa 75 10 83 e1 1 74 b 66 c7 6 24 7
64 10 66 61 c3 e8 1e 0 4f 70 65 72 61 74 69 6e 67 20 73 79 73 74 65 6d 20
66 3 6 f8 7b 66 13 16 fc 7b 66 52 66 50 6 53 6a 1 6a 10 89 e6 66 f7 36 e8
66 51 6 57 8e dd 8e c5 52 be 0 7c bf 0 6 b9 0 1 f3 a5 ea 4b 6 0 0 52 b4 41
66 51 6 57 8e dd 8e c5 b2 80 52 be 0 7c bf 0 6 b9 0 1 f3 a5 ea 4d 6 0 0 52
66 51 6 57 8e dd 8e c5 f6 6 17 4 4 74 2 b2 80 52 be 0 7c bf 0 6 b9 0 1 f3
66 81 3e 40 7c fb c0 78 70 75 9 fa bc ec 7b ea 44 7c 0 0 e8 83 0 69 73 6f
66 8b 4c 34 66 8b 5c 38 eb 4 66 8b 4c 8 66 53 66 51 6 57 8e dd 8e c5 52 be
66 8b 4c 34 66 8b 5c 38 eb 4 66 8b 4c 8 66 53 66 51 6 57 8e dd 8e c5 b2 80
66 8b 4c 34 66 8b 5c 38 eb 4 66 8b 4c 8 66 53 66 51 6 57 8e dd 8e c5 f6 6
69 6e 67 20 73 79 73 74 65 6d 20 6c 6f 61 64 20 65 72 72 6f 72 2e d a 5e ac
69 6e 75 78 2e 62 69 6e 20 6d 69 73 73 69 6e 67 20 6f 72 20 63 6f 72 72 75
6a 1 6a 10 89 e6 66 f7 36 e8 7b c0 e4 6 88 e1 88 c5 92 f6 36 ee 7b 88 c6 8
6c 69 6e 75 78 2e 62 69 6e 20 6d 69 73 73 69 6e 67 20 6f 72 20 63 6f 72 72
6c 6f 61 64 20 65 72 72 6f 72 2e d a 5e ac b4 e 8a 3e 62 4 b3 7 cd 10 3c a
6d 20 6c 6f 61 64 20 65 72 72 6f 72 2e d a 5e ac b4 e 8a 3e 62 4 b3 7 cd 10
6d 69 73 73 69 6e 67 20 6f 72 20 63 6f 72 72 75 70 74 2e d a 66 60 66 31 d2
6e 67 20 73 79 73 74 65 6d 20 6c 6f 61 64 20 65 72 72 6f 72 2e d a 5e ac b4
6f 72 20 63 6f 72 72 75 70 74 2e d a 66 60 66 31 d2 66 3 6 f8 7b 66 13 16
6 f8 7b 66 13 16 fc 7b 66 52 66 50 6 53 6a 1 6a 10 89 e6 66 f7 36 e8 7b c0
70 74 2e d a 66 60 66 31 d2 66 3 6 f8 7b 66 13 16 fc 7b 66 52 66 50 6 53 6a
72 16 81 fb 55 aa 75 10 83 e1 1 74 b 66 c7 6 1b 7 b4 42 eb 15 eb 0 5a 51 b4
72 72 6f 72 2e d a 5e ac b4 e 8a 3e 62 4 b3 7 cd 10 3c a 75 f1 cd 18 f4 eb
73 73 69 6e 67 20 6f 72 20 63 6f 72 72 75 70 74 2e d a 66 60 66 31 d2 66 3
74 26 f6 4 7f 75 21 38 4c 4 74 1c 66 3d 21 47 50 58 75 10 80 7c 4 ed 75 a
75 70 74 2e d a 66 60 66 31 d2 66 3 6 f8 7b 66 13 16 fc 7b 66 52 66 50 6 53
75 78 2e 62 69 6e 20 6d 69 73 73 69 6e 67 20 6f 72 20 63 6f 72 72 75 70 74
75 f1 cd 18 f4 eb fd 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
7b c0 e4 6 88 e1 88 c5 92 f6 36 ee 7b 88 c6 8 e1 41 b8 1 2 8a 16 f2 7b cd
7 e8 44 0 f 82 80 0 66 40 80 c7 2 e2 f2 66 81 3e 40 7c fb c0 78 70 75 9 fa
81 3e 40 7c fb c0 78 70 75 9 fa bc ec 7b ea 44 7c 0 0 e8 83 0 69 73 6f 6c
8 cd 13 83 e1 3f 5b 51 f b6 c6 40 50 f7 e1 53 52 50 bb 0 7c b9 4 0 66 a1 b0
90 90 90 90 90 90 90 33 ed fa 8e d5 bc 0 7c fb fc 66 31 db 66 31 c9 21 f6
90 90 90 90 90 90 90 33 ed fa 8e d5 bc 0 7c fb fc 66 31 db 66 31 c9 66 53
92 f6 36 ee 7b 88 c6 8 e1 41 b8 1 2 8a 16 f2 7b cd 13 8d 64 10 66 61 c3 e8
9 fa bc ec 7b ea 44 7c 0 0 e8 83 0 69 73 6f 6c 69 6e 75 78 2e 62 69 6e 20
a1 b0 7 e8 44 0 f 82 80 0 66 40 80 c7 2 e2 f2 66 81 3e 40 7c fb c0 78 70 75
a5 ea 54 6 0 0 52 b4 41 bb aa 55 31 c9 30 f6 f9 cd 13 72 16 81 fb 55 aa 75
##   (at your option) any later version; incorporated herein by reference.
b4 41 bb aa 55 31 c9 30 f6 f9 cd 13 72 16 81 fb 55 aa 75 10 83 e1 1 74 b 66
b4 42 eb 15 eb 0 5a 51 b4 8 cd 13 83 e1 3f 5b 51 f b6 c6 40 50 f7 e1 53 52
b4 e 8a 3e 62 4 b3 7 cd 10 3c a 75 f1 cd 18 f4 eb fd 0 0 0 0 0 0 0 0 0 0 0
bb aa 55 31 c9 30 f6 f9 cd 13 72 16 81 fb 55 aa 75 10 83 e1 1 74 b 66 c7 6
bc ec 7b ea 44 7c 0 0 e8 83 0 69 73 6f 6c 69 6e 75 78 2e 62 69 6e 20 6d 69
$bcyl   &= 0xff;
$bcyl    = int($offset/($h*$s));
$bhead   = int($offset/$s) % $h;
binmode FILE;
# Boolean options just set other options
%bool_opt = (
##   Boston MA 02111-1307, USA; either version 2 of the License, or
($br_sign, $br_cat_offset) = unpack("a71V", $boot_record);
$bsect  += ($bcyl & 0x300) >> 2;
$bsect   = ($offset % $s) + 1;
c7 6 f3 6 b4 42 eb 15 eb 0 5a 51 b4 8 cd 13 83 e1 3f 5b 51 f b6 c6 40 50 f7
    $cc = 1024;
    $cc = $c;
cd 13 72 16 81 fb 55 aa 75 10 83 e1 1 74 b 66 c7 6 1d 7 b4 42 eb 15 eb 0 5a
	chomp $line;
$c = int($imgsize/$cylsize);
close(FILE);
    close($rfd) if (defined($rfd));
##   Copyright 2002-2008 H. Peter Anvin - All Rights Reserved
##   Copyright 2009 Intel Corporation; author: H. Peter Anvin
$cs = 0;
    $cs += $ve[$i];
    "  -ctrlhd0    Assume disk ID 0 if the Ctrl key is pressed\n",
    'ctrlhd0'  => ['hd0', 2],
$cylsize = $h*$s*512;
($de_boot, $de_media, $de_seg, $de_sys, $de_mbz1, $de_count, 
 $de_lba, $de_mbz2) = unpack("CCvCCvVv", substr($boot_cat, 32, 32));
    ($de_segment != 0 && $de_segment != 0x7c0) || $de_count != 4) {
    die "$0: Bad MBR code\n";
    die "$0: $file: bootloader does not have a isolinux.bin hybrid signature.".
    die "$0: $file: cannot determine length of file\n";
    die "$0: $file: invalid boot catalog\n";
    die "$0: $file: no boot record found\n";
    die "$0: $file: unexpected boot catalog parameters\n";
		die "$0: valid values for the -$o parameter are $l to $h\n";
# Done...
e1 41 b8 1 2 8a 16 f2 7b cd 13 8d 64 10 66 61 c3 e8 1e 0 4f 70 65 72 61 74
e1 53 52 50 bb 0 7c b9 4 0 66 a1 b0 7 e8 44 0 f 82 80 0 66 40 80 c7 2 e2 f2
e4 6 88 e1 88 c5 92 f6 36 ee 7b 88 c6 8 e1 41 b8 1 2 8a 16 f2 7b cd 13 8d
e 8a 3e 62 4 b3 7 cd 10 3c a 75 f1 cd 18 f4 eb fd 0 0 0 0 0 0 0 0 0 0 0 0
$ecyl    = ($cc-1) & 0xff;
		     $ehead, $esect, $ecyl, $offset, $psize);
$ehead   = $h-1;
    } else {
} else {
    } elsif (exists($opt{$o})) {
    'entry'  => 1,
    'entry'  => [1, 4],
    "  -entry      Specify partition entry number (1-4)\n",
$esect   = $s + ((($cc-1) & 0x300) >> 2);
    exit 1;
f1 6 b4 42 eb 15 eb 0 5a 51 b4 8 cd 13 83 e1 3f 5b 51 f b6 c6 40 50 f7 e1
    # Fake geometry (zipdrive-style...)
fc 7b 66 52 66 50 6 53 6a 1 6a 10 89 e6 66 f7 36 e8 7b c0 e4 6 88 e1 88 c5
fd 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
($file) = @ARGV;
# First, actually figure out where mkisofs hid isolinux.bin
    "  -forcehd0   Always assume we are loaded as disk ID 0\n",
    'forcehd0' => ['hd0', 1],
	foreach $byte ( split(/\s+/, $line) ) {
for ($i = 0; $i < 16; $i++) {
for ($i = 0; $i <= $opt{'hd0'}+3*$opt{'partok'}; $i++) {
for ( $i = 1 ; $i <= 4 ; $i++ ) {
$frac = $imgsize % $cylsize;
$fstype  = $opt{'type'};	# Partition type
    # Get a 32-bit random number
# Get the total size of the image
    'h'      => [1, 256],
    'h'      => 64,
    'hd0'    => [0, 2],
    "  -h          Number of default geometry heads\n",
$h = $opt{'h'};
    'id'     => [0, 0xffffffff],
    $id = pack("V", doh($opt{'id'}));
	$id = pack("V", get_random());
    "  -id         Specify MBR ID (default random)\n",
    'id'     => undef,
if ($br_sign ne ("\0CD001\1EL TORITO SPECIFICATION" . ("\0" x 41))) {
if ($c > 1024) {
if ($de_boot != 0x88 || $de_media != 0 ||
    if (defined($bool_opt{$o})) {
if (!defined($file)) {
if (defined($opt{'id'})) {
	if (defined($valid_range{$o})) {
if ($ibsig ne "\xfb\xc0\x78\x70") {
    if ($id eq "\x00\x00\x00\x00") {
if (!$imgsize) {
    if ( $i == $pentry ) {
if ( length($mbr) > 432 ) {
    if (open($rfd, "< /dev/urandom\0") && read($rfd, $rnd, 4) == 4) {
	    if ($opt{$o} < $l || $opt{$o} > $h) {
if ($padding) {
if ($ve[0] != 0x0001 || $ve[15] != 0xaa55 || $cs & 0xffff) {
$imgsize = $imgstat[7];
$imgsize += $padding;
(@imgstat = stat(FILE)) or die "$0: $file: $!\n";
##   it under the terms of the GNU General Public License as published by
	last if ($line eq '*');
	    ($l, $h) = @{$valid_range{$o}};
$mbr .= "\0\0";				# Offset 446: actual partition table
	$mbr .= "\0" x 16;
$mbr .= "\0" x (432 - length($mbr));
	    $mbr .= chr(hex($byte));
    $mbr = get_hex_data();
    # MBR ID
$mbr .= $id;				# Offset 440: MBR ID
	$mbr .= pack("CCCCCCCCVV", 0x80, $bhead, $bsect, $bcyl, $fstype,
$mbr .= pack("VV", $de_lba*4, 0); 	# Offset 432: LBA of isolinux.bin
$mbr .= "\x55\xaa";
    my $line, $byte;
    my $mbr = '';
    my($n) = @_;
    my $rfd, $rnd;
    my $rid;
# no fanciness allowed for the Hybrid mode [XXX: might relax this later]
    'nohd0'    => ['hd0', 0],
    'nopartok' => ['partok', 0],
        "Note that isolinux-debug.bin does not support hybrid booting.\n";
# Now $de_lba should contain the CD sector number for isolinux.bin
    $o = $1;
    'offset' => 0,
    'offset' => [0, 64],
$offset  = $opt{'offset'};
    "  -offset     Specify partition offset (default 0)\n",
open(FILE, "+< $file\0") or die "$0: cannot open $file: $!\n";
%opt = (
    "Options:\n",
	$opt{$o} = doh(shift @ARGV);
	$opt{$o} = $v;
	($o, $v) = @{$bool_opt{$o}};
$padding = ($frac > 0) ? $cylsize - $frac : 0;
# Pad the image to a fake cylinder boundary
# Parse a C-style integer (decimal/octal/hex)
    # Partition number
    # Partition offset
    # Partition type
    'partok' => [0, 1],
    "  -partok     Allow booting from within a partition\n";
    'partok'   => ['partok', 1],
$pentry  = $opt{'entry'};	# Partition slot
# Post-process an ISO 9660 image generated with mkisofs/genisoimage
# Preserve id when run again
    print FILE "\0" x $padding;
print FILE $mbr;
# Print partition table
    print STDERR "Not all BIOSes will be able to boot this device.\n";
    print STDERR "Usage: $0 [options] filename.iso\n",
    print STDERR "Warning: more than 1024 cylinders ($c).\n";
# Print the MBR and partition table
$psize   = $c*$h*$s - $offset;
read(FILE, $boot_cat, 2048) == 2048 or die "$0: $file: read error\n";
read(FILE, $boot_record, 2048) == 2048 or die "$0: $file: read error\n";
read(FILE, $ibsig, 4);
    read(FILE, $id, 4);
    return $mbr;
    return ($n =~ /^0/) ? oct $n : $n+0;
    return $rid if (defined($rid));
    return ($$+time()) & 0xffffffff;
	$rid = unpack("V", $rnd);
    's'      => [1, 63],
    's'      => 32,
seek(FILE, 0, SEEK_SET) or die "$0: $file: $!\n";
seek(FILE, 17*2048, SEEK_SET) or die "$0: $file: $!\n";
    seek(FILE, 440, SEEK_SET) or die "$0: $file: $!\n";
seek(FILE, $br_cat_offset*2048, SEEK_SET) or die "$0: $file: $!\n";
seek(FILE, $de_lba*2048+0x40, SEEK_SET) or die "$0: $file: $!\n";
seek(FILE, $imgstat[7], SEEK_SET) or die "$0: $file: $!\n";
    shift @ARGV;
    "  -s          Number of default geometry sectors\n",
$s = $opt{'s'};
sub doh($) {
sub get_hex_data() {
sub get_random() {
sub usage() {
# Target image size: round up to a multiple of $h*$s*512
##   the Free Software Foundation, Inc., 53 Temple Place Ste 330,
##   This program is free software; you can redistribute it and/or modify
    # This sucks but is better than nothing...
# to allow "hybrid booting" as a CD-ROM or as a hard disk.
    'type'   => [0, 255],
    'type'   => 0x17,		# "Windows hidden IFS"
    "  -type       Specify partition type (default 0x17)\n",
    usage();
	usage();
use bytes;
use Fcntl;
# User-specifyable options
#!/usr/bin/perl
%valid_range = (
@ve = unpack("v16", $boot_cat);
# We must have a Validation Entry followed by a Default Entry...
while ($ARGV[0] =~ /^\-(.*)$/) {
    while ( $line = <DATA> ) {
