-[%02x]-
-[%02x-%02x]-
%02x:%02x.%d
## %02x.%02x:%d is a bridge from %02x to %02x-%02x
#%02x [%04x]
	%02x.%d Bridge to %02x-%02x
\-[%04x:%02x]-
+-[%04x:%02x]-
%08x  Data: %04x
%08x (%s-bit, %sprefetchable)
	16-bit legacy interface ports at %04x
16ms to 55ms
17s to 64s
1ms to 10ms
1s to 3.5s
200-400mV(full-swing)/100-200mV(half-swing)
%-20s %s (%s)
260ms to 900ms
4s to 13s
50us to 100us
50us to 50ms
65ms to 210ms
800-1200mV(full-swing)/400-700mV(half-swing)
Access Control Services
<access denied>
	<access denied to the rest>
		ACSCap:	SrcValid%c TransBlk%c ReqRedir%c CmpltRedir%c UpstreamFwd%c EgressCtrl%c DirectTrans%c
		ACSCtl:	SrcValid%c TransBlk%c ReqRedir%c CmpltRedir%c UpstreamFwd%c EgressCtrl%c DirectTrans%c
			Addr:	%02x:%02x.%d  CfgSpace=%08x%08x
			Addr:	%08x%08x
		Address: 
Address Translation Service (ATS)
Advanced Error Reporting
		AERCap:	First Error Pointer: %02x, GenCap%c CGenEn%c ChkCap%c ChkEn%c
		AFCap: TP%c FLR%c
		AFCtrl: FLR%c
		AFStatus: TP%c
AGP3 <?>
AGP version %x.%x
Alternative Routing-ID Interpretation (ARI)
-A <method>	Use the specified PCI access method (see `-A help' for a list)
		ARICap:	MFVC%c ACS%c, Next Function: %d
		ARICtl:	MFVC%c ACS%c, Function Group: %d
 ARIFwd%c
Asset tag
		ATSCap:	Invalidate Queue Depth: %02x
		ATSCtl:	Enable%c, Smallest Translation Unit: %02x
 AttnBtn%c AttnInd%c PwrInd%c
 BAR??%d
 BAR%d Offset=%08x
Basic display modes:
-b		Bus-centric view (addresses and IRQ's as seen by the bus)
	BIST is running
	BIST result: %02x
 BrConfRtry%c
	BridgeCtl: Parity%c SERR%c ISA%c VGA%c MAbort%c >Reset%c 16bInt%c PostWrite%c
	BridgeCtl: Parity%c SERR%c NoISA%c VGA%c MAbort%c >Reset%c FastB2B%c
		Bridge: PM%c B3%c
!!! Bridge points to invalid bus range.
!!! Bridge points to invalid primary bus.
bus master, 
		Bus Number: %02x
	Bus: primary=%02x, secondary=%02x, subordinate=%02x, sec-latency=%d
But it was filtered out.
, Cache Line Size: %d bytes
Cannot open pcimap file %s: %m
	Capabilities: 
	Capabilities: [%03x
		Caps:	LPEVC=%d RefClk=%s PATEntryBits=%d
Caps:	PATOffset=%02x MaxTimeSlots=%d RejSnoopTrans%c
			[%c%c] %s: 
		CEMsk:	RxErr%c BadTLP%c BadDLLP%c Rollover%c Timeout%c NonFatalErr%c
		CESta:	RxErr%c BadTLP%c BadDLLP%c Rollover%c Timeout%c NonFatalErr%c
<chain broken>
<chain looped>
			Changed: MRL%c PresDet%c LinkState%c
checksum %s, %d byte(s) reserved
Class:	%s
			ClockPM%c Surprise%c LLActRep%c BwNot%c
		Command: BaseUnitID=%u UnitCnt=%u MastHost%c DefDir%c
		Command: BaseUnitID=%u UnitCnt=%u MastHost%c DefDir%c DUL%c
		Command: DPERE%c ERO%c RBC=%d OST=%d
		Command: RQ=%d ArqSz=%d Cal=%d SBA%c AGP%c GART64%c 64bit%c FW%c Rate=%s
		Command: WarmRst%c DblEnd%c
		Command: WarmRst%c DblEnd%c DevNum=%u ChainSide%c HostHide%c Slave%c <EOCErr%c DUL%c
CompactPCI central resource control <?>
CompactPCI hot-swap <?>
			 Compliance De-emphasis: %s
			Control: AttnInd %s, PwrInd %s, Power%c Interlock%c
	Control: I/O%c Mem%c BusMaster%c SpecCycle%c MemWINV%c VGASnoop%c ParErr%c Stepping%c SERR%c FastB2B%c DisINTx%c
 <crossing bug>
		Ctrl:	ArbSelect=%s
			Ctrl:	Enable%c ID=%d ArbSelect=%s TC/VC=%02x
-D		Always show domain numbers
%d byte(s) free
Debug port: BAR=%d offset=%04x
		Desc:	PortNumber=%02x ComponentID=%02x EltType=%s
Desc:	TargetPort=%02x TargetComponent=%02x AssocRCRB%c LinkType=%s LinkValid%c
		DevCap2: Completion Timeout: %s, TimeoutDis%c
		DevCap:	MaxPayload %d bytes, PhantFunc %d, Latency L0s %s, L1 %s
		DevCtl2: Completion Timeout: %s, TimeoutDis%c
		DevCtl:	Report errors: Correctable%c Non-Fatal%c Fatal%c Unsupported%c
Device:	
Device ID: %04x
Device Serial Number %02x-%02x-%02x-%02x-%02x-%02x-%02x-%02x
		Device specific mode supported
		DevSta:	CorrErr%c UncorrErr%c FatalErr%c UnsuppReq%c AuxPwr%c TransPend%c
 [disabled]
Disabled
 [disabled by cmd]
 Disabled%c Retrain%c CommClk%c
Discovered device %02x:%02x.%d
Display options:
%dns max
%dns min
		Downstream: Capacity=%u CommitmentLimit=%u
Downstream Port (Slot%c)
Driver:	%s
dump.name
-d [<vendor>]:[<device>]			Show only devices with specified ID's
Engineering changes
Entered via %02x:%02x.%d
		Error Handling: PFlE%c OFlE%c PFE%c OFE%c EOCFE%c RFE%c CRCFE%c SERRFE%c CF%c RE%c PNFE%c ONFE%c EOCNFE%c RNFE%c CRCNFE%c SERRNFE%c
Expansion ROM at 
Express 
Extended capability
		Extended requester support
			ExtSynch%c ClockPM%c AutWidDis%c BWInt%c AutBWInt%c
			ExtTag%c
fast Back2Back, 
		Feature Capability: IsocFC%c LDTSTOP%c CRCTM%c ECTLT%c 64bA%c UIDRD%c
		Feature Capability: IsocFC%c LDTSTOP%c CRCTM%c ECTLT%c 64bA%c UIDRD%c ExtRS%c UCnfE%c
-F <file>	Read PCI configuration dump from a given file
	Flags: 
		Flags: PMEClk%c DSI%c D1%c D2%c AuxCurrent=%dmA PME(D0%c,D1%c,D2%c,D3hot%c,D3cold%c)
__fprintf_chk
Function Dependency Link: %02x
-G		Enable PCI access debugging
GLIBC_2.0
GLIBC_2.1
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.7
__gmon_start__
-H <mode>	Use direct hardware access (<mode> = 1 or 2)
Hot-plug capable
HyperTransport: #%02x
HyperTransport: Address Mapping
HyperTransport: DirectRoute
HyperTransport: Extended Configuration Space Access
HyperTransport: Host or Secondary Interface
HyperTransport: Interrupt Discovery and Configuration
HyperTransport: MSI Mapping Enable%c Fixed%c
HyperTransport: Retry Mode
HyperTransport: Revision ID: %u.%02u
HyperTransport: Slave or Primary Interface
HyperTransport: Switch
HyperTransport: UnitID Clumping
HyperTransport: VCSet
HyperTransport: X86 (reserved)
ID=%04x Rev=%d Len=%03x <?>
-i <file>	Use specified ID database instead of %s
<ignored>
%i%i%i%i%i%i
 InCfgSpace
		Initial VFs: %d, 
Internal
Internal bug: Accessing non-read configuration byte at position %x
	Interrupt: pin %c routed to IRQ %d
		Interrupt vector mode supported
<invalid-64bit-slot>
	!!! Invalid class %04x for header type %02x
Invalid PCI access parameter syntax: %s
	I/O behind bridge: %08x-%08x
I/O ports at 
_IO_putc
_IO_stdin_used
		IOVCap:	Migration%c, Interrupt Message Number: %03x
		IOVCtl:	Enable%c Migration%c Interrupt%c MSE%c ARIHierarchy%c
		IOVSta:	Migration%c
	I/O window %d: %08x-%08x%s
, IRQ %d
__isoc99_sscanf
_Jv_RegisterClasses
	Kernel driver in use: %s
	Kernel modules:
Known PCI access methods:
Known PCI access parameters:
-k		Show kernel drivers handling each device
L0s Enabled
L0s L1 Enabled
, latency %d
	Latency: %d
Latency Tolerance Reporting
Legacy Endpoint
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
/lib/modules/%s/modules.pcimap
LIBPCI_3.0
LIBPCI_3.1
libpci.so.3
		Link Config 0: MLWI=%1$s DwFcIn%5$c MLWO=%2$s DwFcOut%6$c LWI=%3$s DwFcInEn%7$c LWO=%4$s DwFcOutEn%8$c
		Link Config 0: MLWI=%s MLWO=%s LWI=%s LWO=%s
		Link Config 1: MLWI=%1$s DwFcIn%5$c MLWO=%2$s DwFcOut%6$c LWI=%3$s DwFcInEn%7$c LWO=%4$s DwFcOutEn%8$c
		Link Config 1: MLWI=%s MLWO=%s LWI=%s LWO=%s
		Link Config: MLWI=%1$s DwFcIn%5$c MLWO=%2$s DwFcOut%6$c LWI=%3$s DwFcInEn%7$c LWO=%4$s DwFcOutEn%8$c
		Link Config: MLWI=%s MLWO=%s LWI=%s LWO=%s
		Link Control 0: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x
		Link Control 0: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x IsocEn%c LSEn%c ExtCTL%c 64b%c
		Link Control 1: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x
		Link Control 1: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x IsocEn%c LSEn%c ExtCTL%c 64b%c
		Link Control: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x
		Link Control: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x IsocEn%c LSEn%c ExtCTL%c 64b%c
		Link%d:	
		Link Error 0: <Prot%c <Ovfl%c <EOC%c CTLTm%c
		Link Error 1: <Prot%c <Ovfl%c <EOC%c CTLTm%c
		Link Error: <Prot%c <Ovfl%c <EOC%c CTLTm%c
		Link Frequency 0: %s
		Link Frequency 1: %s
		Link Frequency Capability 0: 200MHz%c 300MHz%c 400MHz%c 500MHz%c 600MHz%c 800MHz%c 1.0GHz%c 1.2GHz%c 1.4GHz%c 1.6GHz%c Vend%c
		Link Frequency Capability 1: 200MHz%c 300MHz%c 400MHz%c 500MHz%c 600MHz%c 800MHz%c 1.0GHz%c 1.2GHz%c 1.4GHz%c 1.6GHz%c Vend%c
		Link Frequency Capability: 200MHz%c 300MHz%c 400MHz%c 500MHz%c 600MHz%c 800MHz%c 1.0GHz%c 1.2GHz%c 1.4GHz%c 1.6GHz%c Vend%c
		Link Frequency: %s
		LnkCap:	Port #%d, Speed %s, Width x%d, ASPM %s, Latency L0 %s, L1 %s
		LnkCtl2: Target Link Speed: %s, EnterCompliance%c SpeedDis%c, Selectable De-emphasis: %s
		LnkCtl:	ASPM %s;
		LnkSta2: Current De-emphasis Level: %s
		LnkSta:	Speed %s, Width x%d, TrErr%c Train%c SlotClk%c DLActive%c BWMgmt%c ABWMgmt%c
lspci: Unable to read the standard configuration space header of device %04x:%02x:%02x.%d
lspci version 3.1.8
Manufacture ID
		Mapping Address Base: %016llx
Mapping bus %02x
		Masking: %08x  Pending: %08x
		Max no snoop latency: %lldns
			MaxPayload %d bytes, MaxReadReq %d bytes
		Max snoop latency: %lldns
MemMapped
	Memory behind bridge: %08x-%08x
	Memory window %d: %08x-%08x%s%s
-M		Enable `bus mapping' mode (dangerous; root only)
-mm		Produce machine-readable output (single -m for an obsolete format)
Module:	%s
, MSI %02x
MSI: Enable%c Count=%d/%d Maskable%c 64bit%c
MSI-X: Enable%c Count=%d Masked%c
Multi-Function Virtual Channel <?>
<name-too-long>
-nn		Show both textual and numeric ID's (names & numbers)
		No end tag found
Normal Operating Range
		No steering table available
No such PCI access method: %s (see `-A help' for a list)
		Not readable
Not Supported
-n		Show numeric ID's
Number of VFs: %d, 
nvbxs:d:ti:mgp:qkMDQA:GO:H:F:
-O <par>=<val>	Set PCI access parameter (see `-O help' for a list)
Other options:
 <overlap bug>
Part number
		PBA: BAR=%d offset=%08x
PCI access options:
PCI Advanced Features
pci_alloc
pci_cleanup
pci_fill_info
pci_filter_init
pci_filter_match
pci_filter_parse_id
pci_filter_parse_slot
pci_free_dev
pci_get_dev
pci_get_method_name
pci_get_param
pci_init
pci_lookup_method
pci_lookup_name
PCI/PCI-X Bridge
PCI/PCI-X to PCI-Express Bridge
pci_read_block
pci_read_byte
pci_read_vpd
pci_read_word
pci_scan_bus
pci_set_name_list_path
pci_set_param
pci_setup_cache
pci_walk_params
PCI-X bridge device
PCI-X non-bridge device
-p <file>	Look up kernel modules in a given file instead of default modules.pcimap
	Physical Slot: %s
PhySlot:	%s
			Port Arbitration Table <?>
		Port Arbitration Table [%x] <?>
		!!! Possibly incomplete decoding
Power Budgeting <?>
Power Management version %d
 (prefetchable)
	Prefetchable memory behind bridge: %08x-%08x
	Prefetchable memory behind bridge: %08x%08x-%08x%08x
		Prefetchable memory behind bridge Upper: %02x-%02x
		PriDiscTmr%c SecDiscTmr%c DiscTmrStat%c DiscTmrSERREn%c
Primary host bus
__printf_chk
		Product Name: 
 (prog-if %02x
ProgIf:	%02x
-qq		As above, but re-query locally cached entries
-Q		Query the PCI ID database for all ID's via DNS
-q		Query the PCI ID database for unknown ID's via DNS
Range AB
Range ABC
Range ABCD
Range BC
Range BCD
 RBE%c FLReset%c
 RCB %d bytes
readlink
Read-only
Read/write
Read-write area
	Region %d: 
		Region %d: Memory at 
Reserved
		Reserved steering table location
Resolving of device ID's to names:
 (rev %02x)
Rev:	%02x
		Revision ID: %u.%02u
			RlxdOrd%c ExtTag%c PhantFunc%c AuxPwr%c NoSnoop%c
Root Bridge Control Block <?>
		RootCap: CRSVisible%c
Root Complex Event Collector
Root Complex Event Collector <?>
Root Complex Integrated Endpoint
Root Complex Internal Link <?>
Root Complex Link
		RootCtl: ErrCorrectable%c ErrNon-Fatal%c ErrFatal%c PMEIntEna%c CRSVisible%c
Root Port (Slot%c)
		RootSta: PME ReqID %04x, PMEStatus%c PMEPending%c
SATA HBA v%d.%d
SDevice:	%s
%s/devices/%04x:%02x:%02x.%d/driver
%s devsel
-s [[[[<domain>]:]<bus>]:][<slot>][.[<func>]]	Show only devices in selected slots
Secondary host bus (?)
		Secondary Status: 64bit%c 133MHz%c SCD%c USC%c SCO%c SRD%c Freq=%s
	Secondary status: 66MHz%c FastB2B%c ParErr%c DEVSEL=%s >TAbort%c <TAbort%c <MAbort%c <SERR%c <PERR%c
	Secondary status: SERR
Secure device <?>
Selection of devices:
Serial number
		%s fields:
show_driver: sysfs device name too long, why?
Single Root I/O Virtualization (SR-IOV)
 [size=%u%s]
			Slot #%d, PowerLimit %.3fW; Interlock%c NoCompl%c
Slot ID: %d slots, First%c, chassis %02x
SlotPowerLimit %.3fW
		SltCap:	AttnBtn%c PwrCtrl%c MRL%c AttnInd%c PwrInd%c HotPlug%c Surprise%c
		SltCtl:	Enable: AttnBtn%c PwrFlt%c MRL%c PresDet%c CmdCplt%c HPIrq%c LinkChg%c
		SltSta:	Status: AttnBtn%c PowerFlt%c MRL%c CmdCplt%c PresDet%c Interlock%c
__snprintf_chk
__sprintf_chk
 (%s, %sprefetchable)
__stack_chk_fail
	Status: Cap%c 66MHz%c UDF%c FastB2B%c ParErr%c DEVSEL=%s >TAbort%c <TAbort%c <MAbort%c >SERR%c <PERR%c INTx%c
		Status: D%d NoSoftRst%c PME-Enable%c DSel=%d DScale=%d PME%c
		Status: Dev=%02x:%02x.%d 64bit%c 133MHz%c SCD%c USC%c DC=%s DMMRBC=%u DMOST=%u DMCRS=%u RSCEM%c 266MHz%c 533MHz%c
		Status: Dev=%02x:%02x.%d 64bit%c 133MHz%c SCD%c USC%c SCO%c SRD%c
		Status:	InProgress%c
			Status:	NegoPending%c InProgress%c
		Status: RQ=%d Iso%c ArqSz=%d Cal=%d SBA%c ITACoh%c GART64%c HTrans%c 64bit%c FW%c AGP3%c Rate=%s
		Steering table in MSI-X table
		Steering table in TPH capability structure
stepping, 
stride: %d, 
	Subsystem: %s
Summary of buses:
		Supported Page Size: %08x, 
SVendor:	%s
sysfs.path
System Page Size: %08x
System specific
Total VFs: %d, 
Transaction Processing Hints
			 Transmit Margin: %s, EnterModifiedCompliance%c ComplianceSOS%c
-t		Show bus tree
		UEMsk:	DLP%c SDES%c TLP%c FCP%c CmpltTO%c CmpltAbrt%c UnxCmplt%c RxOF%c MalfTLP%c ECRC%c UnsupReq%c ACSViol%c
		UESta:	DLP%c SDES%c TLP%c FCP%c CmpltTO%c CmpltAbrt%c UnxCmplt%c RxOF%c MalfTLP%c ECRC%c UnsupReq%c ACSViol%c
		UESvrt:	DLP%c SDES%c TLP%c FCP%c CmpltTO%c CmpltAbrt%c UnxCmplt%c RxOF%c MalfTLP%c ECRC%c UnsupReq%c ACSViol%c
Unable to allocate %d bytes of memory
uname() failed: %m
<unassigned>
Unknown hardware configuration type %s
	!!! Unknown header type %02x
	!!! Unknown I/O range types %x/%x
	!!! Unknown memory range types %x/%x
	!!! Unknown prefetchable memory range types %x/%x
		Unknown %s resource type %02x, will not decode more.
Unknown type %d
unlimited
<unreadable>
Unrecognized PCI access parameter: %s (see `-O help' for a list)
Unterminated or too long line in %s
		Upstream: Capacity=%u CommitmentLimit=%u
Upstream Port
Usage: lspci [<switches>]
user-definable features, 
-v		Be verbose (-vv for very verbose)
		VC%d:	
		Vector table: BAR=%d offset=%08x
Vendor specific
Vendor Specific Information: 
Vendor Specific Information: Len=%02x <?>
--version
		VF Migration: offset: %08x, BIR: %x
		VF offset: %d, 
__vfprintf_chk
VGA palette snoop, 
[virtual] 
Virtual Channel
Vital Product Data
WARNING: Bus mapping can be reliable only with direct hardware access enabled.
-x		Show hex-dump of the standard part of the config space
-xxx		Show hex-dump of the whole config space (dangerous; root only)
-xxxx		Show hex-dump of the 4096-byte extended config space (root only)
