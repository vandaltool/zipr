        
            
            ;;
        ;;
        *)
#******************************************************************************
##################################################################
#	    ;;
#       *1*  base configuration information and linkage
# 1). Base configuration information and linkage
# 1. use LDFLAGS, CFLAGS, etc from above
#       *2*  access to ICU tools
# 2. link with ${ICULIBS}
# 2). Variables giving access to ICU tools
# 3). Host information
#       *3*  Information about the host
# 3. optionally, add one or more of:
#       *4*  compiler flags and misc. options
# 4). Compiler flags and settings 
# 5). Data Packaging directives
#       *5* packaging options and directories
# 6). Include of platform make fragment (mh-* file)
#       *6* Inclusion of platform make fragment (mh-* file)
# about the ICU version
# Access to important ICU tools.
## Additional flags when building libraries and with threads
    allflags
allflags()
# ALWAYS load twice because of dependencies
ARFLAGS=" ${ARFLAGS}"
    arg="$1"
## BEGIN of icu-config-bottom.
# BEGIN of icu-config-top
# be made in the mh- file for the specific platform.
##  Bind internal references
	--bindir)
bindir="${exec_prefix}/bin"
#!/bin/sh
BIR_DEPS=""
BIR_LDFLAGS="-Wl,-Bsymbolic"
case "$1" in
case "$1" in 
    case "$arg" in
case "$ENABLE_RPATH" in 
case "$PKGDATA_MODE" in
CC="gcc"
	--cflags)
	--cflags-dynamic)
CFLAGS="-g -Wall -O2 -Wall -ansi -pedantic -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -Wno-long-long ${THREADSCFLAGS} "
# Check once before we quit (will check last used prefix)
## Check the sanity of current variables
                    CMD="${bindir}/${var}"
                    CMD="${sbindir}/${var}"
            CMD="${var}"
## Commands to generate dependency files
COMMON_STUBNAME="uc"
## Compilation rules
## Compiler switch to embed a library name
## Compiler switch to embed a runtime search path
# CONTENTS OF THIS FILE
#   Copyright (C) 1999-2004, International Business Machines
#   Copyright (C) 1999-2010, International Business Machines
## Copyright (c) 1999-2010, International Business Machines Corporation and
## Copyright (c) 2002-2010, International Business Machines Corporation and
#   Corporation and others.  All Rights Reserved.
	--cppflags)
	--cppflags-dynamic)
	--cppflags-searchpath)
CPPFLAGS="${THREADSCPPFLAGS} ${LIBCPPFLAGS} -I${prefix}/include"
CPP="gcc -E"
CTESTFW_STUBNAME="test"
	--cxxflags)
	--cxxflags-dynamic)
CXXFLAGS="-g -Wall -O2 -W -Wall -ansi -pedantic -Wpointer-arith -Wwrite-strings -Wno-long-long ${THREADSCXXFLAGS} "
CXX="g++"
datadir="${datarootdir}"
datarootdir="${prefix}/share"
DATA_STUBNAME="data"
# Debian change: linking icudata as data only causes too many problems.
        --debug)
default_ENABLE_RPATH="NO"
DEFAULT_MODE="dll"
default_prefix="/usr"
# Defaults for pkgdata's mode and directories
DEFS="-DHAVE_CONFIG_H "
# Dependencies [i.e. map files] for the final library
## Dependency rules
	--detect-prefix)
	    # Don't echo the -I. - it's unneeded.
    echo
    echo 
	echo $0: Unknown --enable-rpath value ${ENABLE_RPATH} 1>&2
            echo 1>&2
	    echo $bindir
    echo "  --bindir               Print binary directory path (bin)"
    echo " [Brackets] show MAKE variable equivalents,  (parenthesis) show example output"
    echo "                             building shared libraries."
ECHO_C=""
    echo "  --cc                   Print C compiler used [CC]"
    echo "  --cflags-dynamic       Print additional C flags for"
    echo "  --cflags               Print C compiler flags [CFLAGS]"
    echo "Copyright (c) 2002, International Business Machines Corporation and others. All Rights Reserved."
    echo "  --cppflags-dynamic     Print additional C Preprocessor flags for"
    echo "  --cppflags             Print C Preprocessor flags [CPPFLAGS]"
    echo "  --cppflags-searchpath  Print only -I include directives  (-Iinclude)"
    echo "  --cxxflags-dynamic     Print additional C++ flags for"
    echo "  --cxxflags             Print C++ compiler flags [CXXFLAGS]"
    echo "  --cxx                  Print C++ compiler used [CXX]"
    echo "  --detect-prefix        Attempt to detect prefix based on PATH"
	    echo $ECHO_N "${CC} ${ECHO_C}"
	    echo $ECHO_N "${CFLAGS} ${ECHO_C}"
	    echo $ECHO_N "${CPPFLAGS} ${ECHO_C}" | sed -e 's/-I. //'
	    echo $ECHO_N "${CXX} ${ECHO_C}"
	    echo $ECHO_N "${CXXFLAGS} ${ECHO_C}"
	    echo $ECHO_N "${datadir} ${ECHO_C}"
	    echo $ECHO_N "${ICUDATA_DIR} ${ECHO_C}"
	    echo $ECHO_N "${ICUDATA_NAME} ${ECHO_C}"
	    echo $ECHO_N "${ICULIBS_I18N} ${ICULIBS_COMMON} ${ICULIBS_DATA} ${ECHO_C}"
	    echo $ECHO_N " ${ICULIBS_ICUIO} ${ECHO_C}"
	    echo $ECHO_N "${ICULIBS_LAYOUT} ${ICULIBS_LAYOUTEX} ${ECHO_C}"
	    echo $ECHO_N "${ICULIBS_OBSOLETE} ${ECHO_C}"
	    echo $ECHO_N " ${ICULIBS_TOOLUTIL} ${ECHO_C}"
        echo $ECHO_N "${ICUPKGDATA_DIR} ${ECHO_C}"
	    echo $ECHO_N "-I${prefix}/include ${ECHO_C}"
	    echo $ECHO_N "${LDFLAGS} ${ICULIBS} ${LIBS} ${ECHO_C}"
	    echo $ECHO_N "${LIBS} ${ECHO_C}"
	    echo $ECHO_N "-L${libdir} ${ECHO_C}"
	    echo $ECHO_N "${PKGDATA_MODE} ${ECHO_C}"
	    echo $ECHO_N "${pkglibdir}/Makefile.inc ${ECHO_C}"
	    echo $ECHO_N "${pkglibdir}/pkgdata.inc ${ECHO_C}"
	    echo $ECHO_N "${SHAREDLIBCFLAGS} ${ECHO_C}"
	    echo $ECHO_N "${SHAREDLIBCPPFLAGS} ${ECHO_C}"
	    echo $ECHO_N "${SHAREDLIBCXXFLAGS} ${ECHO_C}"
	    echo $ECHO_N "${SHLIB_cc} ${ECHO_C}"
	    echo $ECHO_N "${SHLIB_c} ${ECHO_C}"
        echo $ECHO_N $UNICODE_VERSION
        echo $ECHO_N $VERSION
#  echo ENABLE RPATH $ENABLE_RPATH and RPATHLDFLAGS=${RPATH_LDFLAGS}
	    echo "env ${QUOT}${LDLIBRARYPATH_ENVVAR}=${libdir}:"'${'"${LDLIBRARYPATH_ENVVAR}"'}'${QUOT}
	    echo "env ${QUOT}${LDLIBRARYPATH_ENVVAR}=${libdir}:"'${'"${LDLIBRARYPATH_ENVVAR}"'}'${QUOT} ${CMD}
    echo "                     (etc).."
    echo 'Example (in make):   CPFLAGS=$(shell icu-config --cppflags)'
	    echo $exec_prefix
    echo "  --exec-prefix          Print prefix for executables (/bin)"
    echo "  --exists               Return with 0 status if ICU exists else fail"
    echo "  --help, -?, --usage    Print this message"
    echo "  --icudatadir           Print path to packaged archive data. Can set as [ICU_DATA]"
    echo "  --icudata-install-dir  Print path to install data to - use as --install option to pkgdata(1)"
    echo "  --icudata-mode         Print default ICU pkgdata mode (dll) - use as --mode option to pkgdata(1)."
    echo "  --icudata              Print shortname of ICU data file (icudt21l)"
        echo "###      (If you want to disable this check, use  the --noverify option)" 1>&2
    echo "  --incfile              Print path to Makefile.inc"
    echo "  --incpkgdatafile       Print path to pkgdata.inc (for -O option of pkgdata)"
	    echo ${INSTALL}
    echo "  --install              Print path to install-sh"
    echo "  --invoke               Print commands to invoke an ICU program"
    echo "  --invoke=<prog>        Print commands to invoke an ICU program named <prog> (ex: genrb)" 
    echo "  --ldflags-icuio        Print ICU icuio link directive. Use in addition to --ldflags "
    echo "  --ldflags-layout       Print ICU layout engine link directive. Use in addition to --ldflags"
    echo "  --ldflags-libsonly     Same as --ldflags, but only the -l directives"
    echo "  --ldflags-obsolete     Print ICU obsolete link directive. Use in addition to --ldflags. (requires icuapps/obsolete to be built and installed.) "
    echo "  --ldflags              Print -L search path and -l libraries to link with ICU [LDFLAGS].  This is for the data, uc (common), and i18n libraries only.  "
    echo "  --ldflags-searchpath   Print only -L (search path) directive"
    echo '                     LDFLAGS=$(shell icu-config --ldflags)'
    echo "  --ldflags-system       Print only system libs ICU links with (-lpthread, -lm)"
	    echo $libdir
	    echo $mandir
    echo "  --mandir               Print manpage (man) path"
	echo "### $ME: Can't find ${ICUUC_FILE} - ICU prefix is wrong."  1>&2
            echo "### $ME: Error: --noverify must be the first argument." 1>&2
	    echo ${ME}: ERROR Unknown Option $arg 1>&2
	    echo "### $ME: Exitting." 1>&2
	echo "### $ME: Exitting." 1>&2
    echo "${ME}: icu-config: ICU configuration helper script"
	    echo ${MKINSTALLDIRS}
    echo "  --mkinstalldirs        Print path to mkinstalldirs"
ECHO_N="-n"
    echo "  --noverify             Don't verify that ICU is actually installed."
	echo "###      or --detect-prefix" 1>&2
	echo "passed"
	    echo $prefix
    echo "  --prefix               Print PREFIX to icu install (/usr/local)"
    echo "  --prefix=XXX           Set prefix to XXX for remainder of command"
#    echo "### processing $arg" 1>&2
	    echo $sbindir
    echo "  --sbindir              Print system binary path (sbin) "
    echo "  --shared-datadir       Print shared data (share) path. This is NOT the ICU data dir."
    echo "  --shlib-cc             Print the command to compile and build C++ shared libraries with ICU"
    echo "  --shlib-c              Print the command to compile and build C shared libraries with ICU"
        echo $SO
	    echo $sysconfdir
    echo "  --sysconfdir           Print system config (etc) path"
ECHO_T=""
    echo "The most commonly used options will be --cflags, --cxxflags, --cppflags, and --ldflags."
	echo "###      Try the --prefix= option " 1>&2
    echo "  --unicode-version      Print version of Unicode data used in ICU ($UNICODE_VERSION)"
    echo "Usage:"
    echo "usage: ${ME} " `allflags | cut -c-25 | sed -e 's%.*%[ & ]%'`
		echo "## Using --prefix=${prefix}" 1>&2
    echo "  --version              Print ICU version ($VERSION)"
#	--enable-rpath=*)
	ENABLE_RPATH=NO
#	    ENABLE_RPATH=$var
	ENABLE_RPATH=YES
## End Linux-specific setup
## END of icu-config-bottom
### END of icu-config-top
# Environment variable to set a runtime search path
## equivalent '#SH#' lines for icu-config fixup
    esac
# etc.  If ICU is not installed in this directory, you must change the
	--exec-prefix)
execprefix=
exec_prefix="${prefix}"
	--exists)
	    exit 0
            exit 1
            exit 1;
    exit 1
	# EXIT for self check
FFLAGS="@FFLAGS@"
            fi
                fi
## FINAL_SO_TARGET = ${SO_TARGET}.${SO_TARGET_VERSION}
## Flags for position independent code
# Following from ./config/mh-linux
# following line.  There should exist ${prefix}/include/unicode/utypes.h
# For certain options (e.g. --detect-prefix) don't check for icuuc library file.
# for example.
# for icu-config to test with
GENCCODE_ASSEMBLY="-a gcc"
GENCCODE="${sbindir}/genccode"
GENCMN="${sbindir}/gencmn"
GEN_DEPS_c="${CC} -E -MM ${DEFS} ${CPPFLAGS}"
GEN_DEPS_cc="${CXX} -E -MM ${DEFS} ${CPPFLAGS}"
GENRB="${bindir}/genrb"
	--help)
	    HERE=`echo $0 | sed -e "s/$ME//g"`
host_alias=""
host_cpu="i686"
host="i686-pc-linux-gnu"
host_os="linux-gnu"
host_vendor="pc"
I18N_STUBNAME="i18n"
# icu-config version of above 'if':
	--icudata)
ICUDATA_CHAR="l"
	--icudatadir)
ICUDATA_DIR="${pkgdatadir}"
	--icudata-install-dir)
	--icudata-mode)
ICUDATA_NAME="icudt48l"
ICULIBS_BASE="${LIBS} -L${libdir}"
ICULIBS_COMMON_LIB_NAME_A="${LIBICU}${COMMON_STUBNAME}${ICULIBSUFFIX}.${A}"
ICULIBS_COMMON_LIB_NAME="${LIBICU}${COMMON_STUBNAME}${ICULIBSUFFIX}${ICULIBSUFFIX_VERSION}.${SO}"
ICULIBS_COMMON="-l${ICUPREFIX}uc${ICULIBSUFFIX}${ICULIBSUFFIX_VERSION}"
ICULIBS_CTESTFW="-l${ICUPREFIX}ctestfw${ICULIBSUFFIX}${ICULIBSUFFIX_VERSION}"
ICULIBS_DATA="-l${ICUPREFIX}${DATA_STUBNAME}${ICULIBSUFFIX}${ICULIBSUFFIX_VERSION}"
#    - ${ICULIBS_I18N}    - i18n library, formatting, etc.
ICULIBS_I18N="-l${ICUPREFIX}${I18N_STUBNAME}${ICULIBSUFFIX}${ICULIBSUFFIX_VERSION}"
#    - ${ICULIBS_ICUIO}   - ICU stdio equivalent library
ICULIBS_ICUIO="-l${ICUPREFIX}io${ICULIBSUFFIX}${ICULIBSUFFIX_VERSION}"
ICULIBS="${ICULIBS_BASE} ${ICULIBS_I18N} ${ICULIBS_COMMON} ${ICULIBS_DATA} "
# ICULIBS is the set of libraries your application should link
ICULIBS_LAYOUTEX="-l${ICUPREFIX}lx${ICULIBSUFFIX}${ICULIBSUFFIX_VERSION}"
#    - ${ICULIBS_LAYOUT}  - ICU layout library. 
ICULIBS_LAYOUT="-l${ICUPREFIX}le${ICULIBSUFFIX}${ICULIBSUFFIX_VERSION}"
ICULIBS_OBSOLETE="-l${ICUPREFIX}obsolete${ICULIBSUFFIX}${ICULIBSUFFIX_VERSION}"
ICULIBS_TOOLUTIL="-l${ICUPREFIX}tu${ICULIBSUFFIX}${ICULIBSUFFIX_VERSION}"
ICULIBSUFFIX=""
# ICULIBSUFFIX_VERSION  is non-empty if it is to contain a library
ICUPKGDATA_DIR="${ICUDATA_DIR}"
ICUPKGDATA_DIR="${libdir}"
ICUPKG="${sbindir}/icupkg"
ICUPREFIX="icu"
ICUUC_FILE_A="${libdir}/${ICULIBS_COMMON_LIB_NAME_A}"
ICUUC_FILE="${libdir}/${ICULIBS_COMMON_LIB_NAME}"
	    if [ -f "${HERE}/../lib/${ICULIBS_COMMON_LIB_NAME}" -o -f  "${HERE}/../lib/${ICULIBS_COMMON_LIB_NAME_A}"  ]; then
    if [ ! -f "${ICUUC_FILE}" -a ! -f "${ICUUC_FILE_A}" ] && [ ${IGNORE_ICUUC_FILE_CHECK} = "no" ] && [ ${SANITY} = "sane" ];
if [ $# -gt 0 -a $1 = "--selfcheck" ];
    if [ $IGNORE_ICUUC_FILE_CHECK = "yes" ]; then
            # If it's not a locally executable command (1st choice) then 
if [ $# -lt 1 ]; then
                if [ -x ${bindir}/${var} ]; then
            if [ ! -x ${CMD} ]; then
if [ "x${ENABLE_RPATH}" = "x" ]; then ENABLE_RPATH="$default_ENABLE_RPATH"; fi
if [ "x$PKGDATA_MODE" = "x" ];
if [ "x$PKGDATA_MODE" = "x" ]; then
if [ "x${prefix}" = "x" ]; then prefix="$default_prefix"; fi
                if [ -x ${sbindir}/${var} ]; then
        IGNORE_ICUUC_FILE_CHECK="no"
IGNORE_ICUUC_FILE_CHECK="no";
    IGNORE_ICUUC_FILE_CHECK="yes"
        --incfile)
includedir="${prefix}/include"
	--incpkgdatafile)
infodir="${prefix}/share/info"
# Information about the host that 'configure' was run on.
# initial tab keeps it out of the shell version.
# Inside this directory you should find  bin, lib, include/unicode, 
	--install)
INSTALL_DATA="${INSTALL} -m 644"
INSTALL_L="${INSTALL_DATA}"
INSTALL_PROGRAM="${INSTALL}"
INSTALL_SCRIPT="${INSTALL}"
INSTALL="${SHELL} ${pkgdatadir}/install-sh -c"
	--invoke=*)
	--invoke)
INVOKE="${LDLIBRARYPATH_ENVVAR}=${libdir}:$$${LDLIBRARYPATH_ENVVAR} ${LEAK_CHECKER}"
IO_STUBNAME="io"
# is being used
# It is put last so that the mh-file can override anything.
# It may override the above settings.
LAYOUTEX_STUBNAME="lx"
LAYOUT_STUBNAME="le"
	--ldflags)
LDFLAGSICUDT=""
#LDFLAGSICUDT=-nodefaultlibs -nostdlib
	--ldflags-icuio)
	--ldflags-layout)
	--ldflags-libsonly)
	--ldflags-obsolete)
LDFLAGS="${RPATHLDFLAGS}"
	--ldflags-searchpath)
	--ldflags-system)
# LDflags that pkgdata will use
	--ldflags-toolutil)
LDLIBRARYPATH_ENVVAR="LD_LIBRARY_PATH"
LD_RPATH_PRE="-Wl,-rpath,"
LD_RPATH="-Wl,-zorigin,-rpath,'$$'ORIGIN "
LD_SONAME=
LD_SOOPTIONS="-Wl,-Bsymbolic"
LIBCPPFLAGS=""
	--libdir)
libdir="${exec_prefix}/lib"
libexecdir="${exec_prefix}/libexec"
LIBICU="lib${ICUPREFIX}"
# libicuuc21.so for example.
LIB_M=""
LIBSICU="lib${STATIC_PREFIX}${ICUPREFIX}"
LIBS="-ldl -lm  "
LIB_VERSION="48.1.1"
LIB_VERSION_MAJOR="48"
## Linux-specific setup
loaddefs
#	    loaddefs
	    loaddefs
loaddefs()
# Load our variables from autoconf
localstatedir="/var"
## Main starts here.
## -*-makefile-*-
	--mandir)
mandir="${prefix}/share/man"
ME=`basename "$0"`
## mh-files MUST NOT override RPATHLDFLAGS unless they provide
## MIDDLE_SO_TARGET = ${SO_TARGET}.${SO_TARGET_VERSION_MAJOR}
	--mkinstalldirs)
MKINSTALLDIRS="${SHELL} ${pkgdatadir}/mkinstalldirs"
# moved here because of dependencies
# Name flexibility for the library naming scheme.  Any modifications should
## Non-shared intermediate object suffix
# Not currently being used but good to have for proper tab handling
        --noverify)
--noverify)
# of the ICU.
oldincludedir="/usr/include"
## others. All Rights Reserved.
# Our platform canonical name (as determined by configure)
#   (Overridden when necessary in -mh files)
PACKAGE="icu"
# parseable. The mh fragment is only included if this does not occur.
PKGDATA="${bindir}/pkgdata"
pkgdatadir="${datadir}/${PACKAGE}${ICULIBSUFFIX}/${VERSION}"
    PKGDATA_MODE=dll
PKGDATA_MODE="dll"
pkglibdir="${libdir}/${PACKAGE}${ICULIBSUFFIX}/${VERSION}"
platform="U_LINUX"
*prefix*)
	--prefix=*)
	--prefix)
		prefix="${HERE}/.."
	    prefix=$var
## Print the normal usage message
program_transform_name="s,x,x,"
# Proper echo newline handling is needed in icu-config
	    QUOT="\""
RANLIB="ranlib"
# Rebuilt on Wed Jan 25 19:15:49 UTC 2012
## Remove shared library 's'
    # Reset the ignore icuuc file check flag
RMV="rm -rf"
# $RPATH_LDFLAGS
	RPATHLDFLAGS=""
	RPATHLDFLAGS="${LD_RPATH}${LD_RPATH_PRE}${libdir}"
RPATHLDFLAGS="${LD_RPATH}${LD_RPATH_PRE}${libdir}"
# rpath links a library search path right into the binaries.
        sanity
	    sanity
sanity()
    SANITY="nosanity"
SANITY="sane"
	--sbindir)
sbindir="${exec_prefix}/sbin"
            # search for it in the ICU directories. 
	    set -x
## -*-sh-*-
	--shared-datadir)
SHAREDLIBCFLAGS="-fPIC"
SHAREDLIBCPPFLAGS="-DPIC"
SHAREDLIBCXXFLAGS="-fPIC"
## Shared library options
## Shared object suffix
sharedstatedir="${prefix}/com"
SHELL="/bin/bash"
    shift
	--shlib-c)
	--shlib-cc)
SHLIB_c="${CC} ${DEFS} ${CPPFLAGS} ${CFLAGS} ${LDFLAGS} -shared"
SHLIB_cc="${CXX} ${DEFS} ${CPPFLAGS} ${CXXFLAGS} ${LDFLAGS} -shared"
    shortusage
shortusage()
            shortusage 1>&2
    --so)
# Static library prefix and file extension
STATIC_O="ao"
STATIC_PREFIX=""
STATIC_PREFIX="s"
STATIC_PREFIX_WHEN_USED=""
# Suffix at the end of libraries. Usually empty.
	--sysconfdir)
sysconfdir="/etc"
## The actual code of icu-config goes here.
# The basename of the ICU data file (i.e. icudt21b )
# The default data dir changes depending on what packaging mode 
# The initial tab in the next line is to prevent icu-config from reading it.
# The mh- file ("make fragment") for the platform is included here. 
    then
# The prefix for ICU libraries, normally 'icu'
# The PREFIX is the base of where ICU is installed.
## These are the library specific LDFLAGS
# The selfcheck is just a sanity check that this makefile is
# this is a #define value (i.e. U_XXXX or XXXX)
# This Makefile.inc is designed to be included into projects which make use
# This script is designed to aid configuration of ICU.
THREADSCPPFLAGS="-D_REENTRANT"
### To link your application with ICU:
TOOLUTIL_STUBNAME="tu"
U_IS_BIG_ENDIAN="0"
        # undocumented.
    --unicode-version)
UNICODE_VERSION="6.0"
	    usage
	--usage)
# use a consistent INSTALL 
# Use as follows:  ${INVOKE} ${GENRB} arguments .. 
    var=`echo $arg | sed -e 's/^[^=]*=//'`
	--version)
VERSION="4.8.1.1"
## Versioned libraries rules
# Versioned target for a shared library
# version. For example, if it is 21, it means libraries are named
# We can't depend on MIDDLE_SO_TARGET being set.
while [ $# -gt 0 ];
# with usually. Many applications will want to add ${ICULIBS_I18N} as well. 
## Zero out prefix.
