|&;<>()$`\"' 	
        
------------
----------------
---------------------------------------
----------------------------------------------------------------------
::::::::::::::::::::::::::::::::
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
0123456789
0123456789abcdef
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~bisect_rev_setup
%02x%02x%02x... lo %u hi %u nr %u
%04d-%02d-%02d
%04d-%02d-%02d %02d:%02d:%02d %+05d
%04x%s %s%c
:%06o %06o %s 
%06o #%d %s %.8s
%06o %s %s	
%06o %s %s %7s	
 0 files changed
0 <= graph->expansion_row && graph->expansion_row < num_expansion_rows
	(%10s	%10s	%d)
%10s: %8u (%llu kB)
 %-11s %8d %s
1969-12-31
^(1969-12-31|1970-01-01) [0-2][0-9]:[0-5][0-9]:00(\.0+)? ([-+][0-2][0-9]:?[0-5][0-9])
1970-01-01
2.weeks.ago
|$ 3|$\3|$$
\$@3\$<3\$X3\$(
\$<3\$41
3D$,3D$D
\$,3l$01
3L$$3L$@
3L$@3L$H
%.3s %.3s %d %02d:%02d:%02d %d%c%+05d
%.3s, %d %.3s %d %02d:%02d:%02d %+05d
3T$$3D$ 	
3T$|3D$x	
3T$L3D$H	
3-way merge if no file level merging required
3-way merge in presence of adds and removes
\$43\$$1
\$43T$0!
4b825dc642cb6eb9a060e54bf8d69288fbee4904
52 comment=
%5d %.*s%.*s
  %-6s %o %s %s
		%.7s: %.7s -> %.7s/%.7s
\$83T$\3\$(
|$`9|$xvo
-a and -r options to 'git branch' do not make sense with a branch name
-A and -u are mutually incompatible
a bad revision is needed
--abbrev
--abbrev=
    --abbrev-commit
--abbrev-commit
  --abbrev=<n>  abbreviate object names in diff-tree header and diff-raw.
    --abbrev=<n> | --no-abbrev
--abbrev-ref
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
able to execute it. Maybe git-%s is broken?
abort if fast-forward is not possible
Aborting
Aborting commit due to empty commit message.
Aborting notes merge resolution
abort notes merge
abort the current in-progress merge
A branch named '%s' already exists.
absurdly long hostname
a cherry-pick or revert is already in progress
act on remote-tracking branches
add a signature
add (at most <n>) entries from shortlog to merge commit message
add branch
add Cc: header
add changes from all tracked and untracked files
--add --delete doesn't make sense
added by them:
added by us:
added in both
added in local
added in remote
ADD_EDIT.patch
Added resolved note for object %s: %s
add email header
add entries from standard input to the index
Add file contents to the index
add-header
add.ignoreerrors
add.ignore-errors
addinfo_cache failed for path '%s'
Adding as %s instead
adding files failed
Adding merged %s
Adding %s
add--interactive
add_note
add <pattern> to ignore rules
add '%s'
adds a new variable: name value
add Signed-off-by:
add specified files to index for commit
add the specified entry to the index
add the standard git exclusions
add To: header
add to index only; do not add content to object database
--advertise-refs
--after=
after-context
After doing this, you may fix the identity used for this commit with:
after resolving the conflicts, mark the corrected paths
aggressive
ahead %d] 
ahead %d, behind %d] 
alias for --log (deprecated)
alias '%s' changes environment variables
    --all
  --all and explicit <ref> specification are mutually exclusive.
--all and --mirror are incompatible
--all and --tags are incompatible
--all can't be combined with refspecs
--all-match
allow adding otherwise ignored files
allow-binary-replacement
allow calling of grep(1) (ignored by this build)
allow creation of more than one tree
allow-empty
allow-empty-message
allow explicitly ignored files to be overwritten
allow fast-forward
allow fast-forward (default)
Allowing deletion of corrupt ref.
allow missing objects
--allow-onelevel
allow-overlap
allow overlapping hunks
allow recursive removal
allow to print `undefined` names
allow updating of HEAD ref
--all-progress
        [--all-progress-implied]
--all-progress-implied
[[:alpha:]_'][[:alnum:]_']*|0[xb]?[0-9a-fA-F_]*|[0-9a-fA-F_]+(\.[0-9a-fA-F_]+)?([eE][-+]?[0-9_]+)?|=>|-[rwxoRWXOezsfdlpSugkbctTBMAC>]|~~|::|&&=|\|\|=|//=|\*\*=|&&|\|\||//|\+\+|--|\*\*|\.\.\.?|[-+*/%.^&<>=!|]=|=~|!~|<<|<>|<=>|>>|[^[:space:]]|[
already have %s (%s)
Already on '%s'
Already up-to-date!
Already up-to-date.
Already up-to-date. Yeeah!
also apply the patch (use with --stat/--summary/--check)
also consider packs and alternate objects
--alt-odb
--always
always use long format
ambiguous argument '%s': both revision and filename
ambiguous argument '%s': unknown revision or path not in the working tree.
Ambiguous object name: '%s'.
Ambiguous option: %s (could be --%s%s or --%s%s)
amend previous commit
%an <%ae>
--ancestry-path
--ancestry-path given but there are no bottom commits
and commit the result with 'git commit'
 ... and %d more.
and have %d and %d different commit each, respectively.
and have %d and %d different commits each, respectively.
--and not followed by pattern expression
and then push using the remote name
and then use 'git add/rm <file>' as
and try again.
    and with remote
An empty message aborts the commit.
an empty %s object %s?
annotate
annotated
annotated and GPG-signed tag
annotated tag, needs a message
annotated tag %s has no embedded name
annotated tag %s not available
a NUL byte in commit log message not allowed.
any of your branches:
--append
append commit name
append <mark> on dirty working tree (default: "-dirty")
append to .git/FETCH_HEAD instead of overwriting
Applied patch 
apply a patch without touching the working tree
apply changes matching the given path
apply.ignorewhitespace
Applying patch 
apply the patch in reverse
apply.whitespace
appropriate to mark resolution and make a commit,
archive format
argument 
argument --format=%s
Argument not supported for format '%s': -%d
argument %s
'argument' token or flush expected
arranged to update its work tree to match what you pushed in some
--- a/%s
__assert_fail
assertion failure lo %u mi %u hi %u %s
  -a  --text    treat all files as text.
A total of %lu unique objects were considered.
attachment
attach the patch
attempt to push into a shallow repository
attempt to remove non-existent note is not an error
[attr]binary -diff -text
Attributes and --all both specified
attribute to stdout
attr_stack->origin
 Author: 
authordate
authoremail
author-mail %s
authorname
--author=%s
author %s
Author: %s
author-time %lu
author-tz %s
Automatic merge failed; fix conflicts and then commit the result.
Automatic merge went well; stopped before committing as requested
Automatic notes merge failed. Fix conflicts in %s and commit the result with 'git notes merge --commit', or abort the merge with 'git notes merge --abort'.
Auto-merging notes for %s
Auto-merging %s
Auto packing the repository for optimum performance.
Auto packing the repository for optimum performance. You may also
Available custom strategies are:
available %s in '%s'
Available strategies are:
(@[a-zA-Z]{1,}[ 	]*\{{0,1}[ 	]*[^ 	"@',\#}{~%]*).*$
\\[a-zA-Z@]+|\\.|[a-zA-Z0-9
!^[ 	]*[A-Za-z_][A-Za-z_0-9]*:.*$
(@|@@|\$)?[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|\?(\\C-)?(\\M-)?.|//=?|[-+*/<>%&^|=!]=|<<=?|>>=?|===|\.{1,3}|::|[!=]~|[^[:space:]]|[
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|<>|<=|>=|:=|\.\.|[^[:space:]]|[
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|[-+*/<>%&^|=!.]=|--|\+\+|<<=?|>>=?|===|&&|\|\||::|->|[^[:space:]]|[
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>=?|&&|\|\||::|->|[^[:space:]]|[
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>>?=?|&&|\|\||[^[:space:]]|[
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[jJlL]?|0[xX]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|//=?|<<=?|>>=?|\*\*=?|[^[:space:]]|[
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|[=~<>]=|\.[*/\^']|\|\||&&|[^[:space:]]|[
^[ 	]*([-+][ 	]*\([ 	]*[A-Za-z_][A-Za-z_0-9* 	]*\)[ 	]*[A-Za-z_].*)$
^[ 	]*(([A-Za-z_][A-Za-z_0-9]*[ 	]+)+[A-Za-z_][A-Za-z_0-9]*[ 	]*\([^;]*)$
^([A-Za-z_][A-Za-z_0-9]*([ 	*]+[A-Za-z_][A-Za-z_0-9]*([ 	]*::[ 	]*[^[:space:]]+)?){1,}[ 	]*\([^;]*)$
[a-zA-Z][a-zA-Z0-9_]*|\.([Ee][Qq]|[Nn][Ee]|[Gg][TtEe]|[Ll][TtEe]|[Tt][Rr][Uu][Ee]|[Ff][Aa][Ll][Ss][Ee]|[Aa][Nn][Dd]|[Oo][Rr]|[Nn]?[Ee][Qq][Vv]|[Nn][Oo][Tt])\.|[-+]?[0-9.]+([AaIiDdEeFfLlTtXx][Ss]?[-+]?[0-9.]*)?(_[a-zA-Z0-9][a-zA-Z0-9_]*)?|//|\*\*|::|[/<>=]=|[^[:space:]]|[
Bad alias.%s string: %s
bad blob object
Bad branch.%s.mergeoptions string: %s
bad color value '%.*s' for variable '%s'
Bad command
Bad command: %s
(bad commit)
bad config file line %d in %s
bad config value for '%s'
bad config value for '%s' in %s
bad --default argument
bad default revision '%s'
bad flag '%s' used after filename
bad git namespace path "%s"
bad graft data: %s
bad --ignore-submodules argument: %s
bad index file sha1 signature
bad index version
Badly quoted content in file '%s': %s
Bad notes.rewriteMode value: '%s'
bad number of arguments
bad object header
bad object ref: %s:%s
bad object %s
bad object: %s
bad object type.
bad object type %d
bad offset for revindex
bad pack
bad pack compression level %d
bad packed object CRC for %s
bad pack file
Bad pack filename: %s
bad pack.indexversion=%u
bad parent line in commit
bad parents in commit %s
/bad-path/
bad ref for %s
Bad remote-ext placeholder '%%%c'.
bad replace ref name: %s
bad repository '%s'
bad revision '%s'
bad %s argument: %s
bad sha1 file: %s/%s
bad sha1 objects for %s
Bad sha1 on stdin: %s
bad sha1 reference %s
bad shallow line: %s
bad signature
: BAD signature from 
bad source
Bad %s value: '%s'
bad tag object %s
bad tree compare for commit %s
bad tree-ish %s
bad tree object
;bad tree object %s
bad tree pointer in commit %s
bad tree %s
bad type %d
Bad URL syntax
bad --word-diff argument: %s
bad zlib compression level %d
--bare and --origin %s options are incompatible.
basic-regexp
batch-check
-B cannot be used with -b
  -B            detect complete rewrites.
--before=
before-context
^(BEGIN|END|INIT|CHECK|UNITCHECK|AUTOLOAD|DESTROY)[ 	]*(\{[ 	]*)?(#.*)?$
-----BEGIN PGP MESSAGE-----
-----BEGIN PGP SIGNATURE-----
begins with refs/, and we are unable to guess a prefix based on the source ref.
, behind 
be more quiet
be more thorough (increased runtime)
be more verbose
be quiet
be quiet, only report errors
be verbose
be verbose; must be placed before a subcommand
--binary
Binary file 
Binary files 
Binary files differ
binary patch does not apply to '%s'
binary patch to '%s' creates incorrect result (expecting %s, got %s)
bindtextdomain
bind_textdomain_codeset
    --bisect
--bisect
    --bisect-all
--bisect-all
bisect_all
BISECT_ANCESTORS_OK
bisect_bad
BISECT_EXPECTED_REV
bisect_good
BISECT_HEAD
bisect--helper
Bisecting: a merge base must be tested
Bisecting: %d revision%s left to test after this (roughly %d step%s)
BISECT_NAMES
bisect_nr
bisect_rev
bisect_steps
    --bisect-vars
--bisect-vars
blame.blankboundary
blame.date
blame.showroot
blank-at-eof
blank-at-eol
blob expected for %s '%s'
blob expected in note %s for object %s
blob_unchanged
*** BLURB HERE ***
bogus commit object %s
bogus committer info %s
bogus config parameter: %s
bogus format in GIT_CONFIG_PARAMETERS
bool-or-int
both added:
both --cached and trees are given.
both deleted:
both modified:
--boundary
boundary=
--branch
branch.autosetupmerge
branch.autosetuprebase
branch: Created from %s
BRANCH_DESCRIPTION
    --branches
--branches
--branches=
branches/%s
branches/%.*s
branch(es) to track
branch is currently checked out
Branch is renamed, but update of config-file failed
branch.*.mergeoptions
Branch: renamed %s to %s
Branch renamed to %s, but HEAD is not updated!
Branch rename failed
branch: Reset to %s
branch.%s
branch.%s.description
branch '%s' does not point at a commit
branch.%s.merge
branch.%s.rebase
branch.%s.remote
branch.%s.%s
Branch %s set up to track %s%s.
--break-rewrites
--break-rewrites=
broken link from %7s %s
broken links
broken symref
+++ b/%s
bug: a non-header pattern in grep header list.
BUG: assertion failed in binary search
BUG: combine_notes_overwrite failed
Bug detected: Taking over transport requires non-NULL smart_options field.
BUG: diff is failing to clean up its tempfiles
BUG: %d %.*s
BUG: expected exactly one commit from walk
Bug in merge-recursive.c
bug in show-killed-files
BUG: invalid grep_source type
bug: malformed header expr
BUG: non-INDEX attr direction in a bare repo
BUG: option '%s' %s
BUG: shell command is empty
BUG: should not happen
BUG: signal out of range: %d
BUG: startup_info struct is not initialized.
BUG: strbuf_setlen() beyond buffer
BUG: switch '%c' %s
BUG: tar-filter archiver called with no filter defined
BUG: There are unmerged index entries:
BUG: total_in mismatch
BUG: total_out mismatch
bug: unhandled diff status %c
bug: unknown binary handling mode
bug: unknown header field %d
BUG: your vsnprintf is broken (insatiable)
BUG: your vsnprintf is broken (returned %d)
build a temporary index based on embedded index information
build-fake-ancestor
[builtin]
built-in 3-way text merge
builtin/apply.c
built-in binary merge
(builtin)false
builtin/index-pack.c
builtin/mv.c
builtin/revert.c
(builtin)true
built-in union merge
(builtin)unknown
By default, deleting the current branch is denied, because the next
By default, updating the current branch in a non-bare repository
bypass post-rewrite hook
bypass pre-commit hook
 by rebasing
by using:
!^([C*]|[ 	]*!)
%c%03d%c
C4f9F4ti
cache corrupted
--cached
--cached or --untracked cannot be used with --no-index.
--cached outside a repository
cacheinfo
cachetextconv
cache-tree.c: '%.*s' in '%s' not found
cache-tree: internal error
cancel revert or cherry-pick sequence
candidates
Can merge only exactly one commit into empty head
cannot abort from a branch yet to be born
Cannot access current working directory
Cannot access work tree '%s'
Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite existing notes
cannot apply binary patch to '%s' without full index line
Cannot change to '%s/..'
Cannot change to '%s'
cannot chdir to %s
cannot close written keep file '%s'
cannot combine --parents and --children
cannot combine --reverse with --graph
cannot combine --reverse with --walk-reflogs
cannot combine --walk-reflogs with --graph
Cannot come back to cwd
Cannot commit uninitialized/unreferenced notes tree
cannot convert from %s to %s
Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite existing notes
cannot copy '%s' to '%s'
cannot create an empty blob in the object database
cannot create directory at '%s'
cannot create pipe for %s: %s
cannot create pipe: %s
cannot create '%s'
cannot create subproject directory %s
cannot create temporary subproject %s
cannot create thread: %s
cannot delete '%s' from packed refs
Cannot delete the branch '%s' which you are currently on.
cannot describe '%s'
cannot determine file descriptor flags
Cannot determine remote HEAD
Cannot determine the current working directory
Cannot do a bind merge of %d trees
Cannot do a oneway merge of %d trees
cannot do a partial commit during a %s.
Cannot do a %s reset in the middle of a merge.
Cannot do a twoway merge of %d trees
Can not do reflog for '%s'
Cannot do %s reset with paths.
cannot enforce both tab-in-indent and indent-with-non-tab
cannot exec '%s'
cannot expand target domain name in SRV RR
cannot feed the input to external filter %s
cannot fill %d bytes
cannot find commit %s (%s)
cannot find path %s in tree %s
cannot find the current offset
cannot fix permission bits on %s
Cannot force update the current branch.
cannot fork() for %s: %s
cannot fork to run external filter %s
cannot fstat packfile
Cannot get commit message for %s
cannot get host name: %s
cannot get RLIMIT_NOFILE
Cannot give description to detached HEAD
Cannot give more than one trees
Cannot handle files this big
Cannot handle more than %d bases. Ignoring %s.
cannot handle more than %d revs.
cannot handle %s internally
cannot happen -- lo and hi are identical
cannot hash %s
cannot lock HEAD ref
cannot lock ref '%s'
Cannot lock the ref '%s'.
cannot lstat '%s'
Cannot merge binary files: %s
Cannot merge binary files: %s (%s vs. %s)
Cannot merge empty notes ref (%s) into empty notes ref (%s)
		Cannot merge entry '%s' (%c): %.7s -> %.7s. Skipping!
cannot mix --commit, --abort or -s/--strategy
cannot mkdir %s
can not move directory into itself
cannot move directory over file
cannot opendir '%s'
cannot opendir %s (%s)
cannot open /etc/mailname: %s
Cannot open existing pack file '%s'
Cannot open existing pack idx file for '%s'
cannot open mail %s (%s)
cannot open mbox %s
cannot open or read '%s'
cannot open output file '%s'
cannot open pack access log '%s' for writing: %s
cannot open packfile '%s'
cannot open pack index
Cannot open patch file %s
cannot open '%s'
cannot open %s
Cannot open '%s'
cannot open '%s' for copying
cannot open %s: %s
Cannot overwrite
cannot overwrite multiple values with a single value
cannot parse DNS RR: %s
cannot parse SRV response: %s
cannot pread pack file
Cannot prepare timestamp regexp %s
Cannot read blob %s for path %s
Cannot read commit %s
cannot read data blob for %s
cannot read /etc/mailname: %s
cannot read existing object %s
Cannot read index
cannot readlink '%s'
cannot read mail %s (%s)
cannot read mbox
cannot read mbox %s
cannot read note %s for object %s
cannot read object %s
cannot read object %s '%s'
cannot read '%s'
cannot read %s
cannot read sha1_file for %s
cannot read %s: %s
cannot read the index
cannot read tree %s
cannot rename %s to %s
cannot rename the current branch while not on any.
cannot resolve HEAD
cannot reverse-apply a binary patch without the reverse hunk to '%s'
cannot rmdir '%s'
cannot run %s: %s
Cannot %s during a %s
cannot seek back
cannot set FD_CLOEXEC
Cannot setup tracking information; starting point is not a branch.
cannot simplify commit %s (because of %s)
cannot simplify commit %s (invalid %s)
cannot split patches from %s
cannot split patches from stdin
cannot start proxy %s
cannot stat path '%s'
cannot stat '%s'
cannot stat '%s': %s
cannot stat %s (%s)
cannot stat template '%s'
cannot stat the open index
cannot store index file
cannot store pack file
Cannot switch branch to a non-commit.
cannot symlink '%s' '%s'
cannot tell cwd
cannot unlink '%s'
cannot unlink %s: %s
cannot unmerge '%s'
cannot unpack %s from %s at offset %llu
cannot update HEAD ref
Cannot update sparse checkout: the following entries are not up-to-date:
Cannot update the ref '%s'.
cannot use -a with -d
Cannot use --contents with final commit object name
cannot use Perl-compatible regexes when not compiled with USE_LIBPCRE
cannot use %s as an exclude file
Cannot walk reflogs for %s
cannot write keep file '%s'
cannot write output
Can't cherry-pick into empty head
Can't connect to subservice %s.
Can't dup helper output fd
can't fdopen 'show' output fd
Can't find replacement commit for tag %s
can't find the current directory
can't open patch '%s'
Can't revert as initial commit
Can't run specified command
Can't specify files with --stdin
Can't specify files with --stdin-paths
Can't start thread for copying data: %s
Can't use --path with --no-filters
Can't use --stdin-paths with --path
Can't use --stdin-paths with --stdin
Can't verify ref %s
capabilities
capabilities^{}
case insensitive matching
!^[ 	]*(catch|do|for|if|instanceof|new|return|switch|throw|while)
cat <<\EOF
cat-file
cat_sort_uniq
  -C            detect copies.
-c expects a configuration string
chain length = %d: %lu object%s
changed in both
changes and commit them, and you can discard any commits you make in this
changes made to 
Changes not staged for commit:
Changes to be committed:
change upstream info
char%d: could not find "\ntype "
char%d: could not get SHA1 hash
char%d: could not verify object %s
char%d: does not start with "object "
char%llu: could not find next "\n"
char%llu: could not find "tagger "
char%llu: could not verify tag name
char%llu: malformed tagger field
char%llu: malformed tag timestamp
char%llu: malformed tag timezone
char%llu: missing tagger name
char%llu: missing tag timestamp
char%llu: no "tag " found
char%llu: trailing garbage in tag header
char%llu: type too long
charset=
check-attr
checkdiff_consume
--check does not make sense
check if - even missing - files are ignored in dry run
Checking cache tree
Checking connectivity
Checking connectivity (%d objects)
Checking directory %s
Checking HEAD link
Checking object directories
Checking object directory
Checking objects
Checking out files
checking out of the index.
Checking patch 
Checking reflog %s->%s
Checking rename of '%s' to '%s'
Checking %s
Checking %s %s
checkout
Checkout a branch or paths to the working tree
checkout -b
checkout <branch> instead of the remote's HEAD
checkout-index
checkout: moving from 
checkout: moving from %s to %s
checkout our version for unmerged files
checkout their version for unmerged files
check_preimage
check-ref-format
checks out all files in the index
--cherry
--cherry is incompatible with --left-only
--cherry-mark
--cherry-mark is incompatible with --cherry-pick
--cherry-pick
(cherry picked from commit 
cherry-pick failed
CHERRY_PICK_HEAD
--cherry-pick is incompatible with --cherry-mark
child->real_type == OBJ_OFS_DELTA
child->real_type == OBJ_REF_DELTA
    --children
--children
chmod %cx '%s'
^[	 ]*(class.*)$
^[ 	]*((class|def)[ 	].*)$
^[ 	]*((class|module|def)[ 	].*)$
^(((class[ 	]+)?(procedure|function)|constructor|destructor|interface|implementation|initialization|finalization)[ 	]*.*)$
^(.*=[ 	]*(class|record).*)$
clean.requireforce
clean.requireForce defaults to true and neither -n nor -f given; refusing to clean
clean.requireForce set to true and neither -n nor -f given; refusing to clean
clear assumed-unchanged bit
clearerr
clear-resolve-undo
clear skip-worktree bit
Clever... amending the last one with dirty index.
Clone a repository into a new directory
clone: from %s
Cloning into bare repository '%s'...
Cloning into '%s'...
closedir
Closed %s.
close failed on standard output
closing file '%s'
closing file %s: %s
cmdline ends with \
           [-c name=value] [--help]
%cn <%ce>
--color=
color.branch
color.branch.
color '*!+-' corresponding to the branch
color.decorate.
color.diff
color.diff.
color.grep
color.grep.context
color.grep.filename
color.grep.function
color.grep.linenumber
color.grep.match
color.grep.selected
color.grep.separator
color.pager
color.showbranch
color.status
color.status.
color.ui
--color-words
--color-words=
Comammand input error
combine patterns specified with -e
           <command> [<args>]
command line
command line too long
commit all changed files
commit (amend)
commitbeforemerge
commit (cherry-pick)
Commit contents options
COMMIT_EDITMSG
commit has empty message
commit (initial)
commit (merge)
Commit message options
commit only specified files
  (commit or discard the untracked or modified content in submodules)
commit %s
commits 
Commit %s does not have parent %d
commits don't follow merge-base
Commit %s in submodule path %s%s not found
Commit %s is a merge but no -m option was given.
(commits not present)
commits not present
commit.status
commit.template
committer
committer 
 Committer: 
committerdate
committeremail
committer-mail %s
committername
committer %s
committer-time %lu
committer-tz %s
Committing notes in notes merge worktree at %.*s
Committing unmerged notes
commit-tree
Commit your changes or stash them to proceed.
common diff options:
completed with %d local objects
compress better
compress faster
Compressing objects
--compression=
concatenate
Concatenating local and remote notes for %s
Concatenating unique lines in local and remote notes for %s
Config file location
Config remote shorthand cannot begin with '/': %s
(conflict)
CONFLICT (delete/modify): Notes for object %s deleted in %s and modified in %s. Version from %s left in tree.
conflict-marker-size
CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s
CONFLICT (rename/rename): Rename "%s"->"%s" in branch "%s" rename "%s"->"%s" in "%s"%s
CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s
Conflicts:
CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left in tree%s%s.
CONFLICT (%s): Merge conflict in notes for object %s
CONFLICT (%s): Merge conflict in %s
CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s
conflict style (merge or diff3)
confused by unstable object source data for %s
confusion beyond insanity
*connect
connect 
Connecting to %s (port %s) ... 
connect %s
consider <n> most recent tags (default: 10)
construct_path_with_fanout
containing %lu duplicate objects with a total size of %lukb.
contains
contains bad file modes
contains duplicate file entries
contains empty pathname
contains full pathnames
--contains option is only allowed with -l.
contains zero-padded file modes
Content-Disposition: %s; filename="%s"
--contents and --children do not blend well.
contents:body
contents:signature
contents:subject
Content-Transfer-Encoding
Content-Transfer-Encoding: 8bit
Content-Type
Content-Type: 
Content-Type: multipart/mixed; boundary="%s%s"
Content-Type: text/plain; charset=%s
Content-Type: text/plain; charset=UTF-8; format=fixed
Content-Type: text/x-patch; name="%s"
Context reduced to (%ld/%ld) to apply fragment at %d
--continue
continue refresh even when index needs update
Continuing under the assumption that you meant '%s'
control recursive fetching of submodules
controls recursive pushing of submodules
copied:     %s -> %s
copy-fd: read returned %s
copy-fd: write returned 0
copy-fd: write returned %s
Copying data between file descriptors failed
copy out the files from named stage
core.abbrev
core.askpass
core.attributesfile
core.autocrlf
core.autocrlf=input conflicts with core.eol=crlf
core.bare
core.bare and core.worktree do not make sense
core.bigfilethreshold
core.compression
core.createobject
core.deltabasecachelimit
core.editor
core.eol
core.excludesfile
core.filemode
core.fsyncobjectfiles
core.gitproxy
core.ignorecase
core.ignorestat
core.logallrefupdates
core.logpackaccess
core.loosecompression
core.notesref
core.packedgitlimit
core.packedgitwindowsize
core.pager
core.prefersymlinkrefs
core.preloadindex
core.quotepath
core.repositoryformatversion
core.safecrlf
core.sharedrepository
core.sparsecheckout
core.symlinks
core.trustctime
core.warnambiguousrefs
core.whitespace
core.worktree
corrupt binary patch at line %d: %.*s
corrupt commit
corrupt index file
corrupt loose object '%s'
corrupt mailbox
corrupt mark line: %s
Corrupt MERGE_HEAD file (%s)
corrupt MERGE_RR
corrupt packed object for %s
corrupt patch at line %d
corrupt patch for subproject %s
corrupt tag
corrupt tree file
corrupt tree sha %s
Could not access '%s'
Could not add %s to temporary index
Could not append '%s'
Could not append '%s' to '%s'
Could not apply '%s'
could not apply %s... %s
Could not change back to '%s'
Could not chdir to '%s'
could not close alternates file
Could not close %s
Could not come back to cwd
could not commit config file %s
could not create archive file '%s'
Could not create directory '%s'
Could not create directory %s
could not create file '%s'
could not create file '%s': %s
Could not create git link %s
could not create leading directories of '%s'
Could not create lost-found
Could not create sequencer directory %s
could not create temporary file '%s': %s
could not create work tree dir '%s'.
Could not delete %s
Could not extract email from committer identity.
Could not fetch %s
Could not find a tracked remote branch, please specify <upstream> manually.
Could not find author in commit %s
Could not find commit from NOTES_MERGE_PARTIAL.
Could not find committer in commit %s
Could not find merge strategy '%s'.
Could not finish '%s'
Could not get commit for %s. Skipping.
Could not get current working directory
Could not get directory '%s'
Could not get fetch map for refspec %s
Could not get ref %s
Could not get sha1 for %s. Skipping.
could not load commit's tree %s
could not load tagged object
could not lock config file %s
could not lock config file %s: %s
could not lookup commit %s
Could not make %s writable by group
Could not make temporary directory
Could not open /dev/null
Could not open directory %s
Could not open file '%s'
could not open or read '%s'
could not open '%s'
Could not open %s
could not open '%s' for reading
Could not open '%s' for tracing: %s
Could not open '%s' for writing
Could not open '%s' for writing.
Could not open %s for writing
Could not open %s: %s
Could not parse commit from NOTES_MERGE_PARTIAL.
Could not parse conflict hunks in '%s'
Could not parse conflict hunks in %s
could not parse HEAD commit
Could not parse line %d.
Could not parse local commit %s (%s)
could not parse newly created commit
Could not parse object '%s'
Could not parse object '%s'.
Could not parse remote commit %s (%s)
could not parse %s
Could not push objects to %s
Could not push to %s
Could not read blob %s
Could not read bundle '%s'.
could not read commit message: %s
could not read file '%s': %s
Could not read from '%s'
could not read from stdin
Could not read index
could not read input file
could not read log file '%s'
could not read log from standard input
could not read MERGE_MODE
could not read MERGE_MSG
Could not read object %s
could not read '%s'
Could not read %s
Could not read %s.
Could not read %s for notes-index
could not read SQUASH_MSG
Could not read tag %s
Could not read the index
could not read the input
could not redirect output
Could not refresh index
Could not remove branch %s
Could not remove config section '%s'
Could not remove temporary directory %s.
Could not rename config section '%s' to '%s'
Could not reset index file to revision '%s'.
Could not resolve ref '%s'
could not revert %s... %s
Could not rewind output message file
Could not run 'git rev-list'
Could not run 'git rev-list %s --not --remotes -n 1' command in submodule %s
Could not run 'git status --porcelain' in submodule %s
could not run gpg.
Could not run rsync to get refs
could not run stash.
Could not set GIT_DIR to '%s'
Could not set '%s'
Could not setup master '%s'
Could not setup %s
Could not spawn pack-objects
Could not stat '%s'
Could not stat %s
Could not switch to '%s'
Could not trace into fd given by GIT_TRACE environment variable
Could not truncate output message file at scissors
could not verify the tag '%s'
Could not write blob '%s'
could not write branch description template: %s
could not write commit template
Could not write new index file.
Could not write patch
Could not write '%s'
Could not write %s
Could not write %s: %s
Could not write temporary index to %s
Could not write to '%s'
Could not write to %s
Couldn't find remote ref HEAD
Couldn't find remote ref %s
Couldn't look up commit object for HEAD
Couldn't look up commit object for '%s'
couldn't look up newly created commit
Couldn't run fast-export
Couldn't run fast-import
Couldn't set %s
Couldn't write %s
Counting objects
count: %lu
count-objects
cover letter
cover-letter
Cover letter needs email format
cr-at-eol
create a bare repository
create a mirror repository (implies bare)
create and checkout a new branch
Create an empty git repository or reinitialize an existing one
create a shallow clone of that depth
create a single commit instead of doing a merge
 (create/copy files and use "git add" to track)
create_delta_index
Create, list, delete or verify a tag object signed with GPG
create_notes_commit
create-reflog
create reflog for new branch
create/reset and checkout a branch
create the branch's reflog
creating '%s' failed
creatordate
CRLF will be replaced by LF in %s.
CRLF would be replaced by LF in %s.
 %c %-*s 
%c [%s] 
%c %s %s
%c	%s:%s	
%c %s%-*s%s
%c %s%s%s
%c %-*s %-*s -> %s  (%s)
%c %-*s %-*s -> %s%s
  ctime: %d:%d
__ctype_b_loc
--cumulative
current branch, with or without a warning message.
current working directory is untracked
Current worktree: %s
custom merge driver %s lacks command line.
__cxa_atexit
 %*d %02d
D$03D$H3D$8
D$0+D$@9
D$@3D$<1
D$43D$$3D$P3D$0
D$4#D$8#D$0#D$,#D$(
D$4<PtQ<Tt
D$89D$,v
D$(9D$$}$
D$(9D$0v$
D$,9D$4t3
D$,9D$8w
D$@9D$<r
D$ 9D$$t\1
D$<9D$@vHk
D$<9D$X|
D$@9\$@w
dangling %s %s
data %lu
data stream error
data[sz] == '\0'
Data too large to fit into virtual memory space.
    --date-order
--date-order
Date:   %s
dcgettext
dcngettext
DD$4;|$(
+D$D9D$<}
%d	%d	%d
D$deadef
, %d deletion(-)
, %d deletions(-)
Debug: Capabilities complete.
Debug: Disconnecting.
Debug: Falling back to dumb transport.
Debug: Got cap %s
Debug: Read ref listing.
Debug: Remote helper quit.
Debug: Remote helper: <- %s
Debug: Remote helper: -> %s
Debug: Remote helper: Waiting...
debug search strategy on stderr
Debug: Smart transport connection ready.
debug-unpack
debug unpack-trees
December
decorate options
deepen %d
deepen history of shallow clone
--default
Defaulting to tracing on stderr...
default mode for recursion
deflateBound
deflateEnd
deflateEnd on object %s failed (%d)
deflateEnd: %s (%s)
deflateInit_
deflateInit2_
deflateInit2: %s (%s)
deflateInit: %s (%s)
deflate: out of memory
deflate: %s (%s)
(delete)
deleteall
delete branch (even if not merged)
[deleted]
deleted by them:
deleted by us:
deleted file mode 
deleted file %s still has contents
--delete doesn't make sense without any refs
Deleted replace ref '%s'
deleted:    %s
Deleted %sbranch %s (was %s).
Deleted tag '%s' (was %s)
delete fully merged branch
--delete is incompatible with --all, --mirror and --tags
--delete only accepts plain target ref names
delete refs
delete-refs
delete refs/remotes/<name>/HEAD
delete replace refs
deletes the reference
delete tags
delete URLs
Deleting a non-existent ref.
deleting branch '%s' that has been merged to
deleting '%s' failed
deleting the current branch
deletion of the current branch prohibited
deletion prohibited
--delta-base-offset
delta base offset is out of bound
delta base offset out of bound for %s
delta base offset overflow in pack for %s
Delta compression using up to %d threads.
delta data unpack-initial failed
delta replay has gone wild
delta size changed
denying non-fast-forward %s (you should pull first)
denying ref deletion for %s
--depth=
--depth=250
--depth is ignored in local clones; use file:// instead.
dereference
dereference tags into object IDs
descend at most <depth> levels
describe
destination exists
destination path '%s' already exists and is not an empty directory.
destination '%s' is not a directory
Destination %s is not a uri for %s
--detach cannot be used with -b/-B/--orphan
--detach cannot be used with -t
detachedhead
detached HEAD
detach the HEAD at named commit
Detected mismatched boundaries, can't recover
detect new or modified lines that have whitespace errors
  dev: %d	ino: %d
 %d file changed
 %d files changed
D$H3D$T3D$(1
D$H9D$4t
+D$h9t$h
did not receive remote status
Didn't think it matches any more
Did you forget to 'git add'?
Did you intend to checkout '%s' which can not be resolved as commit?
Did you mean ':%d:%s'?
Did you mean ':%d:%s' aka ':%d:./%s'?
Did you mean %s?
Did you mean '%s:%s' aka '%s:./%s'?
did you mean `--%s` (with two dashes ?)
diff a/%s b/%s	(rejected hunks)
diff.autorefreshindex
diff --cc 
diff.color
diff.color.
diff --combined 
diffcore-pickaxe.c
diff-delta.c
diff.dirstat
diff.external
diff-files
diff-filter
diff --git 
diff--gita/%.*sb/%.*s---a/%.*s+++b/%.*s
diff--gita/%.*sb/%.*sdeletedfilemode%06o---a/%.*s+++/dev/null
diff--gita/%.*sb/%.*snewfilemode%06o---/dev/null+++b/%.*s
diff.ignoresubmodules
diff-index
diff.mnemonicprefix
diff.noprefix
diff_output_prefix_callback
diff.renamelimit
diff.renames
diff-setup
diff_setup_done failed
diff setup failed
diff.suppressblankempty
diff.suppress-blank-empty
diff-tree
diff-tree 
diff_tree_local
	diff_tree_local(len = %i, base = %.7s, local = %.7s)
diff_tree_remote
	diff_tree_remote(base = %.7s, remote = %.7s)
diff=true
diff.wordregex
@@diff_words_show
, %d insertion(+)
, %d insertions(+)
directory/file
directory from which templates will be used
Directory not empty: logs/%s
Directory not empty: %s
dir_inside_of
--dirstat
--dirstat=
--dirstat-by-file
--dirstat-by-file=
dir && subdir && *dir && *subdir
--dirty is incompatible with committishes
!display_notes_trees
dissimilarity index 
%d line%s add%s whitespace errors.
%d line%s applied after fixing whitespace errors.
-d needs at least one argument
__dn_expand
D$Nremof
D$O8L$Ou5
does not exist at stage %d
!^[ 	]*(do|for|if|else|return|switch|while)
do not fetch all tags (--no-tags)
do not ignore new files
do not know what to do with %06o %s '%s'
do not list removed files
do not print names of files removed
do not print results to stdout (useful with --verify)
do not query remotes
do not remove, show only
do not show a diffstat at the end of the merge
Do not treat root commits as boundaries (Default: off)
do not trust the line counts in the hunk headers
do not warn about conflicts
don't add, only refresh the index
don't apply changes matching the given path
don't automatically commit
don't checkout new files
don't check the working tree after merging
don't create a checkout
don't expect at least one line of context
don't include a patch matching a commit upstream
Don't know how to clone %s
Don't know how to fetch from %s
don't match patterns in binary files
don't output binary diffs
don't print the patch filenames
don't show empty directories
don't show filenames
don't strip/add [PATCH]
don't update the index or the work tree
don't use local hardlinks, always copy
do so (now or later) by using -b with the checkout command again. Example:
--do-walk
!^[ 	]*(do|while|for|if|else|instanceof|new|return|switch|case|throw|catch|using)
Download objects and refs from another repository
D$p9C@ug
 %d rejects...
--dry-run
dst-prefix
dst refspec %s matches more than one.
dst ref %s receives from more than one src.
D$T9D$<|x
D$T9D$X}
D$(;|$,uM
Dump marks to this file
Duplicated ref, and SHA1s don't match: %s
Duplicated ref: %s
duplicate graft data: %s
duplicate parent %s ignored
duplicate replace ref: %s
* %d-way merge
D$X3D$D3D$41
early EOF
early EOF '%s'
--early-output
 (early part)
edit current diff and apply
edit-description
edit message before committing
edit the commit message
edit the description for the branch
Eh?  Object of type %d?
Either specify the URL from the command-line or configure a remote repository using
emacsclient
emacsclient version '%d' too old (< 22).
Email: %s
emit_line_0
empty alias for %s
Empty commit message.
empty commit set passed
empty-directory
empty ident %s <%s> not allowed
Empty patch. Aborted.
(empty tree)
enable auto-gc mode
enable message threading, styles: shallow, deep
enable more strict checking
--encoding=
encoding 
encoding %s
Encountered signed tag %s; use --signed-tag=<mode> to handle it.
end of packfile %s is unavailable
^[ 	]*((END[ 	]+)?(PROGRAM|MODULE|BLOCK[ 	]+DATA|([^'" 	]+[ 	]+)*(SUBROUTINE|FUNCTION))[ 	]+[A-Z].*)$
end revert or cherry-pick sequence
ensure at least <n> lines of context match
ent#%d %06o %s
entry %s in tree %s is not a tree
entry %.*s not found in tree %s
Entry '%s' not uptodate. Cannot merge.
Entry '%s' not uptodate. Cannot update sparse checkout.
entry '%s' object %s is a %s but specified type was (%s)
entry '%s' object %s is unavailable
entry '%s' object type (%s) doesn't match mode type (%s)
Entry '%s' overlaps with '%s'.  Cannot bind.
Entry '%s' would be overwritten by merge. Cannot merge.
eof before pack header was fully read
-e option
__errno_location
error-all
Error building trees
Error deleting %sbranch '%s'
Error in line %d: %.*s
Error in object
error in object: %s
error in sideband demultiplexer
Error on reachable objects of %s
Error opening '%s'
error processing config file(s)
error reading from textconv command '%s'
Error reading %s
Error removing temporary directory %s.
error-unmatch
error when closing sha1 file
error while closing pack file
error while reading from stdin %s
Error while running fast-export
Error while running fast-import
Error wrapping up %s
Error wrapping up %s.
especially if it merges an updated upstream into a topic branch.
/etc/gitattributes
/etc/gitconfig
/etc/mailname
everybody
Everything up-to-date
exact-match
--exclude
exclude-existing
exclude-from
exclude patterns are read from <file>
exclude-per-directory
--exclude-per-directory is meaningless unless -u
exclude-standard
--exec-path
exec '%s': cd to '%s' failed
--exit-code
Exiting because of an unresolved conflict.
exit with a zero status even if nothing matched
exit with zero when there's no error
Expansion of alias '%s' failed; '%s' is not a git command
expected edge sha1, got garbage:
Expected git repo version <= %d, found %d
expected ok/error, helper said '%s'
expected sha1, got garbage:
expected shallow/unshallow, got %s
expected SRV RR, found RR type %d
Expected two arguments
expects "always", "auto", or "never"
expects a numerical value
--expire
--expire=
expire objects older than <time>
--expire-unreachable=
Explicit paths specified without -i nor -o; assuming --only paths...
export-ignore
Exporting signed tag %s
--export-marks=
export-marks
export-marks 
export-subst
--ext-diff
--extended-regexp
!__extension__ ({ size_t __s1_len, __s2_len; (__builtin_constant_p (o->local_ref) && __builtin_constant_p (local_tree->ref) && (__s1_len = __builtin_strlen (o->local_ref), __s2_len = __builtin_strlen (local_tree->ref), (!((size_t)(const void *)((o->local_ref) + 1) - (size_t)(const void *)(o->local_ref) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((local_tree->ref) + 1) - (size_t)(const void *)(local_tree->ref) == 1) || __s2_len >= 4)) ? __builtin_strcmp (o->local_ref, local_tree->ref) : (__builtin_constant_p (o->local_ref) && ((size_t)(const void *)((o->local_ref) + 1) - (size_t)(const void *)(o->local_ref) == 1) && (__s1_len = __builtin_strlen (o->local_ref), __s1_len < 4) ? (__builtin_constant_p (local_tree->ref) && ((size_t)(const void *)((local_tree->ref) + 1) - (size_t)(const void *)(local_tree->ref) == 1) ? __builtin_strcmp (o->local_ref, local_tree->ref) : (__extension__ ({ const unsigned char *__s2 = (const unsigned char *) (const char *) (local_tree->ref); register int __result = (((const unsigned char *) (const char *) (o->local_ref))[0] - __s2[0]); if (__s1_len > 0 && __result == 0) { __result = (((const unsigned char *) (const char *) (o->local_ref))[1] - __s2[1]); if (__s1_len > 1 && __result == 0) { __result = (((const unsigned char *) (const char *) (o->local_ref))[2] - __s2[2]); if (__s1_len > 2 && __result == 0) __result = (((const unsigned char *) (const char *) (o->local_ref))[3] - __s2[3]); } } __result; }))) : (__builtin_constant_p (local_tree->ref) && ((size_t)(const void *)((local_tree->ref) + 1) - (size_t)(const void *)(local_tree->ref) == 1) && (__s2_len = __builtin_strlen (local_tree->ref), __s2_len < 4) ? (__builtin_constant_p (o->local_ref) && ((size_t)(const void *)((o->local_ref) + 1) - (size_t)(const void *)(o->local_ref) == 1) ? __builtin_strcmp (o->local_ref, local_tree->ref) : (__extension__ ({ const unsigned char *__s1 = (const unsigned char *) (const char *) (o->local_ref); register int __result = __s1[0] - ((const unsigned char *) (const char *) (local_tree->ref))[0]; if (__s2_len > 0 && __result == 0) { __result = (__s1[1] - ((const unsigned char *) (const char *) (local_tree->ref))[1]); if (__s2_len > 1 && __result == 0) { __result = (__s1[2] - ((const unsigned char *) (const char *) (local_tree->ref))[2]); if (__s2_len > 2 && __result == 0) __result = (__s1[3] - ((const unsigned char *) (const char *) (local_tree->ref))[3]); } } __result; }))) : __builtin_strcmp (o->local_ref, local_tree->ref)))); })
!__extension__ ({ size_t __s1_len, __s2_len; (__builtin_constant_p (p->one->path) && __builtin_constant_p (p->two->path) && (__s1_len = __builtin_strlen (p->one->path), __s2_len = __builtin_strlen (p->two->path), (!((size_t)(const void *)((p->one->path) + 1) - (size_t)(const void *)(p->one->path) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((p->two->path) + 1) - (size_t)(const void *)(p->two->path) == 1) || __s2_len >= 4)) ? __builtin_strcmp (p->one->path, p->two->path) : (__builtin_constant_p (p->one->path) && ((size_t)(const void *)((p->one->path) + 1) - (size_t)(const void *)(p->one->path) == 1) && (__s1_len = __builtin_strlen (p->one->path), __s1_len < 4) ? (__builtin_constant_p (p->two->path) && ((size_t)(const void *)((p->two->path) + 1) - (size_t)(const void *)(p->two->path) == 1) ? __builtin_strcmp (p->one->path, p->two->path) : (__extension__ ({ const unsigned char *__s2 = (const unsigned char *) (const char *) (p->two->path); register int __result = (((const unsigned char *) (const char *) (p->one->path))[0] - __s2[0]); if (__s1_len > 0 && __result == 0) { __result = (((const unsigned char *) (const char *) (p->one->path))[1] - __s2[1]); if (__s1_len > 1 && __result == 0) { __result = (((const unsigned char *) (const char *) (p->one->path))[2] - __s2[2]); if (__s1_len > 2 && __result == 0) __result = (((const unsigned char *) (const char *) (p->one->path))[3] - __s2[3]); } } __result; }))) : (__builtin_constant_p (p->two->path) && ((size_t)(const void *)((p->two->path) + 1) - (size_t)(const void *)(p->two->path) == 1) && (__s2_len = __builtin_strlen (p->two->path), __s2_len < 4) ? (__builtin_constant_p (p->one->path) && ((size_t)(const void *)((p->one->path) + 1) - (size_t)(const void *)(p->one->path) == 1) ? __builtin_strcmp (p->one->path, p->two->path) : (__extension__ ({ const unsigned char *__s1 = (const unsigned char *) (const char *) (p->one->path); register int __result = __s1[0] - ((const unsigned char *) (const char *) (p->two->path))[0]; if (__s2_len > 0 && __result == 0) { __result = (__s1[1] - ((const unsigned char *) (const char *) (p->two->path))[1]); if (__s2_len > 1 && __result == 0) { __result = (__s1[2] - ((const unsigned char *) (const char *) (p->two->path))[2]); if (__s2_len > 2 && __result == 0) __result = (__s1[3] - ((const unsigned char *) (const char *) (p->two->path))[3]); } } __result; }))) : __builtin_strcmp (p->one->path, p->two->path)))); })
external diff died, stopping at %s.
external filter %s failed
external filter %s failed %d
ext-grep
F4f;E4tu
Failed seeking to start of '%s'
Failed to add resolved note '%s' to notes tree
failed to apply delta
Failed to chdir: %s
Failed to checksum '%s'
failed to close pipe to 'show' for object '%s'
failed to close rev-list's stdin: %s
Failed to commit notes tree to database
failed to concatenate notes (combine_notes_cat_sort_uniq)
failed to concatenate notes (combine_notes_concatenate)
failed to copy file to '%s'
Failed to copy notes from '%s' to '%s'
failed to create directory '%s'
failed to create link '%s'
Failed to create output files
failed to create path '%s'%s
failed to delete
Failed to delete ref NOTES_MERGE_PARTIAL
Failed to delete ref NOTES_MERGE_REF
failed to delete %s
failed to exec '%s': %s
Failed to execute internal merge
Failed to expand user dir in: '%s'
Failed to finalize notes merge
Failed to find/parse commit %s
Failed to find tree of HEAD.
Failed to find tree of %s.
failed to finish 'show' for object '%s'
Failed to flush %s: %s
Failed to load %s %s into notes tree from %s
failed to lock
Failed to lock ref for update
failed to lock %s
Failed to merge submodule %s (%s)
failed to open '%s'
  Failed to parse dirstat cut-off percentage '%.*s'
Failed to parse --dirstat/-X option parameter:
Failed to parse emacsclient version.
failed to push some refs to '%s'
failed to read %d bytes from '%s'
failed to read delta base object %s at offset %llu from %s
failed to read delta-pack base object %s
failed to read from stdin
Failed to read notes tree referenced by %s (%s)
failed to read object %s
Failed to read object '%s'.
failed to read object %s at offset %llu from %s
Failed to read ref NOTES_MERGE_PARTIAL
failed to read the cache
failed to redirect stderr to /dev/null: %s
Failed to remove 'git notes merge' worktree
failed to remove %s
Failed to resolve HEAD as a valid ref.
Failed to resolve local notes ref '%s'
Failed to resolve NOTES_MERGE_REF
Failed to resolve remote notes ref '%s'
Failed to resolve '%s' as a valid ref.
Failed to run command '%s': %s
failed to run %s
Failed to send request
Failed to simplify parents of commit %s
Failed to start emacsclient.
failed to stat '%s'
failed to stat %s
Failed to stat '%s'
failed to stat %s: %s
failed to stat '%s%s%s'
Failed to store link to current notes ref (%s)
failed to symlink '%s'
Failed to traverse parents of commit %s
failed to unlink '%s'
failed to unpack compressed delta at offset %llu from %s
failed to unpack HEAD tree object
failed to unpack tree object %s
failed to validate delta base reference at offset %llu from %s
failed to write
Failed to write blob object from '%s'
failed to write commit object
failed to write new configuration file %s
Failed to write notes tree to database
failed to write object
failed to write object %s
Failed to write ref
failed to write ref-pack file
failed utime() on %s: %s
failed write to rev-list: %s
failed writing detached signature to '%s': %s
Fake a tagger when tags lack one
fake-missing-tagger
fallback
fanout < 20
Fast-forward
fast-forwardable
Fatal merge failure, shouldn't happen.
fatal - unsorted cache subtree
-f cannot be used with -d or -l
feature done
February
feeding unmodified %s to diffcore
fetch --all does not make sense with refspecs
fetch --all does not take a repository argument
fetch all tags and associated objects
fetch from all remotes
Fetch from and merge with another repository or a local branch
fetch from multiple remotes
fetch.fsckobjects
Fetching a group and specifying refspecs does not make sense
Fetching %s
Fetching submodule %s%s
fetch-pack
fetch-pack: unable to fork off %s
fetch-pack: unable to fork off sideband demultiplexer
.fetchrecursesubmodules
fetch.recursesubmodules
fetch %s %s
fetch the remote branches
fetch.unpacklimit
  Fetch URL: %s
fgets returned NULL, not EOF, not error!
field name to sort on
file/directory
file/directory conflict: %s, %s
filename 
Filename %s not found in packed_git
filename too long
file %s has only %lu lines
file %s is far too short to be a packfile
file %s is not a GIT packfile
files-with-matches
files-without-match
file to read from
file write error (%s)
Finalized notes merge commit: %s
finalize notes merge by committing unmerged notes
Final output: %d %s
final sha1 did not match
find ancestors for a single n-way merge
Find by binary search the change that introduced a bug
--find-copies
--find-copies=
  --find-copies-harder
--find-copies-harder
Find line copies within and across files
Find line movements within and across files
--find-renames
--find-renames=
finds in contents not managed by git
find the color configured: [default]
find the color setting: [stdout-is-tty]
find the tag that comes after the commit
find_unresolved_deltas
finished search at %s
Finishing SQUASH_MSG
--first-parent
fixed_preimage.nr == preimage->nr
--fixed-strings
Fix them up in the work tree,
--fix-thin
--fix-thin cannot be used without --stdin
fixup! %s
fmt-merge-msg
-f needs some arguments
fn_out_diff_words_aux
--follow
followtags
for blob objects, run textconv on object's content
force checkout (throw away local modifications)
force creation (when already exists)
forced update
forced-update
force edit of commit
force move/rename even if target exists
force overwrite of local branch
force progress reporting
force-remove
forces overwrite of existing files
force updates
for conflicts, use a union version
for conflicts, use our version
for conflicts, use their version
for conflicts, use this marker size
for_each_note
for_each_note_helper
for-each-ref
Forgot resolution for %s
--format=
$Format:
format.attach
format.cc
format_display_notes
format.headers
format.headers without value
format:%h] %s
format.numbered
format-patch
format.pretty
format.signature
format.signoff
format.subjectprefix
format.suffix
--format=tar
format.thread
  formatting output:
format.to
format to use for the output
(for porcelains) forget saved unresolved conflicts
for-rewrite
--for-status
Forward-port local commits to the updated upstream head
Found a possible merge resolution for the submodule:
Found errors in 'diff.dirstat' config variable:
found existing file at '%s'
found %u common ancestor(s):
__fprintf_chk
freeaddrinfo
freopen64
from :%d
 (from %s)
From %.*s
From %s Mon Sep 17 00:00:00 2001
fsck-objects
fsync error on '%s'
ftruncate64
--full-diff
--full-history
--full-index
  --full-index  show full object name on index lines.
full-tree
Full write to remote helper failed
--function-context
funny refname
__fxstat64
gai_strerror
garbage at end of loose object '%s'
garbage found: %.*s/%s
garbage: %lu
gave up search at %s
gc.aggressivewindow
gc.autopacklimit
gc.packrefs
gc.pruneexpire
gc.rerereresolved
gc.rerereunresolved
General options
generate a cover letter
generation: %d, but deref?
Generic options
getaddrinfo
get all values: key [value-regex]
get-color
--get-color and variable type are incoherent
get-colorbool
gethostbyname
gethostname
getnameinfo
get_note
getpagesize
getpwnam
getpwuid
get-regexp
getrlimit64
get-tar-commit-id
gettimeofday
--get-url
get value: name [value-regex]
get values for regexp: name-regex [value-regex]
git add [options] [--] <filepattern>...
git_all_attrs died
GIT_ALTERNATE_OBJECT_DIRECTORIES
git apply: bad git-diff - expected /dev/null, got %s on line %d
git apply: bad git-diff - expected /dev/null on line %d
git apply: bad git-diff - inconsistent %s filename on line %d
git apply: failed to read
git apply [options] [<patch>...]
git archive: expected ACK/NAK, got EOF
git archive: expected a flush
git archive --list
git archive: NACK %s
git archive [options] <tree-ish> [<path>...]
git archive: protocol error
git archive --remote <repo> [--exec <cmd>] --list
git archive --remote <repo> [--exec <cmd>] [options] <tree-ish> [<path>...]
git archive: Remote with no URL
.gitattributes
GIT_ATTR_NOSYSTEM
GIT_AUTHOR_DATE
GIT_AUTHOR_EMAIL
GIT_AUTHOR_IDENT
GIT_AUTHOR_NAME
GIT binary patch
git bisect cannot work properly in this case.
git bisect--helper --next-all [--no-checkout]
git blame [options] [rev-opts] [rev] [--] file
  git branch -d %s
 git branch new_branch_name %s
git branch [options] [-l] [-f] <branchname> [<start-point>]
git branch [options] (-m | -M) [<oldbranch>] <newbranch>
git branch [options] [-r | -a] [--merged | --no-merged]
git branch [options] [-r] (-d | -D) <branchname>...
git bundle create <file> <git-rev-list args>
git cat-file (--batch|--batch-check) < <list_of_objects>
git cat-file %s: bad file
git cat-file --textconv %s: <object> must be <sha1:path>
git cat-file --textconv: unable to run textconv on %s
git cat-file (-t|-s|-e|-p|<type>|--textconv) <object>
git cat-file: unknown option: %s
GIT_CEILING_DIRECTORIES
git check-attr [-a | --all | attr...] [--] pathname...
git_check_attr died
git check-attr --stdin [-a | --all | attr...] < <list-of-paths>
  git checkout -b new_branch_name
git checkout: --detach does not take a path argument
git checkout: -f and -m are incompatible
git checkout-index: don't mix '--all' and explicit filenames
git checkout-index: don't mix '--all' and '--stdin'
git checkout-index: don't mix '--stdin' and explicit filenames
git checkout-index [options] [--] [<file>...]
git checkout-index: %s 
git checkout [options] <branch>
git checkout [options] [<branch>] -- <file>...
git checkout: --ours/--theirs, --force and --merge are incompatible when
git checkout: updating paths is incompatible with switching branches.
git check-ref-format [--normalize] [options] <refname>
GIT_CHERRY_PICK_HELP
git cherry-pick [options] <commit-ish>
git cherry-pick <subcommand>
git cherry [-v] [<upstream> [<head> [<limit>]]]
git clean [-d] [-f] [-n] [-q] [-e <pattern>] [-x | -X] [--] <paths>...
git clone [options] [--] <repo> [<dir>]
'git clone' won't result in any file checked out, causing confusion.
git commands
    git commit --allow-empty
    git commit --amend --reset-author
git commit [options] [--] <filepattern>...
GIT_COMMITTER_DATE
GIT_COMMITTER_EMAIL
GIT_COMMITTER_IDENT
GIT_COMMITTER_NAME
git commit-tree: failed to close '%s'
git commit-tree: failed to open '%s'
git commit-tree: failed to read
git commit-tree: failed to read '%s'
git commit-tree [(-p <sha1>)...] [-S<signer>] [-m <message>] [-F <file>] <sha1> <changelog
GIT_CONFIG
    git config --global user.email you@example.com
  git config --global user.email "you@example.com"
    git config --global user.name "Your Name"
  git config --global user.name "Your Name"
GIT_CONFIG_NOSYSTEM
git config [options]
GIT_CONFIG_PARAMETERS
git count-objects [-v]
GIT_DEBUG_LOOKUP
git describe [options] <committish>*
git describe [options] --dirty
git diff-files [-q] [-0/-1/2/3 |-c|--cc] [<common diff options>] [<path>...]
git diff header lacks filename information (line %d)
git diff header lacks filename information when removing %d leading pathname components (line %d)
git diff-index [-m] [--cached] [<common diff options>] <tree-ish> [<path>...]
git diff [<options>] [<commit> [<commit>]] [--] [<path>...]
GIT_DIFF_OPTS
git diff %s <path> <path>
git diff-tree [--stdin] [-m] [-c] [--cc] [-s] [-v] [--pretty] [-t] [-r] [--root] [<common diff options>] <tree-ish> [<tree-ish>] [<path>...]
--git-dir
--git-dir=
gitdir: 
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
gitdir: %s
GIT_DISCOVERY_ACROSS_FILESYSTEM
GIT_EDITOR
GIT_EXEC_PATH
GIT_EXTERNAL_DIFF
GIT_EXT_SERVICE
GIT_EXT_SERVICE_NOPREFIX
git fast-export [rev-list-opts]
git fetch --all [<options>]
git fetch --multiple [<options>] [(<repository> | <group>)...]
git fetch [<options>] <group>
git fetch [<options>] [<repository> [<refspec>...]]
git fetch-pack [--all] [--quiet|-q] [--keep|-k] [--thin] [--include-tag] [--upload-pack=<git-upload-pack>] [--depth=<n>] [--no-progress] [-v] [<host>:]<directory> [<refs>...]
git fetch-pack: expected ACK/NAK, got EOF
git fetch_pack: expected ACK/NAK, got '%s'
git fetch-pack: expected shallow list
git fetch-pack: fetch failed.
GIT_FLUSH
git fmt-merge-msg [-m <message>] [--log[=<n>]|--no-log] [--file <file>]
git for-each-ref [options] [<pattern>]
git format-patch [options] [<since> | <revision range>]
git fsck [options] [<object>...]
git gc [options]
git get-tar-commit-id: read error
git get-tar-commit-id < <tarfile>
git get-tar-commit-id: write error
.git/.git
GIT_GRAFT_FILE
git grep [options] [-e] <pattern> [<rev>...] [[--] <path>...]
git hash-object  --stdin-paths < <list-of-paths>
git hash-object [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin] [--] <file>...
GITHEAD_%s
git-help
git help [--all] [--man|--web|--info] [command]
.gitignore
GIT_INDEX_FILE
GIT_INDEX_FILE=%s
git index-pack [-v] [-o <index-file>] [--keep | --keep=<msg>] [--verify] [--strict] (<pack-file> | --stdin [--fix-thin] [<pack-file>])
git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [directory]
git log [<options>] [<since>..<until>] [[--] <path>...]
git logs can only follow renames on one pathname at a time
git ls-files: internal error - cache entry not superset of prefix
git ls-files: internal error - directory entry not superset of prefix
git ls-files [options] [<file>...]
git ls-remote [--heads] [--tags]  [-u <exec> | --upload-pack <exec>]
git ls-tree [<options>] <tree-ish> [<path>...]
git mailinfo [-k|-b] [-u | --encoding=<encoding> | -n] [--scissors | --no-scissors] msg patch < mail >info
git mailsplit [-d<prec>] [-f<n>] [-b] [--keep-cr] -o<directory> [(<mbox>|<Maildir>)...]
GIT_MAN_VIEWER
git-merge-
git merge --abort
git merge-base [-a|--all] <commit> <commit>...
git merge-base [-a|--all] --octopus <commit>...
git merge-base --independent <commit>...
git merge-file [options] [-L name1 [-L orig [-L name2]]] file1 orig_file file2
git merge-index [-o] [-q] <merge-program> (-a | [--] <filename>*)
git merge-index: %s not in the cache
git merge-index: unknown option %s
git merge [options] [<commit>...]
git merge [options] <msg> HEAD <commit>
git merge-ours <base>... -- HEAD <remote>...
git merge-tree <base-tree> <branch1> <branch2>
GIT_MERGE_VERBOSITY
git mktag < signaturefile
git mktree [-z] [--missing] [--batch]
/.gitmodules
git mv [options] <source>... <destination>
git name-rev [options] --all
git name-rev [options] <commit>...
git name-rev [options] --stdin
GIT_NAMESPACE
GIT_NO_REPLACE_OBJECTS
git notes add [<options>] [<object>]
git notes append [<options>] [<object>]
git notes copy [<options>] <from-object> <to-object>
git notes copy --stdin [<from-object> <to-object>]...
GIT_NOTES_DISPLAY_REF
git notes edit [<object>]
git notes get-ref
git notes [list [<object>]]
git notes merge --abort [<options>]
git notes merge --abort [-v | -q]
git notes merge --commit [<options>]
git notes merge --commit [-v | -q]
git notes merge [<options>] <notes_ref>
git notes prune [<options>]
GIT_NOTES_REF
git notes [--ref <notes_ref>] add [-f] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]
git notes [--ref <notes_ref>] append [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]
git notes [--ref <notes_ref>] copy [-f] <from-object> <to-object>
git notes [--ref <notes_ref>] edit [<object>]
git notes [--ref <notes_ref>] get-ref
git notes [--ref <notes_ref>] [list [<object>]]
git notes [--ref <notes_ref>] merge [-v | -q] [-s <strategy> ] <notes_ref>
git notes [--ref <notes_ref>] prune [-n | -v]
git notes [--ref <notes_ref>] remove [<object>...]
git notes [--ref <notes_ref>] show [<object>]
git notes remove [<object>]
GIT_NOTES_REWRITE_MODE
GIT_NOTES_REWRITE_REF
git notes show [<object>]
GIT_OBJECT_DIRECTORY
git pack-objects failed
git pack-objects [ -q | --progress | --all-progress ]
git pack-redundant [ --verbose ] [ --alt-odb ] < --all | <.pack filename> ...>
git pack-refs [options]
GIT_PAGER
GIT_PAGER_IN_USE
git patch-id < patch
GIT_PREFIX
git process crashed in this repository earlier. Make sure no other git
GIT_PROXY_COMMAND
git prune [-n] [-v] [--expire <time>] [--] [<head>...]
git prune-packed [-n|--dry-run] [-q|--quiet]
    git push <name>
git push [<options>] [<repository> [<refspec>...]]
    git push --set-upstream %s %s
    git push %s HEAD:<name-of-remote-branch>
git read-tree [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>] [-u [--exclude-per-directory=<gitignore>] | -i]] [--no-sparse-checkout] [--index-output=<file>] (--empty | <tree-ish1> [<tree-ish2> [<tree-ish3>]])
git-receive-pack
git receive-pack <git-dir>
GIT_REFLOG_ACTION
git reflog delete [--verbose] [--dry-run] [--rewrite] [--updateref] <refs>...
git reflog expire [--verbose] [--dry-run] [--stale-fix] [--expire=<time>] [--expire-unreachable=<time>] [--all] <refs>...
git reflog [ show | expire | delete ]
    git remote add <name> <url>
git remote add [<options>] <name> <url>
git remote add [-t <branch>] [-m <master>] [-f] [--mirror=<fetch|push>] <name> <url>
git remote prune [-n | --dry-run] <name>
git remote prune [<options>] <name>
 'git remote prune %s' to remove any old, conflicting branches
git remote rename <old> <new>
git remote rm <name>
git-remote-%s
git remote set-branches --add <name> <branch>...
git remote set-branches [--add] <name> <branch>...
git remote set-branches <name> <branch>...
git remote set-head <name> (-a | -d | <branch>)
git remote set-head <name> (-a | -d | <branch>])
  git remote set-head %s %s
git remote set-url --add <name> <newurl>
git remote set-url --delete <name> <url>
git remote set-url <name> <newurl> [<oldurl>]
git remote set-url [--push] <name> <newurl> [<oldurl>]
git remote show [<options>] <name>
git remote update [<options>] [<group> | <remote>]...
git remote [-v | --verbose]
git remote [-v | --verbose] show [-n] <name>
git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...]
git replace -d <object>...
git replace [-f] <object> <replacement>
git replace -l [<pattern>]
git rerere [clear | forget path... | status | remaining | diff | gc]
'git rerere forget' without paths is deprecated
git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>]
git reset --patch [<commit>] [--] [<paths>...]
git reset [-q] <commit> [--] <paths>...
git revert [options] <commit-ish>
git revert <subcommand>
git rev-list [OPTION] <commit-id>... [ -- paths... ]
git rev-parse --parseopt [options] -- [<args>...]
git rm [options] [--] <file>...
git rm: '%s'
git rm: unable to remove %s
git %s <base>... -- <head> <remote> ...
git send-pack [--all | --mirror] [--dry-run] [--force] [--receive-pack=<git-receive-pack>] [--verbose] [--thin] [<host>:]<directory> [<ref>...]
git %s: failed to read the index
git %s: failed to refresh the index
git shortlog [-n] [-s] [-e] [-w] [rev-opts] [--] [<commit-id>... ]
git show-branch [-a|--all] [-r|--remotes] [--topo-order | --date-order] [--current] [--color[=<when>] | --no-color] [--sparse] [--more=<n> | --list | --independent | --merge-base] [--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]
git show-branch (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]
git show-ref: bad ref %s (%s)
git show-ref: bad tag at ref %s (%s)
git show-ref --exclude-existing[=pattern] < ref-list
git show-ref [-q|--quiet] [--verify] [--head] [-d|--dereference] [-s|--hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [pattern*] 
`git %s' is aliased to `%s'
git: '%s' is not a git command. See 'git --help'.
git+ssh://
git status [options] [--] <filepattern>...
'git status --porcelain' failed in submodule %s
git stripspace [-s | --strip-comments] < input
git symbolic-ref [options] name [ref]
git tag [-a|-s|-u <key-id>] [-f] [-m <msg>|-F <file>] <tagname> [<head>]
git tag -d <tagname>...
git tag -l [-n[<num>]] [<pattern>...]
git tag -v <tagname>...
*** "git tar-tree" is now deprecated.
git tar-tree [--remote=<repo>] <tree-ish> [basedir]
GIT_TEMPLATE_DIR
GIT_TEXTDOMAINDIR
Git to program copy
GIT_TRACE
GIT_TRACE_PACKET
GIT_TRACE_SETUP
GIT_TRANSLOOP_DEBUG
GIT_TRANSPORT_HELPER_DEBUG
git unpack-file <sha1>
git unpack-objects [-n] [-q] [-r] [--strict] < pack-file
git update-index: bad quoting of path name
  git update-index --cacheinfo 160000 %s "%s"
git update-index: --cacheinfo cannot add %s
git update-index: cannot chmod %cx '%s'
git update-index [options] [--] [<file>...]
git update-index: unable to remove %s
git update-index: unable to update %s
git update-ref [options] -d <refname> [<oldval>]
git update-ref [options]    <refname> <newval> [<oldval>]
git update-server-info [--force]
git-upload-archive
git upload-archive: archiver died with error
git upload-archive <repo>
git-upload-pack
GIT_USE_LOOKUP
git var (-l | <variable>)
git verify-pack [-v|--verbose] [-s|--stat-only] <pack>...
git verify-tag [-v|--verbose] <tag>...
git [--version] [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
git version %s
.git_vtag_tmpXXXXXX
GIT_WORK_TREE
git-write-tree
git write-tree failed to write a tree
git write-tree [--missing-ok] [--prefix=<prefix>/]
giving up
GLIBC_2.0
GLIBC_2.1
GLIBC_2.1.1
GLIBC_2.1.3
GLIBC_2.2
GLIBC_2.2.3
GLIBC_2.3
GLIBC_2.3.2
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.7
GLIBC_2.9
__gmon_start__
gmtime_r
: Good signature from 
got ack (%d) %s
got ack %d %s
gpg did not accept the data
gpg failed to sign the data
gpg.program
gpg-sign
GPG sign commit
gpg verification failed.
graft objects missing
graph->new_mapping[i] == -1
graph->new_mapping[i - 1] > target
graph->new_mapping[i - 2] < 0
graph->new_mapping[i - 3] == target
graph_next_line
graph->num_parents >= 3
graph_output_collapsing_line
graph_output_commit_char
graph_output_post_merge_line
graph_output_pre_commit_line
graph->revs->boundary
grep.extendedregexp
grep: failed to create thread: %s
gzip -cn
\$H3\$T1
!hashcmp(mp->local, uninitialized)
!hashcmp(mp->obj, obj)
!hashcmp(p->one->sha1, mp->base)
hash-object
hash to stdout
^=head[0-9] .*
  HEAD branch: (not queried)
  HEAD branch (remote HEAD is ambiguous, may be one of the following):
  HEAD branch: %s
  HEAD branch: (unknown)
HEAD: detached HEAD points at nothing
--header
    --header | --pretty
HEAD is now at
HEAD is now at %s
HEAD (no branch)
HEAD not found below refs/heads!
HEAD points to something strange (%s)
help-all
help.autocorrect
help.browser
helper reported unexpected status of %s
helper %s does not support dry-run
--helper-status
help.format
^[ 	]*(<[Hh][1-6][ 	].*>.*)$
highlight matches
hint: %.*s
--histogram
 %h: %m %s
$HOME not set
--honor-pack-keep
hook declined to update %s
hooks/post-receive
hooks/post-rewrite
hooks/post-update
hooks/pre-receive
hooks/%s
hooks/update
However, there were unannotated tags: try --tags.
how to strip spaces and #comments from message
|$H#T$\1
--html-path
Huh? %.*s is in index?
Hunk #%d applied cleanly.
Hunk #%d succeeded at %d (offset %d lines).
i18n.commitencoding
i18n.logoutputencoding
I am totally screwed
I cannot read more than %d trees
iconv_close
iconv_open
identify the file status with tags
I don't handle protocol '%s'
if any <file> is not in the index, treat this as an error
If no other git process is currently running, this probably means a
If this is correct simply add it to the index for example
If this is not correct, please remove the file
If you are sure you want to delete it, run 'git branch -D %s'.
If you want to create a new branch to retain commits you create, you may
If you want to keep them by creating a new branch, this may be a good time
If you want to trace into a file, then please set %s to an absolute pathname (starting with /).
If you wish to commit it anyway, use:
ignore additions made by the patch
--ignore-all-space
ignore-cache-tree
ignore changes in whitespace when finding context
ignore changes to submodules, optional when: all, dirty, untracked. (Default: all)
--ignore-existing
ignore files missing from worktree
ignore-if-in-upstream
--ignore-missing
'ignore' or 'warn' in the remote repository to allow pushing into
--ignore-space-at-eol
--ignore-space-change
--ignore-submodules
--ignore-submodules=
ignore-unmatch
ignore-whitespace
Ignore whitespace differences
ignoring %.4s extension
ignoring broken ref %s.
ignoring dangling symref %s.
* Ignoring funny ref '%s' locally
		Ignoring local-only change for %s: %.7s -> %.7s
Ignoring path %s
ignoring %s; cannot handle more than %d refs
ignoring template %s
^(@(implementation|interface|protocol)[ 	].*)$
implicitidentity
import all tags and associated objects when fetching
--import-marks=
import-marks
Import marks from this file
import %s
impossible object directory
impossibly large verbosity value
Impossibly long personal identifier
in %0.1f seconds automatically...
inaccurate-eof
include object size
include status in commit message template
 include-tag
--include-tag
include the current branch
incomplete
incomplete pattern expression: %s
inconsistency with delta count
inconsistent aliased update
--incremental
indent-with-non-tab
indent with spaces
independent
--independent cannot be used with other options
index CRC mismatch for object %s from %s at offset %llu
index file corrupt
index file open failed
index file %s is too small
index file %s is version %u and is not supported by this binary (try upgrading GIT to a newer version)
index file smaller than expected
index-info
Indexing objects
index_name
index-output
--index outside a repository
index-pack
index-pack abnormal exit
index-pack died
index-pack fork failed
Index records invalid resolve-undo information
index uses %.4s extension, which we do not understand
--index-version=
indicate hit with exit status without output
inexact rename detection was skipped due to too many files.
inflateEnd
inflateEnd: %s (%s)
inflateInit_
inflateInit2_
inflateInit2: %s (%s)
inflateInit: %s (%s)
inflate: out of memory
inflate returned %d
inflate: %s (%s)
info/attributes
info/exclude
info/grafts
info-only
--info-path
INFOPATH
info/refs
info/rev-cache
info/sparse-checkout
In-index merge
init_display_notes
Initial commit
Initial commit on 
Initialized empty
initialize submodules in the clone
initial pull
init_notes
init.templatedir
inline the patch
in-pack: %lu
i == n && parent_stack[i] == tree
Input error
input format error: (blank line only valid in batch mode)
input format error: %s
input is NUL terminated
input paths are terminated by a null character
in-reply-to
In-Reply-To: <%s>
insane git directory %s
insane in-reply-to: %s
insanely long object directory %s
insanely long object directory %.*s
insanely long ref %.*s...
insanely long repository name
insanely long symlink %s
insanely long template name %s
insanely long template path %s
In '%s' at %d, 
insertions == 0 && deletions == 0
.insteadof
instead of applying the patch, output a summary for the input
instead of applying the patch, output diffstat for the input
instead of applying the patch, see if the patch is applicable
insufficient permission for adding an object to repository database %s
intent-to-add
interactive add failed
interactively add changes
interactively add files
interactive picking
inter-hunk-context
internal diff status error
internal error: asking to populate invalid file.
internal error: ce_mode is %o
internal error: dst already matched.
internal error in blame::find_origin
internal error in blame::find_origin (%c)
internal error in diff-resolve-rename-copy
internal error in merge #1
internal error in merge #2
internal error in merge #3
internal error in merge #4
internal error in revision walk
Internal error: No complete sets found!
internal error pack-check nth-packed-object
internal error: pack revindex fubar
internal error: work tree has already been set
interpret patterns as fixed strings
in the future
 into %s
in tree %s: entry %s has bad mode %.6o
(invalid)
invalid argument to -B: %s
invalid argument to -C: %s
invalid argument to -M: %s
invalid author/committer line
invalid author/committer line - bad date
invalid author/committer line - bad email
invalid author/committer line - bad name
invalid author/committer line - bad time zone
invalid author/committer line - missing email
invalid author/committer line - missing space before date
invalid author/committer line - missing space before email
invalid author/committer line - zero-padded date
invalid base85 alphabet %c
invalid base85 sequence %.5s
invalid blob object
invalid blob object %s
Invalid branch name: '%s'
invalid branch.%s.merge; cannot rebase onto > 1 branch
invalid cache
Invalid cleanup mode %s
invalid commit
invalid commit %s
invalid commit: %s
Invalid commit %s in submodule path %s%s
invalid config file %s
invalid --count argument: `%d'
invalid date format: %s
invalid --decorate option: %s
invalid diff
invalid diff option/value: %s
!"Invalid existing change recorded"
invalid format - expected 'author' line
invalid format - expected 'committer' line
invalid format - expected 'tree' line
Invalid gitfile format: %s
Invalid HEAD
invalid key (newline): %s
Invalid key pattern: %s
invalid key: %s
invalid log-grep regex: %s
Invalid mode for object creation: %s
invalid number of threads specified (%d)
invalid object %06o %s for '%.*s'
Invalid object name '%s'.
invalid object '%s' given.
invalid object type "%s"
Invalid old URL pattern: %s
invalid option: %s
invalid parameter: expected sha1, got '%s'
Invalid parameter "%s" for config option "submodule.%s.ignore"
invalid 'parent' line format - bad sha1
Invalid path '%s'
invalid path specification
Invalid pathspec magic '%.*s' in '%s'
invalid pattern: %s
invalid pickaxe regex: %s
invalid --pretty format: %s
invalid --pretty format: '%s' references an alias which points to itself
invalid quoting
 **** invalid ref ****
invalid reference: %s
Invalid refspec '%s'
Invalid regexp to look for hunk header: %s
Invalid regular expression: %s
Invalid remote service path.
invalid replace ref %s
Invalid revision range %s..%s
invalid rule in ref_rev_parse_rules: %s
invalid %s
Invalid search pattern: %s
invalid SHA-1: %s
invalid shallow line: %s
Invalid %s: '%s'
invalid start of line: '%c'
Invalid symlink '%s'
Invalid symmetric difference expression %s...%s
invalid tag signature file
invalid 'tree' line format - bad sha1
invalid unshallow line: %s
Invalid untracked files mode '%s'
Invalid value for %s: %s
invert-match
_IO_putc
_IO_stdin_used
--irreversible-delete
--is-bare-repository
is denied, because it will make the index and work tree inconsistent
--is-inside-git-dir
--is-inside-work-tree
is not in the cache
isn't available
is_null_sha1(mp->base)
is_null_sha1(mp->local) || !hashcmp(mp->local, uninitialized)
is_null_sha1(mp->remote)
!is_null_sha1(p->local)
!is_null_sha1(p->one->sha1)
!is_null_sha1(p->remote)
!is_null_sha1(p->two->sha1)
ISO8859-1
it empty. You can repeat your command with --allow-empty, or you can
It looks like you may be committing a %s.
its current branch; however, this is not recommended unless you
`jG*?[{\
Join two or more development histories together
just how do you expect me to merge %d trees?
just skip files which cannot be added because of errors
_Jv_RegisterClasses
--keep-cr
keep-dashdash
keep downloaded pack
--keep=fetch-pack %llu on 
--keep=receive-pack %llu on 
keep-subject
keep the `--` passed as an arg
--keep-true-parents
--keep-unreachable
--keep-unreachable and --unpack-unreachable are incompatible.
        [--keep-unreachable | --unpack-unreachable]
key does not contain a section: %s
key does not contain variable name: %s
Key '%s' of pattern had no '*'
key=value
kfmclient
konqueror
|$,;L$,~ 
l$0;t$0~>
l$ 3l$01
l$(3l$ 1
l$(3l$\1
l$$3l$\1
L$$3L$ 3L$<
l$,3l$81
l$$3\$P1
L$@3T$01
l$4+D$H+l$L9l$4
l$83\$@1
l$8)H8)P<
L$,9L$(sp
)l$,9t$$v
-l and -d cannot be used together
Last expression must not be negated: %s
l$D3\$41
leave the rejected hunks in corresponding *.rej files
--left-only
--left-only is incompatible with --right-only or --cherry
    --left-right
--left-right
 (left unresolved)
LESS=FRSX
let files replace directories and vice-versa
LF will be replaced by CRLF in %s.
LF would be replaced by CRLF in %s
|$,;l$Hr
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
libpthread.so.0
libresolv.so.2
libz.so.1
lightweight
like --refresh, but ignore assume-unchanged setting
  limiting output:
line is badly quoted
line-number
line-porcelain
 Lines starting
# Lines starting with '#' will be ignored.
Lines starting with '#' will be ignored, and an empty message aborts
# Lines starting with '#' will be kept; you may remove them yourself if you want to.
# Lines starting with '#' will be stripped.
Linewrap output
linkpath
list all
list all commits reachable from all refs
list both remote-tracking and local branches
list branch names
List, create, or delete branches
list entire tree; not just current directory (implies --full-name)
list for-push
list-heads
list only filenames
list replace refs
list revs not reachable from others
list supported archive formats
list tag names
literal 
l$L3l$,3l$03l$4
L$L9L$Ht&
ll_binary_merge
ll_ext_merge
ll-merge.c
%llu	%llu	
ll_union_merge
ll_xdl_merge
  -l<n>         limit rename attempts up to <n> paths.
load rewriting config for <command> (implies --stdin)
load_subtree
  Local branch%s configured for 'git pull':
	local commit: %.7s
--local-env-vars
local object %s is corrupt
local out of date
  Local ref%s configured for 'git push'%s:
  Local refs will be mirrored by 'git push'
localtime
localtime_r
local-user
local version
--lock-pack
log.abbrevcommit
log.date
log.decorate
Log for '%.*s' only goes back to %s.
Log for '%.*s' only has %d entries.
Log %s has gap after %s.
log.showroot
Log %s is corrupt.
Log %s is empty.
--log-size
log size %i
logs/refs/.tmp-renamed-log
logs/%s.lock
Log %s unexpectedly ended on %s.
--long is incompatible with --abbrev=0
Looking up %s ... 
loose object %s (stored in %s) is corrupt
lost-found/%s/%s
lo %u hi %u rg %u mi %u
lo %u hi %u rg %u mi %u 
lov < hiv
-L parameter '%s': %s
ls-files
ls-files --ignored needs some exclude pattern
ls-files --with-tree is incompatible with -s or -u
ls-remote
lstat("%s"): %s
%lu %+05d
%lu %c%02d%02d
%lu days ago
%lu hours ago
 -%lu,%lu
 +%lu,%lu 
%luMB of redundant packs in total.
%lu minutes ago
, %lu month%s ago
%lu months ago
%lu objects, %lu kilobytes
%lu seconds ago
%lu weeks ago
%lu year%s
%lu years ago
__lxstat64
M %06o :%d 
M %06o %s 
machine-readable output
mailinfo
mailinfo.
mailinfo.scissors
.mailmap
mailmap.
mailmap.file
mailsplit
--mainline
Mainline was specified but commit %s is not a merge.
make_cache_entry failed for path '%s'
make first mail a reply to <message-id>
make index objects head nodes
make reflogs head nodes (default)
make sure the patch is applicable to the current index
make the output relative to the project top directory
malformed --author parameter
malformed diff output: %s
malformed field name: %.*s
malformed format string %s
Malformed ident string: '%s'
malformed index info %s
Malformed input line: '%s'.
malformed mergetag
malformed object name %s
Malformed options sheet: %s
Malformed response in ref list: %s
Malformed value for %s
Malformed value for %s: %s
manipulate push URLs
--man-path
man:%s(1)
man.viewer
mark files as "index-only"
mark files as "not changing"
Marking reachable objects...
Marking %s as complete
mark :%u
master branch
 matches
(matching)
match_one_pattern
match <pattern>
match patterns only at word boundaries
--max-age=
    --max-age=<epoch>
--max-count=
max-count
    --max-count=<n>
max-depth
--max-pack-size=
--max-pack-size cannot be used to build a pack for transfer.
        [--max-pack-size=<n>] [--local] [--incremental]
--max-parents=
    --max-parents=<n>
Maybe you mistake good and bad revs?
Maybe you started with bad path parameters?
Maybe you wanted to say 'git add .'?
  -M            detect renames.
MD$L9l$P
memchr(path + 3 * n, '/', path_len - (3 * n)) == ((void *)0)
__memcpy_chk
__memmove_chk
memory exhausted
__memset_chk
merge-base
merge.branchdesc
	merge_changes(num_changes = %i)
merge commit message (for a non-fast-forward merge)
merge.conflictstyle
merge :%d
merged common ancestors
merge.default
merge.defaulttoupstream
merge.diffstat
merged tag '%s'
merged tree
merge.ff
merge-file
.merge_file_XXXXXX
merge following commits not found
	merge_from_diffs(base = %.7s, local = %.7s, remote = %.7s)
MERGE_HEAD
merge-index
.merge_link_XXXXXX
merge.log
Merge made by the '%s' strategy.
merge_one_change_manual
			merge_one_change_manual(obj = %.7s, base = %.7s, local = %.7s, remote = %.7s)
Merge options
merge-ours
merge program failed
merge-recursive
merge-recursive: disk full?
merge-recursive-ours
merge-recursive-theirs
merge.renamelimit
merge.renormalize
Merge requires file-level merging
Merge result: %i unmerged notes and a %s notes tree
merge returned no commit
--merges
merge-%s
merge.stat
merge strategy to use
merge-subtree
merge.summary
 merges with remote %s
mergetag
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
merge-tree
merge.verbosity
--merge without HEAD?
--merge without MERGE_HEAD?
Merge with strategy %s failed.
Merging:
merging of trees %s and %s failed
Merging remote commit %.7s into local commit %.7s with merge-base %.7s
Merging %s with %s
message-id
Message-Id: <%s>
Messaging
midnight
MIME-Version: 1.0
--min-age=
    --min-age=<epoch>
--minimal
minimum pack size limit is 1 MiB
--min-parents=
    --min-parents=<n>
--mirror
mirror all refs
--mirror and --tags are incompatible
--mirror can't be combined with refspecs
--mirror is dangerous and deprecated; please
(missing)
Missing author: %s
missing binary patch data for '%s'
missing blob object '%s'
Missing branch name; try -b
missing necessary objects
Missing notes on source object %s. Cannot copy.
missing object referenced by '%.*s'
missing object %s for %s
missing-ok
missing %s %s
missing '%s'. This should not happen
Missing value for '%s'
--mixed with paths is deprecated; use 'git reset -- <paths>' instead.
mkstemp64
 mode change %06o => %06o
 mode change %06o => %06o %s
mode change for %s, which is not in current HEAD
<mode> <object> <path>
modified
modified content, 
modified:   %s
!^[ 	]*MODULE[ 	]+PROCEDURE[ 	]
more than %d trees given: '%s'
more than %i tags found; listed %i most recent
More than one commit to dig down to %s and %s?
More than one commit to dig from %s and %s?
more than one --exclude-per-directory given.
More than one '-L n,m' option given
more than one quoting style?
more than one receivepack given, using the first
more than one %s
more than one uploadpack given, using the first
More than one value for the key %s: %s
more than two blobs given: '%s'
Move or rename a file, a directory, or a symlink
move/rename a branch and its reflog
move/rename a branch, even if target exists
  mtime: %d:%d
 multi_ack
 multi_ack_detailed
--multiple
Multiple merge bases found. Using the first (%.7s)
multiple merges found
Multiple remote HEAD branches. Please choose one explicitly with:
multiple sources for the same target
Multiple --stdin arguments are not supported
Must be one of nothing, matching, tracking or current.
Must specify a notes ref to merge
n < (1 << 16)
NACK unable to spawn subprocess
name commits with their object names
name of output directory is too long
--name-only
--name-only does not make sense
--name-only, --name-status, --check and -s are mutually exclusive
  --name-only   show only names of changed files.
name-rev
^[ 	]*(namespace[ 	]+.*)$
--namespace
--namespace=
--name-status
--name-status does not make sense
  --name-status show names and status of changed files.
-name-width
-n and -k are mutually exclusive.
n/a (unpacker error)
<n>[,<base>]
Need a repository to create a bundle.
Need a repository to unbundle.
			need content-level merge
Needed a single revision
Need exactly one range.
Need exactly two trees, separated by a space
needs dictionary
new blank line at EOF
[new branch]
new commits, 
new file mode 
new file:   %s
new file %s depends on old contents
new_index file. Check that disk is not full or quota is
new mode 
new mode (%o) of %s does not match old mode (%o)%s%s
 new (next fetch will store in remotes/%s)
(new submodule)
[new tag]
new unparented branch
New worktree: %s
next-all
next-index-%llu
nl_langinfo
--no-abbrev
--no-abbrev-commit
--no-allow-onelevel
No annotated tags can describe '%s'.
no-assume-unchanged
No attribute specified
no-binary
nobranch
No changes
no changes added to commit%s
no-checkout
no cherry-pick or revert in progress
--no-color
--no-commit
 (no commit created; -m option ignored)
--no-commit-id
No commit on branch '%s' yet.
No commits parsed.
No commit specified and merge.defaultToUpstream not set.
No commit to dig down to?
no common commits
No configured push destination.
no-create
No current branch
No current branch.
No default upstream defined for the current branch.
--no-deref
No directory given for --git-dir.
No directory given for --work-tree.
 no-done
--[no-]exclude-standard cannot be used for tracked contents.
No existing author found with '%s'
--no-ext-diff
no files added
No file specified
no-filters
--no-flags
--no-function-context
no-hardlinks
No HEAD -- no initial commit yet?
--no-inbody-headers
--no-index
[--no-index]
--no-index or --untracked cannot be used with revs.
no info viewer handled the request
			no local change, adopted remote
no man viewer handled the request
[no match]
no match
no matching refs with %s
no matching remote head
    --no-max-parents
--no-max-parents
No merge base found; doing history-less merge
no-merged
No merge message -- not updating HEAD
    --no-merges
--no-merges
No merge strategy handled the merge.
no message
--no-minimal
    --no-min-parents
--no-min-parents
No names found, cannot describe anything.
No namespace given for --namespace.
Non commit %s?
noncumulative
non delta: %d object%s
--non-empty
\ No newline at end of file
(non-fast-forward)
non-fast forward
non-fast-forward
Non-fast-forward commit does not make sense into an empty head
non-monotonic index %s
No note found for object %s.
--no-notes
non-tree in cache-tree
no-numbered
no-op (backward compatibility)
--no-pager
No path in gitfile: %s
No path specified. See 'man git-pull' for valid url syntax
No paths with --include/--only does not make sense.
no pattern given.
no-post-rewrite
--no-prefix
 no-progress
--no-progress
-n option is only allowed with -l.
no reflog for '%s'
No refs in common and none specified; doing nothing.
no remembered resolution for %s
No remote configured to list refs from.
No remote for the current branch.
No remote provided to transport_get()
No remote repository specified.  Please, specify either a URL or a
no remote specified
No remote tracking branch for %s from %s
--no-renames
no-renormalize
--no-replace-objects
--no-reuse-delta
        [--no-reuse-delta] [--no-reuse-object] [--delta-base-offset]
--no-reuse-object
--no-revs
No revs to be shown.
--normalize
 --no-%s
--no-scissors
no shallow found: %s
No signature
no signature found
no-skip-worktree
no-sparse-checkout
--no-standard-notes
No such branch '%s'.
no such commit %s
no such path %s in %s
No such ref: HEAD
no such ref: %s
No such ref %s
No such ref: %s
No such remote or remote group: %s
no such remote ref %s
No such remote '%s'
No such remote: %s
No such section!
No such URL found: %s
no symlink - falling back to symbolic ref
no tag exactly matches '%s'
not a gitdir '%s'
Not a git repository
Not a git repository (or any of the parent directories): %s
Not a git repository (or any parent up to mount parent %s)
Not a git repository: '%s'
Not a git repository: %s
no tag message?
--no-tags
No tags can describe '%s'.
Not all child objects of %s are reachable
not a pattern expression %s
Not a range.
Not a reflog: %s
not a rev '%s'
not a tree object
Not a valid branch point: '%s'.
Not a valid commit name %s
Not a valid grep expression
Not a valid object name
Not a valid object name %s
Not a valid object name: '%s'.
not a valid object: %s
Not a valid ref: %s
(not checked out)
not checked out
not.committed.yet
Not Committed Yet
Not committing merge; use 'git commit' to complete the merge.
not copying templates of a wrong format version %d from '%s'
Not currently on any branch.
not deleting branch '%s' that is not yet merged to
'Note about fast-forwards' section of 'git push --help' for details.
Note: A branch outside the refs/remotes/ hierarchy was not removed;
Note: checking out '%s'.
note contents as a string
note contents in a file
note_path_len <= 40 + 19
--notes=
Notes added by 'git notes copy'
notes.displayref
NOTES_EDITMSG
notes_merge
notes-merge
NOTES_MERGE_*
notes-merge.c
notes-merge: disk full?
notes: Merged notes from %s into %s
notes_merge(o->local_ref = %s, o->remote_ref = %s)
NOTES_MERGE_PARTIAL
NOTES_MERGE_REF
notes_merge(): result = %i, result_sha1 = %.7s
NOTES_MERGE_WORKTREE
NOTES_MERGE_WORKTREE/
NOTES_MERGE_WORKTREE/%s
NOTES_MERGE_WORKTREE/.test
Note: Some branches outside the refs/remotes/ hierarchy were not removed;
notes_ref
notes ref %s is invalid
Notes removed by 'git notes prune'
Notes removed by 'git notes remove'
notes.rewrite.
notes.rewritemode
notes.rewriteref
Notes (%s):
Notes %s by 'git notes %s'
No testable commit found.
*** Note that this command is now deprecated; use "git archive" instead.
note_tree_consolidate
note_tree_insert
note_tree_remove
not exceeded, and then "git reset HEAD" to recover.
--no-textconv
not fast-forward
--not followed by non pattern expression
	not-for-merge	
not-for-merge
Not handling anything other than two heads merge.
nothing added to commit but untracked files present%s
Nothing specified, nothing added.
nothing to commit%s
Nothing to delete?
 (nothing to squash)
notice files missing from worktree
notice: HEAD points to an unborn branch (%s)
notice: No default references
not in a git directory
Not in the middle of a merge.
--not not followed by pattern expression
Not possible to fast-forward, aborting.
not properly sorted
Not removing %s
not removing '%s' recursively without -r
Not setting branch %s as its own upstream.
Not tracking: ambiguous information for ref %s
not under version control
Not updating non-default fetch respec
--no-undefined
No upstream branch found for '%s'
(no URL)
no usage string given before the `--' separator
no valid object to fsck
November
no-verify
--no-walk
no warning for existing files and files not in index
-n requires an argument
ns_initparse
ns_parserr
numbered-files
num commits: %d
num get patch: %d
numparent
num read blob: %d
--numstat
  --numstat     show numeric diffstat instead of patch.
object directory %s does not exist; check .git/objects/info/alternates.
object file %s is empty
objectname
%(objectname) %(objecttype)	%(refname)
object names
objectname:short
object not found: %s
object of unexpected type
--objects
/objects/
object %s
object %s:
Object %s already has a mark
object %s cannot be read
object '%s' does not point to a commit
--objects-edge
Object %s has no note
object %s has unknown type id %d
object %s inconsistent object length (%lu vs %lu)
objects/info/alternates
?Object %s is a %s, not a blob
Object %s is a %s, not a commit
Object %s is a %s, not a commit or tree
Object %s is a %s, not a tag
Object %s is a %s, not a tree
object '%s' is not a blob!
object %s is not a blob
objectsize
Object %s not a commit
Object %s not a tag
Object %s not a tree
object %s not found
    --objects | --objects-edge
object %s tried to add buffer twice!
objecttype
object type mismatch
object type mismatch at %s
_obstack_begin
obstack_free
_obstack_newchunk
offset beyond end of packfile (truncated pack?)
offset value out of bound for delta base object
offset value overflow for delta base object
  -O<file>      reorder diffs according to the <file>.
 ofs-delta
ofs %u lov %x, hiv %x, kyv %x
ok to record a change with an empty message
ok to record an empty change
old mode 
o->local_ref && o->remote_ref
Omit --global to set the identity only in this repository.
Omitting tag %s,
On branch 
on-demand
--oneline
One merge base found (%.7s)
one of these
only consider tags matching <pattern>
Only %d entries can be shown at one time.
only empty the index
only found copies from modified paths due to too many files.
only one action at a time.
only one config file at a time.
only one -F or -m option is allowed.
Only one of -c/-C/-F/--fixup can be used.
Only one of --include/--only/--all/--interactive/--patch can be used.
only one pattern can be given with -l
only one type at a time.
only output exact matches
only remove from the index
only show heads (can be combined with tags)
only show SHA1 hash using <n> digits
only show tags (can be combined with heads)
only show trees
only update entries that differ from HEAD
only useful for debugging
only use refs matching <pattern>
only use tags to name the commits
on your username and hostname. Please check that they are accurate.
oops in prep_exclude
__open64_2
open-files-in-pager
--open-files-in-pager only works on the worktree
opening %s: %s
opens an editor
open("%s"): %s
Operation not supported by protocol
Operation not supported by protocol.
option 'cacheinfo' expects three arguments
option 'chmod' expects "+x" or "-x"
option `color' expects "always", "auto", or "never"
Option '%c' requires a value
Option --exec can only be used together with --remote
option for merge strategy
option for selected merge strategy
Option --ignore-missing can only be used together with --dry-run
Option -m cannot be combined with -c/-C/-F/--fixup.
option `no-%s' %s
option %s 
options.allow-ff
options.edit
Option "%s" is ignored for %s
options.mainline
option '%s' must be the last argument
option %s needs an argument (check)
options.no-commit
options not supported in --stdin mode
options.record-origin
Option '--%s' requires a value
option `%s' %s
options.signoff
Options --squash and --fixup cannot be used together
options.strategy
options.strategy-option
Option '--stat-count' requires a value
Option '--stat-name-width' requires a value
Option '--stat-width' requires a value
Option "%s" value "%s" is not valid for %s
option=value
opts->revs
!(opts->signoff || opts->no_commit || opts->record_origin || opts->edit)
ordered %u objects, expected %u
  ordering output:
or do not fetch any tag at all (--no-tags)
   or: git bundle list-heads <file> [<refname>...]
   or: git bundle unbundle <file> [<refname>...]
   or: git bundle verify <file>
   or: git check-ref-format --branch <branchname-shorthand>
   or: git rev-parse [options] [<arg>...]
   or: git rev-parse --sq-quote [<arg>...]
   or: git show [options] <object>...
--orphan and -b|-B are mutually exclusive
--orphan cannot be used with -t
   or: %s
or use 'git commit -a'.
%o %.*s%c
o_sha && a_sha
other way.
Otherwise, please use 'git reset'
--ours/--theirs is incompatible with switching branches.
Out of memory, calloc failed
Out of memory? fdopen failed
Out of memory, malloc failed (tried to allocate %lu bytes)
Out of memory? mmap failed
Out of memory, realloc failed
Out of memory, strdup failed
output all common ancestors
                output a patch and prepend its diffstat.
                output both a patch and the diff-raw format.
output-directory
Output full tree for each commit
override author for commit
override date for commit
override the executable bit of the listed files
override the up-to-date check
overwrite-ignore
Overwriting existing notes for object %s
overwriting '%s'
overwritten
|$P3|$@1
PACK ...
^package .*
pack base name '%s' too long
pack.compression
pack.deltacachelimit
pack.deltacachesize
pack.depth
packed_entry - (struct index_entry *)mem == entries
packed object %s (stored in %s) is corrupt
/packed-refs
packed %s from %s is corrupt
packet: %12s%c 
pack everything
Packfile index for %s SHA1 mismatch
packfile name '%s' does not end with '.pack'
packfile %s cannot be accessed
packfile %s cannot be mapped: %s
packfile %s claims to have %u objects while index indicates %u objects
packfile %s does not match index
packfile %s index not opened
packfile %s index unavailable
packfile %s is version %u and not supported (try upgrading GIT to a newer version)
packfile %s not a regular file
packfile %s signature is unavailable
packfile %s size changed
pack has bad object at offset %lu: %s
pack has %d unresolved deltas
pack has junk at the end
--pack_header=
--pack_header=%u,%u
pack.indexversion
pack is corrupted (SHA1 mismatch)
pack-objects died
pack.packsizelimit
pack-redundant
pack-refs
# pack-refs with:
# pack-refs with: peeled 
pack_report: core.packedGitLimit      = %10llu
pack_report: core.packedGitWindowSize = %10llu
pack_report: getpagesize()            = %10llu
pack_report: pack_mapped              = %10llu / %10llu
pack_report: pack_mmap_calls          = %10u
pack_report: pack_open_windows        = %10u / %10u
pack_report: pack_used_ctr            = %10u
pack signature mismatch
packs: %lu
pack '%s' still has open windows to it
pack.threads
pack/tmp_idx_XXXXXX
pack/tmp_pack_XXXXXX
pack too large for current definition of off_t
pack version %u unsupported
pack.window
pack.windowmemory
pack-write.c
pager.color
--paginate
!pair2 == !dst_entry2
par_column
parent #%d, tagged '%s'
parent number
parent objects missing
    --parents
--parents
parent %s
parse_object_buffer failed on %s for %s
--parseopt
partial notes commit has empty message
passing trees as arguments contradicts --empty
[PATCH] 
--patch=checkout
patch failed: %s:%ld
patch fragment without header at line %d: %.*s
patch-id
--patch is incompatible with all other options
--patch is incompatible with --{hard,mixed,soft}
patch->is_new <= 0
--patch=reset
patch %s has been renamed/deleted
patch with only garbage at line %d
  --patch-with-raw
--patch-with-raw
  --patch-with-stat
--patch-with-stat
path_len < 40 + 19
path not found: %s
paths are separated with NUL character
path '%s': cannot merge
path %s contains slash
Path '%s' does not exist in '%s'
Path '%s' does not exist (neither on disk nor in the index).
path '%s' does not have all necessary versions
path '%s' does not have necessary versions
path '%s' does not have our version
path '%s' does not have their version
Path '%s' exists, but not '%s'.
Path '%s' exists on disk, but not in '%s'.
Path '%s' exists on disk, but not in the index.
Path '%s' is in submodule '%.*s'
Path '%s' is in the index, but not at stage %d.
Path '%s' is in the index, but not '%s'.
path '%s' is unmerged
pathspec '%s' did not match any files
pathspec '%s' did not match any file(s) known to git.
Paths with -a does not make sense.
path to git-upload-pack on the remote
path too long (%d chars, SHA1: %s): %s
path to the remote git-upload-archive command
path to upload pack on remote end
--patience
peek-remote
 peeled 
perform a 3-way merge with the new branch
perform a commit if the merge succeeds (default)
perform a merge in addition to a read
perform 'git bisect next'
Performing inexact rename detection
: perhaps a D/F conflict?
Perhaps you should specify a branch such as 'master'.
perl-regexp
permissions
p->field < (sizeof(header_field)/sizeof(header_field[0]))
  --pickaxe-all
--pickaxe-all
--pickaxe-regex
pick_commits
pick_revisions
Please, commit your changes before you can merge.
Please consider using 'man.<tool>.cmd' instead.
Please consider using 'man.<tool>.path' instead.
# Please edit the description for the branch
Please enter a commit message to explain why this merge is necessary,
Please enter the commit message for your changes.
Please supply the message using either -m or -F option.
Please supply the note contents using either -m or -F option
*** Please tell me who you are.
	Please update the configuration manually if necessary.
Please upgrade Git
Please use 'git notes add -f -m/-F/-c/-C' instead.
Please, use 'git notes merge --commit' or 'git notes merge --abort' to commit/abort the previous merge before you start a new notes merge.
poll failed resuming: %s
p->one->mode == p->two->mode
populate log with at most <n> entries from shortlog
--porcelain
pos >= 0
`pos' is too far after the end of the buffer
`pos + len' is too far after the end of the buffer
post-checkout
post-commit
postimage
post-merge
  -p            output patch format.
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
pre-auto-gc
pre-commit
<prefix>/
prefix_len * 2 >= n
--prefix=%s/
preimage
premature end of input
premature end of pack file, %lu bytes missing
prepare_attr_stack
prepare-commit-msg
prepend prefix to each pathname in the archive
prepend <root> to all filenames
prepend this to submodule path output
pre-receive hook declined
pretend that paths removed since <tree-ish> are still present
--pretty
--pretty=
--pretty format
--pretty=oneline
pretty-print object's content
Previous HEAD position was
previous %s 
print all available commands
print empty line between matches from different files
__printf_chk
Print lines matching a pattern
print <n> lines of each tag message
print NUL after filenames
print only branches that contain the commit
print only merged branches
print only names (no SHA-1)
print only not merged branches
print only tags that contain the commit
print patches to standard out
print_stat_summary
print tag contents
problems writing temporary file %s
Problem with core.sharedRepository filemode value (0%.3o).
process binary files as text
process file as it were from this path
process is running and remove the file manually to continue.
Process only line range n,m, counting from 1
program error
programming error in a caller of mark_ce_used_same_name
Program to git copy
--progress
progress %d objects
protocol error: bad line length character: %.4s
protocol error: bad line length %d
protocol error: bad pack header
protocol error: expected old/new/ref, got '%s'
protocol error: expected sha/ref, got '%s'
protocol error: impossibly long line
protocol error (pack signature mismatch detected)
protocol error (pack version unsupported)
protocol error: %s
prune loose refs (default)
prune_notes
prune-packable: %lu
prune-packed
prune remotes after fetching
prune remote-tracking branches no longer on remote
prune unreferenced objects
Pruning %s
pthread_cond_broadcast
pthread_cond_destroy
pthread_cond_init
pthread_cond_signal
pthread_cond_wait
pthread_create
pthread_exit
pthread_getspecific
pthread_join
pthread_join failed
pthread_key_create
pthread_mutexattr_destroy
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_mutex_destroy
pthread_mutex_init
pthread_mutex_lock
pthread_mutex_unlock
pthread_self
pthread_setspecific
^[	 ]*(((public|protected|private|static)[	 ]+)*function.*)$
pull.octopus
pull.twohead
push all refs
push.default
push|fetch
Pushing to %s
.pushinsteadof
pushnonfastforward
push tags (can't be used with --all or --mirror)
  Push  URL: %s
                     [-q|--quiet] [--exit-code] [<repository> [<refs>...]]
query_refspecs: need either src or dst
    --quiet
quoted-printable
quote placeholders suitably for perl
quote placeholders suitably for python
quote placeholders suitably for shells
quote placeholders suitably for tcl
__rawmemchr
  -r            diff recursively
read additional per-directory exclude patterns in <file>
read_cache
read_cache_preload
readdir64
read error on input
read error '%s'
read error: %s
read file names from stdin
read from external filter %s failed
read .gitattributes in working directory
Read %i bytes from %s (buffer now at %i)
reading bisect refs failed
reading graft file '%s' failed
(reading log message from standard input)
readlink
readlink(%s)
readlink("%s"): %s
readlink(%s): %s
read list of paths from the standard input
read list of paths to be updated from standard input
read message from file
read object names from the standard input
read objects from stdin
read of %s failed
read patterns from file
read(%s) failed: %s
read the object from stdin
read the tree into the index under <subdirectory>/
read-tree
read-tree: emptying the index with no arguments is deprecated; use --empty
read-tree failed
really-refresh
reason of the update
rebases onto remote %s
receive.autogc
receive.denycurrentbranch
'receive.denyCurrentBranch' configuration variable to 'refuse'.
receive.denydeletecurrent
receive.denydeletes
receive.denynonfastforwards
receive.fsckobjects
--receive-pack=
.receivepack
receive pack program
receive.unpacklimit
receive.updateserverinfo
Receiving objects
Record changes to the repository
Recorded preimage for '%s'
Recorded resolution for '%s'.
record only the fact that the path will be added later
--recount
recount: ignore empty hunk
recount: unexpected line: %.*s
recurse into subtrees
--recurse-submodules
--recurse-submodules-default
--recurse-submodules=on-demand
--recursive
recursive alias: %s
recursive delta detected for object %s
Redundant packs (with indexes):
reedit-message
Reference has invalid format: '%s'
reference is not a tree: %s
reference repository
reference repository '%s' is not a local directory.
References: 
        [< ref-list | < object-list]
--reflog
.reflogexpire
.reflogexpireunreachable
reflog for %s is a symlink
--reflog is incompatible with --all, --remotes, --independent or --merge-base
Reflog message: %s
reflog of '%s' references pruned commits
--reflog option needs one branch name
Reflog: %s (%s)
        [--reflog] [--stdout | base-name] [--include-tag]
refname '%.*s' is ambiguous.
refname '%s' is ambiguous
refname %s is a symbolic ref, renaming it is not supported
refname %s not found
refname too long: %s
refresh even if index contains unmerged entries
refresh: ignore submodules
refresh stat information
refs/bisect/
refs/bisect/bad
refs/bisect/good
refs/heads
refs/heads/
refs/heads/*
:refs/heads/master
:refs/heads/%s
refs/heads/%.*s
refs/heads/%s:refs/remotes/%s/%s
refs/heads/test:refs/remotes/%s/test
ref '%s' ignored
Ref %s is at %s but expected %s
ref '%s' is excluded by the rev-list options
ref %s is not a symbolic ref
refs/namespaces/%s
refs/notes/
refs/notes/commits
refs/notes/%s
refspec 
--refspec-pattern
--refs=refs/tags/%s
refs/remotes
refs/remotes/
:refs/remotes/%s/
refs/remotes/%s
refs/remotes/%.*s
refs/remotes/%.*s/HEAD
refs/remotes/%s/HEAD
refs/remotes/%s/%s
refs/replace/
refs/replace/%s
refs/%.*s
refs/%s:refs/%s
refs/stash
refs/tags/
refs/tags/*:refs/tags/*
refs/tags/%.*s
refusing inconsistent update between symref '%s' (%s..%s) and its target '%s' (%s..%s)
Refusing to create empty bundle.
refusing to create funny ref '%s' remotely
refusing to delete the current branch: %s
Refusing to fetch into current branch %s of non-bare repository
refusing to lose untracked file at '%s'
Refusing to perform update with empty message
Refusing to perform update with empty message.
Refusing to point HEAD outside of refs/
Refusing to rewrite notes in %s (outside of refs/notes/)
Refusing to %s notes in %s (outside of refs/notes/)
refusing to update checked out branch: %s
refusing update to broken symref '%s'
regerror
regexec returned %d for input: %s
--regexp-ignore-case
regexp returned nonsense
register clean resolutions in index
Reinitialized existing
[rejected]
Rejected hunk #%d.
--relative
--relative=
--relative-date
relative path syntax can't be used outside working tree.
remaining
--remote=
remote add
remoteBranch
Remote branch %s not found in upstream %s, using HEAD instead
  Remote branch%s:%s
	remote commit: %.7s
remote does not support deleting refs
remote error: %s
remote-ext
remote-ext command has incomplete placeholder
remote-ext command has too many arguments
remote failed to report status
[remote failure]
remote-fd
remote HEAD refers to nonexistent ref, unable to checkout.
remote-helpers do not support ref deletion
remote input
remote name from which new revisions should be fetched.
remote output
remote part of refspec is not a valid name in %s
[remote rejected]
remote: renamed %s to %s
remote reported status on unexpected ref: %s
remote reported status on unknown ref: %s
    --remotes
--remotes
--remotes=
* remote %s
remote.%s
remotes.
remote %s already exists.
remotes.default
remote set-head
remote.%s.fetch
remote %s has no configured URL
remote.%s.mirror
remote.%s.push
remote.%s.pushurl
--remotes=%s
remote.%s.tagopt
remote.%s.url
remote-tracking branch
remote-tracking branch 
remote-tracking branches 
remote version
removal patch leaves file contents
remove a section: name
removed in both
removed in local
removed in remote
    --remove-empty
--remove-empty
Remove files from the working tree and from the index
remove ignored files, too
remove named paths even if present in worktree
remove_note
remove <num> leading slashes from traditional diff paths
remove only ignored files
remove '%s'
removes all matches: name [value-regex]
removes a variable: name [value-regex]
remove-section
remove the commit entirely with "git reset HEAD^".
remove whole directories
Removing duplicate objects
			removing from partial merge result
Removing note for object %s
Removing notes merge worktree at %s
Removing %s
Removing stale temporary file %s
Removing %s to make room for subdirectory
ren1_dst != ren2_dst
ren1_src != ren2_src
Renamed a misnamed branch '%s' away
renamed:    %s -> %s
rename new 
rename old 
rename-section
rename section: old-name new-name
rename-threshold=
renaming '%s' failed
Renaming %s to %s
Renaming %s to %s and %s to %s instead
repack.usedeltabaseoffset
replace-all
replace all matching variables: name value [value_regex]
replaced
replace depth too high for object %s
replace existing notes
replacement %s not found for %s
replace ref name too long: %.*s...
replace ref '%s' already exists
replace ref '%s' not found.
replace the ref if it exists
replace the tag if exists
# repo-abbrev:
repo-config
repopulate stages #2 and #3 for the listed paths
report actions to standard output
report all attributes set on file
report archived files on stderr
report pruned notes
report pruned objects
report root nodes
 report-status
 report-status delete-refs side-band-64k quiet
report tags
Repository has been updated, but unable to write
Repository lacks these prerequisite commits:
repository '%s' does not exist
Request too large to send
rerere-autoupdate
rerere.autoupdate
rerere.enabled
reset-author
--reset-author can be used only with -C, -c or --amend.
Reset branch '%s'
Reset current HEAD to the specified state
reset HEAD and index
reset HEAD but keep local changes
reset HEAD, index and working tree
reset: moving to %s
reset only HEAD
reset %s
reset: %s
resolveconflict
Resolved
--resolve-git-dir
resolve notes conflicts using the given strategy (manual/ours/theirs/union/cat_sort_uniq)
Resolving deltas
__res_query
resume revert or cherry-pick sequence
retrieve the archive from remote repository <repo>
reuse and edit message from specified commit
reuse and edit specified note object
reuse-message
reuse message from specified commit
reuse specified note object
    --reverse
--reverse
, reversing
Revert "
revert failed
REVERT_HEAD
(revision walker failed)
revision walk setup failed
rev-list
rev-list died
[rev-opts] are documented in git-rev-list(1)
rev-parse
--revs-only
 (rewind)
Rewinding the tree to pristine...
--rewrite
 rewrite %s (%d%%)
--right-only
--right-only is incompatible with --left-only
rm -f %s
 (root-commit)
  --root        include the initial commit as diff against /dev/null
rr-cache
rr-cache/%s
rr-cache/%s/%s
  -R            swap input file pairs.
rsync://
rsync-refs-XXXXXX
rsync transport does not support mirror mode
run "git gc" manually. See "git help gc" for more information.
Run "git rev-parse --parseopt -h" for more information on the first usage.
*** Running "git archive" instead.
      %s
    %-*s
    %-*s 
   %s   
  : %.*s
%s%06o %s %d	
%s: %3u%% (%u/%u)%s%s
%s%4d.%01d%% %.*s
%s %-6s %lu %lu %llu
%s already exists
%s: already exists in index
%s: already exists in working directory
%s already exists, no checkout
%s also locked %s
same as -m, but discard unmerged entries
'%s' appears as both a file and as a directory
'%s' appears to be a git command, but we were not
Saturdays
%sAuthor:    %s
%s available from elsewhere on your $PATH
 %-*s |  Bin
%sBinary files %s and %s differ
s->branch && !s->is_initial
%sbranch '%s' not found.
%s		branch '%s' of .
%s		branch '%s'%s of .
         '%s', but not yet merged to HEAD.
%s: cannot add our version to the index.
%s: cannot add their version to the index.
%s: cannot add to the index - missing --add option?
%s cannot be resolved to branch.
%s: cannot drop to stage #0
%s: cannot lock the ref
%s: cannot parse parent commit %s
%s: cannot remove from the index
%s: cannot update the ref
%s: cannot verify a non-tag object of type %s.
%s: can only add regular files, symbolic links or git-directories
%s%c%d %d %d
--scissors
%s: close error: %s
'%s': cmd for supported man viewer.
%s		commit '%s'
%sCommitter: %s
%s/config
score-debug
%s%c%s%c
%s%c%s [%s] 
%s (%d):
%sDate: %s
* %s: (%d commits)
%.*s~%d^%d
%s %d %d
%s %d %d %d
%sdeleted file 
%sdelta %lu
%s did not send all necessary objects
%s died of signal %d
'%s' does not appear to be a git repository
%s: does not exist and --remove not passed
%s: does not exist in index
'%s' does not look like a v2 bundle file
%s: does not match index
'%s' does not point to a commit
%s does not point to a valid object!
%s:%d: %s.
%s[%d: %s]: errno=%s
%s[%d: %s:%s]: %s
search also in ignored files
search in both tracked and untracked files
searching to describe %s
search in index instead of in the work tree
second guess 'git checkout no-such-branch'
See 'git help <command>' for more information on a specific command.
see %s.paxheader
select handling of signed tags
select handling of tags that tag filtered objects
select hunks interactively
send-pack
send-pack: send refs
send-pack: unable to fork off sideband demultiplexer
send results to standard output
sent error to the client: %s
%s EOF (with %i bytes in buffer)
separate-git-dir
separate git dir from working tree
September
sequencer
sequencer/head
sequencer/opts
sequencer/todo
serious inflate inconsistency
%s: error building trees
%s: error reading the index
%s: error when reading the tail of sha1 file
Server does not support shallow clients
Server supports multi_ack
Server supports multi_ack_detailed
Server supports no-done
Server supports ofs-delta
Server supports side-band
Server supports side-band-64k
servpath
set-branches
set config inside the new repository
setitimer
set labels for file1/orig_file/file2
setlocale
set refs/remotes/<name>/HEAD according to remote
setsockopt
Setting remote service path not supported by protocol.
setup as shared repository
setup: cwd: %s
setup: git_dir: %s
setup: prefix: %s
set up remote as a mirror to push to or fetch from
setup_rename_conflict_info
set-upstream
set upstream for git pull/status
set upstream info for new branch
set up tracking mode (see git-pull(1))
setup: worktree: %s
         '%s', even though it is merged to HEAD.
%s exists and is not a directory
'%s' exists; cannot create '%s'
%.*s: expected %s type, but the object dereferences to %s type
%s: failed to insert into database
%s (fetch)
%s files:
'%s' filter reported error
%.*s.git
%sGIT binary patch
%s/.gitconfig
%s/git.html
%s/.git/objects
SHA1 COLLISION FOUND WITH %s !
sha1_entry_pos
sha1 file '%s' validation error
sha1 file '%s' write error
sha1 file '%s' write error. Out of diskspace
SHA1_HEX
sha1 information is lacking or useless (%s).
sha1-lookup.c
sha1 mismatch %s
sha1-name
shallow file was changed during fetch
shallow file was removed during fetch
shallow %s
share/git-core/templates
share/info
   (%s has become dangling)
 %s has become dangling!
%s: has been deleted/renamed
'%s' has changes staged in the index
'%s' has local modifications
%s has multiple values
'%s' has staged content different from both the file and the HEAD
%s has type %o, expected %o
%s/HEAD set to %s
--short=
shortcut for -C NUM
shortlog
short SHA1 %.*s is ambiguous.
--shortstat
should not accept an argument
should not happen, someone must be hit on the forehead
show abbreviated commit object as fallback
show a diffstat at the end of the merge
show a line with the function name before matches
--show-all
                show all files diff when -S is used and hit is found.
Show author email instead of name (Default: off)
Show blame entries as we find them, incrementally
Show blank SHA-1 for boundary commits (Default: off)
show-branch
showbranch.default
show branch information
show cached files in the output (default)
--show-cdup
Show changes between commits, commit and working tree, etc
Show commit logs
show commits in topological order
show commits where no parent comes before its children
show debugging data
show deleted files in the output
show diff in commit message template
show-email
show filename only once above matches from same file
show filenames relative to top directory
show files on the filesystem that need to be removed
show-function
show hash and subject, give twice for upstream branch
show ignored files
show ignored files in the output
Show in a format designed for machine consumption
show info about objects fed from the standard input
show info and content of objects fed from the standard input
show info page
show line numbers
Show long commit SHA1 (Default: off)
show man page
show manual in web browser
show matching files in the pager
show merges reachable from only one tip
show modified files in the output
show-name
show <n> context lines after matches
show <n> context lines before and after matches
show <n> context lines before matches
show <n> more commits after the common ancestor
show <n> most recent ref-log entries starting at base
show non-matching lines
--show-notes
--show-notes=
show-number
show object size
show object type
show only commits not on the first branch
show only filenames instead of matching lines
show only matches from files that match all patterns
show only <n> matched refs
show only the names of files without match
Show original filename (Default: auto)
Show original linenumber (Default: off)
show 'other' directories' name only
show other files in the output
Show output score for blame entries
show patch format instead of default (patch + stat)
Show porcelain format with per-line commit information
show possible merge bases
--show-prefix
show progress
show progress after <n> objects
Show raw timestamp (Default: off)
show-ref
show refs from stdin that aren't in local repository
show refs unreachable from any other ref
show remote-tracking and local branches
show remote-tracking branches
show resolve-undo information
--show-signature
shows number of added and deleted lines in decimal notation
show source
show staged contents' object name in the output
show statistics only
show-stats
show status concisely
Show the email address of each author
show the HEAD reference
show the number of matches instead of matching lines
show the surrounding function
Show the working tree status
--show-toplevel
show trees when recursing
show unmerged files in the output
show unreachable objects
show untracked files, optional modes: all, normal, no. (Default: all)
show usage
Show various types of objects
show what would be committed
Show work cost statistics
shuffle_one
shutdown
 side-band
 side-band-64k
%s: identical in both, skipping.
sigaction
sigemptyset
Signed-off-by: 
signed-tags
--signoff
%s: ignoring alternate object stores, nesting too deep.
%s: ignoring relative alternate object store %s
--simplify-by-decoration
--simplify-merges
--since=
since tags of trees (or tags of tags of trees, etc.) are not supported.
%s/index
%sindex 
%s/info/packs
 (%s) in %s
%s in %s %s: 
%s: invalid sha1 pointer in cache-tree
%s: invalid sha1 pointer %s
%s: is a directory - add files inside instead
%s: is a directory - add individual files instead
%s is a directory in %s adding as %s instead
%s is already a gitlink, not replacing
'%s' is beyond a symbolic link
%s is meaningless without -m, --reset, or --prefix
'%s' is not a boolean
'%s' is not a commit
%s is not a tree
%.*s is not a valid attribute name: %s:%d
'%s' is not a valid branch name
'%s' is not a valid branch name.
%s is not a valid object
'%s' is not a valid ref.
'%s' is not a valid ref name.
'%s' is not a valid remote name
%s is not a valid '%s' object
'%s' is not a valid tag name.
'%s' is not possible because you have unmerged files.
%s is okay
'%s' is outside repository
%s is readable
%s is the first bad commit
%s is unknown object
%s is writable
  size: %d	flags: %x
size: %lu
size-pack: %lu
skip applying sparse checkout filter
.skipdefaultupdate
.skipfetchall
skip files matching pattern
skip move/rename errors
Skip output of blob data
Skipped %s (merged same as existing)
			skipping (local == remote)
Skipping non-SHA1 entry '%s'
			skipping (no remote change)
%s: lacks value
%sliteral %lu
%s%llu%s
%s.%lu.git.%.*s
%sMIME-Version: 1.0
%s missing
 %s mode %06o 
 %s mode %06o %s
%s mode change %06o => %06o%c
%s: needs merge
%s needs update
%s: needs update
%s: negative length %s
%snew file mode %06o
%s: not a blob in %s branch.
%s: not a commit
'%s': not a documentation directory.
%s not allowed: %s:%d
'%s': not a regular file or symlink
%s: not a valid attribute name
%s: not a valid old SHA1
'%s' - not a valid ref
%s: not a valid SHA1
%s: not in %s branch.
%s - not something we can merge
snprintf
__snprintf_chk
%s: object corrupt or missing
%s/objects
%s/objects/%s
'%s' of 
%s of %s
Some good revs are not ancestor of the bad rev.
some local refs could not be updated; try running
some refs could not be read
sort output according to the number of commits per author
%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-dir=<directory>)
source directory is empty
So we cannot be sure the first bad commit is between %s and %s.
[^<>= 	]+|[^[:space:]]|[
[={}"]|[^={}" 	]+|[^[:space:]]|[
]+|[^[:space:]]|[
space-before-tab
space before tab in indent
^[[:space:]]*((classdef|function)[[:space:]].*)$|^%%[[:space:]].*$
%s/pack/pack-
%s/pack/pack-1234567890123456789012345678901234567890.%s
%s/pack/pack-%s.idx
%s/pack/pack-%s.keep
%s/pack/pack-%s.pack
    --sparse
--sparse
Sparse checkout leaves no entry on working directory
%s: patch does not apply
'%s': path for unsupported man viewer.
  special purpose:
Specific git-branch actions:
Specify either a list, or --all, not both!
specifying a master branch makes no sense with --mirror
specifying branches to track makes sense only with fetch mirrors
specify that the git repository is to be shared amongst several users
%%sPlease, commit your changes or stash them before you can %s.
%%sPlease move or remove them before you can %s.
%s points nowhere!
%s: prefix %s not found
__sprintf_chk
%s: protocol error: bad band #%d
%s: protocol error: no band designator
%sprune %s
%s (push)
 =?%s?q?
--sq-quote
squash! 
Squash commit into empty head not supported yet
Squash commit -- not updating HEAD
Squashed commit of the following:
squash! %s
squelched %d whitespace error%s
src-prefix
src refspec %s does not match any.
src refspec %s matches more than one.
%s		remote-tracking branch '%s' of .
%s reset is not allowed in a bare repository
%s rewrite 
SRV RR is too short
 * [%s] %s
 %s%-*s |
--%s%s--
: %s: %s
%.*s (%s)
%s %s^{}
%s: %.*s
%s%s@@ -
%s	%s^{}
+%s*:%s*
	%.*s = %s
 (%s%*s %10s
%s: %s cannot be used with %s
%s %s%chost=%s%c
%s%scopy from 
%s%scopy to 
%s %s%c%s%s
 %s %s (%d%%)
%.*s%sdata %d
%s%sdeleted file mode %06o%s
%s%sdiff --git %s %s%s
%s%sdissimilarity index %d%%%s
%s%s:%d: leftover conflict marker
%s%s:%d: %s.
* %-*s %-*s -> FETCH_HEAD
%s%s.git
%s%s Git repository in %s%s
%s SHA1 checksum mismatch
%s SHA1 does not match its index
%s: sha1 file error on close
%s: sha1 file has trailing garbage
%s: sha1 file read error
%s: sha1 file truncated
ssh+git://
'%s': short read %s
%s/%s.html
%s%sindex %s..
%s %s is not a commit!
%s: skipping still unmerged path.
%s %s %lu
%s%snew file mode %06o%s
%s%snew mode %06o%s
%s%sold mode %06o%s
%s, source=%s, destination=%s
%s%srename from 
%s%srename to 
= %-*s %-*s -> %s
    %-*s %s %s
 %s %s%s
%.*s%s%s
%s %s %s
%s %s %.*s
%s %s... %s
%s: %.*s%.*s
%s'%s': %s
%s	%s	%s
! %-*s %-*s -> %s  (can't fetch in current branch)
%s %s %s%c%s%s%s
 %s %s => %s (%d%%)
%s%ssimilarity index %d%%
%s %s %s %lu %c%04d	%s
! %-*s %-*s -> %s  %s
%s%.*s%s%s
%s%s %s%s
 %s %.*s{%s => %s} (%d%%)
%s%s--- %s%s%s
%s%s+++ %s%s%s
    %-*s %s to %s
    %-*s %s to %-*s (%s)
  -S<string>    find filepair whose only one side contains the string.
%s '%s' using previous resolution.
%s: symlink too long
__stack_chk_fail
--staged
stage should be between 1 and 3 or all
%s		tag '%s' of .
%stag %s%s
--stale-fix
 stale (use 'git remote prune' to remove)
standard input
--standard-notes
standard output, or directory, which one?
start-number
start numbering patches at <n> instead of 1
stash failed
--stateless-rpc
--stateless-rpc requires multi_ack_detailed
state now, use
state without impacting any branches by performing another checkout.
^[ 	]*(((static|public|internal|private|protected|new|unsafe|sealed|abstract|partial)[ 	]+)*(class|enum|interface|struct)[ 	]+.*)$
^[ 	]*(((static|public|internal|private|protected|new|virtual|sealed|override|unsafe)[ 	]+)*[][<>@.~_[:alnum:]]+[ 	]+[<>@._[:alnum:]]+[ 	]*\(.*\))[ 	]*$
^[ 	]*(((static|public|internal|private|protected|new|virtual|sealed|override|unsafe)[ 	]+)*[][<>@.~_[:alnum:]]+[ 	]+[@._[:alnum:]]+)[ 	]*$
stat(%s)
  --stat        show diffstat instead of patch.
status.color
status.color.
statushints
 (status not queried)
status.relativepaths
status.showuntrackedfiles
status.submodulesummary
    --stdin
--stdin given twice?
stdin-paths
<stdout>
--stdout
%s thread failed
%s thread failed to join: %s
'$%s' too big
stop-at-non-option
STOP_AT_NON_OPTION and KEEP_UNKNOWN don't go together
stop parsing after the first non-option argument
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
		Stored local change for %s: %.7s -> %.7s
stored pre-cherry-pick HEAD file '%s' is corrupt
		Stored remote change for %s: %.7s -> %.7s
store file as is without filters
store only
store resulting files in <dir>
storing head
storing tag
%s tracks both %s and %s
--strategy
--strategy-option
strcasecmp
strcasestr
__strcat_chk
strchrnul
__strcpy_chk
__strdup
stream consistency error
%stree %s%s
--strict
stricter reference checking, requires exact ref path
--strip-comments
stripspace
strncasecmp
__strncpy_chk
__strtoll_internal
__strtoull_internal
^((struct|class|enum)[^;]*)$
^sub [[:alnum:]_':]+[ 	]*(\([^)]*\)[ 	]*)?(:[^;#]*)?(\{[ 	]*)?(#.*)?$
<subdirectory>/
Subject: 
*** SUBJECT HERE ***
subject-prefix
--subject-prefix and -k are mutually exclusive.
Subject: [%s] 
Subject: [%s%s%0*d/%d] 
--submodule
--submodule=
submodule.
(submodule deleted)
--submodule-prefix
Submodule %s contains modified content
Submodule %s contains untracked content
Submodule %s %s..
suboptimal pack - out of memory
Subproject commit %s
Subproject commit %s%s
^(\\((sub)*section|chapter|part)\*{0,1}\{.*)$
subtree=
--summary
--summary-limit
summary %s
%s: unable to read file.
'%s': unable to read %s
%s: Unable to write new index file
%s unexpectedly said: '%s'
%s: Unexpected object of type %s, skipping.
'%s': unknown man viewer.
%s: unmerged (%s)
%s: unsupported file type
Suppress author name and timestamp (Default: off)
Suppress commit descriptions, only provides commit count
suppress diff output
suppress error message for non-symbolic (detached) refs
suppress naming strings
suppress progress reporting
suppress summary after successful commit
%s: %u%s%s
%s was both good and bad
   (%s will become dangling)
 %s will become dangling!
switch branches
switch `%c' expects a numerical value
switch `%c' %s
Switched to and reset branch '%s'
Switched to a new branch '%s'
Switched to branch '%s'
switch `m' requires a value
%s: write error (%s)
%s: wrong type
--symbolic
--symbolic-full-name
symbolic link too long: %s
symbolic-ref
synonym for --files-with-matches
synonym to more=-1
(synonym to --stat)
t$09t$,}u
t$0xb9t$xt\
|$ #T$\1
T$ 3T$03L$H
T$,3T$$1
T$@3T$(1
T$(3T$ 3T$L3T$X
T$4#|$\1
t$43t$ 1
T$49D$4|-
+t$49t$0~
+T$49T$0
t$4+\$l9D$l
t4<<t0<>t,<
<.t4< v0<:t,<,f
T$8#|$\1
t$83t$\1
t8;T$ s2
;t$8u|;l$4uv
T$(9l$(v'
+T$ 9T$(
T$@9T$0v!
tab-in-indent
tabwidth=
tabwidth %.*s out of range
Tag creation options
TAG_EDITMSG
tagged %s %s
taggerdate
taggeremail
taggername
tagger %s
tagger Unspecified Tagger <unspecified-tagger> 0 +0000
tag header too big.
Tag listing options
tag message
tag name too long: %.*s...
tag-of-filtered-object
Tag points to object of unexpected type %s, skipping.
    --tags
tag '%s' already exists
tag shorthand without <tag>
tag '%s' is really '%s' here
tag %s names a non-parent %s
tag '%s' not found.
Tag %s points nowhere?
Tag %s tags unexported object; use --tag-of-filtered-object=<mode> to handle it.
Tag %s tags unexported %s!
[tag update]
takes no value
target * 2 <= i
tar.tar.gz.command
tar.tar.gz.remote
tar.tgz.command
tar.tgz.remote
tar-tree
tar.umask
template-directory
templates not found %s
Temporary merge branch 1
Temporary merge branch 2
Terminal is dumb, but EDITOR unset
terminate entries with NUL
terminate entries with NUL byte
terminate values with NUL byte
--textconv
textconv/%s
tformat:
t$H3t$T!
The branch '%s' is not fully merged.
The bundle contains %d ref%s
The bundle requires these %d ref%s
the commit.
the commit is authored by me now (used with -C/-c/--amend)
The current branch %s has multiple upstream branches, refusing to push.
The current branch %s has no upstream branch.
The destination refspec neither matches an existing ref on the remote nor
The file will have its original line endings in your working directory.
The first bad commit could be any of:
The following paths are ignored by one of your .gitignore files:
The following untracked working tree files would be %s by %s:
The following Working tree files would be overwritten by sparse checkout update:
The following Working tree files would be removed by sparse checkout update:
--theirs
the merge base between %s and [%s] must be skipped.
The merge base %s is bad.
The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.
The most commonly used git commands are:
the necessary postimage %s for '%s' cannot be read
The note contents has been left in %s
The owner of files must always have read and write permissions.
the patch applies to an empty '%s' but it is not empty
the patch applies to '%s' (%s), which does not match the current contents.
The previous cherry-pick is now empty, possibly due to conflict resolution.
There are %lu packs available in alt-odbs.
There are only 'skip'ped commits left to test.
There are still logs under '%s'
there are still refs under '%s'
There are too many unreachable loose objects; run 'git prune' to remove them.
There are unpushed submodules, aborting.
There is no merge to abort (MERGE_HEAD missing).
The remote end hung up unexpectedly
There was a problem with the editor '%s'.
There were errors while writing %s (%s)
The same object %s appears twice in the pack
The smallest (bytewise) set of packs is:
The tag message has been left in %s
the work tree to HEAD.
--thin cannot be used to build an indexable pack.
 thin-pack
thisimage
This is a multi-part message in MIME format.
This means the bug has been fixed between %s and [%s].
This operation must be run in a work tree
This reverts commit 
This transport does not support using --set-upstream
--threads=
        [--threads=<n>] [--non-empty] [--revs [--unpacked | --all]]
Thursdays
--timestamp
!t->initialized
<-ti<+te
t$L3t$,!
+T$l9D$0
T$L+T$(9
tmp_obj_
              to %7s %s
to clone from a local repository
to delete it, use:
to delete them, use:
to do so with:
tolerate incorrectly detected missing new-line at the end of file
too few parameters
too long a refname '%s'
Too long path name: '%s/%s'
Too long path: %.*s
too many args to run %s
Too many arguments.
Too many boundaries to handle
too many labels on the command line
too many matches for %s
Too many options (>%d)
Too many options specified
Too many or long arguments
too many parameters
too many params
    --topo-order
--topo-order
To prevent you from losing history, non-fast-forward updates were rejected
To push the current branch and set the remote as upstream, use
To push the history leading to the current (detached HEAD)
tortoiseplink
to set your account's default identity.
To squelch this message and still keep the default behaviour, set
To squelch this message, you can set it to 'refuse'.
Total %u (delta %u), reused %u (delta %u)
+T$p+\$D
trace: alias expansion: %s =>
trace: built-in: git
trace: exec:
trace: exec failed: %s
trace: run_command:
 tracked
tracking
Tracking not set up: name too long: %s
--track needs a branch name
trailing-space
trailing whitespace
transfer.fsckobjects
Transfer loop debugging: %s
transfer.unpacklimit
transport: invalid depth option '%s'
traversed %lu commits
tree 0000000000000000000000000000000000000000
tree-ish
tree-ish %s not found.
tree && parent
tree_write_stack_init_subtree
truncating .rej filename to %.*s.rej
Try --always, or create some tags.
try "git cherry-pick (--continue | --quit | --abort)"
Trying merge strategy %s...
Trying really trivial in-index merge...
Trying to write non-commit object %s to branch %s
Trying to write ref %s with nonexistent object %s
                try unchanged files as candidate for copy detection.
<.t*</t.
<$t <:t$
T$<+T$,)
t\+T$\9T$(
+t$<;t$p
t(<"t$<\t 
t&<<t"<;t
Tuesdays
<"tU<\t1
<!tU<-tQ
Two output directories?
!tws->next
tws->path[0] == '\0' && tws->path[1] == '\0'
<type> can be one of: blob, tree, commit, tag
typechange: %s
, %u.%2.2u GiB
, %u.%2.2u KiB
, %u.%2.2u MiB
 | %u.%2.2u MiB/s
u.9|$,~(
-u and -i at the same time makes no sense
, %u bytes
Uh oh. Your system reports no Git commands at all.
  uid: %d	gid: %d
((uintptr_t) (entry) & 3) == 0
((uintptr_t) (*p) & 3) == 2 || ((uintptr_t) (*p) & 3) == 3
 | %u KiB/s
unable to add cache entry for %s
Unable to add merge result for '%s'
Unable to add %s to database
unable to add %s to index
Unable to append to %s
Unable to append to %s: %s
unable to connect to %s:
unable to create backing store for newly created file %s
unable to create directory for '%s'
unable to create directory for %s
unable to create directory %s
unable to create file %s (%s)
unable to create ref-pack file structure
unable to create '%s'
Unable to create %s
Unable to create '%s.lock': %s
Unable to create '%s.lock': %s.
unable to create symlink %s (%s)
unable to create temp-file
Unable to create temporary file '%s'
unable to create temporary index
unable to create temporary sha1 filename %s: %s
unable to create threaded lstat
unable to create thread: %s
unable to deflate appended object (%d)
unable to deflate new object %s (%d)
unable to delete existing %s
unable to delete old %s
unable to find filename in patch at line %d
Unable to find remote helper for '%s'
unable to find %s
Unable to fix permissions on %s
unable to force loose object
unable to fork
unable to get current working directory
unable to get type of object %s
unable to grep from object of type %s
unable to handle file type %d
Unable to hash %s
unable to index file %s
unable to join threaded lstat
unable to lock %s for rollback
unable to lock %s for update
Unable to look up %s
Unable to look up %s (port %s) (%s)
unable to make temporary index file readable
unable to make temporary pack file readable
unable to map index file
Unable to mark file %s
unable to move logfile logs/refs/.tmp-renamed-log to logs/%s: %s
unable to move logfile logs/%s to logs/refs/.tmp-renamed-log: %s
unable to move %s to %s
Unable to open directory %s
Unable to open marks file %s for writing.
unable to open object pack directory: %s: %s
unable to open or read %s
unable to open rr-cache directory
Unable to open %s for writing
unable to overwrite old ref-pack file
unable to parse command-line config
unable to parse commit %s
unable to parse %s header
Unable to process path %s
unable to push to unqualified destination: %s
unable to read blob object %s
unable to read config file '%s'
Unable to read current working directory
unable to read destination tree (%s)
unable to read files to diff
unable to read index file
Unable to read log '%s'
unable to read object %s
unable to read root tree (%s)
unable to read sha1 file of %s (%s)
unable to read source tree (%s)
unable to read symlink %s
unable to read tree entries %s
unable to read tree (%s)
unable to read tree %s
unable to redirect descriptor
unable to remove %s from index
unable to rename temporary index file
unable to rename temporary pack file
Unable to reread header of '%s'
unable to resolve reference %s: %s
unable to restore logfile %s from logs/refs/.tmp-renamed-log: %s
unable to restore logfile %s from %s: %s
unable to set permission to '%s'
unable to set SO_KEEPALIVE on socket: %s
unable to set up diff options to follow renames
unable to sign the tag
unable to %s %s: %s
unable to start '%s' filter
unable to start 'show' for object '%s'
unable to stat newly created file '%s'
unable to stat '%s'
unable to unlink old '%s' (%s)
unable to unpack %s header
  (unable to update local ref)
unable to update local ref
unable to update %s
unable to write current sha1 into %s
unable to write file %s
unable to write file '%s' mode %o
Unable to write index.
Unable to write marks file %s.
unable to write new index file
unable to write new_index file
unable to write note object
unable to write pack header
unable to write parameters to config file
unable to write rerere record
unable to write %s
unable to write sha1 file
unable to write sha1 filename %s: %s
unable to write tag file
unable to write temp-file
unable to write temporary index file
Unable to write to %s
(unavailable)
unbundle
unclosed quote
Unexpected checksum for %s (disk corruption?)
Unexpected comparison status '%c' for %s, %s
unexpected deflate failure: %d
unexpected delta opcode 0
unexpected diff status %c
unexpected end of file
Unexpected node type (internal error) %d
Unexpected option --output
Unexpected option --remote
Unexpected tail checksum for %s (disk corruption?)
unhandled object '%s' given.
unidiff-zero
--unified=
Unimplemented pathspec magic '%c' in '%s'
Unknown archive format '%s'
Unknown commit %s
unknown date format %s
  Unknown dirstat parameter '%.*s'
unknown error
unknown error in parse_pack_header
unknown field name: %.*s
unknown file mode for %s in index
Unknown index entry format %08x
Unknown mandatory capability %s. This remote helper probably needs newer version of Git.
unknown mirror argument: %s
unknown mode for %s
unknown object type %d
Unknown object type for %s
unknown object type %i at offset %llu in %s
Unknown option for merge-recursive: -X%s
unknown option `%s'
unknown option '%s'
unknown option: %s
Unknown option %s
Unknown option: %s
unknown pack file version %u
unknown pending object %s (%s)
Unknown response to connect: %s
unknown rev %s
unknown:    %s
unknown %.*s format %s
Unknown signed-tag mode: %s
Unknown -s/--strategy: %s
Unknown strategy (%i).
unknown style '%s' given for '%s'
Unknown subcommand: %s
unknown switch `%c'
unknown switch '%c'
Unknown tag-of-filtered mode: %s
Unknown type: %d
unknown type '%d' (internal fsck error)
Unknown type %s
unknown write failure on standard output
unmatched parenthesis
  Unmerged
* Unmerged path %s
Unmerged paths:
unmerged:   %s
    --unpacked
--unpacked
--unpacked=
--unpacked=<packfile> no longer supported.
unpack failed: %s
unpack-file
Unpacking objects
* unpack mask %lu, dirmask %lu, cnt %d 
unpack-objects
unpack-objects abnormal exit
unpack ok
unpack %s
unpack should have generated %s, but I can't find it!
unpack_trees takes at most %d trees
--unpack-unreachable
Unprocessed path??? %s
unreachable %s %s
unrecognized argument: %s
unrecognized argument: %s'
unrecognized binary patch at line %d
unrecognized header: %s%s (%d)
unrecognized help format '%s'
unrecognized input
unrecognized reflog param '%s'
unrecognized: %s
unrecognized whitespace ignore option '%s'
unrecognized whitespace option '%s'
unresolve
unresolved deltas left after unpacking
unset-all
unsetenv
unshallow 
unspecified
Unstaged changes after refreshing the index:
Unstaged changes after reset:
unsupported file mode: 0%o (SHA1: %s)
unsupported file type %s
unsupported object type in the tree
--until=
untracked
untracked content, 
untracked-files
Untracked files not listed%s
Untracked working tree file '%s' would be overwritten by merge.
Untracked working tree file '%s' would be removed by merge.
Unusable instruction sheet: %s
update BISECT_HEAD instead of checking out the current commit
update by push
Updated preimage for '%s'
Updated tag '%s' (was %s)
--update-head-ok
update ignored files (default)
update-index
update notes cache
Update of config-file failed
update_pre_post_images
--updateref
update-ref
update <refname> not the one it points to
update-ref --no-deref HEAD failed on %s
Update remote refs along with associated objects
update-server-info
update stat information in the index file
update the index with reused conflict resolution if possible
update the info files from scratch
update tracked files
update working tree with merge result
updating files failed
updating HEAD
updating local tracking ref '%s'
updating ORIG_HEAD
Updating %s
Updating %s..%s
Updating '%s' would lose untracked files in it
updating tag
updating the current branch
Updating the following directories would lose untracked files in it:
upload-archive: %s
upload-archive--writer
--upload-pack=
.uploadpack
@{upstream}
[up to date]
up to date
usage: %s
use a diff3 based merge
use another key to sign the tag
use any ref in .git/refs
use any tag in .git/refs/tags
       Use a regexp, --add or --replace-all to change %s.
use autosquash formatted message to fixup specified commit
use autosquash formatted message to squash specified commit
use basic POSIX regular expressions (default)
(use --cached to keep the file, or -f to force removal)
use colored output
used more bytes than were available
--use-done-feature
use extended POSIX regular expressions
Use -f if you really want to add them.
Use <file>'s contents as the final image
(use -f to force removal)
use full path names
 (use "git add" and/or "git commit -a")
  (use "git add <file>..." to update what will be committed)
  (use "git add/rm <file>..." as appropriate to mark resolution)
  (use "git add/rm <file>..." to update what will be committed)
 (use "git add" to track)
use .gitattributes only from the index
  (use "git checkout -- <file>..." to discard changes in working directory)
  (use "git reset %s <file>..." to unstage)
  (use "git rm --cached <file>..." to unstage)
  (use "git %s <file>..." to include in what will be committed)
use given config file
use global config file
use lowercase letters for 'assume unchanged' files
	 use --mirror=fetch or --mirror=push instead
use <name> instead of 'origin' to track upstream
use <n> digits to display SHA-1s
use notes from <notes_ref>
use [PATCH] even with multiple patches
use [PATCH n/m] even with a single patch
use Perl-compatible regular expressions
Use [<prefix>] instead of [PATCH]
user.email
use repository config file
Use revisions from <file> instead of calling git-rev-list
user.name
user.signingkey
uses feature not supported for dashless options
use <sfx> instead of '.patch'
use simple number sequence for output file names
uses incompatible flags LASTARG_DEFAULT and OPTARG
use specified template file
use system config file
use <text> as start of message
Use the done feature to terminate the stream
Use the same output mode as git-annotate (Default: off)
use thin pack
Use '--' to separate filenames from revisions
Use '--' to separate paths from revisions
 (use -u option to show untracked files)
 (use -u to show untracked files)
Using both --reset-author and --author does not make sense
Using local notes for %s
Using remote notes for %s
Using the %s to prepare resolving by hand.
/usr/bin:/bin
/usr/lib/git-core
/usr/share/doc/git/html
/usr/share/locale
/usr/share/man
  -u            synonym for -p.
<Utl<CtE
# v2 git bundle
value is a path (file or directory name)
value is --bool or --int
value is decimal number
value is "true" or "false"
Value '%s' of pattern has no '*'
variable i18n.commitencoding to the encoding your project uses.
verbatim
--verbose
--verify
verify_notes_filepair
--verify-objects
verify-pack
--verify requires a reference
--verify-stat
--verify-stat-only
verify-tag
verify tags
--verify with no packfile name given
--version
Version of %s from %s
__vfprintf_chk
virtual %s
>/Vm-ikP I
((void *) ((uintptr_t) (parent->a[index]) & ~3)) == tree
__vsnprintf_chk
__vsprintf_chk
waitpid for %s failed: %s
waitpid is confused (%s)
--walk-reflogs
wanna fool me ? you obviously got the size wrong !
want %s (%s)
want %s%s
warning: 
Warning: commit message does not conform to UTF-8.
** warning: file %s becomes empty but is not deleted
WARNING: git repo-config is deprecated in favor of git config.
Warning: you are leaving %d commit behind, not connected to
Warning: you are leaving %d commits behind, not connected to
WARNING: You called a Git command named '%s', which does not exist.
'warn' or 'ignore' in the remote repository to allow deleting the
web--browse
We cannot bisect more!
We continue anyway.
Wednesdays
weighted_shuffle
whatchanged
What does '%s' for %s mean?
when creating files, prepend <string>
Which one? -m, --reset, or --prefix?
which will accept this suggestion.
While expanding alias '%s': '%s'
while searching for:
w[,i1[,i2]]
Will not add file alias '%s' ('%s' already exists in index)
Will not delete all non-push URLs
--window=
--window=%d
--window-memory=
        [--window=<n>] [--window-memory=<n>] [--depth=<n>]
with 'git add <paths>' or 'git rm <paths>'
with --stdin: input lines are terminated by null bytes
with-tree
with what you pushed, and will require 'git reset --hard' to match
with '#' will be ignored, and an empty message aborts the commit.
with '#' will be kept; you may remove them yourself if you want to.
(woman "%s")
Wonderful.
--word-diff
--word-diff=
word-diff-regex
word-regexp
 (working directory clean)
Working tree file '%s' would be overwritten by sparse checkout update.
Working tree file '%s' would be removed by sparse checkout update.
working tree '%s' already exists.
--work-tree
--work-tree=
--worktree-attributes
Would not remove %s
would prune
Would remove %s
Would set upstream of '%s' to '%s' of '%s'
# Write a tag message
write dangling objects in .git/lost-found
write_each_note
write_each_note_helper
# Write/edit the notes for the following object:
write error (disk full?)
write failure on '%s'
write_idx_file
write_notes_tree
write resulting index to <file>
write(%s) failed: %s
write the archive to this file
write the content to temporary files
write the object into the object database
write tree object for a subdirectory <prefix>
Writing objects
Writing %s failed: %s
Writing SQUASH_MSG
wrong index v1 file size in %s
wrong index v2 file size in %s
wrong number of arguments
wrong object type in link
wrong version
Wrote %i bytes to %s (buffer now at %i)
wrote %u objects while expecting %u
wt < (1 << 16)
!((wt + 1) > ((18446744073709551615ULL) >> ((8 * sizeof(uintmax_t)) - (8 * sizeof(total)))) - (total))
wt-status.c
wt_status_print_tracking
-w[<width>[,<indent1>[,<indent2>]]]
-x and -X cannot be used together
xfuncname
__xpg_basename
 x %-*s %-*s -> %s
__xstat64
yesterday
You appear to have cloned an empty repository.
You are in 'detached HEAD' state. You can look around, make experimental
You are in the middle of a %s -- cannot amend.
You are not currently on a branch.
You are on a branch yet to be born
You asked to amend the most recent commit, but doing so would make
You cannot combine --no-ff with --ff-only.
You cannot combine --squash with --no-ff.
You can set 'receive.denyCurrentBranch' configuration variable to
You can set 'receive.denyDeleteCurrent' configuration variable to
You can suppress this message by setting them explicitly:
You can use '!git' in the alias to do this.
You didn't specify any refspecs to push, and push.default is "nothing".
You do not have a valid HEAD
You do not have a valid HEAD.
You don't exist. Go away!
You have both %s and %s
You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).
You have not concluded your merge (MERGE_HEAD exists).
You have not concluded your notes merge (%s exists).
You have not concluded your previous notes merge (%s exists).
You have nothing to amend.
You may want to amend it after fixing the message, or set the config
you may want to set your %s variable to at least %d and retry the command.
You must specify a repository to clone.
you need to resolve your current index first
You need to specify a tag name.
Your branch and '%s' have diverged,
Your branch is ahead of '%s' by %d commit.
Your branch is ahead of '%s' by %d commits.
Your branch is behind '%s' by %d commit, and can be fast-forwarded.
Your branch is behind '%s' by %d commits, and can be fast-forwarded.
Your index file is unmerged.
Your local changes to the following files would be overwritten by %s:
Your local changes would be overwritten by cherry-pick.
Your local changes would be overwritten by revert.
Your name and email address were configured automatically based
Your parents must have hated you!
Your sysadmin must hate you!
you want to use way too much memory
Zero packs found!
ZLIB_1.2.0
  -z            output diff-raw with lines terminated with NUL.
