              ;;
            ;;
           *)
          *)
         ;;
        ;;
        (
        {
        }
      -*)
      *)
#--------------------------------------
#----------------------------------------
#-----------------------------------------
#---------------------------------------------
#------------------------------------------------------------
#-------------------------------------------------------------
#----------------------------------------------------------------------------
    1.0 version of the Desktop Entry specification.
    1.0 version of the specification.
}' "$1/$2" 2> /dev/null`
# $1 Install dir for desktop file
22x22 pixels and once with a size of 64x64 pixels:
# $2 base name of desktop file
    action=forceupdate
    action=install
    action=uninstall
    additional categories. http://standards.freedesktop.org/menu-spec/
A *.desktop file can provide a name and description for an application in
A *.desktop file consists of a [Desktop Entry] header followed by several Key=
A *.directory file can provide a title (name) for the submenu in several
    A generic description of the application. For example Web Browser
    A list of categories separated by semi-colons. A category is a keyword that
    A list of mimetypes separated by semi-colons. This field is used to
    # All output to stderr
Although the result is the same it is slightly more efficient to install all
An application item in the application menu is represented by a *.desktop file.
    an application launcher.
#   and/or sell copies of the Software, and to permit persons to whom the
An exit code of 0 indicates success while a non-zero exit code indicates
    an image file or an icon-name. If an icon-name is provided an image lookup
            # App already listed as default
            	# Append
    application launcher the %f is replaced with the file path of the dropped
    are made in sequence this flag can be used to indicate that additional
    A required tool could not be found.
#   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
    A submenu and the associated directory file is only removed when the
    a submenu. The directory file provides the name and icon for a submenu. The
    A vendor prefix consists of alpha characters ([a-zA-Z]) and is terminated
                awk '
        awk '
       [a-zA-Z]*-*)
    based on the included keywords.
                basefile=`basename "$desktop_file"`
            basefile=`basename "$desktop_file"`
    basefile=`basename "$desktop_file"`
    basefilename=`basename "$desktop_file" | cut -d '.' -f 1`
                basefilename=`echo "$basefile"|cut -d '.' -f 1`
    below.
    # Be silent
#!/bin/sh
        break
            break
                break;
    by name is done in the user's current icon theme. The xdg-icon-resource
    can either be added to a predefined submenu in the menu system based on one
        case "$1" in
case $1 in
    case $action in
    case "$file" in
        case "$parm" in
    case "$parm" in
    categories.
    categories: AudioVideo, Development, Education, Game, Graphics, Network,
Categories=Categories
  Categories=Network;WebDevelopment;
cat << _MANUALPAGE
cat << _USAGE
    changes will follow and that it is not necassery to update the menu system
check_common_commands "$@"
check_common_commands()
check_input_file()
            check_input_file "$parm"
check_output_file()
# Checks for known desktop environments
# Checks for shared commands, e.g. --help
check_vendor_prefix()
        check_vendor_prefix "$desktop_file"
        chmod $my_chmod $tmpfile
    command can be used to install image files into icon themes. The advantage
Commands
Comment=Comment
#   Common utility functions included in all XDG wrapper scripts
            continue;
#   copy of this software and associated documentation files (the "Software"),
#   Copyright 2006, Jeremy White <jwhite@codeweavers.com>
#   Copyright 2006, Kevin Krammer <kevin.krammer@gmx.at>
#   Copyright 2009-2010, Fathi Boudra <fabo@freedesktop.org>
#   Copyright 2009-2010, Rex Dieter <rdieter@fedoraproject.org>
    current user only. In system mode the file is (un)installed for all users
    DEBUG 1 "$action $desktop_file in $xdg_dir $kde_dir $gnome_dir"
            DEBUG 1 "Debian Workaround: Link '$xdg_dir' to '$gnome_xdg_dir'"
            DEBUG 1 "Fedora Workaround: Link '$xdg_dir' to '$kde_xdg_dir'"
        DEBUG 1 "Kubuntu Workaround: Link '$xdg_dir' to 'kde-applications-merged'"
    DEBUG 1 "make_lazy_default $1/$2"
            DEBUG 1 "Mandriva Workaround: Link '$xdg_dir' to '$mandrake_xdg_dir'"
              DEBUG 1 "Running $x/update-desktop-database"
    DEBUG 1 "update_submenu $1"
        DEBUG 1 "Updating $default_file"
    DEBUG 1 "Updating $orig_menu_file ($action)"
            DEBUG 2 "Checking $x/applications/defaults.list"
        DEBUG 2 "Current default apps for $MIME: $default_app"
                DEBUG 2 "Found default apps for $MIME: $default_app"
    DEBUG 3 "Files to list in $menu_file: $new_desktop_files"
    DEBUG 3 "gnome_global_dir: $gnome_global_dir"
DEBUG 3 "gnome_global_dir: $gnome_global_dir"
    DEBUG 3 "gnome_user_dir: $gnome_user_dir"
DEBUG 3 "gnome_user_dir: $gnome_user_dir"
DEBUG 3 "Install locations for *.desktop files:"
DEBUG 3 "Install locations for *.directory files:"
    DEBUG 3 "Install locations for *.menu file:"
    DEBUG 3 "kde_global_dir: $kde_global_dir"
DEBUG 3 "kde_global_dir: $kde_global_dir"
    DEBUG 3 "kde_user_dir: $kde_user_dir"
DEBUG 3 "kde_user_dir: $kde_user_dir"
    DEBUG 3 "xdg_global_dir: $xdg_global_dir"
DEBUG 3 "xdg_global_dir: $xdg_global_dir"
    DEBUG 3 "xdg_user_dir: $xdg_user_dir"
DEBUG 3 "xdg_user_dir: $xdg_user_dir"
                default_app="$default_app;"
            default_app=`grep "$MIME=" $x/applications/defaults.list 2> /dev/null | cut -d '=' -f 2`
        default_file="$(readlink -f "$1/defaults.list")"
    describes and classifies the application. By default applications are
    describes a submenu.
Description
           *.desktop)
  [Desktop Entry]
    desktop-file: A desktop file represents a single menu entry in the menu.
desktop_files=
desktop-file(s)
Desktop Files
    Desktop files are defined by the freedesktop.org Desktop Entry
              desktop_files="$desktop_files $parm"
    *.desktop files to be installed has a vendor prefix. This option can be
desktop's application menu.
detectDE()
different languages. This is done by adding a language code as used by
different values for the same Key depending on the currently selected language.
        DIR=`dirname "$1"`
           *.directory)
/^Directory/ {
*.directory file consists of a [Desktop Entry] header followed by several Key=
        directory_files=
directory_files=
Directory Files
               directory_files="$directory_files $desktop_file"
              directory_files="$directory_files $parm"
    Directory files follow the syntax defined by the freedesktop.org Desktop
    directory-file that describes the submenu. If multiple desktop-files are
    directory-file: The *.directory file indicated by directory-file represents
    done
        done
            done
        echo
        echo "$@"
  echo "$@" >&2
    echo 'A vendor prefix consists of alpha characters ([a-zA-Z]) and is terminated' >&2
            	echo "$basefile" >> $tmpfile
            echo "[Default Applications]" >> ${default_file}.new
            echo "$desktop_file" >> $tmpfile
                echo "    <Directory>$basefile</Directory>"
            echo '<!DOCTYPE Menu PUBLIC "-//freedesktop//DTD Menu 1.0//EN"'
            echo '<!-- Do not edit manually - generated and managed by xdg-desktop-menu -->'
                echo "        <Filename>$desktop_file</Filename>"
            echo '    "http://www.freedesktop.org/standards/menu-spec/menu-1.0.dtd">'
            echo "    </Include>"
            echo "    <Include>"
                echo "</Menu>"
                echo "<Menu>"
            echo '</Menu>'
            echo '<Menu>'
        echo $MIME="$default_app$2" >> ${default_file}.new
            echo '    <Name>Applications</Name>'
                echo "    <Name>$basefilename</Name>"
                echo "OnlyShowIn=Old;" >> $gnome_dir/$basefile
                echo "OnlyShowIn=Old;" >> $kde_dir/$basefile
        echo > $tmpfile
        echo "Try 'xdg-desktop-menu --help' for more information." >&2
#    echo Update desktop database: $mode
            echo "Use 'man xdg-desktop-menu' or 'xdg-desktop-menu --manual' for additional info."
        echo "Use 'man xdg-desktop-menu' or 'xdg-desktop-menu --manual' for additional info."
    echo "Use --novendor to override or 'xdg-desktop-menu --manual' for additional info." >&2
    echo 'with a dash ("-"). An example '"$file_label"' is '"'example-$file'" >&2
            echo "xdg-desktop-menu 1.0.2"
        echo "xdg-desktop-menu: $@" >&2
    echo "xdg-desktop-menu: $file_label '$file' does not have a proper vendor prefix" >&2
    elif `dbus-send --print-reply --dest=org.freedesktop.DBus /org/freedesktop/DBus org.freedesktop.DBus.GetNameOwner string:org.gnome.SessionManager > /dev/null 2>&1` ; then DE=gnome;
    elif [ x"$DESKTOP_SESSION" = x"LXDE" ]; then DE=lxde;
    elif [ "$XDG_UTILS_INSTALL_MODE" = "user" ] ; then
    elif [ x"$GNOME_DESKTOP_SESSION_ID" != x"" ]; then DE=gnome;
    elif xprop -root _DT_SAVE_MODE 2> /dev/null | grep ' = \"xfce4\"$' >/dev/null 2>&1; then DE=xfce;
    else
    else DE=""
  Encoding=UTF-8
    Entry Specification.
Environment Variables
    Error in command line syntax.
    esac
        esac
                eval 'cp $desktop_file $x/$basefile'$xdg_redirect_output
        eval 'cp $tmpfile $xdg_dir/$menu_file'$xdg_redirect_output
            eval 'ln -s "applications-merged" "$gnome_xdg_dir"'$xdg_redirect_output
            eval 'ln -s "applications-merged" "$kde_xdg_dir"'$xdg_redirect_output
            eval 'ln -s "applications-merged" "$mandrake_xdg_dir"'$xdg_redirect_output
        eval 'ln -s "kde-applications-merged" "$xdg_dir"'$xdg_redirect_output
              eval '$x/update-desktop-database'$xdg_redirect_output
Examples
example the icons are installed in two different sizes, once with a size of
Exec=Command Line
  Exec=webmirror
  Exec=webmirror-admintool
    existing entries.
        # Existing files are in $orig_desktop_files
    exit 0
    exit 1
    exit 2
    exit 3
    exit 4
    exit 5
    exit 6
Exit Codes
exit_failure_file_missing()
        exit_failure_file_missing "file '$1' does not exist"
exit_failure_file_permission_read()
        exit_failure_file_permission_read "no permission to read file '$1'"
exit_failure_file_permission_write()
            exit_failure_file_permission_write "no permission to create file '$1'"
            exit_failure_file_permission_write "no permission to write to file '$1'"
exit_failure_operation_failed()
exit_failure_operation_impossible()
            exit_failure_operation_impossible "No writable system menu directory found."
        exit_failure_operation_impossible "No writable system menu directory found."
exit_failure_syntax()
    exit_failure_syntax "command argument missing"
    exit_failure_syntax "desktop-file argument missing"
              exit_failure_syntax "file to $action must be a *.directory or *.desktop file"
            exit_failure_syntax "mode argument missing for --mode"
                  exit_failure_syntax "'$parm' must preceed any *.desktop file"
        exit_failure_syntax "unexpected option '$parm'"
    exit_failure_syntax "unknown command '$1'"
            exit_failure_syntax "unknown mode '$1'"
# Exit script on failure returned by a tool application
# Exit script on failure to locate necessary tool applications
# Exit script on insufficient permission to read a specified file
# Exit script on insufficient permission to write a specified file
# Exit script on malformed arguments, not enough arguments
# Exit script on missing file specified on command line
# Exit script on successfully completing the desired operation
            exit_success
    exit_success
exit_success
exit_success()
    explicitly assigned to a new submenu it is not necassery to list any
failure. The following failure codes can be returned:
        fi
           fi
            fi
              fi
    file=`basename "$1"`
    file. If multiple files can be specified on the command line the %F
file. In particular it provides the title of the submenu and a possible icon. A
    file_label="$2"
/^Filename/ {
files at the same time.
    files the %f placeholder should be specified. When a file is dropped on the
        # Files to uninstall are listed in $tmpfile
First the company needs to create two .desktop files that describe the two menu
#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
For a complete oveview of the *.desktop file format please visit http://
    Force an update of the menu system.
forceupdate
  forceupdate)
        for desktop_file in $desktop_files; do
for desktop_file in $desktop_files; do
            for desktop_file in $directory_files; do
for desktop_file in $directory_files; do
            for desktop_file in $new_desktop_files; do
        for desktop_file in $orig_desktop_files; do
        for desktop_file in $orig_directory_files; do
    %f or %F.
        for menu_file in $xdg_dir/*; do
    for MIME in $mimetypes ; do
        for (n in mimetypes)
for the sub-menu itself:
        for x in `echo $PATH | sed 's/:/ /g'` /opt/gnome/bin; do
        for x in `echo "$xdg_default_dirs" | sed 's/:/ /g'`; do
    for x in `echo $xdg_system_dirs | sed 's/:/ /g'` ; do
for x in `echo $xdg_system_dirs | sed 's/:/ /g'` ; do
            for x in $xdg_dir $kde_dir $gnome_dir ; do
GenericName=Generic Name
        gnome_dir="$gnome_global_dir"
    gnome_dir="$gnome_global_dir"
        gnome_dir="$gnome_user_dir"
    gnome_dir="$gnome_user_dir"
gnome_global_dir="/usr/share/gnome/apps"
gnome_user_dir="$HOME/.gnome/apps"
        gnome_xdg_dir=`echo "$xdg_dir" | sed -e 's^/applications-merged^/gnome-applications-merged^'`
        grep -v "$MIME=" $default_file > ${default_file}.new 2> /dev/null
            --help)
http://www.freedesktop.org/Standards/menu-spec
Icon=Icon File
  Icon=shinythings-webmirror
  Icon=shinythings-webmirror-admintool
  Icon=shinythings-webmirror-menu
  Icon=webmirror
    if [ $action = "install" -a -f "/etc/mandrake-release" ] ; then
    if [ $action = "install" -a -f "/etc/xdg/menus/gnome-applications.menu" ] ; then
    if [ $action = "install" -a x"$mode" = x"system" -a -d "/etc/xdg/menus/kde-applications-merged" -a ! -d "/etc/xdg/menus/applications-merged" ] ; then
    if [ $action = "install" -a x"$mode" = x"user" -a -d "/etc/xdg/menus/kde-applications-merged" ] ; then
        if [ "$action" = "install" ] ; then
    if [ $action = "install" ] ; then
    if [ $action = "uninstall" ] ; then
    if [ -e "$1" ]; then
    if [ ! -e "$1" ]; then
        if echo "$default_app" | grep "$2" > /dev/null 2> /dev/null; then
        if [ ! -e "$gnome_xdg_dir" ] ; then
        if [ ! -e "$kde_xdg_dir" ] ; then
        if [ ! -e "$mandrake_xdg_dir" ] ; then
            if [ -f $gnome_dir/$basefile ] ; then
            if [ -f $kde_dir/$basefile ] ; then
# iff such mimetype didn't had a default application already.
            if ! grep '^'$basefile'$' $tmpfile > /dev/null 2> /dev/null ; then
        if ! grep "[Default Applications]" ${default_file}.new > /dev/null; then
            if ! grep '^'$desktop_file'$' $tmpfile > /dev/null 2> /dev/null; then
            if grep 'generated and managed by xdg-desktop-menu' $menu_file > /dev/null 2> /dev/null; then
    if [ $# -gt 0 ]; then
    # if it does not exists, check if we are allowed to write on the directory
  if (match($0,/>/)) {
    if (match($0,/MimeType=/)) {
               if (mimetypes[n])
    if [ "$mode" = "system" ] ; then
    If multiple directory files are provided each file will represent a submenu
            if [ -n "$default_app" ] ; then
              if [ -n "$desktop_files" ] ; then
if [ -n "$menu_name" ] ; then
    if [ -n "$new_desktop_files" ] ; then
if [ -n "$XDG_UTILS_INSTALL_MODE" ] ; then
    if [ ! -r "$1" ]; then
    if [ -r "$orig_menu_file" ] ; then
    # if the file exists, check if it is writeable
    if [ "$vendor" =  "true" -a "$action" = "install" ] ; then
        if [ ! -w "$1" ]; then
        if [ ! -w "$DIR" -o ! -x "$DIR" ]; then
    if [ `whoami` = "root" ] ; then
        if [ -w $x/$xdg_dir_name ] ; then
    if [ -w $x/$xdg_dir_name ] ; then
if [ x"$action" = x"forceupdate" ] ; then
if [ ${XDG_UTILS_DEBUG_LEVEL-0} -lt 1 ]; then
    if [ "$XDG_UTILS_INSTALL_MODE" = "system" ] ; then
    if [ x"$KDE_FULL_SESSION" = x"true" ]; then DE=kde;
        if [ x"$mode" = x"user" ] ; then
    if [ x"$mode" = x"user" ] ; then
if [ x"$mode" = x"user" ] ; then
if [ x"$update" = x"yes" ] ; then
           if [ -x $x/update-desktop-database ] ; then
        if [ -z "$1" ] ; then
if [ -z "$action" ] ; then
if [ -z "$desktop_files" ] ; then
    if [ -z "$menu_file" ] ; then
    if [ -z "$menu_name" ] ; then
if [ -z "$mode" ] ; then
        if [ -z "${xdg_dir}${kde_dir}${gnome_dir}" ] ; then
    if [ -z "${xdg_dir}${kde_dir}${gnome_dir}" ] ; then
    image file or an icon-name. If an icon-name is provided an image lookup by
In addition a .directory file needs to be created to provide a title and icon
#   in all copies or substantial portions of the Software.
include a Categories= line:
    indicate which file types the application is able to open.
    in several differently themed styles.
        install)
  install)
# Install *.desktop files
# Install *.directory files
    installed to a menu that has been created with a previous call to 
    installed with xdg-desktop-menu install.
    Install one or more applications in a submenu of the desktop menu system.
        # Install/update
In the next example the company ShinyThings Inc. will add its own submenu to
# It also always returns 1 in KDE 3.4 and earlier
items. Since the items are to be added to a new submenu it is not necassery to
        kde_dir="$kde_global_dir"
    kde_dir="$kde_global_dir"
        kde_dir="$kde_user_dir"
    kde_dir="$kde_user_dir"
kde_global_dir=`kde${KDE_SESSION_VERSION}-config --path apps 2> /dev/null | cut -d ':' -f 2`
kde_user_dir=`kde${KDE_SESSION_VERSION}-config --path apps 2> /dev/null | cut -d ':' -f 1`
        kde_xdg_dir=`echo "$xdg_dir" | sed -e 's^/applications-merged^/kde-applications-merged^'`
            	# Keep this file, it's not in the uninstall list
# kfmclient exec/openURL can give bogus exit value in KDE <= 3.5.4
kfmclient_fix_exit_code()
languages, English and Dutch. The language code for Dutch is nl.
LC_MESSAGES in square brackets behind the Key. This way one can specify
#   LICENSE:
# List all files within <Directory> tags
# List all files within <Filename> tags
        local default_app
    local mimetypes
    local xdg_default_dirs
    local xdg_user_dir
    major=`echo $version | sed 's/KDE.*: \([0-9]\).*/\1/'`
# Make application $1/$2 the default for all the mimetypes it support,
make_lazy_default()
            make_lazy_default "$xdg_dir" "$basefile"
        mandrake_xdg_dir=`echo "$xdg_dir" | sed -e 's^/applications-merged^/applications-mdk-merged^'`
            --manual)
--manual
            manualpage
manualpage()
_MANUALPAGE
    Menu entries can be added to the menu system in two different ways. They
    menu_file="$1"
}' $menu_file >> $tmpfile
menu_name=
        menu_name="$basefilename"
        menu_name="$menu_name-$basefilename"
    menu-spec-1.0.html
MimeType=Mimetypes
    mimetypes=`awk '
    minor=`echo $version | sed 's/KDE.*: [0-9]*\.\([0-9]\).*/\1/'`
            mkdir -p `dirname "$gnome_xdg_dir"`
            mkdir -p `dirname "$kde_xdg_dir"`
            mkdir -p `dirname "$mandrake_xdg_dir"`
                mkdir -p $x
        mkdir -p $xdg_dir
      --mode)
    mode can be user or system. In user mode the file is (un)installed for the
--mode mode
            mode="system"
        mode="system"
       mode="system"
            mode="user"
        mode="user"
       mode="user"
    more keywords. The menu item will be included in an appropriate submenu
        mv ${default_file}.new $default_file
        my_chmod=0600
        my_chmod=0644
        my_umask=022
    my_umask=022
        my_umask=077
    my_umask=077
Name=Application Name
    name is done in the user's current icon theme. The xdg-icon-resource
Name=Menu Name
  Name[nl]=WebSpiegel
  Name[nl]=WebSpiegel Administratie Tool
    name of the directory file is used to identify the submenu.
  Name=WebMirror
  Name=WebMirror Admin Tool
    new_desktop_files=
        new_desktop_files=`cat $tmpfile`
            	new_desktop_files="$new_desktop_files $desktop_file"
    [ -n "$file_label" ] || file_label="filename"
                # No longer in use, safe to delete
    No permission to read one of the files passed on the command line.
    Normally, xdg-desktop-menu checks to ensure that any *.directory and
Note that for the purpose of this example the menu items are available in two
      --noupdate)
--noupdate
      --novendor)
--novendor
Now the xdg-desktop-menu tool can be used to add the
        [ -n "$xdg_default_dirs" ] || xdg_default_dirs=/usr/local/share/:/usr/share/
    [ -n "$xdg_system_dirs" ] || xdg_system_dirs=/etc/xdg
[ -n "$xdg_system_dirs" ] || xdg_system_dirs=/usr/local/share/:/usr/share/
    [ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.config"
            [ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
[ -n "$xdg_user_dir" ] || xdg_user_dir="$HOME/.local/share"
    Office, Settings, System, Utility.
    of using an icon-name instead of an absolute path is that with an icon-name
    One of the files passed on the command line did not exist.
    on the system. Usually only root is allowed to install in system mode.
    open URLs in addition to local files then %u or %U can be used instead of
    Optional field to specify a tooltip for the application. For example Visit
    Optional field to specify a tooltip for the submenu.
    organized in the application menu based on category. When menu entries are
    orig_desktop_files=
    orig_desktop_files=`cat $tmpfile`
        orig_directory_files="$directory_files"
}' $orig_menu_file > $tmpfile
    orig_menu_file=$xdg_dir/$menu_file
#   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# or missing required option.
    or more category keywords, or they can be added to a new submenu.
    or phrase, preferably the organizations name, for which they hold a
#   OTHER DEALINGS IN THE SOFTWARE.
#   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
    override the installation mode. Valid values are user and system.
        parm="$1"
    parm="$1"
#   Permission is hereby granted, free of charge, to any person obtaining a
    placeholder should be used instead of %f. If the application is able to
    Postpone updating the menu system. If multiple updates to the menu system
    prevent name conflicts.
                 print mimetypes[n]
     print substr($0,RSTART+1)
# prints usage information
#   Refer to the usage() function below for usage.
    release=`echo $version | sed 's/KDE.*: [0-9]*\.[0-9]*\.\([0-9]\).*/\1/'`
    Remove applications or submenus from the desktop menu system previously
    represents the menu entry must have a Categories= entry that lists one or
        return
         return
              return
    return 0
    right away.
        rm -f "$tmpfile"
    rm -f "$tmpfile"
	rm -f "$tmpfile"
                rm -f $x/$basefile
        rm -f $xdg_dir/$menu_file
  RS="<"
            save_umask=`umask`
        save_umask=`umask`
(s) desktop-file(s)
See Also
    See Appendix A of the XDG Desktop Menu Specification for information about
    Setting this environment variable to a non-zero numerical value makes
# set variable DE to the desktop environments name, lowercase
several different languages. This is done by adding a language code as used by
    several differently themed styles.
    shift
        shift
"shinythings" as its vendor id. In order to add the application to the menu
      ./shinythings-webmirror-admin.desktop
shinythings-webmirror-admin.desktop:
      ./shinythings-webmirror.desktop
shinythings-webmirror.desktop:
shinythings-webmirror.desktop file to the desktop application menu:
      ./shinythings-webmirror.desktop ./shinythings-webmirror-admin.desktop
shinythings-webmirror.directory:
# Shouldn't happen
    Show command synopsis.
    Show the xdg-utils version information.
    Show this manualpage.
# Simply return 0 in such case
#   Software is furnished to do so, subject to the following conditions:
    Specification. The most important aspects of *.desktop files are summarized
    specified, all entries will be added to the same menu. If entries are
        split(substr($0,RSTART+9),mimetypes,";")
    submenu.
    submenu no longer contains any menu entries.
    (sub-sub-menus). The menu entries themselves will be added to the last
Synopsis
          system)
    test "$major" -gt 3 && return $1
    test "$minor" -gt 5 && return $1
    test "$release" -gt 4 && return $1
        test "${TMPDIR+set}" = set || TMPDIR=/tmp
    test "${TMPDIR+set}" = set || TMPDIR=/tmp
#   The above copyright notice and this permission notice shall be included
    The action failed.
The appearance of submenu in the application menu is provided by a *.directory
    the application icon can be provided in several different sizes as well as
The application menu works according to the XDG Desktop Menu Specification at
#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
    The command line to start the application. If the application can open
The company ShinyThings Inc. has developed an application named "WebMirror" and
    The default is to use system mode when called by root and to use user mode
The *.desktop and *.directory files reference icons with the names webmirror,
the desktop application menu consisting of a "WebMirror" menu item and a
The following keys are often used:
The following keys are relevqnt for submenus:
    The icon to use for the application. This can either be an absolute path to
    The icon to use for the submenu. This can either be an absolute path to an
The menu entries could also be installed one by one:
    The name of the application. For example Mozilla
    the --noupdate option.
there needs to be a .desktop file with a suitable Categories entry:
#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
These file can now be installed with:
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    the submenu icon can be provided in several different sizes as well as in
    The title of submenu. For example Mozilla
The xdg-desktop-menu program can be used to install new menu entries to the
    This command is only useful if the last call to xdg-desktop-menu included
    This environment variable can be used by the user or administrator to
    This is a mandatory field that indicates that the *.desktop file describes
    This is a mandatory field that indicates that the *.directory file
    This is a mandatory field to indicate that the *.desktop file follows the
    This is a mandatory field to indicate that the *.directory file follows the
        ) > $tmpfile
        tmpfile=`mktemp $TMPDIR/tmp.XXXXXXXXXX`
    tmpfile=`mktemp $TMPDIR/tmp.XXXXXXXXXX`
    To add a menu entry to a predefined submenu the desktop file that
    To add menu items to a new submenu the desktop-files must be preceded by a
#   to deal in the Software without restriction, including without limitation
        touch $xdg_dir/xdg-desktop-menu-dummy.menu
    trademark as their vendor prefix. The purpose of the vendor prefix is to
  Type=Application
Type=Application
Type=Directory
            umask $my_umask
        umask $my_umask
            umask $save_umask
        umask $save_umask
uninstall
        uninstall)
  uninstall)
        # Uninstall
    # Uninstall .directory files only if no longer referenced
    update_desktop_database
update_desktop_database()
        update=no
        update_submenu
update_submenu()
        update_submenu "$menu_name.menu"
        update_submenu "user-$menu_name.menu"
update=yes
        usage
            usage
    used to disable that check.
          user)
#   Utility script to install menu items on a Linux desktop.
Value=1.0
    value increases the verbosity.
Value lines.
        vendor=false
vendor=true
            --version)
--version
    version=`kde${KDE_SESSION_VERSION}-config --version 2>/dev/null | grep '^KDE'`
webmirror-admin and webmirror-menu which should also be installed. In this
"WebMirror Admin Tool" menu item.
    websites on the Internet
[ -w $gnome_global_dir ] || gnome_global_dir=
    when called by a non-root user.
    When using categories it is recommended to include one of the following
    while [ $# -gt 0 ] ; do
while [ $# -gt 0 ] ; do
    with a dash ("-"). Companies and organizations are encouraged to use a word
    within the menu that preceeds it, creating a nested menu hierarchy
[ -w $kde_global_dir ] || kde_global_dir=
        # Work around for Debian Gnome
        # Work around for Fedora Core 5 + patched KDE
        # Work around for Kubuntu 6.06
        # Work around for Mandriva 2006
        # Work around for SUSE/gnome 2.12 to pick up new ~/.local/share/applications
    # Work around for SUSE/gnome 2.12 to pick up new ~/.local/share/applications
would like to add it to the application menu. The company will use
www.freedesktop.org/wiki/Standards/desktop-entry-spec
[ x"$1" != x"" ] || exit_failure_syntax
        xdg_default_dirs="$XDG_DATA_DIRS"
            xdg_default_dirs="$xdg_user_dir:$xdg_default_dirs"
xdg-desktop-icon(1), xdg-icon-resource(1), xdg-mime(1)
#   xdg-desktop-menu
xdg-desktop-menu - command line tool for (un)installing desktop menu items
    xdg-desktop-menu do more verbose reporting on stderr. Setting a higher
xdg-desktop-menu forceupdate
xdg-desktop-menu forceupdate [--mode mode]
xdg-desktop-menu { --help | --manual | --version }
xdg-desktop-menu honours the following environment variables:
xdg-desktop-menu install [--noupdate] [--novendor] [--mode mode] directory-file
xdg-desktop-menu install --noupdate ./shinythings-webmirror.directory \
xdg-desktop-menu install ./shinythings-webmirror.desktop
xdg-desktop-menu install ./shinythings-webmirror.directory \
    xdg-desktop-menu the entries will be installed in addition to any already
xdg-desktop-menu uninstall [--noupdate] [--mode mode] directory-file(s)
xdg_dir_name=applications
xdg_dir_name=desktop-directories
    xdg_dir_name=menus
        xdg_dir="$xdg_global_dir"
    xdg_dir="$xdg_global_dir"
        xdg_dir="$xdg_user_dir"
    xdg_dir="$xdg_user_dir"
    xdg_global_dir=
xdg_global_dir=
    xdg_global_dir="$xdg_global_dir/applications-merged"
            xdg_global_dir="$x/$xdg_dir_name"
        xdg_global_dir="$x/$xdg_dir_name"
xdg-icon-resource install --size 22 ./wmicon-22.png shinythings-webmirror
xdg-icon-resource install --size 22 ./wmicon-admin-22.png shinythings-webmirror-admin
xdg-icon-resource install --size 22 ./wmicon-menu-22.png shinythings-webmirror-menu
xdg-icon-resource install --size 64 ./wmicon-64.png shinythings-webmirror
xdg-icon-resource install --size 64 ./wmicon-admin-64.png shinythings-webmirror-admin
xdg-icon-resource install --size 64 ./wmicon-menu-64.png shinythings-webmirror-menu
    xdg_redirect_output=" >&2"
    xdg_redirect_output=" > /dev/null 2> /dev/null"
    xdg_system_dirs="$XDG_CONFIG_DIRS"
xdg_system_dirs="$XDG_DATA_DIRS"
    xdg_user_dir="$XDG_CONFIG_HOME"
            xdg_user_dir="$XDG_DATA_HOME"
xdg_user_dir="$XDG_DATA_HOME"
    xdg_user_dir="$xdg_user_dir/applications-merged"
    xdg_user_dir="$xdg_user_dir/$xdg_dir_name"
xdg_user_dir="$xdg_user_dir/$xdg_dir_name"
#@xdg-utils-common@
XDG_UTILS_DEBUG_LEVEL
  [ ${XDG_UTILS_DEBUG_LEVEL} -lt $1 ] && return 0;
XDG_UTILS_INSTALL_MODE
  [ -z "${XDG_UTILS_DEBUG_LEVEL}" ] && return 0;
[ -z "${XDG_UTILS_DEBUG_LEVEL}" ] && unset XDG_UTILS_DEBUG_LEVEL;
