######################################################################
					$_ = "[$1]";
			/(.{1,15})\s+<00>\s+/;
					/(.{1,15})\s+<00>\s+/;
			# and spaces. The follwing cure inside name space but not
	$BCAST = "-B $_";
  	close NMBLOOKUP;
			close SMB;
# -d|-D		enable debug
		$DEBUG = 1;
				die("Can't do smbclient command.\n");
		die("Can't get nmb name list.\n");
	die("Can't run nmblookup '*'.\n");
		# do an smbclient command on the netbios name.
# do numeric sort on last field of IP address
		} else {
				} else {
	} else {				# no netbios name found
			} else {				# no OS= string in response (WIN95 client)
	} elsif (m/-r/) {
#    findsmb [-d|-D] [-r] [subnet broadcast address]
	# find the netbios names registered by each machine
foreach $ip (@ipaddrs)		# loop through each IP address found
for ($i = 0; $i < 2; $i++) {	# test for -d and -r options
				# for WIN95 clients get workgroup name from nmblookup response
			gethostbyaddr(pack('C4',split('\.',$ip)),2);
		gethostbyaddr(pack('C4',split('\.',$ip)),2);
# get rid of all lines that are not a response IP address,
	# get the first <00> name
				if ($_) {
		if ($DEBUG) {			# if -d flag print results of nmblookup
			if ($DEBUG) {		# if -d flag print results of nmblookup and smbclient
			if (grep(/<1b>/,@nmblookup)) {	# how about domain master browser?
		if (grep(/<1d>/,@nmblookup)) {
		if (/GROUP/) {		# is it a group name
	if (m/-d|-D/) {
		if ( "$name" ) {
			if (! $name) {			# could not get name
		if (! $name) {			# could not get name
if ($_) {			# set broadcast address if it was specified
			if ($_) {				# we found response
	if ($_) {			# we have a netbios name
			$_ = @info[0];
			@info = grep(/OS=/,@smb);
@ipaddrs = sort ipsort grep(s/ \*<00>.*$//,<NMBLOOKUP>);
	$ip =~ s/\n//;		# strip newline from IP address
		# line up info in 3 columns
# local master browsers for that workgroup. There will be an "*" in front
# look for all machines that respond to a name lookup
			# look for the OS= string
				$master = '*';			# indicate domain master browser
			$master = '+';			# indicate local master browser
			$master = ' ';			# not a browse master
	$_ = @name[0];
				$_ = @name[0];
			$name = $1;
		($name, $aliases, $type, $length, @addresses) = 
			($name, $aliases, $type, $length, @addresses) = 
				@name = grep(/<00> - <GROUP>/,@nmblookup);
	@name = grep(/<00>/,@nmblookup);
			$name =~ s/^\s+//g;
			# names starting or ending with spaces
			$name = "unknown nis name";
				$name = "unknown nis name";
	@nmblookup = <NMBLOOKUP>;
# of the workgroup name for machines that are the domain master browser for
open(NMBLOOKUP,"$SAMBABIN/nmblookup $BCAST '*' --debuglevel=0|") || 
	open(NMBLOOKUP,"$SAMBABIN/nmblookup $R_OPTION -A $ip --debuglevel=0|") || 
			open(SMB,"$SAMBABIN/smbclient -L $name -I $ip -N --debuglevel=1 2>&1 |") ||
# Options:
# print header info
print "IP ADDR         NETBIOS NAME     WORKGROUP/OS/VERSION $BCAST\n";
		print "$ip".' 'x(16-length($ip))."$name\n";
		print "$ip".' 'x(16-length($ip))."$name".' 'x(14-length($name))."$master"."$_\n";
print "                                +=LMB\n";
				print "===============================================================\n";
			print "===============================================================\n";
print "---------------------------------------------------------------------\n";
print "\n                                *=DMB\n";
				print @nmblookup;
			print @nmblookup;
# Prints info on all smb responding machines on a subnet.
				print @smb;
# -r		add -r option to nmblookup when finding netbios name
		$R_OPTION = "-r";
# run as root to get correct info from WIN95 clients.
$SAMBABIN = "/usr/bin";
					# Same as before for space and characters
				s/Domain=|OS=|Server=|\n//g;	# strip out descriptions to make line shorter
		# see if machine registered a local master browser name
	$_ = shift;
			@smb = <SMB>;
# strip everything but IP address and sort by last field in address
sub ipsort			
# syntax:
	@t1[3] <=> @t2[3];
	@t1 = split(/\./,$a);
	@t2 = split(/\./,$b);
# that workgroup.
			# The Netbios name can contain lot of characters also '<' '>'
# There will be a "+" in front of the workgroup name for machines that are
# This script needs to be run on a machine without nmbd running and be
		# try getting the host name
					$_ = "Unknown Workgroup";
#!/usr/bin/perl
# with no agrument it will list machines on the current subnet
