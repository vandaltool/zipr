        
        '''
        A double underscore ('__') is converted to a real '_'.
# (at your option) any later version.
# Author: Mario Limonciello <Mario_Limonciello@Dell.com>
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# (c) 2009 Canonical Ltd.
class TextUI(jockey.ui.AbstractUI):
        '''Close the current progress dialog.'''
                continue
        '''Create a progress dialog.'''
        current/total specify the number of steps done and total steps to
    def confirm_action(self, title, text, subtext=None, action=None):
    def convert_keybindings(self, str):
    def error_message(self, title, text):
    def show_notification(self, data):
    def ui_idle(self):
    def ui_init(self):
    def ui_main_loop(self):
    def ui_notification(self, title, text):
    def ui_progress_finish(self):
    def ui_progress_start(self, title, description, total):
    def ui_progress_update(self, current, total):
    def ui_show_main(self):
        display an indeterminated progress bar (bouncing back and forth).
        do, or -1 if it cannot be determined. In this case the dialog should
            elif str == _('n\n'):
            else:
        else:
        format for the frontend.
# GNU General Public License for more details.
        If action is given, it is used as button label instead of the default
        if current < 0 or total < 0:
if __name__ == '__main__':
            if str == _('y\n'):
        if subtext:
    # Implementation of required AbstractUI methods
import jockey.ui
import sys
        '''Initialize UI.'''
        installers.
# it under the terms of the GNU General Public License as published by
        '''Keyboard accelerator aware gettext() wrapper.
        '''Main loop for the user interface.
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        # nothing to do for text
        notification should run the GUI.
        'OK'.  Return True if the user confirms, False otherwise.
        pass
            pass
        '''Present a confirmation dialog.
        '''Present an error message box.'''
        '''Present a notification popup.
        print description
            print float(current)/total
            print _("Please enter 'y' or 'n' and press Enter")
            print subtext
        print text
        print title
        '''Process pending UI events and return.
        return
                return False
        return str.replace('_','')
                return True
        '''Show main window.'''
            str = sys.stdin.readline().lower()
    sys.exit(u.run())
    '''Text user interface implementation.'''
'''Text user interface implementation.'''
        the exit code.
# the Free Software Foundation; either version 2 of the License, or
        This is called while waiting for external processes such as package
        This optionally converts keyboard accelerators to the appropriate
# This program is distributed in the hope that it will be useful,
# This program is free software; you can redistribute it and/or modify
        This should preferably create a tray icon. Clicking on the tray icon or
        This should return if the user wants to quit the program, and return
        This should return True to cancel, and False otherwise.
        '''Update status of current progress dialog.
#!/usr/bin/python
    u = TextUI()
        while action:
