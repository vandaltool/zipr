# args 1 to (n-1) are gone, last one must be the dvifile
#!/bin/sh
  case $1 in
case $1 in
# check for last argument
dvifile="$1"
dvipdfm ${1+"$@"} -t "$dvifile"
dvipdfm ${1+"$@"} -z0 "$dvifile"
# dvipdft, completely rewritten by Thomas Esser for teTeX after an
    echo "$help"
  echo "$progname: fatal error." >&2
  echo "$progname: Please move the following files out of the way:" >&2
echo "$progname: running dvipdfm -t $@ $dvifile" >&2
echo "$progname: running dvipdfm $@ -z0 $dvifile" >&2
echo "$progname: running gs" >&2
    echo "$progname version $version by Thomas Esser and others"
  echo "x$1" | sed "s@.@@; s@'@'\\\\''@; s@^@'@; s@\$@'@"
eval set x "$s"; shift
    exit 0
    exit 1
  exit 1
gs -r10 -dNOPAUSE -dBATCH -sDEVICE=png256 -sOutputFile="$outBase.%d" "$outfile"
# hack around a bug in zsh:
  --help)
help="Usage: $progname [options] dvifile
  ls "$outBase".[1-9]* >&2
ls "$outBase".[1-9]* >/dev/null 2>&1 && {
# Modified by Matthias Franz for dvipdfmx (when running as dvipdfm) and
    -o) outfile=$2;;
# original script by Mark A. Wicks
outBase=`echo "$outfile" | sed 's@\.pdf$@@'`
# outBase is part of the thumbname files just as dvipdfm expects them:
# outfile comes from -o argument, else it is derived from the input file
  || outfile=`echo "$dvifile" | sed 's@.*/@@; s@\.dvi$@@; s@$@.pdf@'`
# process args 1 to (n-1) and scan for a -o argument keep a properly
progname=dvipdft
       $progname --help
       $progname --version"
# quoted backup of the options, so that they can be restored later
quoteit()
# restore args 1 to (n-1):
  rm -f "$outBase".[1-9]*
# Run dvipdfm with the fastest options for the first pass
# run dvipdfm with the users specified options for the last pass
# run gs
  && { RUNNING_BSH=true; export RUNNING_BSH; exec /bin/bsh $0 ${1+"$@"}; }
  && { RUNNING_SH5=true; export RUNNING_SH5; exec /bin/sh5 $0 ${1+"$@"}; }
# set trap for cleanup
# set trap for error
  s="$s${s+ }"`quoteit "$1"`
test -f /bin/bsh && test -z "$RUNNING_BSH" \
test -f /bin/sh5 && test -z "$RUNNING_SH5" \
test -n "$outfile" \
test -n "${ZSH_VERSION+set}" && alias -g '${1+"$@"}'='"$@"'
# TeX Live.
# the resulting pdf file to get the thumbnails and finally calls dvipdfm.
# This script makes a first (fast) run with dvipdfm, then calls gs on
# Thomas Esser. Public Domain.
  && { UNAMES=`uname -s`; test "x$UNAMES" = xAIX; } 2>/dev/null \
  && { UNAMES=`uname -s`; test "x$UNAMES" = xULTRIX; } 2>/dev/null \
unset RUNNING_BSH
unset RUNNING_SH5
unset s outfile
  --version)
version=20090604.0046
while test $# -gt 1; do
