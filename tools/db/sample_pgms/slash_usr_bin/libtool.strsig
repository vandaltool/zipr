           */
        ;;
        {
        }
       \" -> "
       \\\" -> \"
       \\\\\" -> \\"
      --*=*)
      -* | +*)
      -*)
      ;;
      ..)
      "")
      "") ;;
      *)
      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
      *[\\\`\"]*)
      *[\\\`\"\$]*)
    ///*)
    //*)
  *[\\/]*)
## ----------- ##
#############################################
##################################################
	          ;;
	        ;;
	        }
	       ;;
	      ;;
	      :
	      }
	      *)
	      *) ;;
	    }'`
	    * )
	    *) ;;
	  *[!\	\ ]*)
		      ;;
		    ;;
		    [\\/]*)
		  [\\/]*)
	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
  [0-9]* | *[!a-zA-Z0-9_]*)
  {0, (void *) 0}
    # 0x302f exports -- but will fail for DLLs whose name actually
    */* | *\\*)	. "$1" ;;
    *)		. "./$1" ;;
	    10.[0123])
	    1,100{
  $1 ) func_to_host_path_result="$3$func_to_host_path_result"
#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
  $2 ) func_to_host_path_result+="$3"
# (2), returns the Cygwin file name or path in func_cygpath_result (input
    /^.\{43\}/!d
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler
      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \
    # a '.'.
	      *" $absdir "*) ;;
	      *"$absdir:"*) ;;
	    *" $absdir "*) ;;
	    absdir="$abs_ladir"
	    absdir="$abs_ladir/$objdir"
      absdir=`cd "$dir" && pwd`
	  absdir=`cd "$dir" && pwd`
		  absdir=`cd "$dir" && pwd`
  absdir=\`cd \"\$thisdir\" && pwd\`
		    absdir="$dir"
	    absdir="$lt_sysroot$libdir"
# A BSD- or MS-compatible name lister.
	  abs_ladir=`cd "$ladir" && pwd`
	    abs_ladir="$ladir"
# "absolute",i.e impossible to change by setting ${shlibpath_var} if the
  /* Absolute path? */
      # Absolute path, do nothing.
		*) abs=`pwd`"/$lib" ;;
    # A bug in bash halts the script if the last line of a function
	# Accept any command-line options.
	  # Accept the current argument as the source file.
	# accidentally link it into a program.
# A C compiler.
# a configuration failure hint, and exit.
  actual_cwrapper_name = tmp_pathspec;
  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));
		  actual_cwrapper_path);
  actual_cwrapper_path = chase_symlinks (tmp_pathspec);
        # Actual path component, append it.
    *.ada | *.adb | *.ads | *.asm | \
	    add=
	      # Add a -L argument.
	# Add any objects from preloaded convenience libraries
#             add APPEND to the result, otherwise set result
	    add_dir=
		add_dir="-L$absdir"
		add_dir="-L$dir"
		add="$dir/$linklib"
		      add_dir+=" -L$inst_prefix_dir$libdir"
		    add_dir+=" -L$inst_prefix_dir$libdir"
	      add_dir="-L$libdir"
			  add="$dir/$old_library"
			add="$dir/$old_library"
	    # add $file without .exe
	  # Add in all the interfaces that we are compatible with.
		add="$inst_prefix_dir$libdir/$linklib"
	# add it in twice.  Is that correct?
# Additional compiler flags for building library objects.
	    # Add libc to deplibs on all other systems if necessary.
	      add="$libdir/$linklib"
		add="$libdir/$linklib"
	  # Add libraries to $var in reverse order
	addlibs="$convenience"
	addlibs="$old_convenience"
	      add="-l$name"
		add="-l$name"
	  # Add non-PIC object to the list of files to remove.
    # Add our own library path to $shlibpath_var
	  # Add our own program objects to the symbol list.
	  # Add PIC object to the list of files to remove.
	      *":$add_shlibpath:"*) ;;
	    add_shlibpath=
		add_shlibpath="$dir"
	  # Add the arguments to base_compile.
    # Add the dll search path components to the executable PATH
	# Add the libdir to current_libdirs if it is the destination.
	  # Add the "lib" prefix for modules if required
	    # Add the search paths of all dependency libraries
	    # Add the symbol object into the linking commands.
		      a_deplib=""
		  a_deplib=""
		*" $a_deplib "*)
			a_deplib=""
# a dlpreopen symbol table.
    admincmds=
# Aesthetically quote ARG to be evaled later.
# Aesthetically quote ARG to be evaled later; same as above,
      # Aesthetically quote it.
    # Aesthetically quote it.
      # Aesthetically quote the argument.
      # Aesthetically quote the previous argument.
	# a .exe suffix, so we strip it off here.
	  # a FreeBSD bug that causes programs to crash when -lm is
# A function that is used when there is no print builtin or printf.
# A function to encapsulate launching the target application
# against it.
	  # against the deplibs as a proxy for the library.  Then we can check
	    age="0"
	  age="$3"
age=$age
	    age="$number_minor"
# A grep program that handles long lines.
# a help hint, and exit.
# A language specific compiler.
  alias -g '${1+"$@"}'='"$@"'
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
	# A libtool-controlled library.
	      # A libtool-controlled object.
	# A libtool-controlled object.
# A literal string matcher.
	alldeplibs=no
	  alldeplibs=yes
  /* Allocate new argument vector.  */
All other options (arguments beginning with \`-') are ignored.
      # Allow error messages only from the first compilation.
allow_libtool_libs_with_static_runtimes=
allow_libtool_libs_with_static_runtimes=no
       # Allow the use of GNU shtool's install command.
      -allow-undefined)
allow_undefined_flag=""
	  allow_undefined_flag="$no_undefined_flag"
      # allow_undefined=no
	allow_undefined=no
      allow_undefined=yes
# All path conversion functions are named using the following convention:
      -all-static)
	-all-static)
  -all-static       do not do any dynamic linking at all
      -all-static | -static | -static-libtool-libs)
		    # All subsequent reloadable object files will link in
      # All the library-specific variables (install_libdir is set above).
    # all those which have a first or second character that is
# along with GNU Libtool; see the file COPYING.  If not, a copy
   * also, copy all non cwrapper options to newargz, except
	# also don't use non-portable quotes within backquotes within
always_export_symbols=
always_export_symbols=no
	      always_export_symbols=yes
    /* always make a copy, for consistency with !HAVE_SETENV */
	  # a minor version.  But, then there is irix
	# An archive.
# and appending REPL if ORIG matches BACKPAT.
# and a working winepath. Returns result in func_to_host_file_result.
# and cancel out any ".." path components in PATH after making
	  # and Darwin in order for the loader to find any dlls it needs.
      # and for example Cygwin uses it to access remote file shares
# and func_basename. For efficiency, we do not delegate to
	      # And here is the reason: when a library appears more
# and $host is mingw, cygwin, or some other w32 environment. Relies on a
	  # ... and its dependency_libs
	      # and it's NOT already a .def file. Must figure out
	  # and that have no shared library path variable independent of PATH,
	# and the sed script, to avoid splitting on whitespace, but
	  # and those that subtract age and use age as
    # and winepath ignores them completely.
# An echo program that protects backslashes.
# An ERE matcher.
    # *an error message* to stdout. So we must check for both error code of
	    # A PIC object.
		  # A PIC object.
	      # Append the command to create the export file.
	  # Append the command to remove temporary files to $cmds.
# Append VALUE to the end of shell variable VAR.
# (application programs are unlikely to have options which match
	  # applies here; at the moment, that means platforms that use the PE
# appropriate value, based on the value of $to_host_file_cmd.
a program from several object files.
  *ar\ archive*) # could be an import, or static
  *ar\ archive\ import\ library*) # definitely import
archive_cmds=""
archive_cmds="\$CC \$pic_flag -shared \$predep_objects \$libobjs \$deplibs \$postdep_objects \$compiler_flags \${wl}-soname \$wl\$soname -o \$lib"
archive_cmds="\$CC -shared \$pic_flag \$libobjs \$deplibs \$compiler_flags \${wl}-soname \$wl\$soname -o \$lib"
archive_expsym_cmds=""
archive_expsym_cmds="\$CC \$pic_flag -shared \$predep_objects \$libobjs \$deplibs \$postdep_objects \$compiler_flags \${wl}-soname \$wl\$soname \${wl}-retain-symbols-file \$wl\$export_symbols -o \$lib"
archive_expsym_cmds="echo \\\"{ global:\\\" > \$output_objdir/\$libname.ver~
	  # archive normally would.
archiver_list_spec="@"
    # archive which possess that section. Heuristic: eliminate
    # are always uninteresting
# are convertible, then the result may be empty.
    # are forced to check the contents of stdout. On the other hand, if the
	  # are installed into $libdir/../bin (currently, that works fine)
	  # are installed to the same prefix.
	      # are required to link).
AR_FLAGS="cru"
      arg  )
    arg)
	    *" $arg "*) ;;
      arg="$1"
      arg=$1
      arg2=
	    arg2=$install_override_mode
# ARG begins or ends with a path separator character, it is preserved (but
	      arg=$fil
	  arg+=" $func_quote_for_eval_result"
	arg="$func_quote_for_eval_result"
	arg=$func_stripname_result
# ARG is a GNU/binutils-style import library. Returns
# ARG is an MS-style import library. Returns
# ARG is path to be converted from $build format to win32.
# ARG is the $build file name to be converted to w32 format.
# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR
# arg is usually of the form 'gcc ...'
	  arg_mode=arg  #  the next one goes into the "base_compile" arg list
    arg_mode=normal
	arg_mode=normal
	  arg_mode=target
    # ARG. msys behavior is inconsistent here, cygpath turns them
      arg=$nonopt
	      arg="$non_pic_object"
		    arg="$non_pic_object"
	    arg="$pic_object"
		  arg="$pic_object"
    args=
# ARGS are passed to cygpath, with the last one being the file name or path to
	  arg=$save_arg
	  args=$func_stripname_result
	args=$func_stripname_result
	  arg+=" $wl$func_quote_for_eval_result"
   * argz[0], which is handled differently
# As a safety measure, use it only where a negative result would be
# As a special exception to the GNU General Public License,
  # Ascend the tree starting from libdir
	    # as does the version of $file that was added into $rmfiles
# A sed program that does not truncate output.
# As "finish_cmds", except a single script fragment to be evaled but
# a shared archive.
# a shared library.
# Assembler program.
  assert (pat != NULL);
  assert (str != NULL);
# Assumes file is an ltwrapper_executable
	  # assume the linker understands whole_archive_flag_spec.
	      # Assume this is the tagged configuration we want.
	    # A standard non-PIC object
		  # A standard non-PIC object
	# A standard object.
# A symbol stripping program.
    # a '.' (that is, objdump's representation of an unprintable
	  # At present, this check doesn't affect windows .dll's that
        # at the start of this file.
# (at your option) any later version.
#         autoconf:	$autoconf_version
#         automake:	$automake_version
Automatically set library path, then run a program.
available_tags="CXX F77 FC GO GCJ RC  BINCC BINCXX"
avoid parallel builds (make -j) in this platform, or get a better
	avoidtemprpath=
      -avoid-version)
  -avoid-version    do not add a version suffix if possible
    avoid_version=no
	avoid_version=yes
# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in
  # awkward: cmd appends spaces to result
# a working winepath.  Returns result in func_to_host_file_result.
    [\\/]* | [A-Za-z]:[\\/]*) ;;
  [\\/]*|[A-Za-z]:\\*) ;;
	  [\\/]* | [A-Za-z]:[\\/]*) ;;
	[\\/]* | [A-Za-z]:[\\/]*) ;;
    *[!-_A-Za-z0-9,/]*)
		[\\/]* | [A-Za-z]:[\\/]*) absdir="$dir" ;;
	[\\/]* | [A-Za-z]:[\\/]*) abs_ladir="$ladir" ;;
		[\\/]* | [A-Za-z]:[\\/]*) abs="$lib" ;;
	    [\\/]* | [A-Za-z]:[\\/]* | =*) deplibs+=" $arg" ;;
	[\\/]* | [A-Za-z]:[\\/]*) my_xabs="$my_xlib" ;;
			[\\/]* | [A-Za-z]:[\\/]*) potlib="$potliblink";;
      [\\\\/]* | [A-Za-z]:[\\\\/]*) thisdir=\"\$destdir\" ;;
		backslashes++;
	  backslashes = 0;
		backslashes = 0;
   - Backslashes not followed by double quotes are not special.
  # Backslashes separate directories on plain windows
  # Bail if the options were screwed
      # Bail out if we (or some other process) failed to create a directory.
    base_compile=
	  base_compile+=" $lastarg"
    base_compile="$nonopt $@"
      base = name + 1;
#   basename: Compute filename of FILE.
base_name (const char *name)
basename="s,^.*/,,"
    # bash bug again:
# Be Bourne compatible
    # because $build is cygwin, we call "the" cygpath in $PATH; no need to use
	    # because it contains $host paths and files. If cross-
	# because it is most likely a libtool script we actually want to
     because on Windows, both *_VARNAMEs are PATH but uninstalled
# be converted.
# be empty on error (or when ARG is empty)
	  # Before this point, $major must not contain `.'.
# ### BEGIN LIBTOOL CONFIG
# ### BEGIN LIBTOOL TAG CONFIG: BINCC
# ### BEGIN LIBTOOL TAG CONFIG: BINCXX
# ### BEGIN LIBTOOL TAG CONFIG: CXX
# ### BEGIN LIBTOOL TAG CONFIG: disable-shared
# ### BEGIN LIBTOOL TAG CONFIG: disable-static
# ### BEGIN LIBTOOL TAG CONFIG: F77
# ### BEGIN LIBTOOL TAG CONFIG: FC
# ### BEGIN LIBTOOL TAG CONFIG: GCJ
# ### BEGIN LIBTOOL TAG CONFIG: GO
# ### BEGIN LIBTOOL TAG CONFIG: RC
    # begins with a literal '.' or a single character followed by
# behavior.
# behavior happens only for exec(3), not for open(2)!  Also, sourcing
    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';
     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)
#! /bin/bash
      -bindir)
    bindir=
	bindir)
	  bindir="$arg"
  -bindir BINDIR    specify path to binaries directory (for systems where
BIN_SH=xpg4; export BIN_SH # for Tru64
    # binutils import library
      # Blanks at the start of $base_compile will cause this to fail
      # Blanks in the command may have been stripped by the calling shell,
	      # bleh windows
	  b more
	    # bomb out in the load deplibs phase.
      $ b para
     break
      break
        break
          break
      --)		break					;;
	      break
	      break;
	*) break ;;
		  break;
		      break 2
			break 2
		break 2
		# Break out early, otherwise skipped_export may be
	    #        broken:
bs2='\\\\'
bs4='\\\\\\\\'
BSD-compatible install options are recognized)."
build_alias=i686-linux-gnu
build=i686-pc-linux-gnu
	  # Building a libtool convenience library.
# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or
	  build_libtool_libs=convenience
	      build_libtool_libs=module
		build_libtool_libs=module
      build_libtool_libs=no
	      build_libtool_libs=no
	    build_libtool_libs=no
	  build_libtool_libs=no
		build_libtool_libs=no
	build_libtool_libs=no
build_libtool_libs=no
build_libtool_libs=yes
build_libtool_need_lc=
build_libtool_need_lc=no
build_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`
	build_old_libs=no
	      build_old_libs=yes
	    build_old_libs=yes
	  build_old_libs=yes
		build_old_libs=yes
	build_old_libs=yes
build_old_libs=yes
build_os=linux-gnu
# $build to $host FILE NAME CONVERSION FUNCTIONS #
# $build to $host PATH CONVERSION FUNCTIONS #
   - But 2*n+1 backslashes followed by a double quote become
# but do not quote variable references.
# but don't create it if we're doing a dry run.
	# But is supposedly fixed on 10.4 or later (yay!).
but it should contain:
	  # but it's something to keep an eye on.
	  # but it turns out we can't easily determine that from inspecting
	    # but linking other static libraries is non-portable.
      # but not from the CC environment variable when configure was run.
		      # but so what?
	    # but the system doesn't support it.
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# by a space.
      *.c)
    # Calculate the filename of the output object if compiler does
    # calculate the name of the file, without its directory
	# Calculate the version variables.
# can be downloaded from http://www.gnu.org/licenses/gpl.html,
# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
  # Cancel out all the simple stuff to save iterations.  We also want
	      # can't use Xsed below, because $i might contain '/'
    case ${1} in
    case $1 in
  case $1 in
case $1 in
  case ,$2, in
  case $4 in
	    case $a_deplib in
	case $age in
	case $archive_cmds in
      case $arg in
	  case $arg in
	case $arg in
      case $arg_mode in
    case $arg_mode in
	case "$compile_command " in
	  case " $compile_deplibs " in
	      case "$compile_rpath " in
	      case :$compile_shlibpath: in
	  case " $convenience " in
	case $current in
	  case "$current_libdirs " in
	      case $deplib in
	    case $deplib in
	case $deplib in
	      case $deplibs_check_method in
	case $deplibs_check_method in
      case " $deplibs" in
	      case " $deplibs " in
	      case "$deplibs " in
	  case " $deplibs " in
	case "$deplibs " in
      case \"\$destdir\" in
    case $destdir in
	case $destfile in
	  case $dir in
		case $dir in
	case $dir in
	  case :$dllsearchpath: in
	    case " $dlpreconveniencelibs " in
	case " $dlprefiles $dlfiles " in
	case "$dlprefiles " in
    case `eval $file_magic_cmd \"\$1\" 2>/dev/null | $SED -e 10q` in
        case " $extracted_archives " in
	  case $file:$destfile in
      case $file in
	  case $file in
	case $file in
	  case "$finalize_perm_rpath " in
	      case "$finalize_rpath " in
	  case "$finalize_rpath " in
	      case :$finalize_shlibpath: in
		case :$finalize_shlibpath: in
    case $func_normal_abspath_tcomponent in
  case $func_normal_abspath_tpath in
    case $func_quote_for_eval_unquoted_result in
    case $func_relative_path_tbindir in
  case $func_resolve_sysroot_result in
	  case "$future_libdirs " in
	    case $hardcode_action in
	      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
		  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
          case $host in
      case $host in
    case $host in
  case $host in
	      case $host in
	    case "$host" in
	  case "$host" in
	  case $host in
	 case $host in
		case $host in
	case $host in
    case $host_os in
	    case $host_os in
	  case $host_os in
	case $host_os in
	  case $host,$output,$installed,$module,$dlname in
	      case $i in
      case $@ in
  case \" \$* \" in
	    case "$@ " in
	case $install_prog,$host in
    case " $install_prog " in
	case $ladir in
	    case "$lalib_p_line" in
	      case $libdir in
		  case $libdir in
		case $libdir in
	      case $lib in
	  case $lib in
    case $libobj in
	    case " $library_names " in
	    case "$lib_search_path " in
	case "$libs " in
    case $linkmode in
	  case $linkmode in
    case \"\$lt_opt\" in
  case "$lt_sysroot:$1" in
      case \$lt_wr_arg in
	  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in
    case $my_arg in
      case $my_directory_path in
        case $my_directory_path in */*) ;; *) break ;; esac
      case $my_dlsyms in
      case $my_xlib in
      case $name in
	  case $need_lib_prefix in
	    case " $new_inherited_linker_flags " in
		case "$new_inherited_linker_flags " in
	case "$new_inherited_linker_flags " in
	  case " $new_libs " in
		case " $new_libs " in
	case " $new_libs " in
	      case $nm_file_list_spec~$to_tool_file_cmd in
       case $nonopt in *shtool*) :;; *) false;; esac; then
	    case " $oldobjs " in
		case " $oldobjs " in
case $optarg in
    case $opt in
    case $opt_mode in
	  case "$opt_mode" in
      case $output in
    case $output in
	case $output in
      case $outputname in
	case $pass in
	      case "$perm_rpath " in
	  case "$perm_rpath " in
	  case $p in
			case $potliblink in
	case " $predeps $postdeps $compiler_lib_search_path " in
	      case " $predeps $postdeps " in
		    case " $predeps $postdeps " in
		  case " $predeps $postdeps " in
		case " $predeps $postdeps " in
	  case "$pre_post_deps " in
	case $prev in
case $progpath in
	    case $realname in
	case $revision in
	case " $rmdirs " in
	    case "$rpath " in
  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac
  case \`(set -o) 2>/dev/null\` in *posix*) set -o posix;; esac
	      case " $specialdeplibs " in
	    case " $sys_lib_dlsearch_path " in
  case $tagname in
	      case "$temp_rpath:" in
    case \"\$thisdir\" in
	  case $tmp_deplibs in
	      case " $tmp_libs " in
	      case "$tmp_libs " in
		case "$tmp_libs " in
	  case $version_type in
	case $version_type in
	case $vinfo_number in
	    case " $weak_libs " in
    case $win32_fileres in
  case $win32_fileres in
      case $win32_nmres in
	case $with_gcc/$host in
	    case "$xrpath " in
		   case " $xrpath " in
	case "$xrpath " in
        cat >&2 <<_LT_EOF
      cat >&2 <<_LT_EOF
  # Catch anything else as an error
	  cat > conftest.c <<EOF
            cat <<"EOF"
	      cat <<EOF
	      cat <<"EOF"
	    cat <<EOF
	    cat <<"EOF"
		cat <<"EOF"
	cat <<EOF
	    cat \$export_symbols | sed -e \\\"s/\\\\(.*\\\\)/\\\\1;/\\\" >> \$output_objdir/\$libname.ver~
`cat $lockfile 2>/dev/null`
        cat \"\$lt_dump_D/\$lt_dump_F\"
      cat >${write_libobj}T <<EOF
	    # Causes problems with __ctype
    CC) ;;
CC="c++"
      " $CC "* | "$CC "* | " $CC_expanded "* | "$CC_expanded "* | \
	    " $CC "* | "$CC "* | " $CC_expanded "* | "$CC_expanded "* | \
    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \
      CC_expanded=`func_echo_all $CC`
	    CC_expanded=`func_echo_all $CC`
    *.[cCFSifmso] | \
CC="g++"
CC="gcc"
CC="gfortran"
      CC_quoted=
	    CC_quoted=
      " $CC_quoted"* | "$CC_quoted "* | " $CC_quoted_expanded "* | "$CC_quoted_expanded "*) ;;
	    " $CC_quoted"* | "$CC_quoted "* | " $CC_quoted_expanded "* | "$CC_quoted_expanded "*)
      CC_quoted_expanded=`func_echo_all $CC_quoted`
	    CC_quoted_expanded=`func_echo_all $CC_quoted`
	    \$CC -shared \$pic_flag \$libobjs \$deplibs \$compiler_flags \${wl}-soname \$wl\$soname \${wl}-version-script \${wl}\$output_objdir/\$libname.ver -o \$lib"
	      cd "$darwin_curdir"
	    cd "$darwin_orig_dir"
	    cd $darwin_orig_dir
	  cd $my_xdir || exit $?
	      ( cd "$output_objdir" && \
		  ( cd "$output_objdir" && \
	      cd "unfat-$$/${darwin_base_archive}-${darwin_arch}"
      *cegcc* | *mingw32ce*)
    # Change the help message to a mode-specific one.
     characters.
# characters, hashes, percent signs, but SUFFIX may contain a leading
    # character.) This should work for all archives with less than
  char *actual_cwrapper_name;
  char *actual_cwrapper_path;
  char buf[LT_PATHMAX];
char *chase_symlinks (const char *pathspec);
  char *concat_name;
	      char c = *s;
char *find_executable (const char *wrapper);
  char *lt_argv_zero;
char *lt_extend_str (const char *orig_value, const char *add, int to_end);
  char **new_argv;
  char **newargz;
  char *new_value;
      char *new_value = lt_extend_str (getenv (name), value, 0);
    char* p;
  char *p;
	  char *p;
char **prepare_spawn (char **argv);
	  char *quoted_string;
char *realpath (const char *, char *);
char *strendzap (char *str, const char *pat);
    char *str = XMALLOC (char, len);
    char *str = xstrdup (value);
  char *target_name;
  char tmp[LT_PATHMAX + 1];
  char *tmp_pathspec;
  char *tmp_pathspec = xstrdup (pathspec);
char *xstrdup (const char *string);
chase_symlinks (const char *pathspec)
	(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))
check_executable (const char *path)
    # Check if any of the arguments is a wrapper script.
    # check if we have found a prefix of bindir
		      "checking path component for symlinks: %s\n",
	    # CHECK ME:  I think I busted this.  -Ossama
		  # CHECK ME:  I think I busted this.  -Ossama
	# Check that each of the things are valid numbers.
	  # Check the variables that should have been set.
	# Check to see if the archive will have undefined symbols.
	    # Check to see that each library is installed.
    # Check to see that the destination is a directory.
	# Check to see that this really is a libtool archive.
	      # Check to see that this really is a libtool object.
	# Check to see that this really is a libtool object.
# Check whether EXPRESSION matches any line of FILENAME, without output.
	    chmod +x $output
# choices, we go for a static library, that is the most portable,
      # classes, name mangling, and exception handling.
      clean)
	  clean)
clean|clea|cle|cl)
  clean|compile|execute|finish|install|link|relink|uninstall) ;;
#         clean              remove files from the build directory
	# Clean up the generated files.
	  # Clear the reloadable object creation command queue and
	# Clear the version info if we defaulted, and they specified a release.
# closes it afterwards, without saving the original file descriptor.
'"$cmd"'"'
      }) ? "cmd.exe" : "command.com").
    cmd="$nonopt"
       $cmds"
	      cmds=$archive_cmds
	    cmds=$archive_cmds
	      cmds=$archive_expsym_cmds
	    cmds=$archive_expsym_cmds
	    cmds=$export_symbols_cmds
	      cmds=$module_cmds
	    cmds=$module_cmds
	      cmds=$module_expsym_cmds
	    cmds=$module_expsym_cmds
	  cmds=$old_archive_cmds
	cmds=$old_archive_from_new_cmds
collapseslashes='s@/\{1,\}@/@g'
	# Collect and forward deplibs of preopened libtool libs
	# Collect dlpreopened libraries
	  # Collect preopened libtool deplibs, except any this library
	command="$base_compile $qsrcfile"
	command="$base_compile $qsrcfile $pic_flag"
	command="$base_compile $qsrcfile$pie_flag"
# command doesn't match the default compiler.
    # command is not found, the shell will set an exit code of 127 and print
	command+=" -o $lobj"
	command+=" -o $obj"
# Commands necessary for finishing linking programs.
# Commands necessary for linking programs (against libraries) with templates.
# Commands to strip libraries.
      command+="$suppress_output"
# Commands used to build a loadable module if different from building
# Commands used to build an old-style archive.
# Commands used to build a shared archive.
# Commands used to finish a libtool library installation in a directory.
# Commands used to install an old-style archive.
# Command to associate shared and link libraries.
		  # command to the queue.
# Command to use after installation of a shared archive.
# Command to use after uninstallation of a shared archive.
# Command to use when deplibs_check_method = "file_magic".
      compile)
Compile a source file into a libtool library object.
        compile_command+=" $arg"
      compile_command+=" $arg"
	  compile_command+=" $arg"
	compile_command+=" $arg"
      compile_command+=" $compile_deplibs"
	compile_command=`$ECHO "$compile_command" | $SED 's%@OUTPUT@%'"$output"'%g'`
      compile_command=`$ECHO "$compile_command" | $SED "s% @SYMFILE@%%"`
	    compile_command=`$ECHO "$compile_command" | $SED "s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%"`
	    compile_command=`$ECHO "$compile_command" | $SED "s%@SYMFILE@%$symfileobj%"`
	  compile_command=`$ECHO "$compile_command" | $SED "s%@SYMFILE@%$symfileobj%"`
	compile_command=`$ECHO "$compile_command" | $SP2NL | $SED "$lo2o" | $NL2SP`
COMPILE-COMMAND is a command to be used in creating a \`standard' object file
	  compile_command+=" $link_static_flag"
    compile_command=$nonopt
	  compile_command+=" @OUTPUT@"
	  compile_command+=" $qarg"
	compile_command="$shlibpath_var=\"$compile_shlibpath$finalize_shlibpath\$$shlibpath_var\" $compile_command"
	    compile_command+=" @SYMFILE@"
	      compile_command+=" ${wl}-bind_at_load"
	  compile_command+=" $wl$qarg"
compile|compil|compi|comp|com|co|c)
#         compile            compile a source file into a libtool object
	compile_deplibs=
	      compile_deplibs="$deplib $compile_deplibs"
	    compile_deplibs="$deplib $compile_deplibs"
		      compile_deplibs="$deplib $compile_deplibs"
	    compile_deplibs="$dir/$linklib $compile_deplibs"
	    compile_deplibs="$dir/$old_library $compile_deplibs"
	compile_deplibs=`$ECHO " $compile_deplibs" | $SED 's/ -lc / System.ltframework /'`
	compile_deplibs=`$ECHO " $compile_deplibs" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
	    compile_deplibs="-l$name -L$dir $compile_deplibs"
	  compile_deplibs="$new_inherited_linker_flags $compile_deplibs"
      compile_deplibs="$new_libs"
compiler."
compiler_c_o=""
compiler_c_o="yes"
    compiler_flags=
        compiler_flags+=" $arg"
	compiler_flags+=" $arg"
	  compiler_flags="$compiler_flags "`$ECHO " $new_inherited_linker_flags" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
	    compiler_flags+=" $deplib"
	  compiler_flags+=" $func_quote_for_eval_result"
#         compiler flags:		$LTCFLAGS
	  compiler_flags+=" $qarg"
		      compiler_flags+=" ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}"
	  compiler_flags+=" $wl$func_quote_for_eval_result"
	  compiler_flags+=" $wl$qarg"
# Compiler flag to allow reflexive dlopens.
# Compiler flag to generate shared objects directly from archives.
# Compiler flag to prevent dynamic linking.
# Compiler flag to turn off builtin functions.
	    # Compiler inserts libc in the correct place for threads to work
	      # compiler, it is considered special, and multiple
compiler_lib_search_dirs=""
compiler_lib_search_dirs="/usr/lib/gcc/i686-linux-gnu/4.6 /usr/lib/gcc/i686-linux-gnu/4.6/../../../i386-linux-gnu /usr/lib/gcc/i686-linux-gnu/4.6/../../../../lib /lib/i386-linux-gnu /lib/../lib /usr/lib/i386-linux-gnu /usr/lib/../lib /usr/lib/gcc/i686-linux-gnu/4.6/../../.."
compiler_lib_search_path=""
#         compiler:		$LTCC
compiler_needs_object=""
compiler_needs_object="no"
    compile_rpath=
	      *) compile_rpath+=" $absdir" ;;
      compile_rpath="$rpath"
    compile_shlibpath=
	      *) compile_shlibpath+="$add_shlibpath:" ;;
# Compile-time system search path for libraries.
      compile_var=
	  compile_var="$runpath_var=\"$rpath\$$runpath_var\" "
	    # compiling, it, like the target executable, must be
	  # compiling the symbol table file with pic_flag works around
Complete the installation of libtool libraries.
      # Compute libraries that are listed more than once in $predeps
# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
	  concat_cmds=
		  concat_name =
		  concat_name[p_len] = '/';
  concat_name[tmp_len] = '/';
		  concat_name[tmp_len] = '/';
  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);
      concat_name = xstrdup (wrapper);
	  concat_name = xstrdup (wrapper);
      --config)
#       --config             show all configuration variables
# configuration.  But we'll never go from static-only to shared-only.
# configured wine environment available, with the winepath program in $build's
const char *
  const char *base;
const char *base_name (const char *name);
const char * EXE_PATH_VALUE   = "";
const char * EXE_PATH_VALUE   = "$func_to_host_path_result";
const char * EXE_PATH_VARNAME = "";
const char * EXE_PATH_VARNAME = "PATH";
const char * LIB_PATH_VALUE   = "";
const char * LIB_PATH_VALUE   = "$func_to_host_path_result";
const char * LIB_PATH_VARNAME = "$shlibpath_var";
	       const char *message, va_list ap)
  const char *name;
  const char *p;
      const char *path = getenv ("PATH");
  const char *p_next;
const char *program_name = "libtool-wrapper"; /* in case xstrdup fails */
	      const char *q;
	  const char *s;
      const char *string = argv[i];
const char * TARGET_PROGRAM_NAME = "lt-$outputname"; /* hopefully, no .exe */
const char * TARGET_PROGRAM_NAME = "$outputname"; /* hopefully, no .exe */
    # contents of the appropriate section of all members of the
        continue
          continue;
	continue
	  continue
	   continue
	    continue
	      continue
		continue
		  continue
		   continue
		    continue
		      continue
			continue
	  continue      #  The current "srcfile" will either be retained or
    convenience=
	    convenience+=" $ladir/$objdir/$old_library"
	  # convenience libraries get linked in and end up exceeding
	  # convenience libraries should have the same extension an
# conversion to w32 is not available inside the cwrapper.  Returns result in
	# convert absolute version numbers to libtool ages
# convert $build file names to $host format.
# convert $build files to toolchain format.
# converted to $host format) on output.
# Convert file name ARG from Cygwin to w32 format.  Returns result in
# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic
# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.
# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed
# Convert file name ARG from *nix to w32 format.  Requires a wine environment
# Convert file name or path ARG from MSYS format to w32 format.  Return
	# Convert "-framework foo" to "foo.ltframework"
    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.
# Convert path ARG from Cygwin to w32 format.  Returns result in
# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic
# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.
# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a
# Convert path ARG from *nix to w32 format.  Requires a wine environment and
# Converts the file name ARG from $build format to $host format. Return result
# converts the file name ARG from $build format to toolchain format. Return
# Converts the path ARG from $build format to $host format. Return result
# Copy ARG to func_to_host_file_result.
# Copy ARG to func_to_host_path_result.
#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006,
# Core function for launching the target application
	  # correct linux to gnu/linux during the next big refactor
# correctly configured wine environment available, with the winepath program
		"could not follow symlinks for %s", pathspec);
	  counter=1
		counter=$func_arith_result
  /* Count number of arguments.  */
: ${CP="cp -f"}
      *[\\\ /]cp\ *) install_cp=: ;;
# Create a libtool object file (analogous to a ".la" file),
create an executable program.
	# Create an invalid libtool object if no PIC, so that we don't
# Create an old-style archive from a shared archive.
# create a shared library.
# Create a temporary old-style archive to link instead of a shared archive.
	# Create links to the real library.
	    # Create $newlib
   CreateProcess().  We must quote the arguments since Win32 CreateProcess()
    # Create the object directory.
      # Create the old-style object.
	  current="$1"
current=$current
	    current=$func_arith_result
    current_libdirs=
	  *) current_libdirs+=" $libdir" ;;
	    current="$number_major"
		$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result
	    cwrapper="$output_path/$output_name.exe"
	    cwrappersource="$output_path/$objdir/lt-$output_name.c"
/* $cwrappersource - temporary wrapper executable for $objdir/$outputname
	  *cygwin*)
# Cygwin format). Returns an empty string on error.
	*cygwin*) func_stripname '' '.exe' "$output"
	    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)
      *cygwin* | *mingw* )
	  *cygwin* | *mingw* )
	*cygwin* | *mingw*)
	        *cygwin* | *mingw* | *cegcc* )
	      *cygwin* | *mingw* | *cegcc* )
	      *cygwin* | mingw* | *cegcc*)
	    *cygwin* | *mingw* | *cegcc* )
	  *cygwin* | *mingw* | *cegcc*)
	*cygwin* | *mingw* | *cegcc* )
	cygwin* | mingw* | cegcc*)
	  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)
    *cygwin* | *mingw* | *pw32* | *cegcc*)
	  cygwin* | mingw* | pw32* | cegcc*)
	  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)
    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)
    cygwin* | mingw* | pw32* | os2* | cegcc*)
	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)
	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)
      # +DA*, +DD*           enable 64-bit mode for the HP compiler
      *-*-darwin*)
      *-darwin*)
	    *-*-darwin*)
	  darwin)
	*-*-darwin*)
		  *-*-darwin* )
		*-*-darwin*)
	darwin)
	    darwin_arch=
	    darwin_arches=`$ECHO "$darwin_arches" | $SED -e 's/.*are://'`
	  darwin_arches=`$LIPO -info "$darwin_archive" 2>/dev/null | $GREP Architectures 2>/dev/null || true`
	  darwin_archive=$my_xabs
	  darwin_base_archive=`basename "$darwin_archive"`
	  darwin_curdir=`pwd`
	    darwin_file=
	    darwin_filelist=`find unfat-$$ -type f -name \*.o -print -o -name \*.lo -print | $SED -e "$basename" | sort -u`
	    darwin_files=
	      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`
                          darwin_install_name=`${OTOOL64} -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`
		      darwin_install_name=`${OTOOL} -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`
	  # Darwin ld doesn't like 0 for these options...
	  darwin|linux|osf|windows|none)
	  darwin_orig_dir=`pwd`
    # Darwin sucks
      # Darwin uses the -arch flag to determine output architecture.
/* DATA imports from DLLs on WIN32 con't be const, because runtime
#       --debug              enable verbose shell tracing
      --debug|-x)	opt_debug='set -x'
/* declarations of non-ANSI functions */
	# Deduce the name of the destination old-style object file.
	  # Deduce the name of the old-style object file.
    # Default configuration.
# define chmod   _chmod
# define _CRT_SECURE_NO_DEPRECATE 1
# define DIR_SEPARATOR '/'
#  define DIR_SEPARATOR_2 '\\'
  defined (__OS2__)
# define FOPEN_WB "w"
# define FOPEN_WB "wb"
# define getcwd  _getcwd
# define HAVE_DOS_BASED_FILE_SYSTEM
# define HAVE_SETENV
#  define _INTPTR_T_DEFINED
#  define intptr_t int
# define IS_DIR_SEPARATOR(ch) \
# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)
# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)
# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)
# define LT_DLSYM_CONST
# define LT_DLSYM_CONST const
# define LT_PATHMAX 1024
# define LT_PATHMAX MAXPATHLEN
# define LT_PATHMAX PATH_MAX
#define LTWRAPPER_OPTION_PREFIX         "--lt-"
# define _O_BINARY 0
# define PATH_SEPARATOR ':'
#  define PATH_SEPARATOR_2 ';'
# define putenv  _putenv
# define setmode _setmode
#define SHELL_SPACE_CHARS " \001\002\003\004\005\006\007\010\011\012\013\014\015\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037"
#define SHELL_SPECIAL_CHARS "\"\\ \001\002\003\004\005\006\007\010\011\012\013\014\015\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037"
# define S_IXGRP 0
# define S_IXOTH 0
# define S_IXUSR _S_IEXEC
# define stat    _stat
#define XFREE(stale) do { \
#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))
    # Delete any leftover library objects.
	# Delete the generated files.
	  # Delete the libtool libraries and symlinks.
      # Delete the old objects.
	# Delete the old output file.
      # Delete the old output files.
	    # Delete the old symlinks, and create new ones.
	delfiles=
	  delfiles+=" $export_symbols"
	      delfiles+=" $export_symbols $output_objdir/$libname.filter"
	  delfiles+=" $export_symbols $output_objdir/$libname.filter"
	      delfiles+=" $output"
	    delfiles+=" $output"
		delfiles+=" $output"
     delimiters if they are surrounded by double quotes: "...".
		  depdepl=
		      depdepl="$absdir/$objdir/$depdepl"
		      depdepl=$tmp
# Dependencies to place before and after the objects being linked to
	  dependency_libs=
dependency_libs='$dependency_libs'
      #	dependency_libs=`$ECHO "$dependency_libs " | $SED "s% -L$path % %g"`
	dependency_libs=`$ECHO " $dependency_libs" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
      dependency_libs="$newdependency_libs"
	    dependency_libs="$newdependency_libs"
	    dependency_libs="$temp_deplibs"
	  dependency_libs="$temp_xrpath $dependency_libs"
      dependency_libs=$tmp_libs
	      # dependency of multiple other libraries: in this case,
	    # dependent libraries so libltdl's deplib preloader doesn't
	      *" $deplib "*)
	      *" $deplib "*) ;;
	    *" $deplib "*) ;;
	  *" $deplib "*) ;;
		    *" $deplib "*) ;;
		*" $deplib "*) ;;
	    *" $deplib_base "*) ;;
            deplib_base=$func_basename_result
	    # deplib doesn't seem to be a libtool library
	        deplib=$func_resolve_sysroot_result
		    deplib_match=$1
		  deplib_match=$1
		    deplib_matches=`eval "\\$ECHO \"$library_names_spec\""`
		  deplib_matches=`eval "\\$ECHO \"$library_names_spec\""`
	      *" $deplib "*) new_libs="$deplib $new_libs" ;;
    deplibs=
	deplibs=
	%DEPLIBS%)
	deplibs+=" $arg"
deplibs_check_method="pass_all"
	    *) deplibs+=" $deplib" ;;
	      deplibs="$deplib $deplibs"
	    deplibs="$deplib $deplibs"
	  deplibs="$deplib $deplibs"
		      deplibs="$deplib $deplibs"
		deplibs="$deplib $deplibs"
	    deplibs="$dir/$old_library $deplibs"
      #	deplibs=`$ECHO "$deplibs " | $SED "s% -L$path % %g"`
	  deplibs=`$ECHO " $deplibs" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
	  deplibs+=" $func_resolve_sysroot_result"
	      deplibs+=" -lc"
	    *) deplibs+=" -L$dir" ;;
	  deplibs="$lib $deplibs"
	    deplibs="$lib $deplibs" # used for prog,scan pass
	deplibs=$newdeplibs
      deplibs="$new_libs"
	      *) deplibs="$path $deplibs" ;;
	      *" $deplib "*) specialdeplibs+=" $deplib" ;;
	*" $deplib "*) specialdeplibs+=" $deplib" ;;
		*" $deplib "*) specialdeplibs+=" $deplib" ;;
		*) deplibs+=" $qarg.ltframework" # this is fixed later
	    deplibs+=" System.ltframework"
	deplibs="$tmp_deplibs"
	  dep_rpath=
		dep_rpath+=" $flag"
# Despite the name, also deal with 64 bit binaries.
    dest=
	  dest=$arg
	dest=$arg
      destdir="$dest"
    destdir=\`\$ECHO \"\$file\" | $SED 's%/[^/]*\$%%'\`
      destdir="$func_dirname_result"
	  destfile=
	  destfile="$destdir/$destfile"
	  destfile="$destdir/$destname"
	    destfile=$destfile.exe
	  destfile="$func_basename_result"
	    destfile=$func_stripname_result
    dest=$func_stripname_result
      destname=
      destname="$func_basename_result"
# determined imposters.
	  # Determine the prefix the user has applied to our future dir.
    # Determine the type of output
		# didn't already link the preopened objects directly into
	# didn't have a PIC flag, but the assumption that the effects
      # different ones for PIC/non-PIC, this we'll have to duplicate
	# Digital Unix and AIX.
      dir=
	    *" $dir "*) ;;
	  *":$dir:"*) ;;
	*" $dir "*) ;;
	  dir="$absdir"
directories are added to the library path.
# Directory that this library needs to be installed in:
      dir="$func_dirname_result"
		dir=$func_dirname_result
	dir="$func_dirname_result"
	    dir=$func_resolve_sysroot_result
	dir=$func_resolve_sysroot_result
	dir=$func_stripname_result
# DIR into the resulting binary.
# DIR into the resulting binary and the resulting library dependency is
	    dir="$ladir"
	    dir="$ladir/$objdir"
	  dir=$lt_sysroot$func_stripname_result
	    dir="$lt_sysroot$libdir"
#   dirname:  Compute the dirname of FILE.  If nonempty,
dirname="s,/[^/]*$,,"
	  dir+="/$objdir"
	dir+="$objdir"
	    dir=$output_objdir
        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.
	# Discover the nlist of each of the dlfiles.
      -d) isdir=yes ;;
# Display the configuration for all the tags in this script.
# Display the features supported by this script.
      # Display what would be done.
      dlfiles=
    dlfiles=
	      dlfiles+=" $arg"
	dlfiles|dlprefiles)
	  dlfiles+=" $func_resolve_sysroot_result"
	*) dlfiles+=" $lib" ;;
      dlfiles="$newdlfiles"
	    dlfiles="$newdlfiles"
		      dlfiles+=" $pic_object"
		dlfiles+=" $pic_object"
  *DLL*)
	    *.dll.a)
# DLL associated with the specified import library LIBNAME.
# DLL creation program.
    dllsearchpath=
	  ::) dllsearchpath=$dir;;
	  *) dllsearchpath+=":$dir";;
	  ::) dllsearchpath=$libdir;;
	  *) dllsearchpath+=":$libdir";;
	  ::) dllsearchpath=$testbindir;;
	  *) dllsearchpath+=":$testbindir";;
DLLTOOL="false"
      dlname=
	    *" $dlname "*) ;;
	dlname=
	      # dlname from the la file.
	  dlname="$soname"
	  dlname=$soname
dlname='$tdlname'
      -dlopen)
	dlopen=
dlopen='$dlfiles'
      --dlopen|-dlopen)
  -dlopen FILE      add the directory containing FILE to the library path
  -dlopen FILE      \`-dlpreopen' FILE if it cannot be dlopened at runtime
	dlopen) libs="$dlfiles" ;;
	  dlopenmodule=""
	      dlopenmodule="$dlpremoduletest"
	    dlopen_self=$dlopen_self_static
dlopen_self_static=no
dlopen_self=yes
dlopen_support=yes
	          dlpreconveniencelibs+=" $dir/$old_library"
	        dlprefile_dlbasename=""
	            dlprefile_dlbasename="$func_basename_result"
	            dlprefile_dlbasename=$sharedlib_from_linklib_result
	          dlprefile_dlname=`source "$curr_lafile" && echo "$dlname"`
      dlprefiles=
    dlprefiles=
	      dlprefiles+=" $arg"
	  dlprefiles+=" $func_resolve_sysroot_result"
	*) dlprefiles+=" $lib" ;;
	    dlprefiles+=" $lib $dependency_libs"
      dlprefiles="$newdlprefiles"
	    dlprefiles="$newdlprefiles"
	      dlprefiles+=" $pic_object"
		    dlprefiles+=" $pic_object"
      -dlpreopen)
	dlpreopen=
dlpreopen='$dlprefiles'
  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols
	dlpreopen) libs="$dlprefiles" ;;
	      dlself=needless
    dlself=no
	      dlself=yes
      do
	      do
      # Do a symbolic link so that the libtool archive can be found in
	  # Do a test to see if this is a libtool program.
	# Do a test to see if this is really a libtool program.
      # Do each command in the archive commands.
	  # Do each command in the finish commands.
	      # Do each command in the old_postuninstall commands.
      # Do each command in the postinstall commands.
	  # Do each command in the postinstall commands.
	      # Do each command in the postuninstall commands.
      # Do each installation.
	  # Do each of the archive commands.
	# Do each of the archive commands.
# Does compiler simultaneously support -c and -o options?
   Does not chase symlinks, even on platforms that support them.
# does not support the --identify-strict option.
	      # doesn't work or if tool conversion is not needed.
dollar='\$'
    done
     done
      done
        done
      #done
    done ;;
	    done
	      done
		  done
		    done
		      done
    done # argument parsing loop
	# Done checking deplibs!
	    done # $darwin_arches
	    done # $darwin_filelist
    done # for arg
	  done # for deplib
      done # for deplib in $libs
    done # for pass
	done # for var
	  done # Gone through all deplibs.
		done > "$output"
	  done > $output_objdir/$libname.libcmd
	    done | sort | sort -uc >/dev/null 2>&1); then
	# Do not bother doing anything if just a dry run
	# do not "continue".  Instead, add this to base_compile
                    do not do any dynamic linking of libtool libraries
	    # Do not include libc due to us having libc/libc_r.
	   # Do not include libc_r directly, use -pthread flag.
  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */
	# Don't allow lazy linking, it breaks C++ global constructors
	  # Don't allow the user to place us outside of our expected
	  # Don't allow undefined symbols.
	# Don't build PIC code
	  # Don't check for shared/static.  Everything works.
# Don't directly open a file because we may want to
      # don't eliminate duplications in $postdeps and $predeps
      # Don't error if the file doesn't exist and rm -f was used.
	    # Don't link with libc until the a.out ld.so is fixed.
                    don't remove output files matching REGEX
  # Don't test for the "default" C tag, as we know it's
	  # Do the single finish_eval.
	# Do the static libraries later.
# dot (in which case that matches only a dot).
	      # Double-quote args containing other shell metacharacters.
      # Double-quote args containing shell metacharacters to delay
double_quote_subst='s/\(["`\\]\)/\\\1/g'
  /* DO want the lt- prefix here if it exists, so use target_name */
# Do we need a version for libraries?
# Do we need the "lib" prefix for modules?
	droppeddeps=no
	    droppeddeps=yes
		      droppeddeps=yes
		    droppeddeps=yes
		  droppeddeps=yes
		droppeddeps=yes
      --dry-run|--dryrun|-n)
DSYMUTIL=""
DUALCASE=1; export DUALCASE # for MKS sh
Each LIBDIR is a directory that contains libtool libraries.
    echo
      echo
      echo "----------------------------------------------------------------------"
	    echo
	      echo
		  echo
		    echo
		      echo
			  echo
        $ECHO \
      $ECHO \
    $ECHO "$*"
    $ECHO "\
  $ECHO "\
	  $ECHO "\
	$ECHO "\
      \$ECHO \"\$0: cannot exec \$program \$*\" 1>&2
    \$ECHO \"\$0: error: \\\`\$progdir/\$program' does not exist\" 1>&2
	echo "   - add LIBDIR to the \`$runpath_var' environment variable"
	echo "   - add LIBDIR to the \`$shlibpath_var' environment variable"
	    echo "*** All declared inter-library dependencies are being dropped."
			  echo "*** And there doesn't seem to be a static archive available"
	    echo "*** application is linked with the -dlopen flag."
		      echo "*** as a dynamic dependency that programs can get resolved with at runtime."
	    echo "*** a static module, that should work as long as the dlopening"
	      echo "*** a static module, that should work as long as the dlopening application"
	    echo "*** automatically added whenever a program is linked with this library"
		    echo "*** because a test_compile did reveal that the linker did not use it for"
		      echo "*** because a test_compile did reveal that the linker did not use this one"
	      echo "*** because either the platform does not support them or"
		echo "*** because I did check the linker path looking for a file starting"
		echo "*** because the file extensions .$libext of this argument makes me believe"
	      echo "*** But as you try to build a module library, libtool will still create "
      $ECHO "$cmd$args"
	  echo "copying selected object files to avoid basename conflicts..."
	    $ECHO "*** dependencies of module $libname.  Therefore, libtool will create"
      echo "disable shared libraries"
      echo "disable static libraries"
	echo "     during execution"
	echo "     during linking"
      echo "enable shared libraries"
      echo "enable static libraries"
	echo "export $shlibpath_var"
      echo "flag during linking and do at least one of the following:"
	      $ECHO "$func_basename_result"
		  echo "*** functional.  Installing it before continuing would be even better."
	    $ECHO "$func_to_tool_file_result"
		  $ECHO "$func_to_tool_file_result"
	      $ECHO "$func_to_tool_file_result" >> $output
	echo "   - have your system administrator add LIBDIR to \`/etc/ld.so.conf'"
	$ECHO "   - have your system administrator run these commands:$admincmds"
      $ECHO "$help" 1>&2
    echo "host: $host"
	      echo "*** However, this would only work if libtool was able to extract symbol"
		echo "*** However, this would only work if libtool was able to extract symbol"
      echo "If you ever happen to want to link against installed libraries"
	    echo "*** I have the capability to make that library automatically link in when"
		      echo "*** I have the capability to make that library automatically link in when"
		    echo "*** I have the capability to make that library automatically link in when"
		echo "*** I have the capability to make that library automatically link in when"
      echo "in a given directory, LIBDIR, you must either use libtool, and"
	    echo 'INPUT (' > $output
	      echo "*** is linked with the -dlopen flag to resolve symbols at runtime."
		    echo "*** its dynamic dependency list that programs get resolved with at runtime."
	      echo "*** it was explicitly requested with -no-undefined,"
	$ECHO "   $libdir"
      echo "Libraries have been installed in:"
		  echo "*** library that it depends on before this library will be fully"
	      echo "*** libtool will only create a static version of it."
	    $ECHO "*** $linklib is not portable!"
	      echo "*** lists from a program, using \`nm' or equivalent, but libtool could"
		echo "*** lists from a program, using \`nm' or equivalent, but libtool could"
	    echo \\\"local: *; };\\\" >> \$output_objdir/\$libname.ver~
# Echo long help message to standard output and exit,
		  echo "*** make it link in!  You will probably need to install it or some"
	  echo "more information, such as the ld(1) and ld.so(8) manual pages."
	  echo "more information, such as the ld(1), crle(1) and ld.so(8) manual"
    $ECHO "$my_tmpdir"
	      echo "*** \`nm' from GNU binutils and a full rebuild may help."
		echo "*** \`nm' from GNU binutils and a full rebuild may help."
	    echo '/* NONE */' >> "$output_objdir/$my_dlsyms"
	      echo "*** not find such a program.  So, this module is probably useless."
		echo "*** not find such a program.  So, this module is probably useless."
	  $ECHO "*** objects $objs is not portable!"
	    echo "*** or is declared to -dlopen it."
	    echo ')' >> $output
	    $ECHO >> $output "\
	  $ECHO > $output "\
    echo \"${outputname}:${output}:\${LINENO}: libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\" 1>&2
        \$ECHO \"${outputname}:${output}:\${LINENO}: newargv[0]: \$progdir/\$program\" 1>&2
        \$ECHO \"${outputname}:${output}:\${LINENO}: newargv[0]: \$progdir\\\\\$program\" 1>&2
    \$ECHO \"${outputname}:${output}:\${LINENO}: newargv[\$lt_dump_args_N]: \$lt_arg\"
	  echo >> "$output_objdir/$my_dlsyms" "\
	  echo "pages."
ECHO="printf %s\\n"
    $ECHO "$progname: ${opt_mode+$opt_mode: }$*"
    $ECHO "$progname: ${opt_mode+$opt_mode: }"${1+"$@"} 1>&2
# Echo program name prefixed message, along with the current mode
# Echo program name prefixed message in verbose mode only.
# Echo program name prefixed message to standard error.
# Echo program name prefixed message to standard error, and exit.
# Echo program name prefixed message to standard error and set global
# Echo program name prefixed message to standard error, followed by
# Echo program name prefixed warning message to standard error.
    ECHO=\"$qECHO\"
	$ECHO \"\$relink_command_output\" >&2
          echo "removing references to $lt_sysroot and \`=' prefixes from $lib"
    $ECHO "run \`$progname --help | more' for full usage"
      echo "See any operating system documentation about shared libraries for"
    \$ECHO \"See the $PACKAGE documentation for more information.\" 1>&2
		echo "          setmode(1,_O_BINARY);"
		    echo "*** shared version of the library, which I believe you do not have"
	    echo "*** shared version of the library, which you do not appear to have."
		      echo "*** shared version of the library, which you do not appear to have"
		echo "*** shared version of the library, which you do not appear to have"
# Echo short help message to standard output and exit.
	      echo "*** Since this library must not contain undefined symbols,"
      echo "specify the full pathname of the library, or use the \`-LLIBDIR'"
      $ECHO "$srcfile" > "$lockfile"
		$ECHO "*** static library $deplib is not portable!"
# Echos the name of the DLL associated with the
		echo "*** that it is just a static archive that I should not use here."
	    echo "*** The inter-library dependencies that have been dropped here will be"
			  echo "*** The link will probably fail, sorry"
    \$ECHO \"This script is just a wrapper for \$program.\" 1>&2
    $ECHO "Try \`$progname --help' for more information about other modes."
        \$ECHO \"Unrecognized --lt- option: '\$lt_opt'\" 1>&2
	$ECHO "   - use the \`$flag' linker flag"
		  $ECHO "*** using a file magic. Last file checked: $potlib"
		  $ECHO "*** using a regex pattern. Last file checked: $potlib"
# Echo version message to standard output and exit.
		      $ECHO "*** Warning: dynamic linker does not accept needed library $i."
		    $ECHO "*** Warning: dynamic linker does not accept needed library $i."
	      echo "*** Warning: inter-library dependencies are not known to be supported."
	      echo "*** Warning: inter-library dependencies are not supported in this platform."
			$ECHO "*** Warning: lib $linklib is a module, not a shared library"
		  $ECHO "*** Warning!  Library $i is needed by this library but I was not able to"
	    echo "*** Warning: libtool could not satisfy all declared inter-library"
		$ECHO "*** Warning: linker path does not have real file for library $a_deplib."
	      $ECHO "*** Warning: Linking the executable $output against the loadable module"
		$ECHO "*** Warning: Linking the shared library $output against the"
	      $ECHO "*** Warning: Linking the shared library $output against the loadable module"
	  $ECHO "*** Warning: Linking the shared library $output against the non-libtool"
	    $ECHO "*** Warning: This system can not link to static lib archive $lib."
		$ECHO "*** Warning: Trying to link with static lib archive $deplib."
  $ECHO "$win32_libid_type"
		  $ECHO "*** with $libname and none of the candidates passed a file format test"
		  $ECHO "*** with $libname but no candidates were found. (...for file magic test)"
		  $ECHO "*** with $libname but no candidates were found. (...for regex pattern test)"
      && $ECHO "X$libobj" | $GREP '[]~#^*{};<>?"'"'"'	 &()|`$[]' \
	    echo "*** you link to this library.  But I can only do this if you have a"
		      echo "*** you link to this library.  But I can only do this if you have a"
		    echo "*** you link to this library.  But I can only do this if you have a"
		echo "*** you link to this library.  But I can only do this if you have a"
# `\'-ed in input to the same.  If an odd number of `\' preceded a '$'
	    -e "$double_quote_subst" -e "$sed_double_backslash"` ;;
EGREP="/bin/grep -E"
       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then
			 $EGREP "$file_magic_regex" > /dev/null; then
		    | $EGREP "$match_pattern_regex" > /dev/null; then
		       $EGREP "$match_pattern_regex" > /dev/null; then
	    $EGREP -v " ($exclude_expsyms)$" "$nlist" > "$nlist"T
either the \`install' or \`cp' program.
#elif defined(__CYGWIN__)
#elif defined(MAXPATHLEN)
#elif defined(__MINGW32__)
#elif defined(__osf__)
/* #elif defined (other platforms) ... */
	  elif eval var_value=\$$var; test -z "$var_value"; then
	elif eval var_value=\$$var; test -z "$var_value"; then
  elif func_cygming_ms_implib_p "$1" ; then
	elif func_ltwrapper_executable_p "$file"; then
	elif test "$build_libtool_libs" = yes; then
      elif test -d "$file"; then
      elif test -f "$opt"; then
	    elif test "$hardcode_automatic" = yes; then
	      elif test "$hardcode_minus_L" = no; then
	      elif test "$hardcode_minus_L" = yes; then
	    elif test "$hardcode_minus_L" = yes; then
	      elif test "$hardcode_shlibpath_var" = no; then
	      elif test "$hardcode_shlibpath_var" = yes; then
	    elif test "$hardcode_shlibpath_var" = yes; then
	  elif test "$linkmode,$pass" = "prog,link"; then
	  elif test "$linkmode" != prog && test "$linkmode" != lib; then
	  elif test "$linkmode" = prog; then
	elif test "$linkmode" = prog; then
	elif test -n "$archiver_list_spec"; then
	      elif test -n "$dlname"; then
    elif test "$need_locks" = warn; then
	      elif test -n "$nm_file_list_spec"; then
		      elif test -n "$old_library"; then
	    elif test -n "$runpath_var"; then
	elif test -n "$runpath_var"; then
	  elif test -n "$save_libobjs" && test "X$skipped_export" != "X:" && test "X$file_list_spec" != X; then
	    elif test -n "$soname_spec"; then
	    elif test "$prev" = dlfiles && test "$dlopen_self" != yes; then
	elif test "$prev" = dlprefiles; then
      elif test "$rmforce" = yes; then
	elif test "X$arg" = "X-lc_r"; then
      # Eliminate all temporary directories.
    else
      else
        else
	    else
	      else
	        else
	          else
		  else
		    else
	  else # deplib is a libtool library
#else /* DIR_SEPARATOR_2 */
      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)
	      else # not an import lib
#else /* PATH_SEPARATOR_2 */
  # else relative path ending with a slash; either way, target
# Emit a libtool wrapper script on stdout.
# emit the source code for a wrapper executable on stdout
		  /* empty path: current directory */
      # Empty path, that just means $cwd.
  emulate sh
# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist
# end: func_convert_core_file_wine_to_w32
#end: func_convert_core_msys_to_w32
# end: func_convert_core_path_wine_to_w32
# end func_convert_file_check
# end func_convert_file_cygwin_to_w32
# end func_convert_file_msys_to_cygwin
# end func_convert_file_msys_to_w32
# end func_convert_file_nix_to_cygwin
# end func_convert_file_nix_to_w32
# end func_convert_file_noop
# end func_convert_path_check
# end func_convert_path_cygwin_to_w32
# end func_convert_path_front_back_pathsep
# end func_convert_path_msys_to_cygwin
# end func_convert_path_msys_to_w32
# end func_convert_path_nix_to_cygwin
# end func_convert_path_nix_to_w32
# end func_convert_path_noop
#end: func_cygpath
# end: func_emit_cwrapperexe_src
# end func_to_host_file
# end func_to_host_path
# end func_to_tool_file
#endif /* DIR_SEPARATOR_2 */
#endif /* PATH_SEPARATOR_2 */
		      # endless loop below, in case of cyclic links.
# ### END LIBTOOL CONFIG
# ### END LIBTOOL TAG CONFIG: BINCC
# ### END LIBTOOL TAG CONFIG: BINCXX
# ### END LIBTOOL TAG CONFIG: CXX
# ### END LIBTOOL TAG CONFIG: disable-shared
# ### END LIBTOOL TAG CONFIG: disable-static
# ### END LIBTOOL TAG CONFIG: F77
# ### END LIBTOOL TAG CONFIG: FC
# ### END LIBTOOL TAG CONFIG: GCJ
# ### END LIBTOOL TAG CONFIG: GO
# ### END LIBTOOL TAG CONFIG: RC
	      # enough that we require users that really mean to play
    # Ensure marker is printed
# Ensures that function "pointer" variable $to_host_path_cmd is set to the
# Ensure that we are using m4 macros, and libtool script from the same
# environment variable; do not put it in $PATH.
        -e "$pathcar"`
        -e "$pathcdr"`
        -e "$removedotparts" -e "$collapseslashes" -e "$finalslash"`
		    "error accessing file \"%s\": %s",
*** ERROR, $lockfile contains:
*** ERROR, $lockfile exists and contains:
	    # Error occurred in the first compile.  Let's try to salvage
	  'error=$?; $opt_dry_run || $RM $removelist; exit $error'
    esac
      esac
        esac
          esac
            esac
	    esac
	      esac
		  esac
		    esac
		   esac;;
      esac # arg
	esac  #  case $arg
      esac    #  case $arg_mode
	esac # case $deplib
	  esac # linkmode
# (escaped) backslashes.  A very naive implementation.
    eval "${1}+=\${2}"
    eval "${1}+=\\ \$func_quote_for_eval_result"
      eval arg=\"$export_dynamic_flag_spec\"
                eval 'cat "$export_symbols" >> "$output_objdir/$outputname.def"'
  eval 'cat <<_LTECHO_EOF
	          eval 'cat "$nlist" >> "$output_objdir/$outputname.def"'
      eval cmd=\"$cmd\"
	  eval cmd=\"$cmd\"
		  eval cmd=\"$cmd1\"
		eval cmd=\"$cmd1\"
	  eval cmds=\"\$cmds~\$RM $delfiles\"
	    eval cmds=\"\$concat_cmds\"
	    eval cmds=\"\$concat_cmds~\$old_archive_cmds\"
	  eval cmds=\"$finish_eval\"
	eval cmds=\"$old_archive_cmds\"
	      eval concat_cmds=\"\$concat_cmds$export_symbols_cmds\"
	      eval concat_cmds=\"\${concat_cmds}$old_archive_cmds\"
	      eval concat_cmds=\"\${concat_cmds}$reload_cmds\"
		    eval concat_cmds=\"\$concat_cmds~$reload_cmds~\$RM $last_robj\"
	        eval concat_cmds=\"\${concat_cmds}~\$RM $last_robj\"
		eval concat_cmds=\"\$concat_cmds~\$RM $last_robj\"
		    eval concat_cmds=\"$reload_cmds\"
	        eval "curr_lafile=\$libfile_$func_tr_sh_result"
		  eval deplibrary_names=`${SED} -n -e 's/^library_names=\(.*\)$/\1/p' $deplib`
	    eval "dep_rpath=\"$hardcode_libdir_flag_spec\""
	            eval '$ECHO ": $dlprefile_dlbasename" >> "$nlist"'
                eval "echo EXPORTS "'> "$output_objdir/$outputname.def"'
	          eval "echo EXPORTS "'> "$output_objdir/$outputname.def"'
	            eval '$ECHO ": $name " >> "$nlist"'
	          eval '$ECHO ": $name " >> "$nlist"'
	        eval '$ECHO ": $name " >> "$nlist"'
	eval "\$ECHO \"\$shlibpath_var=\$$shlibpath_var\""
	      eval '$EGREP -e "$export_symbols_regex" "$nlist" > "$nlist"T'
	      eval '$EGREP -v " ($exclude_expsyms)$" "$nlist" > "$nlist"T'
  eval exec "$exec_cmd"
	eval "(exit $my_status); $my_fail_exp"
	eval "export $shlibpath_var"
	eval "$extractedcf"
	    eval flag=\"$hardcode_libdir_flag_spec\"
		eval flag=\"$hardcode_libdir_flag_spec\"
	eval flag=\"$hardcode_libdir_flag_spec\"
	  eval flag=\"$thread_safe_flag_spec\"
      eval "func_echo $func_quote_for_expand_result"
	    eval "func_echo $func_quote_for_expand_result"
		  eval "func_echo $func_quote_for_expand_result"
	    eval "$global_symbol_to_cdecl"' < "$nlist"S >> "$output_objdir/$my_dlsyms"'
	    eval "$global_symbol_to_c_name_address_lib_prefix" < "$nlist" >> "$output_objdir/$my_dlsyms"
	    eval "$global_symbol_to_c_name_address" < "$nlist" >> "$output_objdir/$my_dlsyms"
	      eval '$GREP -f "$output_objdir/$outputname.exp" < "$nlist" > "$nlist"T'
  eval "if test \"\${$lt_var+set}\" = set; then
	eval "if test \"\${save_$lt_var+set}\" = set; then
		  eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
		eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $func_resolve_sysroot_result`
		eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
	        eval "libfile_$func_tr_sh_result=\$abs_ladir/\$laname"
	  eval libname=\"$libname_spec\"
	eval libname=\"$libname_spec\"
	    eval libobjs=\"\$libobjs $whole_archive_flag_spec\"
	eval library_names=\"$library_names_spec\"
      eval "$lt_safe_locale"
      eval "$lt_user_locale
	      eval '$MV "$nlist"T "$nlist"'
      eval "$my_cmd"
	          eval "$NM \"$func_to_tool_file_result\" 2>/dev/null | $global_symbol_pipe |
	          eval "$NM \"$func_to_tool_file_result\" 2>/dev/null | $global_symbol_pipe >> '$nlist'"
	        eval "$NM \"$func_to_tool_file_result\" 2>/dev/null | $global_symbol_pipe >> '$nlist'"
	  eval "$prev=\"\$arg\""
	eval rpath=\" $hardcode_libdir_flag_spec\"
	    eval "$runpath_var='$rpath\$$runpath_var'; export $runpath_var"
	      eval "${SED} -e 's/\([].[*^$]\)/\\\\\1/g' -e 's/^/ /' -e 's/$/$/'"' < "$export_symbols" > "$output_objdir/$outputname.exp"'
	    eval "`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`"
	      eval "${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \(.*\)$/\1/p' "'< "$nlist" > "$export_symbols"'
	  eval shared_ext=\"$shrext_cmds\"
	eval shared_ext=\"$shrext_cmds\"
	eval "$shlibpath_var=\"\$dir\""
	eval "$shlibpath_var=\"\$dir:\$$shlibpath_var\""
	  eval "$shlibpath_var='$shlibpath\$$shlibpath_var'; export $shlibpath_var"
      eval shlib_search_path=\`\$ECHO \"\${$shlibpath_var}\" \| \$SED \'s/:/ /g\'\`
	      eval soname=\"$soname_spec\"
	  eval soname=\"$soname_spec\"
    eval std_shrext=\"$shrext_cmds\"
    eval sys_lib_dlsearch_path=\"$sys_lib_dlsearch_path_spec\"
    eval sys_lib_search_path=\"$sys_lib_search_path_spec\"
	    eval test_cmds=\"$archive_cmds\"
	    eval test_cmds=\"$archive_expsym_cmds\"
	    eval test_cmds=\"$module_cmds\"
	    eval test_cmds=\"$module_expsym_cmds\"
	  eval test_cmds=\"$old_archive_cmds\"
	      eval test_cmds=\"$reload_cmds\"
	  eval tmp_libs=\"\$$var\"
	  eval tmp_whole_archive_flags=\"$whole_archive_flag_spec\"
	    # Evaluate the configuration.
	# Evaluate the configuration.  Be careful to quote the path
	  eval $var=\"$tmp_libs\"
      # even a static library is built.  For now, we need to specify
		# eventual linking with the app. that links it) if we
Every other argument is treated as a filename.  Files ending in \`.la' are
exclude_expsyms=""
exclude_expsyms="_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*"
    *.exe) ;;
	  *:*.exe)
	  *.exe:*)
	  *.exe)
	exec 0<&5 5<&-
exec_cmd=
      exec_cmd="\$cmd$args"
      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'
      exec \"\$progdir/\$program\" \${1+\"\$@\"}
      exec \"\$progdir\\\\\$program\" \${1+\"\$@\"}
  *executable*) # but shell scripts are "executable" too...
# Executable file suffix (normally "").
      execute)
#         execute            automatically set library path, then run a program
	    # executed on the $host or under an emulation environment.
execute|execut|execu|exec|exe|ex|e)
# Execute tilde-delimited COMMANDS.
  /* execv doesn't actually work on mingw as expected on unix */
  execv (lt_argv_zero, newargz);
	  *.exe:*.exe)
	  *) exeext= ;;
	    exeext=.exe
	  *.exe) func_stripname '' '.exe' "$output"
     exit $?
    exit $?
  exit $?
	      'exit $?'
        exit 0
        exit 1
      exit 1
    exit 1
# exit_cmd.
exit_cmd=:
     exit_cmd=exit
    exit_cmd=exit
  $exit_cmd $EXIT_FAILURE
      exit $EXIT_FAILURE
    exit $EXIT_FAILURE
  exit $EXIT_FAILURE
	exit $EXIT_FAILURE
    exit $EXIT_MISMATCH
    exit (exit_status);
    exit $exit_status
	exit $exit_status
exit $exit_status
      exit $EXIT_SUCCESS
    exit $EXIT_SUCCESS
	  exit $EXIT_SUCCESS
	exit $EXIT_SUCCESS
EXIT_FAILURE=1
    # Exit here if they wanted silent mode.
      # Exit if we aren't doing a library object file.
	    exit $lt_exit
		exit $lt_exit
EXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.
      exit $ret
EXIT_SKIP=77	  # $? = 77 is used to indicate a skipped test to automake.
    exit_status=0
	exit_status=0
	exit_status=1
exit_status=$EXIT_SUCCESS
EXIT_SUCCESS=0
	  # Expand the library linking commands again to reset the
      # expansion for a subsequent eval.
      -export-dynamic)
  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)
export_dynamic_flag_spec=""
export_dynamic_flag_spec="\${wl}--export-dynamic"
    export_dynamic=no
	      export_dynamic=yes
	export_dynamic=yes
	    # exporting using user supplied symfile
export LANGUAGE LC_ALL
	  export $lt_var
	# Export our shlibpath_var if we have one.
    export $shlibpath_var
    export_symbols=
	      export_symbols=
	  export_symbols="$arg"
export_symbols_cmds=""
export_symbols_cmds="\$NM \$libobjs \$convenience | \$global_symbol_pipe | \$SED 's/.* //' | sort | uniq > \$export_symbols"
      -export-symbols | -export-symbols-regex)
	      # export_symbols gets reassigned inside the "prepare
	      export_symbols=$output_objdir/$libname.def
	  export_symbols=$output_objdir/$libname.def
	      export_symbols="$output_objdir/$libname.exp"
	    export_symbols="$output_objdir/$libname.exp"
	  export_symbols="$output_objdir/$libname.uexp"
	    export_symbols="$output_objdir/$outputname.exp"
    export_symbols_regex=
	  export_symbols_regex="$arg"
  -export-symbols-regex REGEX
  -export-symbols SYMFILE
	# Export the shlibpath_var.
	expsyms)
	expsyms_regex)
} # Extended-shell func_append implementation
} # Extended-shell func_append_quoted implementation
} # Extended-shell func_arith implementation
} # Extended-shell func_basename implementation
} # Extended-shell func_dirname_and_basename implementation
} # Extended-shell func_dirname implementation
} # Extended-shell func_len implementation
} # Extended-shell func_lo2o implementation
} # Extended-shell func_split_long_opt implementation
} # Extended-shell func_split_short_opt implementation
} # Extended-shell func_stripname implementation
} # Extended-shell func_xform implementation
	  # extension on DOS 8.3 filesystems.
/* External symbol declarations for the compiler. */\
extern \"C\" {
extern LT_DLSYM_CONST lt_dlsymlist
extracted_archives=
      extracted_archives="$extracted_archives $my_xlib_u"
	extractedcf=`$SED -n -e "$sed_extractcf" < "$progpath"`
extracted_serial=0
	  extracted_serial=$func_arith_result
extract_expsyms_cmds=""
	    # Extract -R from dependency_libs
	    # Extract subdirectory from the argument.
	  # Extract subdirectory from the argument.
		  # Extract subdirectory from the argument.
		# Extract subdirectory from the argument.
# Extract symbols from dlprefiles and create ${outputname}S.o with
	    # extract the archives, so we have objects to list.
      # Extract the objects.
      -f)
# FAIL_CMD may read-access the current command in variable CMD!
      /* failed to start process */
        # Failing that, at least try and use $RANDOM to avoid a race
    # fails when set -e is in force, so we need another command to
    # Fallback:
    # Fallback.  This is a deliberately simplistic "conversion" and
    *) false ;;
	# Fast installation is not supported
	    # fast_install is set to needless
	  fast_install=no
	fast_install=no
fast_install=yes
# fatal anyway.  Works if `file' does not exist.
      fbsd_hideous_sh_bug=$base_compile
      --features)
#       --features           display basic configuration information and exit
    f_ex_an_ar_dir="$1"; shift
    f_ex_an_ar_oldlib="$1"
    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)
FGREP="/bin/grep -F"
      fi
        fi
                      fi
	      fi
	       fi
	        fi
	          fi
	      fi |
	      fi"
		    fi
		      fi
	  fi # $darwin_arches
	# Figure out destination file name, if it wasn't already specified.
	    # figure out the soname
    # Figure out what to do with it
	fi # $installed = yes
    file=\"\$0\""
# `FILE.' does not work on cygwin managed mounts.
    file=\`\$ECHO \"\$file\" | $SED 's%^.*/%%'\`
	    file=`$ECHO "$file$stripped_ext" | $SED "s%\([^/]*\)$%$objdir/\1%"`
# FILE even if both FILE and FILE.exe exist: automatic-append-.exe
    /:[	 ]*file format pe[i]\{,1\}-/d
		file="$func_basename_result"
	file=$func_resolve_sysroot_result
	      file=$func_stripname_result
	    file=$func_stripname_result
      # @file                GCC response files
file_list_spec=""
     { file=\`ls -1dt \"\$progdir/\$program\" \"\$progdir/../\$program\" 2>/dev/null | ${SED} 1q\`; \\
  file=\`ls -ld \"\$file\" | $SED -n 's/.*-> //p'\`
    file=\`ls -ld \"\$thisdir/\$file\" | $SED -n 's/.*-> //p'\`
	file_magic*)
file_magic_cmd="\$MAGIC_CMD"
file_magic_glob=""
	  file_magic_regex=`expr "$deplibs_check_method" : "$1 \(.*\)"`
# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #
  # file name can be directly appended.
#   file name conversion function    : func_convert_file_X_to_Y ()
# file name or path is assumed to be in w32 format, as previously converted
	        file="$outputname"
	  file="$progdir/$program"
    file=\"\$\$-\$program\"
    files=
      *) files+=" $arg" ;;
	files+=" $dest"
# Files to dlopen/dlpreopen
	      # files will link in the last one created.
	    # $file with .exe has already been added to rmfiles,
	  fi # link_all_deplibs != no
	fi # linkmode = lib
	  fi # $linkmode,$pass = prog,link...
	fi # $linkmode = prog...
	fi # link shared/static library?
        finalize_command+=" $arg"
      finalize_command+=" $arg"
	  finalize_command+=" $arg"
	finalize_command+=" $arg"
      finalize_command=`$ECHO "$finalize_command" | $SED "s% @SYMFILE@%%"`
	    finalize_command=`$ECHO "$finalize_command" | $SED "s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%"`
	    finalize_command=`$ECHO "$finalize_command" | $SED "s%@SYMFILE@%$symfileobj%"`
	  finalize_command=`$ECHO "$finalize_command" | $SED "s%@SYMFILE@%$symfileobj%"`
	finalize_command=`$ECHO "$finalize_command" | $SP2NL | $SED "$lo2o" | $NL2SP`
      finalize_command+=" $finalize_deplibs"
	    # Finalize command for both is simple: just hardcode it.
	  finalize_command+=" $link_static_flag"
    finalize_command=$nonopt
	  finalize_command+=" @OUTPUT@"
	  finalize_command+=" $qarg"
	finalize_command="$shlibpath_var=\"$finalize_shlibpath\$$shlibpath_var\" $finalize_command"
	    finalize_command+=" @SYMFILE@"
	      finalize_command+=" ${wl}-bind_at_load"
	  finalize_command+=" $wl$qarg"
	finalize_deplibs=
	      finalize_deplibs="$deplib $finalize_deplibs"
	    finalize_deplibs="$deplib $finalize_deplibs"
		      finalize_deplibs="$deplib $finalize_deplibs"
	    finalize_deplibs="$dir/$linklib $finalize_deplibs"
	    finalize_deplibs="$dir/$old_library $finalize_deplibs"
	finalize_deplibs=`$ECHO " $finalize_deplibs" | $SED 's/ -lc / System.ltframework /'`
	finalize_deplibs=`$ECHO " $finalize_deplibs" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
	    finalize_deplibs="-l$name -L$dir $finalize_deplibs"
	  finalize_deplibs="$new_inherited_linker_flags $finalize_deplibs"
	      finalize=no
	  *) finalize_perm_rpath+=" $libdir" ;;
    finalize_rpath=
	      *) finalize_rpath+=" $libdir" ;;
	  *) finalize_rpath+=" $libdir" ;;
      finalize_rpath="$rpath"
    finalize_shlibpath=
	      *) finalize_shlibpath+="$libdir:" ;;
		*) finalize_shlibpath+="$libdir:" ;;
      finalize_var=
	  finalize_var="$runpath_var=\"$rpath\$$runpath_var\" "
	  finalize=yes
finalslash='s,/*$,/,'
    # Find all interdependent deplibs by searching for libraries
find_executable (const char *wrapper)
# Find potential files using nocaseglob when deplibs_check_method = "file_magic".
  # Find the directory that this script lives in.
	# Find the relevant object directory and library name.
      --finish)
      finish)
finish_cmds="PATH=\\\"\\\$PATH:/sbin\\\" ldconfig -n \$libdir"
#         finish             complete the installation of libtool libraries
finish_eval=""
finish|finis|fini|fin|fi|f)
	fi # $pass = conv
	fi # $pass = dlopen
	fi # $pass = dlpreopen
	    firstobj=
	      firstobj="$1 "
	  fi # test -n "$old_archive_from_expsyms_cmds"
      fi # test -n "$prev"
	## FIXME: Find the place where the list is rebuilt in the wrong
	      # FIXME: $output_objdir/$libname.filter potentially contains lots of
	  # FIXME: $output_objdir/$libname.filter potentially contains lots of
	    # FIXME: Pedantically, this is the right thing to do, so
	# FIXME: remove this flag sometime in the future.
	    # FIXME: should reinstall the best remaining shared library.
	# FIXME: should test the right _cmds variable.
      # FIXME: Unfortunately, there are problems with the above when trying
	# Fix the DLL searchpath if we need to.  Do this before prepending
	# fixup the dll searchpath if we need to.
      # flag for every libtool invocation.
      # Flags to be passed through unchanged, with rationale:
# Flags to create an archive.
# Flag that allows shared libraries with undefined symbols to be built.
# Flag that enforces no undefined symbols.
# Flag to hardcode $libdir into a binary during linking.
		      # Follow soft links.
  # Follow symbolic links until we get to the real thisdir.
	  for a_deplib in $deplibs; do
    for arg
  for (argc = 0; argv[argc] != NULL; argc++)
	  for arg in $args; do
      for arg in $CC; do
	    for arg in $CC; do
    for arg in $later; do
	for arg in $LTCFLAGS; do
  for (base = name; *name; name++)
	  force)
	    for cmd1 in $cmds; do
    for cmd in $1; do
	for cmd in $cmds; do
	    for cmd in $concat_cmds; do
	    for darwin_arch in  $darwin_arches ; do
	    for darwin_file in $darwin_filelist; do
      for deplib in $compile_deplibs; do
	    for deplib in $dependency_libs; do
	  for deplib in $dependency_libs; do
      for deplib in $deplibs; do
    for deplib in $deplibs; do
	for deplib in $deplibs; do
      for deplib in $libs; do
	  for deplib in $new_libs; do
	for deplib in $save_deplibs; do
	  for deplib in $tmp_libs; do
	  for dir in $finalize_perm_rpath; do
	  for dir in $newlib_search_path; do
	    for dir in $perm_rpath; do
	  for dir in $perm_rpath; do
    for dir in $rmdirs; do
	for dlprefile in $dlprefiles; do
	  for dlpremoduletest in $dlprefiles; do
	      # for duplicate removal.
    for file
	for file in $dlfiles $dlprefiles; do
      for file in $files; do
    for file in $files; do
    for file in $opt_dlopen; do
    for file in $staticlibs; do
	    for fil in `cat "$save_arg"`
	for flag in $args; do
    for func_convert_core_path_wine_to_w32_f in $1; do
  for (i = 0; i < argc; i++)
  for (i = 0; i < newargc; i++)
  for (i = 1; i < argc; i++)
      for i in $dependency_libs ; do
	    for i in $deplibs; do
		for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
	    for i in $predeps $postdeps ; do
	for installed in no yes; do
		  for (j = backslashes + 1; j > 0; j--)
	      for (j = backslashes; j > 0; j--)
	for lalib_p_l in 1 2 3 4
      for libdir in $compile_rpath $finalize_rpath; do
	    for libdir in $dependency_libs; do
      for libdir in $finalize_rpath; do
      for libdir in $libdirs; do
	  for libdir in $rpath; do
	for libdir in $rpath $xrpath; do
	for libdir in $xrpath; do
	    for lib in $dlfiles; do
	    for lib in $dlprefiles; do
	for lib in $dlprefiles; do
        for lib in $libs; do
	  for lib in $notinst_deplibs; do
      for lib in $old_dlfiles; do
      for lib in $old_dlprefiles; do
	for link
	    for linkname
	for linkname in $linknames; do
	  for l in $old_library $library_names; do
		  for l in $old_library $library_names; do
  for lt_arg
  for lt_opt
      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES
for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES
    for lt_wr_arg
# format in ARG2. Otherwise, emit an error message, but continue (resetting
# format in TO_PATH. Otherwise, emit an error message, but continue, resetting
# Format of library name prefix.
      for my_dir in $my_dir_list; do
    for my_xlib in $my_oldlibs; do
	  for n in $library_names; do
	    for obj
	  for obj in $oldobjs
	      for obj in $save_libobjs
	    for obj in $save_libobjs
		for obj in $save_libobjs; do
	  for obj in $save_oldobjs
    for oldlib in $oldlibs; do
    for opt in "$nonopt" ${1+"$@"}
      for opt_mode in compile link execute install finish uninstall clean; do
    for pass in $passes; do
      #for path in $notinst_path; do
      for path in $notinst_path; do
	for p in $tempremovelist; do
		  for potent_lib in $potential_libs; do
	  for (p = path; *p; p = p_next)
	for pre_post_dep in $predeps $postdeps; do
     for progdir in $PATH; do
	  for progfile in $progfiles; do
  for (p = wrapper; *p; p++)
	      for (q = p; *q; q++)
	  for searchdir in $searchdirs; do
	    for search_ext in .la $std_shrext .so .a; do
	  for (s = string; *s != '\0'; s++)
    for tagname in $taglist; do
	for test_deplib in $deplibs; do
		    for tmp in $deplibrary_names ; do
	  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do
      for var in $variables_saved_for_relink; do
	for var in $variables_saved_for_relink; do
	for var in $vars dependency_libs; do
	for z in $available_tags; do
        # found a matching prefix
        # found an exact match
#                 Foundation, Inc.
		    found=no
		  found=no
	found=no
		  found=yes
# four `\'s followed by two `\'s and then a '$'.  `\' that '$'.
      # -F/path              path to uninstalled frameworks, gcc on darwin
  fprintf (stderr, ".\n");
  fprintf (stderr, "%s:%s:%d: %s: ", program_name, file, line, mode);
      -framework)
	framework)
	  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.
	  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)
	freebsd-aout)
	  freebsd-aout|freebsd-elf|qnx|sunos)
	freebsd-elf)
      -f) RM+=" $arg"; rmforce=yes ;;
# from $build's *nix or MSYS format). In case (3), returns the w32 file name
    # From remaining lines, remove first 43 characters
from the given SOURCEFILE.
func_append ()
          func_append func_convert_core_path_wine_to_w32_result ";$func_convert_core_file_wine_to_w32_result"
func_append_quoted ()
      func_append_quoted args "$file"
      func_append_quoted base_compile "$lastarg"
	      func_append_quoted CC_quoted "$arg"
	func_append_quoted CC_quoted "$arg"
	    func_append_quoted lastarg "$arg"
# func_append_quoted var value
# func_append var value
func_arith ()
# func_arith arithmetic-term...
		func_arith $counter + 1
	  func_arith $current + 1
	        func_arith $current - $age
	    func_arith $current - $age
	  func_arith $current - $age
	    func_arith $current - $age + 1
	    func_arith $current - $loop
	  func_arith $extracted_serial + 1
		  func_arith $k + 1
		  func_arith $len0 + $func_len_result
	    func_arith $len + $func_len_result
		func_arith $len + $func_len_result
	    func_arith $loop - 1
	    func_arith $number_major + $number_minor
    func_arith_result=$(( $* ))
	    func_arith $revision - $loop
func_basename ()
	    func_basename "$deplib"
		func_basename "$deplib"
	  func_basename "$dlprefile"
	            func_basename "$dlprefile_dlname"
      func_basename "$file"
# func_basename file
	  func_basename "$file"
	func_basename "$file"
		func_basename "$file$stripped_ext"
	        func_basename "$lib"
		func_basename "$lib"
	func_basename "$lib"
      func_basename "$my_xlib"
	      func_basename "$obj"
	    func_basename "$obj"
    func_basename "$output"
	  func_basename "$output"
		func_basename "$output"
    func_basename_result="${1##*/}"
	    func_basename "$soroot"
	func_basename "$srcfile"
    func_check_version_match
# func_check_version_match
func_check_version_match ()
# func_config
func_config
func_config ()
func_convert_core_file_wine_to_w32 ()
    func_convert_core_file_wine_to_w32 "$1"
# func_convert_core_file_wine_to_w32 ARG
      func_convert_core_file_wine_to_w32 "$func_convert_core_path_wine_to_w32_f"
      func_convert_core_file_wine_to_w32_result=
  func_convert_core_file_wine_to_w32_result="$1"
      func_convert_core_file_wine_to_w32_result=`$ECHO "$func_convert_core_file_wine_to_w32_tmp" |
    func_convert_core_file_wine_to_w32_tmp=`winepath -w "$1" 2>/dev/null`
func_convert_core_msys_to_w32 ()
    func_convert_core_msys_to_w32 "$1"
# func_convert_core_msys_to_w32 ARG
    func_convert_core_msys_to_w32 "$func_to_host_path_tmp1"
  func_convert_core_msys_to_w32_result=`( cmd //c echo "$1" ) 2>/dev/null |
func_convert_core_path_wine_to_w32 ()
# func_convert_core_path_wine_to_w32 ARG
    func_convert_core_path_wine_to_w32 "$func_to_host_path_tmp1"
  func_convert_core_path_wine_to_w32_result=""
          func_convert_core_path_wine_to_w32_result="$func_convert_core_file_wine_to_w32_result"
func_convert_file_check ()
  func_convert_file_check "$1" "$func_to_host_file_result"
# func_convert_file_check ARG1 ARG2
func_convert_file_cygwin_to_w32 ()
# func_convert_file_cygwin_to_w32 ARG
func_convert_file_msys_to_cygwin ()
# func_convert_file_msys_to_cygwin ARG
func_convert_file_msys_to_w32 ()
# func_convert_file_msys_to_w32 ARG
func_convert_file_nix_to_cygwin ()
# func_convert_file_nix_to_cygwin ARG
func_convert_file_nix_to_w32 ()
# func_convert_file_nix_to_w32 ARG
func_convert_file_noop ()
# func_convert_file_noop ARG
		*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)
    func_convert_path_check : : \
    func_convert_path_check : ";" \
func_convert_path_check ()
# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH
func_convert_path_cygwin_to_w32 ()
# func_convert_path_cygwin_to_w32 ARG
func_convert_path_front_back_pathsep ()
    func_convert_path_front_back_pathsep ":*" "*:" : "$1"
    func_convert_path_front_back_pathsep ":*" "*:" ";" "$1"
# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG
func_convert_path_msys_to_cygwin ()
# func_convert_path_msys_to_cygwin ARG
func_convert_path_msys_to_w32 ()
# func_convert_path_msys_to_w32 ARG
func_convert_path_nix_to_cygwin ()
# func_convert_path_nix_to_cygwin ARG
func_convert_path_nix_to_w32 ()
# func_convert_path_nix_to_w32 ARG
func_convert_path_noop ()
# func_convert_path_noop ARG
func_cygming_dll_for_implib ()
# func_cygming_dll_for_implib ARG
func_cygming_dll_for_implib_fallback ()
# func_cygming_dll_for_implib_fallback ARG
func_cygming_dll_for_implib_fallback_core ()
# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs
func_cygming_gnu_implib_p ()
# func_cygming_gnu_implib_p ARG
  func_cygming_gnu_implib_tmp=`$NM "$func_to_tool_file_result" | eval "$global_symbol_pipe" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`
func_cygming_ms_implib_p ()
# func_cygming_ms_implib_p ARG
  func_cygming_ms_implib_tmp=`$NM "$func_to_tool_file_result" | eval "$global_symbol_pipe" | $GREP '_NULL_IMPORT_DESCRIPTOR'`
func_cygpath ()
# func_cygpath ARGS...
      func_cygpath_result=
    func_cygpath_result=
    func_cygpath_result=`$LT_CYGPATH "$@" 2>/dev/null`
    func_cygpath -u "$func_convert_core_file_wine_to_w32_result"
    func_cygpath -u "$func_convert_core_msys_to_w32_result"
    func_cygpath -u -p "$func_convert_core_msys_to_w32_result"
    func_cygpath -u -p "$func_convert_core_path_wine_to_w32_result"
func_dirname ()
func_dirname_and_basename ()
    func_dirname_and_basename "$1" "" "."
      func_dirname_and_basename "$dest" "" "."
# func_dirname_and_basename file append nondir_replacement
    func_dirname_and_basename "$obj" "/" ""
	    func_dirname_and_basename "$output" "" "."
func_dirname_and_basename "$progpath"
	    func_dirname "$arg" "/" ""
	  func_dirname "$arg" "/" ""
		  func_dirname "$arg" "/" ""
		func_dirname "$arg" "/" ""
	        func_dirname "$deplib" "" "."
      func_dirname "$file" "" "."
	func_dirname "$file" "/" ""
	func_dirname "$file" "" "."
# func_dirname file append nondir_replacement
        func_dirname "$func_normal_abspath_result"
        func_dirname $func_relative_path_tlibdir
		    func_dirname "$lib" "" "."
	func_dirname "$lib" "" "."
    func_dirname "$output" "/" ""
      */*) func_dirname_result="${1%/*}${2}" ;;
      *  ) func_dirname_result="${3}" ;;
func_echo ()
func_echo_all ()
# func_echo_all arg...
# func_echo arg...
			func_echo "enabling shell trace mode"
	  func_echo "unable to infer tagged configuration"
	func_echo "Waiting for $lockfile to be removed"
# func_emit_cwrapperexe_src
func_emit_cwrapperexe_src ()
	    func_emit_cwrapperexe_src > $cwrappersource
func_emit_wrapper ()
	func_emit_wrapper_arg1=${1-no}
# func_emit_wrapper [arg=no]
		func_emit_wrapper no > $func_ltwrapper_scriptname_result
	    func_emit_wrapper no > $output
	    func_emit_wrapper yes |
func_enable_tag ()
func_enable_tag "$optarg"
# func_enable_tag tagname
func_error ()
    func_error "  \`$1'"
    func_error ${1+"$@"}
    func_error "  \`$3'"
	  func_error "AGE \`$age' is greater than the current interface number \`$current'"
	  func_error "AGE \`$age' must be a nonnegative integer"
# func_error arg...
    func_error "Continuing, but uninstalled executables may not work."
    func_error "Could not determine host file name corresponding to"
    func_error "Could not determine the host path corresponding to"
	  func_error "CURRENT \`$current' must be a nonnegative integer"
		  func_error "error: relink \`$file' with the above command before installing it"
	func_error "ignoring unknown tag $tagname"
  *) func_error "invalid argument for $opt"
    func_error "LT_CYGPATH is empty or specifies non-existent file: \`$LT_CYGPATH'"
    func_error "missing argument for $1."
	func_error "not configured to extract global symbols from dlpreopened files"
	  func_error "REVISION \`$revision' must be a nonnegative integer"
    func_error "See the $PACKAGE documentation for more information."
      func_error "unrecognized option \`-dlopen'"
func_exec_program ()
      func_exec_program \${1+\"\$@\"}
func_exec_program_core ()
  func_exec_program_core \${1+\"\$@\"}
func_execute_cmds ()
      func_execute_cmds "$cmds" 'exit $?'
# func_execute_cmds commands fail_cmd
	      func_execute_cmds "$extract_expsyms_cmds" 'exit $?'
	  func_execute_cmds "$finish_cmds" 'admincmds="$admincmds
	      func_execute_cmds "$old_archive_from_expsyms_cmds" 'exit $?'
      func_execute_cmds "$old_postinstall_cmds" 'exit $?'
	      func_execute_cmds "$old_postuninstall_cmds" 'test "$rmforce" = yes || exit_status=1'
	  func_execute_cmds "$postinstall_cmds" 'exit $?'
	  func_execute_cmds "$postlink_cmds" 'exit $?'
	func_execute_cmds "$postlink_cmds" 'exit $?'
	      func_execute_cmds "$postuninstall_cmds" 'test "$rmforce" = yes || exit_status=1'
	func_execute_cmds "$prelink_cmds" 'exit $?'
      func_execute_cmds "$reload_cmds" 'exit $?'
	func_execute_cmds "$reload_cmds" 'exit $?'
func_extract_an_archive ()
# func_extract_an_archive dir oldlib
        func_extract_an_archive "$my_xdir" "$my_xabs"
	    func_extract_an_archive "$my_xdir" "$my_xabs"
	      func_extract_an_archive "`pwd`" "${darwin_base_archive}"
func_extract_archives ()
	func_extract_archives $gentop $addlibs
	    func_extract_archives $gentop $convenience
	  func_extract_archives $gentop $convenience
	  func_extract_archives $gentop $dlprefiles
# func_extract_archives gentop oldlib ...
    func_extract_archives_result="$my_oldobjs"
func_fallback_echo ()
func_fatal_configuration ()
# func_fatal_configuration arg...
	  func_fatal_configuration "can not build a shared library"
	    func_fatal_configuration "$modename: unknown library version type \`$version_type'"
      func_fatal_configuration "not configured to build any kind of library"
	  func_fatal_configuration "unknown library version type \`$version_type'"
	      func_fatal_configuration "unsupported hardcode properties"
func_fatal_error ()
	func_fatal_error "\`-allow-undefined' must not be used because it is the default"
# func_fatal_error arg...
	    func_fatal_error "\`$arg' is not a valid libtool object"
		  func_fatal_error "\`$arg' is not a valid libtool object"
	  func_fatal_error "cannot build library object \`$output' from non-libtool objects"
	  func_fatal_error "cannot build libtool library \`$output' from non-libtool objects on this host:$objs"
        func_fatal_error "cannot create temporary directory \`$my_tmpdir'"
	    func_fatal_error "cannot determine absolute directory name of \`$dir'"
      func_fatal_error "cannot determine name of library object from \`$libobj'"
	    func_fatal_error "cannot -dlopen a convenience library: \`$lib'"
	    func_fatal_error "cannot find \`$dlname' in \`$dir' or \`$dir/$objdir'"
	      func_fatal_error "cannot find name of link library for \`$lib'"
	  func_fatal_error "cannot find name of link library for \`$lib'"
	    func_fatal_error "cannot find name of object for \`$arg'"
		  func_fatal_error "cannot find name of object for \`$arg'"
	  func_fatal_error "cannot find the library \`$lib' or unhandled argument \`$deplib'"
		    func_fatal_error "\`$deplib' is not a valid libtool archive"
		  func_fatal_error "\`$deplib' is not a valid libtool archive"
	    func_fatal_error "error: cannot install \`$file' to a directory not ending in $libdir"
	    'func_fatal_error "error: relink \`$file'\'' with the above command before installing it"'
        func_fatal_error "Failed to create \`$1'"
    func_fatal_error "Fatal configuration error."
    func_fatal_error "$help"
	func_fatal_error "invalid argument \`$opt'"
	    func_fatal_error "invalid libtool wrapper script \`$wrapper'"
      func_fatal_error "invalid tag name: $tagname"
	    func_fatal_error "\`$lib' is not a convenience library"
	  || func_fatal_error "\`$lib' is not a valid libtool archive"
		  func_fatal_error "\`$lib' is not a valid libtool archive"
	    func_fatal_error "link input file \`$arg' does not exist"
	  func_fatal_error "more than one -exported-symbols argument is not allowed"
	    func_fatal_error "need path for \`-L' option"
      func_fatal_error "object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib"
	    func_fatal_error "only absolute run-paths are allowed"
	  func_fatal_error "only absolute run-paths are allowed"
	    func_fatal_error "only libraries may -dlpreopen a convenience library: \`$lib'"
	    func_fatal_error "require no space between \`-L' and \`$1'"
	  func_fatal_error "specify a tag with \`--tag'"
	    || func_fatal_error "symbol file \`$arg' does not exist"
	func_fatal_error "unknown suffix for \`$my_dlsyms'"
	  func_fatal_error "\`$vinfo' is not valid version information"
	    func_fatal_error "you cannot specify \`-o' more than once"
      func_fatal_error "you must specify an argument for -Xcompile"
      func_fatal_error "you must specify a target with \`-o'"
func_fatal_help ()
# func_fatal_help arg...
	  func_fatal_help "cannot copy a libtool object to \`$destfile'"
	  func_fatal_help "\`$destdir' must be an absolute directory name"
	func_fatal_help "\`$dest' is not a directory"
	|| func_fatal_help "\`$file' is not a file"
	  || func_fatal_help "\`$file' is not a valid libtool archive"
        func_fatal_help "invalid operation mode \`$opt_mode'"
  func_fatal_help "invalid operation mode \`$opt_mode'"
	  || func_fatal_help "\`$lib' is not a valid libtool archive"
	    func_fatal_help "libraries can \`-dlopen' only libtool libraries: $file"
	  func_fatal_help "libtool library \`$output' must begin with \`lib'"
	func_fatal_help "no file or destination specified"
      func_fatal_help "the \`$prevarg' option requires an argument"
      func_fatal_help "the \`$prev' option requires an argument"
	  func_fatal_help "too many parameters to \`-version-info'"
      -*)		func_fatal_help "unrecognized option \`$opt'" ;;
      func_fatal_help "you must specify a COMMAND"
      func_fatal_help "you must specify a compilation command"
	func_fatal_help "you must specify a destination"
  func_fatal_help "you must specify a MODE"
      func_fatal_help "you must specify an install program"
      func_fatal_help "you must specify an output file"
      func_fatal_help "you must specify an RM program"
# func_features
func_features
func_features ()
func_generate_dlsyms ()
      func_generate_dlsyms "$libname" "$libname" "yes"
# func_generate_dlsyms outputname originator pic_p
      func_generate_dlsyms "$outputname" "@PROGRAM@" "no"
func_grep ()
# func_grep expression filename
        func_help
func_help ()
      func_help noexit
# func_help [NOEXIT]
func_infer_tag ()
# func_infer_tag arg
    func_infer_tag $base_compile
  func_init_to_host_path_cmd
# func_init_to_host_path_cmd
func_init_to_host_path_cmd ()
func_lalib_p ()
    func_lalib_p "$1"
# func_lalib_p file
func_lalib_unsafe_p ()
# func_lalib_unsafe_p file
	func_lalib_unsafe_p "$file" \
	func_lalib_unsafe_p "$lib" \
func_len ()
		  func_len " $cmd"
	func_len " $cmds"
		  func_len " $last_robj"
	    func_len " $obj"
		func_len " $obj"
    func_len_result=${#1}
# func_len string
	      func_len " $test_cmds"
	   func_len " $test_cmds" &&
	  func_len " $test_cmds"
func_lo2o ()
	    func_lo2o "$arg"
		  func_lo2o "$arg"
	  func_lo2o "$destfile"
	  func_lo2o "$file"
	func_lo2o "$libobj"
# func_lo2o object
      *)    func_lo2o_result=${1} ;;
func_lt_dump_args ()
        func_lt_dump_args \${1+\"\$@\"} 1>&2
    func_ltwrapper_exec_suffix=
    *) func_ltwrapper_exec_suffix=.exe ;;
func_ltwrapper_executable_p ()
# func_ltwrapper_executable_p file
func_ltwrapper_p ()
# func_ltwrapper_p file
func_ltwrapper_scriptname ()
	    func_ltwrapper_scriptname $cwrapper
# func_ltwrapper_scriptname file
	      func_ltwrapper_scriptname "$file"
	  func_ltwrapper_scriptname "$file"
    func_ltwrapper_scriptname_result="$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper"
func_ltwrapper_script_p ()
    func_ltwrapper_script_p "$1" || func_ltwrapper_executable_p "$1"
# func_ltwrapper_script_p file
func_missing_arg ()
# func_missing_arg argname
func_mkdir_p ()
# func_mkdir_p directory-path
	  func_mkdir_p "$gentop"
      func_mkdir_p "$my_xdir"
    func_mkdir_p "$output_objdir"
	      func_mkdir_p "unfat-$$/${darwin_base_archive}-${darwin_arch}"
      func_mkdir_p "$xdir$objdir"
func_mktempdir ()
# func_mktempdir [string]
func_mode_compile ()
# func_mode_compile arg...
func_mode_execute ()
# func_mode_execute arg...
func_mode_finish ()
# func_mode_finish arg...
    func_mode_help
	func_mode_help
func_mode_help ()
func_mode_install ()
# func_mode_install arg...
func_mode_link ()
    func_mode_link ${1+"$@"}
# func_mode_link arg...
# func_mode_link because it depends on a number of variables
func_mode_uninstall ()
    func_mode_uninstall ${1+"$@"}
# func_mode_uninstall arg...
func_normal_abspath ()
  func_normal_abspath "$1"
  func_normal_abspath "$2"
      func_normal_abspath_altnamespace=/
  func_normal_abspath_altnamespace=
# func_normal_abspath PATH
        func_normal_abspath_result=/
  func_normal_abspath_result=
        func_normal_abspath_result=$func_dirname_result
  func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result
        func_normal_abspath_result=$func_normal_abspath_result/$func_normal_abspath_tcomponent
      func_normal_abspath_result=$func_stripname_result
    func_normal_abspath_tcomponent=`$ECHO "$func_normal_abspath_tpath" | $SED \
  func_normal_abspath_tpath=$1
    func_normal_abspath_tpath=`$ECHO "$func_normal_abspath_tpath" | $SED \
  func_normal_abspath_tpath=`$ECHO "$func_normal_abspath_tpath" | $SED \
      func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath
func_parse_lt_options ()
  func_parse_lt_options \"\$0\" \${1+\"\$@\"}
func_quote_for_eval ()
    func_quote_for_eval "${2}"
        func_quote_for_eval "$arg"
      func_quote_for_eval "$arg"
    func_quote_for_eval "$arg"
# func_quote_for_eval arg
	func_quote_for_eval "$arg"
	func_quote_for_eval "$arg2"
          func_quote_for_eval "$flag"
	func_quote_for_eval "$install_override_mode"
    func_quote_for_eval "$libobj"
      func_quote_for_eval "$nonopt"
        func_quote_for_eval_result="$func_quote_for_eval_unquoted_result"
        func_quote_for_eval_result="\"$func_quote_for_eval_unquoted_result\""
    func_quote_for_eval "$srcfile"
        func_quote_for_eval_unquoted_result="$1" ;;
	func_quote_for_eval_unquoted_result=`$ECHO "$1" | $SED "$sed_quote_subst"` ;;
# FUNC_QUOTE_FOR_EVAL_UNQUOTED_RESULT has merely all characters
	    func_quote_for_eval "$var_value"
	  func_quote_for_eval "$var_value"
func_quote_for_expand ()
# func_quote_for_expand arg
	    func_quote_for_expand "$cmd"
		  func_quote_for_expand "$cmd"
      func_quote_for_expand "$my_cmd"
	          func_quote_for_expand "$relink_command"
    func_quote_for_expand_result="$my_arg"
func_relative_path ()
		func_relative_path "$install_libdir" "$bindir"
          func_relative_path_result=.
  func_relative_path_result=
          func_relative_path_result=../$func_relative_path_result
        func_relative_path_result=../$func_relative_path_result
    func_relative_path_result=${func_relative_path_result}/${func_stripname_result}
    func_relative_path_result=$func_stripname_result
  func_relative_path_result=$func_stripname_result
# func_relative_path SRCDIR DSTDIR
  func_relative_path_tbindir=$func_normal_abspath_result
        func_relative_path_tcancelled=
          func_relative_path_tcancelled=$func_relative_path_tbindir
        func_relative_path_tcancelled=$func_stripname_result
      $func_relative_path_tlibdir)
      $func_relative_path_tlibdir*)
        func_relative_path_tlibdir=${func_dirname_result}
  func_relative_path_tlibdir=$func_normal_abspath_result
func_replace_sysroot ()
		func_replace_sysroot "$func_stripname_result"
	  func_replace_sysroot "$libdir"
		func_replace_sysroot "$libdir"
# func_replace_sysroot PATH
    func_replace_sysroot_result=$1
    func_replace_sysroot_result="=$func_stripname_result"
func_resolve_sysroot ()
	func_resolve_sysroot "$arg"
              *) func_resolve_sysroot "$deplib" ;;
	        func_resolve_sysroot "$deplib"
	  func_resolve_sysroot "$deplib"
		func_resolve_sysroot "$deplib"
	func_resolve_sysroot "$file"
                   func_resolve_sysroot "$func_stripname_result";;
	         func_resolve_sysroot "$func_stripname_result"
	    func_resolve_sysroot "$func_stripname_result"
	func_resolve_sysroot "$func_stripname_result"
	  func_resolve_sysroot "$lib"
# func_resolve_sysroot PATH
# func_resolve_sysroot_result
	      *" $func_resolve_sysroot_result "*)
  func_resolve_sysroot_result=$1
    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result
func_show_eval ()
		&& func_show_eval "(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })"
    func_show_eval "(cd \$f_ex_an_ar_dir && $AR x \"\$f_ex_an_ar_oldlib\")" \
	func_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable "$my_dlsyms")' 'exit $?'
	    func_show_eval '(cd "$output_objdir" && $RM "$linkname" && $LN_S "$realname" "$linkname")' 'exit $?'
      func_show_eval '( cd "$output_objdir" && $RM "$outputname" && $LN_S "../$outputname" "$outputname" )' 'exit $?'
      func_show_eval "$cmd" "${2-:}"
		func_show_eval "$cmd" 'exit $?'
# func_show_eval cmd [fail_exp]
	      func_show_eval '$EGREP -e "$export_symbols_regex" "$export_symbols" > "${export_symbols}T"'
	  func_show_eval "$install_prog $file $destfile" 'exit $?'
      func_show_eval "$install_prog \$file \$oldlib" 'exit $?'
	func_show_eval "$install_prog $instname $destdir/$name" 'exit $?'
	  func_show_eval "$install_prog \$staticobj \$staticdest" 'exit $?'
	func_show_eval "$install_prog\$stripme \$file \$destfile" 'exit $?'
	  func_show_eval "$install_shared_prog $dir/$srcname $destdir/$realname" \
      func_show_eval "$link_command" 'exit $?'
	func_show_eval "$link_command" 'exit $?'
	func_show_eval "$link_command" 'exit_status=$?'
	      func_show_eval "ln $obj $gentop/$newobj || cp $obj $gentop/$newobj"
func_show_eval_locale ()
# func_show_eval_locale cmd [fail_exp]
      func_show_eval_locale "$command" \
      func_show_eval_locale "$command"	\
	      func_show_eval '$MV "${export_symbols}T" "$export_symbols"'
	func_show_eval '$MV "$output_obj" "$lobj"' \
	func_show_eval '$MV "$output_obj" "$obj"' \
	func_show_eval "$old_striplib $tool_oldlib" 'exit $?'
	  func_show_eval "$relink_command" \
	func_show_eval "rmdir $dir >/dev/null 2>&1"
	func_show_eval "$RM $nlist ${nlist}S ${nlist}T"
	func_show_eval '$RM "$output_objdir/$my_dlsyms" "$nlist" "${nlist}S" "${nlist}T"'
	  func_show_eval '$RM "$output_objdir/${outputname}S.${objext}"'
      func_show_eval "${RM}r$generated"
	      func_show_eval '${RM}r "$gentop"'
	  func_show_eval '${RM}r "$gentop"'
	func_show_eval '${RM}r "$gentop"'
      func_show_eval "$RM $rmfiles" 'exit_status=1'
	  func_show_eval "${RM}r \$removelist"
	    func_show_eval "$striplib $destdir/$realname" 'exit $?'
func_source ()
	  func_source "$arg"
		func_source "$arg"
	  func_source $dir/$name
	      func_source $dir/$noexename
# func_source file
	  func_source "$file"
	func_source "$file"
	      func_source $func_ltwrapper_scriptname_result
	  func_source "$func_ltwrapper_scriptname_result"
	      func_source "$lib"
		  func_source "$lib"
	func_source "$lib"
	  func_source "$wrapper"
func_split_long_opt ()
    func_split_long_opt_arg=${1#*=}
# func_split_long_opt longopt
    func_split_long_opt_name=${1%%=*}
			func_split_long_opt "$opt"
func_split_short_opt ()
    func_split_short_opt_arg=${1#??}
    func_split_short_opt_name=${1%"$func_split_short_opt_arg"}
			func_split_short_opt "$opt"
# func_split_short_opt shortopt
func_stripname ()
    func_stripname : : "$1"
	func_stripname ' ' '' "$arg"
    func_stripname '' '/' "$dest"
	  func_stripname '=' '' "$dir"
	    func_stripname '' '.exe' "$destfile"
	      func_stripname '' '.exe' "$file"
	    func_stripname '' '.exe' "$file"
    func_stripname '' '.exe' "$func_basename_result"
	    func_stripname '' '.exe' "$name"
	    func_stripname '' '.exe' "$outputname"
    func_stripname 'func_convert_file_' '' "$to_host_file_cmd"
    func_stripname './' '' "$func_relative_path_result/"
  func_stripname '' '/' "$func_relative_path_result"
  func_stripname '/' '/' "$func_relative_path_tcancelled"
        func_stripname "$func_relative_path_tlibdir" '' "$func_relative_path_tbindir"
    func_stripname '=' '' "$func_resolve_sysroot_result"
	      func_stripname -l '' "$a_deplib"
	  func_stripname '' '.la' "$outputname"
	func_stripname "-L" '' "$arg"
	  func_stripname ' ' '' "$lastarg"
	  func_stripname '-l' '' "$deplib"
	    func_stripname '-L' '' "$deplib"
		func_stripname -L '' "$deplib"
		func_stripname -l '' "$i"
	    func_stripname 'lib' '.dll' "$soname"
	func_stripname 'lib' '.la' "$laname"
	func_stripname 'lib' '.la' "$outputname"
    func_stripname "$lt_sysroot" '' "$1"
# func_stripname prefix suffix name
      func_stripname '' '/' "`pwd`"
	func_stripname '-R' '' "$arg"
	    func_stripname '-R' '' "$deplib"
		func_stripname -R '' "$deplib"
    func_stripname_result=${3}
    func_stripname_result=${func_stripname_result#"${1}"}
    func_stripname_result=${func_stripname_result%"${2}"}
	  func_stripname '-Wc,' '' "$arg"
	func_stripname '-Wc,' '' "$arg"
	func_stripname '-Wl,' '' "$arg"
# func_strip_suffix prefix name
# function.
func_to_host_file ()
# func_to_host_file ARG
# func_to_host_file_result.
    func_to_host_file_result="$1"
  func_to_host_file_result="$1"
    func_to_host_file_result=`cygpath -m "$1"`
    func_to_host_file_result="$func_convert_core_file_wine_to_w32_result"
    func_to_host_file_result="$func_convert_core_msys_to_w32_result"
    func_to_host_file_result="$func_cygpath_result"
# func_to_host_file_result to ARG1).
# func_to_host_file_result to a simplistic fallback value (see below).
func_to_host_path ()
# func_to_host_path ARG
              func_to_host_path "$dllsearchpath:"
# func_to_host_path_result.
  func_to_host_path_result="$1"
      func_to_host_path_result="$3"
    func_to_host_path_result=`cygpath -m -p "$func_to_host_path_tmp1"`
      func_to_host_path_result=`echo "$3" |
    func_to_host_path_result="$func_convert_core_msys_to_w32_result"
    func_to_host_path_result="$func_convert_core_path_wine_to_w32_result"
    func_to_host_path_result="$func_cygpath_result"
              func_to_host_path "$temp_rpath"
    func_to_host_path_tmp1=$func_stripname_result
      "$func_to_host_path_tmp1" "$func_to_host_path_result"
func_to_tool_file ()
      func_to_tool_file "$1" func_convert_file_msys_to_w32
  func_to_tool_file "$1" func_convert_file_msys_to_w32
# func_to_tool_file ARG LAZY
	          func_to_tool_file "$dlprefile" func_convert_file_msys_to_w32
	        func_to_tool_file "$dlprefile" func_convert_file_msys_to_w32
	      func_to_tool_file "$obj"
	    func_to_tool_file "$obj"
		  func_to_tool_file "$obj"
      func_to_tool_file "$oldlib" func_convert_file_msys_to_w32
	func_to_tool_file "$oldlib" func_convert_file_msys_to_w32
	    func_to_tool_file "$output"
	  func_to_tool_file "$output"
		func_to_tool_file "$output"
    func_to_tool_file "$output_objdir/"
	  func_to_tool_file "$output_objdir/$libname.libcmd"
	func_to_tool_file "$output_objdir/$outputname"
	    func_to_tool_file "$progfile" func_convert_file_msys_to_w32
      func_to_tool_file_result=$1
      func_to_tool_file_result=$func_to_host_file_result
    func_to_tool_file "$srcfile" func_convert_file_msys_to_w32
# func_tr_sh
func_tr_sh ()
	        func_tr_sh "$dir/$linklib"
	        func_tr_sh "$dlprefile"
    func_tr_sh_result=$1
    func_tr_sh_result=`$ECHO "$1" | $SED 's/^\([0-9]\)/_\1/; s/[^a-zA-Z0-9_]/_/g'`
# func_usage
func_usage ()
func_verbose ()
# func_verbose arg...
	      func_verbose "creating a temporary reloadable object file: $output"
	    func_verbose "creating GNU ld script: $output"
	    func_verbose "creating linker input file list: $output"
		func_verbose "creating $NM input file list: $output"
      func_verbose "creating $output"
	func_verbose "creating $output_objdir/$my_dlsyms"
	      func_verbose "creating reloadable object files..."
	    func_verbose "$darwin_base_archive has multiple architectures $darwin_arches"
	      func_verbose "extracting exported symbol list from \`$soname'"
	  func_verbose "extracting global C symbols from \`$dlprefile'"
	    func_verbose "extracting global C symbols from \`$func_to_tool_file_result'"
	func_verbose "Extracting $my_xabs"
	      func_verbose "filter symbol list for \`$libname.la' to tag DATA exports"
	  func_verbose "filter symbol list for \`$libname.la' to tag DATA exports"
	      func_verbose "generating import library for \`$soname'"
	      func_verbose "generating symbol list for \`$libname.la'"
	    func_verbose "generating symbol list for \`$libname.la'"
	  func_verbose "generating symbol list for \`$output'"
	  func_verbose "using command file archive linking..."
	  func_verbose "using piecewise archive linking..."
		func_verbose "using reloadable object file for export list..."
#	  func_verbose "using $tagname tagged configuration"
# func_version
func_version ()
func_warning ()
# func_warning arg...
	  func_warning "assuming \`-no-fast-install' instead"
		    func_warning "cannot determine absolute directory name of \`$dir'"
	    func_warning "cannot determine absolute directory name of \`$ladir'"
	        func_warning "cannot relink \`$file'"
	    func_warning "complete static linking is impossible in this configuration"
	            func_warning "Could not compute DLL name from $name"
		    func_warning "\`$deplib' seems to be moved"
	func_warning "\`-dlopen' is ignored for archives"
	func_warning "\`-dlopen' is ignored for non-libtool libraries and objects"
	func_warning "\`-dlopen' is ignored for objects"
	func_warning "\`-dlopen self' is ignored for libtool libraries"
	func_warning "\`-export-symbols' is ignored for archives"
	    func_warning "\`$file' was not linked with \`-export-dynamic'"
	func_warning "ignoring multiple \`-rpath's for a libtool library"
	func_warning "\`-l' and \`-L' are ignored for archives" ;;
	func_warning "\`-l' and \`-L' are ignored for objects" ;;
	      func_warning "\`$lib' has not been installed in \`$libdir'"
      && func_warning "libobj name \`$libobj' may not contain shell special characters."
	    func_warning "library \`$lib' was moved."
	    func_warning "\`-l' is ignored for archives/objects"
	  func_warning "\`LT_INIT([dlopen])' not used. Assuming no dlopen support."
	  func_warning "\`-no-install' is ignored for $host"
	  func_warning "\`$opt' is not a valid libtool archive"
	func_warning "\`$output' will be relinked during installation"
	    func_warning "passing it literally to the linker, although it might fail"
	func_warning "\`-release' is ignored for archives"
	  func_warning "\`-release' is ignored for convenience libraries"
	func_warning "\`-release' is ignored for objects"
	func_warning "\`-release' is ignored for programs"
	  func_warning "relinking \`$file'"
      func_warning "remember to run \`$progname --finish$future_libdirs'"
	func_warning "\`-R' is ignored for archives"
	func_warning "\`-R' is ignored for objects"
	func_warning "\`-rpath' is ignored for archives"
	func_warning "\`-rpath' is ignored for objects"
	func_warning "this platform does not like uninstalled shared libraries"
	    func_warning "undefined symbols not allowed in $host shared libraries"
	func_warning "\`-version-info' is ignored for objects"
	func_warning "\`-version-info' is ignored for programs"
	func_warning "\`-version-info/-version-number' is ignored for archives"
	  func_warning "\`-version-info/-version-number' is ignored for convenience libraries"
func_win32_import_lib_p ()
# func_win32_import_lib_p ARG
func_win32_libid ()
# func_win32_libid arg
func_write_libtool_object ()
      func_write_libtool_object "$libobj" "$objdir/$objname" "$objname"
# func_write_libtool_object output_name pic_name nonpic_name
func_xform ()
      func_xform "$libobj"
# func_xform libobj-or-source
    func_xform_result=${1%.*}.lo
    future_libdirs=
	  *) future_libdirs+=" $libdir" ;;
     /^# General help using/b print
# General help using GNU software: <http://www.gnu.org/gethelp/>.
# General Public License for more details.
    generated=
# Generated automatically by config.status (libtool) 2.4.2
  generated_by_libtool_version='$macro_version'
		\#\ Generated\ by\ *$PACKAGE* ) lalib_p=yes; break;;
   Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION
/* Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION */
# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION
	    generated+=" $gentop"
	  generated+=" $gentop"
	generated+=" $gentop"
# generates a relative path from SRCDIR to DSTDIR, with a trailing
    generic_help="$help"
        # Generic help is extracted from the usage comments
      gentop=
	  gentop="$output_objdir/${obj}x"
	    gentop="$output_objdir/${outputname}x"
	  gentop="$output_objdir/${outputname}x"
	gentop="$output_objdir/${outputname}x"
     (getenv ("COMSPEC") != NULL ? getenv ("COMSPEC") :
      # Get the absolute pathname.
    # Get the compilation command and the source file.
      # get the directories listed in $shlibpath_var
      # Get the name of the library object.
	# Get the name of the library we link against.
	# Get the real and link names of the library.
         GetVersionEx(&v);
# given, STRING is the basename for that directory.
global_symbol_pipe="sed -n -e 's/^.*[	 ]\\([ABCDGIRSTW][ABCDGIRSTW]*\\)[	 ][	 ]*\\([_A-Za-z][_A-Za-z0-9]*\\)\$/\\1 \\2 \\2/p' | sed '/ __gnu_lto/d'"
global_symbol_to_cdecl="sed -n -e 's/^T .* \\(.*\\)\$/extern int \\1();/p' -e 's/^[ABCDGIRSTW]* .* \\(.*\\)\$/extern char \\1;/p'"
global_symbol_to_c_name_address_lib_prefix="sed -n -e 's/^: \\([^ ]*\\)[ ]*\$/  {\\\"\\1\\\", (void *) 0},/p' -e 's/^[ABCDGIRSTW]* \\([^ ]*\\) \\(lib[^ ]*\\)\$/  {\"\\2\", (void *) \\&\\2},/p' -e 's/^[ABCDGIRSTW]* \\([^ ]*\\) \\([^ ]*\\)\$/  {\"lib\\2\", (void *) \\&\\2},/p'"
global_symbol_to_c_name_address="sed -n -e 's/^: \\([^ ]*\\)[ ]*\$/  {\\\"\\1\\\", (void *) 0},/p' -e 's/^[ABCDGIRSTW]* \\([^ ]*\\) \\([^ ]*\\)\$/  {\"\\2\", (void *) \\&\\2},/p'"
  # Global variable:
# Global variables:
# Global variables.
	      # global variables. join(1) would be nice here, but unfortunately
	  # global variables. join(1) would be nice here, but unfortunately
      -g | -m | -o)
# GNU General Public License for more details.
# GNU libtool home page: <http://www.gnu.org/software/libtool/>.
# GNU Libtool is distributed in the hope that it will be useful,
# GNU Libtool is distributed in the hope that it will be useful, but
# GNU Libtool is free software; you can redistribute it and/or
# GNU Libtool is free software; you can redistribute it and/or modify
    # Go through the arguments, transforming them on the way.
    $GREP "$1" "$2" >/dev/null 2>&1
GREP="/bin/grep"
			 $GREP ": [^:]* bundle" >/dev/null ; then
			 $GREP " -> " >/dev/null; then
        | $GREP "^# Generated by .*$PACKAGE" > /dev/null 2>&1
    $GREP "$magic_exe" "$1$func_ltwrapper_exec_suffix" >/dev/null 2>&1
	    $GREP -v "^: " < "$nlist" > "$nlist"S
    # Handle -dlopen flags immediately.
	      # Handle the remaining objects by creating one last
hardcode_action=
hardcode_action=immediate
hardcode_automatic=
hardcode_automatic=no
hardcode_direct=
hardcode_direct_absolute=
hardcode_direct_absolute=no
hardcode_direct=no
hardcode_into_libs=yes
hardcode_libdir_flag_spec=""
hardcode_libdir_flag_spec="\${wl}-rpath \${wl}\$libdir"
      hardcode_libdirs=
	  hardcode_libdirs=
hardcode_libdir_separator=""
	      *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
		  *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
		    hardcode_libdirs+="$hardcode_libdir_separator$libdir"
		hardcode_libdirs+="$hardcode_libdir_separator$libdir"
	      hardcode_libdirs="$libdir"
		  hardcode_libdirs="$libdir"
hardcode_minus_L=
hardcode_minus_L=no
hardcode_shlibpath_var=
hardcode_shlibpath_var=unsupported
	    # Hardcode the library path.
	  # Hardcode the library paths
	  # has declared as weak libs
	has_slash = 1;
	      has_symlinks = 1;
# Has to be a shell function in order to 'eat' the argument
             have already dealt with, above (inluding dump-script), then
          # Have to descend all the way to the root!
      --help)
      --help-all)
# Helper function used by file name conversion functions when $build is *nix,
# Helper function used by path conversion functions when $build is *nix, and
      --help)		func_help				;;
  help="$generic_help"
help="Try \`$progname --help' for more information."  ## default
    help="Try \`$progname --help --mode=$opt_mode' for more information."
	  # Here we assume that one of hardcode_direct or hardcode_minus_L
      -\?|-h)		func_usage				;;
#   -h, --help, --help-all   print short, long, or detailed help message
      -\?*|-h*|-n*|-v*)
     /^# .* home page:/b print
host_alias=
host=i686-pc-linux-gnu
# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly
host_os=linux-gnu
#         host-triplet:	$host
          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX
# How to create reloadable object files.
# How to feed a file listing to the archiver.
# How to find potential files when deplibs_check_method = "file_magic".
# How to hardcode a shared library path into an executable.
# How to pass a linker flag through the compiler.
	  *-*-hpux*)
	*" $i "*)
		      i=""
		    *" $i "*)
		    i=""
		  *" $i "*)
		/ I /{
# if $1 begins with a digit, a '_' is prepended as well.
	      # If a -bindir argument was supplied, place the dll there.
	    iface=$func_arith_result
# If a disable-shared tag is given, we'll fallback to a static-only
	    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,
	      # if an import library, we need to obtain dlname
If any of the ARGS are libtool executable wrappers, then they are translated
    if ($AR t "$f_ex_an_ar_oldlib" | sort | sort -uc >/dev/null 2>&1); then
	      if (c == '"')
	      if (c == '\\')
# if CDPATH is set.
      if (check_executable (concat_name))
  if (check_executable (concat_name))
	      if (check_executable (concat_name))
	  if (check_executable (concat_name))
#ifdef __cplusplus
# ifdef __CYGWIN__
#ifdef FREEBSD_WORKAROUND
#ifdef HAVE_SETENV
#if defined(__GNUC__) && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))
#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
#if defined(LT_DEBUGWRAPPER)
#if defined(__MINGW32__)
#if defined(_MSC_VER)
#if defined(PATH_MAX)
#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)
#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \
#ifdef _MSC_VER
# ifdef __STRICT_ANSI__
		 if $ECHO "$p" | $EGREP -e "$precious_files_regex" >/dev/null 2>&1
		  if eval "\$ECHO \"$deplib\"" 2>/dev/null | $SED 10q \
		    if eval "\$ECHO \"$potent_lib\"" 2>/dev/null | $SED 10q | \
		      if eval $file_magic_cmd \"\$potlib\" 2>/dev/null |
    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |
	        if eval "$relink_command"; then :
      if eval "test -z \"\$$shlibpath_var\""; then
	  if eval test -z \"\${$var+set}\"; then
	if eval test -z \"\${$var+set}\"; then
  if (exit_status >= 0)
# If FAIL_CMD is given, eval that upon failure.
If FILE is a libtool library, all the files associated with it are deleted.
If FILE is a libtool library, object or program, all the files associated
	if (for obj in $oldobjs
  if func_cygming_gnu_implib_p "$1" ; then
	if func_lalib_p "$file"; then
		if func_lalib_p "$lib"; then
	      if func_lalib_unsafe_p "$arg"; then
	if func_lalib_unsafe_p "$arg"; then
	if func_lalib_unsafe_p "$opt"; then
	    if func_ltwrapper_executable_p "$file"; then
	  if func_ltwrapper_p "$file"; then
	if func_ltwrapper_script_p "$file"; then
	if func_ltwrapper_script_p "$wrapper"; then
	      if func_win32_import_lib_p "$dlprefile"; then
  if (getcwd (tmp, LT_PATHMAX) == NULL)
		  if (getcwd (tmp, LT_PATHMAX) == NULL)
	  if $GREP "^# ### BEGIN LIBTOOL TAG CONFIG: $z$" < "$progpath" > /dev/null; then
		if $GREP "^installed=no" $deplib > /dev/null; then
      if $GREP "$re_begincf" "$progpath" >/dev/null 2>&1; then
	  if $GREP -v "^: " < "$nlist" |
  if (!has_slash)
  if (!has_symlinks)
      if $install_cp; then :; else
	if $install_cp; then :; else
  if (isalpha ((unsigned char) name[0]) && name[1] == ':')
  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')
    if (IS_DIR_SEPARATOR (*name))
      if (IS_DIR_SEPARATOR (wrapper[0]))
		if (IS_PATH_SEPARATOR (*q))
   If it is, it will not operate correctly.
# If it is, it will not operate correctly.
		      # If libtool objects are unsupported, then we need to preload.
		# If libtool objects are unsupported, then we need to preload.
		      if ls -lLd "$potent_lib" 2>/dev/null |
      if (lstat (tmp_pathspec, &s) == 0)
	  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then
		if $LTCC $LTCFLAGS -o conftest conftest.c $i; then
  if (lt_debug)
      # If mktemp works, use that first and foremost
	# If -module or -export-dynamic was specified, set the dlname.
  if (name && *name && value && *value)
#ifndef DIR_SEPARATOR
# ifndef DIR_SEPARATOR_2
#ifndef DIR_SEPARATOR_2
#ifndef FOPEN_WB
# ifndef _INTPTR_T_DEFINED
#ifndef _O_BINARY
# ifndef PATH_SEPARATOR_2
#ifndef PATH_SEPARATOR_2
#ifndef S_ISLNK
#ifndef S_IXGRP
#ifndef S_IXOTH
# if one wasn't chosen via the "--tag" command line option.
    if ${opt_dry_run-false}; then :; else
      if $opt_dry_run; then
	  if $opt_dry_run; then
		if $opt_dry_run; then
      if $opt_duplicate_compiler_generated_deps; then
if $opt_help; then
      if $opt_preserve_dup_deps ; then
	      if $opt_preserve_dup_deps ; then
	    if $opt_preserve_dup_deps ; then
  if (orig_value && *orig_value)
If OUTPUT-FILE ends in \`.a' or \`.lib', then a standard library is created
If OUTPUT-FILE ends in \`.lo' or \`.${objext}', then a reloadable object file
    if (*p == '/')
  if (!p)
# If PATH begins with the sysroot, replace it with = and
      if (path != NULL)
  if ((!path) || (!*path))
  if (patlen <= len)
	      if (p_len == 0)
	  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))
    if (putenv (str) != EXIT_SUCCESS)
	  if (quote_around)
      if relink_command_output=\`eval \$relink_command 2>&1\`; then :
  if (rval == -1)
    IFS=:
	  if (S_ISLNK (s.st_mode) != 0)
          if ${skipped_export-false}; then
	    if ${skipped_export-false}; then
IFS=" 	$lt_nl"
      IFS=$oldIFS
    IFS=$oldIFS
	      if sort -k 3 </dev/null >/dev/null 2>&1; then
     IFS=${PATH_SEPARATOR-:}
      IFS=$save_ifs
    IFS=$save_ifs
	      IFS="$save_ifs"
	    IFS="$save_ifs"
	  IFS="$save_ifs"
	IFS="$save_ifs"
       IFS="$save_IFS"
     IFS="$save_IFS"
      IFS="$save_mkdir_p_IFS"
	IFS="$save_mkdir_p_IFS"
  if (stale) { free ((void *) stale); stale = 0; } \
  if ((stat (path, &st) >= 0)
  if (stat (path, &st) >= 0)
      if (strcmp (argv[i], debug_opt) == 0)
      if (strcmp (argv[i], dumpscript_opt) == 0)
      if (strcmp (argv[i], ltwrapper_option_prefix) == 0)
      if (strcmp (str, pat) == 0)
      if (string[0] == '\0')
	# If $tagname still isn't set, then no tagged configuration
	if test "$age" -gt "$current"; then
	  if test "$alldeplibs" = yes &&
	  if test "$allow_undefined_flag" = unsupported; then
	    if test "$allow_undefined" = no; then
	if test "$allow_undefined" = yes; then
	  if test "$always_export_symbols" = yes || test -n "$export_symbols_regex"; then
	if test "$avoid_version" = yes && test "$need_version" = no; then
      if test "$build_libtool_libs" = convenience; then
	if test "$build_libtool_libs" = module; then
    if test "$build_libtool_libs" != yes && test "$build_old_libs" != yes; then
	      if test "$build_libtool_libs" = yes && test "$dlopen_support" = yes; then
		    if test "$build_libtool_libs" = yes && test "$dlopen_support" = yes; then
	  if test "$build_libtool_libs" = yes && test -z "$link_static_flag"; then
        if test "$build_libtool_libs" != yes; then
      if test "$build_libtool_libs" = yes; then
      if test "$build_libtool_libs" != yes; then
    if test "$build_libtool_libs" = yes; then
	if test "$build_libtool_libs" = yes; then
	    if test "$build_libtool_need_lc" = "yes"; then
	      if test "$build_old_libs" = no; then
	    if test "$build_old_libs" = no; then
      if test "$build_old_libs" = yes && test "$build_libtool_libs" != convenience ; then
    if test "$build_old_libs" = yes; then
	if test "$build_old_libs" = yes; then
    if test "$compiler_c_o" = no; then
      if test "$compiler_c_o" = yes; then
	    if test "$compiler_needs_object" = yes; then
      if test -d "$dir"; then
	  if test "$deplibs_check_method" != pass_all; then
	if test "$deplibs_check_method" != pass_all; then
	    if test "$dlself" = no; then
	if test "$dlself" = yes; then
      if test ! -d "$my_tmpdir"; then
      if test -d "$opt"; then
    if test ! -d \"\$progdir\"; then
	if test "$droppeddeps" = yes; then
    if test "$?" -eq 0 && test -n "${func_convert_core_file_wine_to_w32_tmp}"; then
    if test "$export_dynamic" = yes && test -n "$export_dynamic_flag_spec"; then
		    if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
		  if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
    if test -f "$1" && test -r "$1" && exec 5<&0 <"$1"; then
		    if test -f "$absdir/$objdir/$depdepl" ; then
	  if test -f "$arg"; then
	  if test "$fast_install" = no && test -n "$relink_command"; then
	if test "$fast_install" != no; then
	    if test "$fast_install" = yes && test -n "$relink_command"; then
	    if test "$fast_install" = yes; then
	  if test "$fast_install" = yes; then
	if test "$fast_install" = yes; then
	  if test ! -f "$dir/$dlname"; then
	if test -f "$dir/$objdir/$dlname"; then
      if test -f /etc/ld.so.conf; then
	    if test ! -f "$file"; then
		*) if test ! -f "$gentop/$newobj"; then break; fi ;;
	      if test "$finalize" = yes; then
	  if test ! -f "$ladir/$objdir/$linklib" && test -f "$abs_ladir/$linklib"; then
	      if test -f "$lib"; then
	    if test -f "$lib"; then
      if test -f "$lockfile"; then
	  if test ! -f "$lt_sysroot$libdir/$linklib" && test -f "$abs_ladir/$linklib"; then
	  if test -f "$nlist"S; then
	if test "$found" = yes || test -f "$lib"; then :
	  if test "$found" != yes; then
	  if test -f "$output_objdir/$my_outputname.def"; then
	    if test -f "$output_objdir/$newlib"; then :; else
	if test -f "$output_objdir/${outputname}S.${objext}"; then
	    if test -f "$output_objdir/$soname-def"; then :
  if test ! -f \"\$progdir/\$program\" ||
  if test -f \"\$progdir/\$program\"; then"
    if test "$func_normal_abspath_tpath" = / ; then
  if test "$#" -gt 0; then
	  if test "$#" -gt 0; then
      if test "$hardcode_action" = relink; then
      if test "$hardcode_automatic" = yes ; then
	      if test "$hardcode_direct" = no; then
	  if test "$hardcode_direct" != unsupported; then
	      if test "$hardcode_direct" = yes &&
	      if test "$hardcode_direct" != yes &&
	    if test "$hardcode_direct" = yes &&
	if test "$hardcode_into_libs" != yes || test "$build_old_libs" = yes; then
	if test "$hardcode_into_libs" = yes; then
	  if test "$installed" = no && test "$need_relink" = yes; then
	    if test "$installed" = no; then
	  if test "$installed" = yes; then
    if test "$isdir" = yes; then
		  if test "$k" -eq 1 ; then
	if test "$len" -lt "$max_cmd_len" || test "$max_cmd_len" -le -1; then
	    if test "$len" -lt "$max_cmd_len"; then
      if { test -L "$file"; } >/dev/null 2>&1 ||
	    if test "$lib_linked" != yes; then
    if test \"\$libtool_execute_magic\" != \"$magic\"; then
  if test \"\$libtool_execute_magic\" != \"$magic\"; then
if test \"\$libtool_install_magic\" = \"$magic\"; then
	  if test "$link_all_deplibs" != no || test -z "$library_names" ||
	  if test "$link_all_deplibs" != no; then
	    if test "$linkalldeplibs" = yes; then
	  if test "$linkmode" = lib &&
	  if test "$linkmode" != lib && test "$linkmode" != prog; then
    if test "$linkmode" = lib; then
	    if test "$linkmode" = lib ; then
	  if test "$linkmode" = lib; then
	if test "$linkmode" = lib; then
      if test "$linkmode,$pass" = "lib,dlpreopen"; then
      if test "$linkmode,$pass" = "lib,link" ||
	if test "$linkmode,$pass" = "lib,link" ||
      if test "$linkmode,$pass" = "lib,link"; then
	    if test "$linkmode,$pass" = "prog,link"; then
	  if test "$linkmode,$pass" = "prog,link"; then
		    if test "$linkmode,$pass" = "prog,link"; then
	if test "$linkmode,$pass" = "prog,link"; then
	if test "$linkmode,$pass" != "prog,link"; then
    if test "$linkmode" = prog || test "$linkmode" = lib; then
	  if test "$linkmode" = prog || test "$opt_mode" = relink; then
	  if test "$linkmode" = prog || test "$opt_mode" != relink; then
	if test "$linkmode" = prog && test "$pass" != link; then
      if test "$linkmode" = prog; then
    if test "$linkmode" = prog; then
	    if test "$linkmode" = prog; then
	if test "$linkmode" = "prog"; then
    if test "$lock_old_archive_extraction" = yes; then
	if test "$module" = yes || test "$export_dynamic" = yes; then
	  if test "$module" = yes && test -n "$module_cmds" ; then
	if test "$module" = yes && test -n "$module_cmds" ; then
	    if test "$module" = yes; then
	  if test "$module" = yes; then
      if test "$my_status" -eq 0; then :; else
  if test -n "$1"; then
	if test -n "$1"; then
      if test -n "$addlibs"; then
	    if test -n "$add_shlibpath"; then
	      if test -n "$a_deplib" ; then
      if test -n "$admincmds"; then
      if test -n "$arg2"; then
      if test -n "$arg"; then
    if test -n "$available_tags" && test -z "$tagname"; then
      if test -n "$compile_shlibpath$finalize_shlibpath"; then
	  if test -n "$convenience" && test -n "$whole_archive_flag_spec"; then
      if test -n "$convenience"; then
	  if test -n "$convenience"; then
	if test -n "$convenience"; then
    if test -n "$current_libdirs"; then
	        if test -n "$curr_lafile" && func_lalib_p "$curr_lafile"; then
	  if test -n "$darwin_arches"; then
	if test -n "$delfiles"; then
	  if test -n "$dependency_libs" &&
		  if test -n "$deplibrary_names" ; then
	if test -n "$destname"; then
      if test -n "$dest"; then
      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
    if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
	    if test -n "$dllsearchpath"; then
	if test -n "$dllsearchpath"; then
	      if test -n "$dlname"; then
	    if test -n "$dlname"; then
	          if test -n "$dlprefile_dlbasename" ; then
	          if test -n "$dlprefile_dlname" ; then
	if test -n "$dlprefiles"; then
    if test "$?" -ne 0; then
	if test "$need_lib_prefix" != no; then
      if test "$need_locks" != no; then
      if test "$need_locks" = warn &&
    if test "$need_locks" = yes; then
        if test "$need_relink" = no || test "$build_libtool_libs" != yes; then
	  if test "$need_version" = no; then
	  if test -n "$exclude_expsyms"; then
if test -n "$exec_cmd"; then
	    if test -n "$export_symbols_regex" && ${skipped_export-false}; then
	    if test -n "$export_symbols_regex" && test "X$skipped_export" != "X:"; then
	  if test -n "$export_symbols_regex"; then
	    if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
	  if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
	if test -n "$export_symbols" || test -n "$export_symbols_regex"; then
	    if test -n "$export_symbols" && test -n "$include_expsyms"; then
	if test -n "$export_symbols" && test -n "$include_expsyms"; then
	    if test -n "$export_symbols" && test -n "$module_expsym_cmds"; then
	  if test -n "$export_symbols" && test -n "$module_expsym_cmds"; then
	  if test -n "$export_symbols" && test -z "$export_symbols_regex"; then
		if test -n "$file_magic_glob"; then
	if test -n "$finalize_perm_rpath"; then
      if test -n "$finalize_shlibpath"; then
    if test -n "$finish_cmds$finish_eval" && test -n "$libdirs"; then
	if test -n "$finish_cmds"; then
	if test -n "$finish_eval"; then
      if test -n "$func_convert_core_file_wine_to_w32_result" ; then
      if test -n "$gentop"; then
	if test -n "$gentop"; then
      if test -n "$hardcode_libdir_flag_spec"; then
	    if test -n "$hardcode_libdir_flag_spec"; then
	if test -n "$hardcode_libdir_flag_spec"; then
      if test -n "$hardcode_libdir_separator" &&
	  if test -n "$hardcode_libdir_separator" &&
	      if test -n "$hardcode_libdir_separator"; then
	  if test -n "$hardcode_libdir_separator"; then
	if test -n "$inherited_linker_flags"; then
    if test -n "$install_override_mode" && $no_mode; then
	      if test -n "$inst_prefix_dir" &&
	      if test -n "$inst_prefix_dir"; then
	  if test -n "$inst_prefix_dir"; then
		if test -n "$inst_prefix_dir"; then
		  if test -n "$i" ; then
		if test -n "$i" ; then
	if test -n "$i" ; then
	      if test -n "$last_robj"; then
	    if test -n "$libdir" && test ! -f "$libfile"; then
      if test -n "$libobjs" && test "$build_old_libs" = yes; then
	  if test -n "$library_names" &&
	if test -n "$library_names" &&
	    if test -n "$library_names"; then
    if test -n "$libs"; then
	  if test -n "$link_static_flag"; then
	if test -n "$link_static_flag"; then
  if test -n "$LT_CYGPATH" && test -f "$LT_CYGPATH"; then
      if test -n \"\$lt_option_debug\"; then
  if test -n \"\$lt_option_debug\"; then
      if test -n "$lt_sysroot"; then
    if test -n "$my_directory_path" && test "$opt_dry_run" != ":"; then
    if test -n "$my_dlsyms"; then
      if test -n "$NM" && test -n "$global_symbol_pipe"; then
	  if test -n "$non_pic_object" &&
      if test -n "$objs"; then
      if test "$no_install" = yes; then
	  if test -n "$old_archive_from_expsyms_cmds"; then
      if test -n "$old_archive_from_new_cmds" && test "$build_libtool_libs" = yes; then
	if test -n "$old_library" &&
	      if test -n "$old_library"; then
	    if test -n "$old_library"; then
    if test "$nonopt" = "$SHELL" || test "$nonopt" = /bin/sh ||
	  if test "$non_pic_object" != none; then
		if test "$non_pic_object" != none; then
    if test -n "$opt_dlopen" && test "$opt_mode" != execute; then
	    if test -n "$orig_export_symbols"; then
      if test -n "$output_obj" && test "X$output_obj" != "X$lobj"; then
      if test -n "$output_obj" && test "X$output_obj" != "X$obj"; then
	if test -n "$perm_rpath"; then
      if test -n "$pic_flag" || test "$pic_mode" != default; then
	  if test -n "$pic_object" &&
      if test -n "$postlink_cmds"; then
	if test -n "$postlink_cmds"; then
      if test -n "$prelink_cmds"; then
      if test -n "$prev"; then
	if test -n "$prev"; then
      if test -n "$relink_command"; then
    if test -n \"\$relink_command\"; then
	if test -n "$relink_command"; then
	if test -n "$rpath"; then
      if test -n "$rpath$xrpath"; then
	  if test -n "$runpath_var" && test -n "$perm_rpath"; then
      if test -n "$runpath_var"; then
	  if test -n "$save_libobjs" && test "X$skipped_export" != "X:" && test "$with_gnu_ld" = yes; then
	    if test -n "$save_libobjs"; then
	if test -n "$shlibpath"; then
	    if test -n "$shlibpath_var" && test -z "$avoidtemprpath" ; then
      if test -n "$shlibpath_var"; then
    if test -n "$shlibpath_var"; then
	if test -n "$soname_spec"; then
      if test -n "$stripme" && test -n "$old_striplib"; then
	  if test -n "$tstripme" && test -n "$striplib"; then
	  if test -n "$whole_archive_flag_spec" &&
	  if test -n "$whole_archive_flag_spec"; then
	if test -n "$whole_archive_flag_spec"; then
      if test -n "$xrpath"; then
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then
	      if test "$obj" = "$last_oldobj" ; then
    if test "$opt_dry_run" = ":"; then
  if test "$opt_help" = :; then
      if test "$opt_mode" = clean; then
	if test "$opt_mode" = clean ; then
      if test "$opt_mode" != relink; then
	    if test "$opt_mode" = relink; then
		if test "$opt_mode" = relink; then
	if test "$opt_mode" = relink; then
  if test "$package_revision" != "$macro_revision"; then
	    if test "$pass" = conv; then
	  if test "$pass" = conv; then
	if test "$pass" = conv; then
	if test "$pass" != conv; then
      if test "$pass" = dlopen; then
      if test "$pass" != dlopen; then
	if test "$pass" = dlopen; then
	    if test "$pass" = dlpreopen || test "$dlopen_support" != yes || test "$build_libtool_libs" = no; then
      if test "$pass" = dlpreopen; then
	if test "$pass" = dlpreopen; then
      if test "$pass" = link; then
	    if test "$pass" != link; then
	  if test "$pass" = link; then
	    if test "$pass" = scan; then
    if test "$pic_mode" = no && test "$deplibs_check_method" != pass_all; then
      if test "$pic_mode" != no; then
      if test "$pic_mode" != yes; then
	  if test "$pic_object" != none; then
		if test "$pic_object" != none; then
	  if test "$preload" = no; then
	  if test "$preload" = yes && test -f "$symfileobj"; then
	    if test "$prev" = dlfiles; then
		  if test "$prev" = dlfiles; then
	if test "$prev" = dlfiles; then
	    if test "$prev" = dlprefiles; then
		  if test "$prev" = dlprefiles; then
	  if test "$prev" = rpath; then
	  if test "$realname" != "$linkname"; then
		if test "$search_ext" = ".la"; then
	    if test "$shlibpath_overrides_runpath" = yes && test -n "$shlibpath_var" && test -n "$temp_rpath"; then
	if test "$shlibpath_overrides_runpath" = yes && test -n "$shlibpath_var" && test -n "$temp_rpath"; then
      if test "$suppress_opt" = yes; then
	if test "$tagname" = CXX ; then
    if test \"\$thisdir\" = \".\"; then
	if test "$thread_safe" = yes && test -n "$thread_safe_flag_spec"; then
	      if test "$try_normal_branch" = yes \
	if test "$use_static_libs" = built && test "$installed" = yes; then
	      if test "$valid_a_lib" != yes; then
    if test "$VERSION" != "$macro_version"; then
		  if test "$want_nocaseglob" = yes; then
  if test \"\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\" = \"yes\"; then
      if test "$wrappers_required" = no; then
    if test "x$1" != "x$2"; then
	      if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
	    if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
	  if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
		  if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
		if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
	if test "X$arg" = "X-export-symbols"; then
	if test "X$arg" = "X-lc" || test "X$arg" = "X-lm"; then
	      if test "x$bindir" != x ;
	      if test "x$build" = "x$host" ; then
	    if test "X$deplibs_check_method" = "Xnone"; then
    if test \"x\$destdir\" != \"x\$file\"; then
	if test "X$destdir" = "X$libdir"; then
      if test "X$dir" = X.; then
		      if test "X$dlopenmodule" != "X$lib"; then
	    if test "X$dlpremoduletest" = "X$lib"; then
        if test "x$func_relative_path_tlibdir" = x ; then
  if test "x$func_stripname_result" != x ; then
	if test "X$installed" = Xyes; then
		  if test "X$ll" = "X$old_library" ; then # only static version available
	  if test "X$lt_irix_increment" = "Xno"; then
	    if test "X$my_pic_p" != Xno; then
	    if test "X$noexename" != "X$name" ; then
		if test "X$objlist" = X ||
	  if test "X$oldobjs" = "X" ; then
    if test "X$opt_dry_run" = Xfalse; then
	       if test "X$precious_files_regex" != "X"; then
	  if test "x$prev" = x-m && test -n "$install_override_mode"; then
	    if test "x`$SED 1q $export_symbols`" != xEXPORTS; then
	if test "X$skipped_export" != "X:" &&
	if test "X$skipped_export" != "X:" && test -n "$orig_export_symbols"; then
    if test -z "$1"; then
  if test -z "$2" && test -n "$1" ; then
  if test -z "$4" && test -n "$3"; then
		  if test -z "$absdir"; then
	  if test -z "$abs_ladir"; then
	  if test -z "$convenience" || test -z "$whole_archive_flag_spec"; then
                      if test -z "$darwin_install_name"; then
      if test -z "$dest"; then
	  if test -z "$dlname" ||
	if test -z "$dlname"; then
	  if test -z "$dlopenmodule" && test "$shouldnotlink" = yes && test "$pass" = link; then
	  if test -z "$export_symbols"; then
	if test -z "$export_symbols"; then
    if test -z "$files"; then
        if test -z "$func_convert_core_path_wine_to_w32_result"; then
      if test -z "$func_normal_abspath_result" ; then
        if test -z "$func_relative_path_result"; then
  if test ! -z "$func_relative_path_result"; then
	if test -z "$func_stripname_result"; then
	      if test -z "$global_symbol_pipe"; then
	    if test -z "$global_symbol_pipe"; then
	    if test -z "$hardcode_libdirs"; then
		if test -z "$hardcode_libdirs"; then
	    if test -z "$install_libdir"; then
	  if test -z "$libdir" && test "$linkmode" = prog; then
	  if test -z "$libdir"; then
	if test -z "$libdir"; then
      if test -z "$libobj"; then
	if test -z "$linklib"; then
      if test -z "$macro_version"; then
	    if test -z "$old_library"; then
			if test -z "$old_library" ; then
      if test -z "$output_obj"; then
	  if test -z "$pic_flag" && test -n "$link_static_flag"; then
	  if test -z "$pic_object" ||
		if test -z "$pic_object" ||
	    if test -z "$pic_object" || test "$pic_object" = none ; then
		  if test -z "$pic_object" || test "$pic_object" = none ; then
		if test -z "$potlib" ; then
      if test -z "$rpath"; then
	if test -z "$tagname"; then
  if test -z "$to_host_path_cmd"; then
	if test -z "$vinfo" && test -n "$release"; then
	    if test -z "$whole_archive_flag_spec"; then
	# If the file is missing, and there is a .exe on the end, strip it
        # If the last portion added has no slash in it, the list is done
		    # if the lib is a (non-dlopened) module then we can not
	    # If the library has no export list, then create one now
	# If the library was installed with an old release of libtool,
If the OUTPUT-FILE ends in \`.la', then a libtool library is created,
	    # If the PIC object exists, use it instead.
		  # If the PIC object exists, use it instead.
	# If the previous option needed an argument, then skip it.
      # If the previous option needs an argument, assign it.
	    # If there is no dlname, no dlopen support or we're linking
	      # If there is no dlopen support or we're linking statically,
    # If there was a directory component, then change thisdir.
	# If the user specified any rpath flags, then add them.
    # If the user specifies -o file.o, it is replaced with file.lo
# If this variable is set in any of the actions, the command in it
  if (tmp_pathspec == 0)
  if (tmp_pathspec == NULL)
      if (to_end)
		    if /usr/bin/file -L $add 2> /dev/null |
      # If we ascended to the root using ".." the result may be empty now.
      # if we don't check for them as well.
      # If we're not building shared, we need to use non_pic_objs
      # If we're not in dry-run mode, bomb out on failure
  if ((wrapper == NULL) || (*wrapper == '\0'))
# if you distribute this file as part of a program or library that
	  # Ignore non-libtool-libs
	    immediate | unsupported)
	# I'm not sure if I'm treating the release correctly.  I think
# Implementation must be kept synchronized with func_dirname
	  # implementing what was already the behavior.
    *import*) : ;;
# import library ARG.
      import*)  win32_libid_type="x86 archive import";;
    /^In archive [^:]*:/d
# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result
# in $build's $PATH.
#include <assert.h>
#include <ctype.h>
# include <direct.h>
#include <errno.h>
include_expsyms=""
	      # include_expsyms logic still works.
#include <fcntl.h>
#  include <io.h>
# include <io.h>
#include <malloc.h>
# include <process.h>
#include <stdarg.h>
# include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/stat.h>
# include the following information:
# include <unistd.h>
    # Including no sysroot.
# incorporate the script contents within a cygwin/mingw
# In each case, ARG is the path to be converted from $build to $host format.
	  # In fact, it would be nice if we could use this code for all target
# Infer tagged configuration to use if any are available and
      /information about other modes/d
# in func_to_host_file_result.
# in func_to_host_path_result.
	inherited_linker_flags=
inherited_linker_flags='$new_inherited_linker_flags'
inherit_rpath=
inherit_rpath=no
# in input to double_quote_subst, that '$' was protected from expansion.
	  # initialize k to one.
		      i, nonnull (newargz[i]));
      # in scan sets, so we specify it separately.
      install)
	# install
INSTALL-COMMAND is the installation command.  The first component should be
      *) install_cp=false ;;
installed=$installed
      # installed libraries to the beginning of the library search list
	installed=yes
Install executables or libraries.
	# Install (i.e. copy) a libtool object.
install|instal|insta|inst|ins|in|i)
#         install            install libraries or executables
      install_libdir="$1"
  # install mode needs the following variables:
install_override_mode=""
      install_prog=
    # install_prog (especially on Windows NT).
      install_prog="$func_quote_for_eval_result "
      install_prog+=" $func_quote_for_eval_result"
    install_prog+="$func_quote_for_eval_result"
      install_shared_prog+=" $func_quote_for_eval_result"
    install_shared_prog=$install_prog
	install_shared_prog+=" -m $func_quote_for_eval_result"
	    # Install the binary that we compiled earlier.
	# Install the libtool object if requested.
	# Install the old object if enabled.
	# Install the pseudo-library for information purposes.
	  # Install the shared library and build the symlinks.
    install_type=
   Instead it simply concatenates the arguments, separated by ' ', and calls
	instname="$dir/$name"i
	inst_prefix)
      -inst-prefix-dir)
    inst_prefix_dir=
	  inst_prefix_dir="$arg"
	  inst_prefix_dir=`$ECHO "$destdir" | $SED -e "s%$libdir\$%%"`
  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation
      int add_len = strlen (add);
int check_executable (const char *path);
   interprets characters like ' ', '\t', '\\', '"' (but not '<' and '>') in a
  int has_slash = 0;
  int has_symlinks = 0;
# in (the comma separated) LAZY, no conversion takes place.
  int i;
    int len = strlen (name) + 1 + strlen (value) + 1;
      int len = strlen (new_value);
	       int line, const char *mode,
	  int main() { return 0; }
int make_executable (const char *path);
  int  newargc;
    # into '.;' and ';.', and winepath ignores them completely.
      int orig_value_len = strlen (orig_value);
into their corresponding uninstalled binary, and any of their required library
# into the library and all subsequent libraries and executables linked
# into the resulting binary.
  intptr_t rval = 127;
int putenv (char *);
int _putenv (const char *);
	  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);
  int rval = 0;
int setenv (const char *, const char *, int);
  int tmp_len;
# Invoked by eval'ing the libtool variable
# invoked via `$to_host_file_cmd ARG'
# invoked via `$to_host_path_cmd ARG'
# Invoke $ECHO with all args, space-separated.
# in which we disable both kinds of libraries.  Given conflicting
	  irix|nonstopux)
	irix | nonstopux)
# is built using GNU Libtool, you may include this file under the
  # is contrary to our usage.  Disable this feature.
is created, otherwise an executable program is created."
    isdir=no
# is double-quoted, suitable for a subsequent eval, whereas
# is given, then evaluate it.
# is given, then evaluate it.  Use the saved locale for evaluation.
	      # is implicitly linked in more than once by the
# is ksh but when the shell is invoked as "sh" and the current value of
	  # is not unsupported.  This is valid on all known static and
	      # isn't a blessed tool.
	  # isn't a blessed tool.
# Is shlibpath searched before the hard-coded library search path?
# Is the compiler the GNU compiler?
	  # Is there a better way of finding the last object in the list?
# Is this an already installed library?
# it an absolute path.
# it depends on a number of variable set therein.
	    # It is a libtool convenience library, so add in its objects.
      # It is impossible to link a dll without this setting, and
# It is necessary for linking the library.
# it under the terms of the GNU General Public License as published by
	# it will not redefine variables installed, or shouldnotlink
      # Join marker and all lines until next marker into a single line
	      # Just accumulate the unique libdirs.
		  # Just accumulate the unique libdirs.
	# Just add the directory containing the .lo file.
      # Just move the object if needed
      # Just move the object if needed, then go on to compile the next one
	    # Just print a warning and add the library to dependency_libs so
	        # Keep a list of preopened convenience libraries to check
    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.
/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */
		  k=$func_arith_result
      -l*)
	      -l*)
	    -l*)
	  ;; # -l
      -L*)
	      -L*)
	    -L*)
	  ;; # -L
      *.la)
    *.la)
	      *.la)
	  *.la) ;;
		    ladir="$func_dirname_result"
	ladir="$func_dirname_result"
	  *.la)	func_source "$func_resolve_sysroot_result" ;;
    lalib_p=no
    *.la) linkmode=lib ;;
      -* | *.la | *.lo ) ;;
	  *.la | *.lo) ;;  # We handle these cases below.
	laname="$func_basename_result"
LANGUAGE=C
	  lastarg=
	lastarg="$arg"
	  lastarg=$func_stripname_result
	  lastarg="$srcfile"
	      # last copy.  This is not always right, but it is rare
	    last_oldobj=$obj
	  last_robj=
		  last_robj=$output_objdir/$output_la-${k}.$objext
      # Last step: remove runtime libs from dependency_libs
    later=
	  later+=" $arg"
# launches target application with the remaining arguments.
      -L[A-Z][A-Z]*:*)
LC_ALL=C
	    ldd_output=`ldd conftest`
		  ldd_output=`ldd conftest`
# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
# ldd/readelf like tool for Mach-O binaries on Mac OS X.
	*" -L$dir "* | *" $arg "*)
      # LD_LIBRARY_PATH before the program is installed.
LD="/usr/bin/ld"
	  *\$LD\ *) wl= ;;
# left over by shells.
	      len0=$func_len_result
	  len0=$func_len_result
	    len=$func_arith_result
		  len=$func_arith_result
		len=$func_arith_result
	   len=$func_len_result &&
		  len=$func_len_result
	len=$func_len_result
	      length++;
	    length++;
	  length = 0;
	    length += backslashes + 1;
		length += backslashes + 1;
	      len=$len0
	  len=$len0
  len = strlen (str);
              -L*) func_stripname '-L' '' "$deplib"
	    -L*) func_stripname '-L' '' "$deplib"
      lib*)
    lib)
	*" $lib "*) ;;
	  lib="$destdir/$realname"
	      *" $libdir "*) ;;
	      *":$libdir:"*) ;;
	    *" $libdir "*) ;;
	    libdir=
	  *" $libdir "*) ;;
	  *":$libdir:"*) ;;
		*":$libdir:"*) ;;
	libdir=
	    libdir="$abs_ladir"
		libdir=$func_replace_sysroot_result
	    libdir="$hardcode_libdirs"
	libdir="$hardcode_libdirs"
libdir='$install_libdir'"
	libdir=LIBDIR
    libdirs=
	libdirs+=" $opt"
      *.$libext)
	  ;; # *.$libext
	*.$libext)
libext=a
    *.$libext) linkmode=oldlib ;;
	    libfile="$libdir/"`$ECHO "$lib" | $SED 's%^.*/%%g'` ### testsuite: skip nested quoting test
	  lib=$func_resolve_sysroot_result
		    lib=$ladir/$old_library
	    *) lib_linked=no ;;
		lib_linked=no
	    lib_linked=yes
	    libname=`eval "\\$ECHO \"$libname_spec\""`
		    libname=`eval "\\$ECHO \"$libname_spec\""`
		  libname=`eval "\\$ECHO \"$libname_spec\""`
		libname=`eval "\\$ECHO \"$libname_spec\""`
	  libname=$func_stripname_result
		  libnameglob=`func_echo_all "$libname" | $SED -e $file_magic_glob`
		  libnameglob=$libname
	libname=$libname_save
	libname_save=$libname
libname_spec="lib\$name"
    libobj=
	libobj=
	libobj="$arg"
	libobj="$func_basename_result"
      libobj=$func_xform_result
	libobj=$output
    libobjs=
	    libobjs+=" $func_extract_archives_result"
	  libobjs+=" $func_extract_archives_result"
		libobjs=$nm_file_list_spec$func_to_tool_file_result
	  libobjs+=" $objs"
	      libobjs=$output
	  libobjs=$output
	    libobjs+=" $pic_object"
		  libobjs+=" $pic_object"
    libobjs_save="$libobjs"
		libobjs=$save_libobjs
      libobjs+=" $symfileobj"
	lib="$output_objdir/$realname"
                    libraries must be found in the PATH setting at runtime)
     libraries must come first. */
	# libraries must come first.
   libraries that it depends on are installed.
# libraries that it depends on are installed.
# Libraries that this one depends upon.
# library is relocated.
      library_names=
		  library_names=
	library_names=
library_names='$library_names'
library_names_spec="\${libname}\${release}\${shared_ext}\$versuffix \${libname}\${release}\${shared_ext}\$major \$libname\${shared_ext}"
library object suffix, \`.lo'."
# Library versioning type.
    libs=
      libs+=" $deplib"
	libs="$deplibs"
	  libs="$deplibs %DEPLIBS%"
	libs="$dlprefiles"
	      lib="$searchdir/lib${name}${search_ext}"
	  lib_search_path=
	    *) lib_search_path+=" $dir" ;;
	  lib_search_path+=" $dir"
      #	lib_search_path=`$ECHO "$lib_search_path " | $SED "s% $path % %g"`
    lib_search_path=`pwd`
	  libs+=" $opt"
      libs="$predeps $libs $compiler_lib_search_path $postdeps"
      libtool_args+=" $func_quote_for_eval_result"
    libtool_args=$nonopt
    libtool_execute_magic="$magic"
# libtool (GNU libtool) 2.4.2
    libtool_install_magic="$magic"
# libtool processes, and avoids race conditions if possible.  If
# libtool - Provide generalized library-building support services.
	  # libtool variables, so we have to hard-code the OSs to which it
# Libtool was configured on host roseapple:
	  # Like Linux, but with the current version available in
	  # limits. Maybe even breaks it.  We compile a program, linking it
	# line option must be used.
      link)
		    # link against it, someone is ignoring the earlier warnings
	  # Link against this library
link_all_deplibs=
	  linkalldeplibs=no
link_all_deplibs=no
	    linkalldeplibs=yes
	link_command="$compile_command$compile_rpath"
	  link_command="$compile_var$compile_command$compile_rpath"
	link_command="$compile_var$compile_command$compile_rpath"
	link_command=`$ECHO "$link_command" | $SED 's%@OUTPUT@%'"$output"'%g'`
      link_command=`$ECHO "$link_command" | $SED 's%@OUTPUT@%'"$output_objdir/$outputname"'%g'`
	  link_command="$finalize_var$compile_command$finalize_rpath"
LINK-COMMAND is a command using the C compiler that you would use to create
#         link               create a library or an executable
	  # linked before any other PIC object.  But we must not use
    linker_flags=
		      linker_flags+=" -dylib_file ${darwin_install_name}:${depdepl}"
	  linker_flags+=" $flag"
	  linker_flags+=" $func_quote_for_eval_result"
	  linker_flags+=" $qarg"
# Linker flags that can not go in dependency_libs.
#         linker:		$LD (gnu? $with_gnu_ld)
	      # Linker will automatically link against shared library if both
	    # Linking convenience modules into shared libraries is allowed,
	linklib=
	    linklib="$l"
	    linklib=$newlib
	  linklib=$old_library
link|lin|li|l)
    *) linkmode=prog ;; # Anything else should be a program.
	linknames=
	  linknames+=" $link"
Link object files or libraries together to form another library, or to
link_static_flag=""
link_static_flag="-static"
	link_static=no # Whether the deplib will be linked statically
	    link_static=yes
	  # Link the convenience library
	# Link the dlpreopened libraries before other libraries
	# Link the executable and exit
	linux) # correct to gnu/linux during the next big refactor
	      $LIPO -create -output "$darwin_file" $darwin_files
	      $LIPO -thin $darwin_arch -output "unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}" "${darwin_archive}"
	# list incase some portion of path contains whitespace.
# List of archive names.  First name is the real one, the rest are links.
      *\ -l* | *\ -L*)
  -LLIBDIR          search LIBDIR for required installed libraries
		    ll="$l"
  -lNAME            OUTPUT-FILE requires the installed library libNAME
	    -L*) new_libs="$deplib $new_libs" ;;
LN_S="ln -s"
      *.lo)
	*.lo) ;;
lo2o="s/\\.lo\$/.${objext}/"
    lobj=${xdir}$objdir/$objname
# Local Variables:
	  # location b/c this prevents finding dependent libraries that
      lockfile=
      lockfile=$f_ex_an_ar_oldlib.lock
      lockfile="$output_obj.lock"
lock_old_archive_extraction=no
    # Lock this critical section if it is needed
    *.lo) func_lo2o "$libobj"; obj=$func_lo2o_result ;;
      *.lo) func_lo2o_result=${1%.lo}.${objext} ;;
	*.lo | *.$objext)
    *.lo | *.$objext) linkmode=obj ;;
	  loop=$age
		      # loop can be closed while we follow links,
	    loop=$func_arith_result
	      # Loop over the list of objects to be linked.
	  loop=$revision
	    # Loop through the commands generated above and execute them.
	      -L*) path="$deplib" ;;
	  *" -L$path/$objdir "*)
	*" -L$path/$objdir "*) ;;
      --lt-*) ;;
    --lt-*)
  *\\ --lt-*)
  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);
		      lt_argv_zero, nonnull (strerror (errno)));
LTCC="cc"
# LTCC compiler flags.
LTCC="gcc"
	      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource
LTCFLAGS="-Wall -g -O2"
    # LT_CYGPATH in this case.
          lt_debug = 1;
    --lt-debug) lt_option_debug=1 ;;
lt_debugprintf (const char *file, int line, const char *fmt, ...)
      lt_debugprintf (__FILE__, __LINE__,
  lt_debugprintf (__FILE__, __LINE__,
  lt_debugprintf (__FILE__, __LINE__, "(check_executable): %s\n",
  lt_debugprintf (__FILE__, __LINE__, "(find_executable): %s\n",
  lt_debugprintf (__FILE__, __LINE__, "libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\n");
  lt_debugprintf (__FILE__, __LINE__, "(main) argv[0]: %s\n", argv[0]);
  lt_debugprintf (__FILE__, __LINE__, "(main) lt_argv_zero: %s\n",
      lt_debugprintf (__FILE__, __LINE__, "(main) newargz[%d]: %s\n",
  lt_debugprintf (__FILE__, __LINE__, "(main) program_name: %s\n", program_name);
  lt_debugprintf (__FILE__, __LINE__, "(make_executable): %s\n",
LT_DLSYM_CONST lt_dlsymlist
} lt_dlsymlist;
  lt_dump_args_N=1;
    lt_dump_args_N=\`expr \$lt_dump_args_N + 1\`
        lt_dump_D=\`\$ECHO \"X\$lt_script_arg0\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\`
        lt_dump_F=\`\$ECHO \"X\$lt_script_arg0\" | $SED -e 's/^X//' -e 's%^.*/%%'\`
    --lt-dump-script)
	  lt_dump_script (stdout);
# --lt-dump-script. There is, deliberately, no --lt-help.
_LTECHO_EOF'
  lt_error_core (EXIT_FAILURE, file, line, "FATAL", message, ap);
lt_error_core (int exit_status, const char *file,
	    lt_exit=$?
		lt_exit=$?
lt_extend_str (const char *orig_value, const char *add, int to_end)
lt_fatal (const char *file, int line, const char *message, ...)
          lt_fatal (__FILE__, __LINE__,
      lt_fatal (__FILE__, __LINE__,
	  lt_fatal (__FILE__, __LINE__,
    lt_fatal (__FILE__, __LINE__, "couldn't find %s", argv[0]);
    lt_fatal (__FILE__, __LINE__, "getcwd failed: %s",
		    lt_fatal (__FILE__, __LINE__, "getcwd failed: %s",
    lt_fatal (__FILE__, __LINE__, "memory exhausted");
	*.ltframework)
	    lt_irix_increment=no
    ltlibs=
lt_${my_prefix}_LTX_preloaded_symbols[] =
lt_${my_prefix}_LTX_preloaded_symbols[];
lt_option_debug=
      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe
      lt_replace_pathsep_chars="s|$1|$2|g"
lt_safe_locale=
	  lt_safe_locale=\"$lt_var=C; \$lt_safe_locale\"
  lt_script_arg0=\$0
lt_sed_naive_backslashify='s|\\\\*|\\|g;s|/|\\|g;s|\\|\\\\|g'
  lt_setenv ("BIN_SH", "xpg4"); /* for Tru64 */
lt_setenv (const char *name, const char *value)
  lt_setenv ("DUALCASE", "1");  /* for MSK sh */
      lt_setenv (name, new_value);
		  "(lt_setenv) setting '%s' to '%s'\n",
  ?*:"$lt_sysroot"*)
lt_sysroot=
$lt_unset CDPATH
		$lt_unset $lt_var
lt_unset=unset
lt_update_exe_path (const char *name, const char *value)
  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);
		  "(lt_update_exe_path) modifying '%s' by prepending '%s'\n",
lt_update_lib_path (const char *name, const char *value)
  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);
		  "(lt_update_lib_path) modifying '%s' by prepending '%s'\n",
lt_user_locale=
	  lt_user_locale=\"$lt_var=\\\$save_\$lt_var; \$lt_user_locale\"
          $lt_var=C
                $lt_var=\$save_$lt_var; export $lt_var
                    ltwrapper_option_prefix, argv[i]);
macro_revision=1.3337
macro_version=2.4.2
MAGIC_CMD=file
magic_exe="%%%MAGIC EXE variable%%%"
magic="%%%MAGIC variable%%%"
##    Main.    ##
		      "(main) failed to launch target \"%s\": %s\n",
                  "(main) found exe (after symlink chase) at: %s\n",
                  "(main) found exe (before symlink chase) at: %s\n",
main (int argc, char *argv[])
		  "(main) libtool target name: %s\n",
	  major=
	major=""
	  major=".$current"
	  major=.$func_arith_result
	  major=$func_arith_result
		major=$func_arith_result
	  major=.$major
	major=$major_save
	major_save=$major
	# Make a backup of the uninstalled library when relinking
        # ...make a list in topmost first order.  Use a colon delimited
	    # Make a new name for the extract_expsyms_cmds to use
# Make a temporary directory that won't clash with other running
make_executable (const char *path)
	  # Make executables depend on our current version.
: ${MAKE="make"}
		# make stdout use "unix" line endings
      # Make sure dlfiles contains only unique files that won't be dlpreopened
      # Make sure dlprefiles contains only unique files
# Make sure IFS has a sensible default
	  # Make sure lib_search_path contains only unique directories.
# Make sure the entire path to DIRECTORY-PATH is available.
	    # make sure the library variables are pointing to the new library
	      # Make sure the rpath contains only unique directories.
	    # Make sure the xrpath contains only unique directories.
		# Make sure we don't pick an alternate name that also
# Make sure we have an absolute path for reexecution:
	  # Make sure we have at least an empty file.
      # Make sure we only generate libraries of the form `libNAME.la'.
# Manifest tool.
MANIFEST_TOOL=":"
      # Many Bourne shells cannot handle close brackets correctly
      /^====MARK====/ b para
    /^====MARK====/p
  match_literal=`$ECHO "$1" | $SED "$sed_make_literal_regex"`
		match_pattern*)
	match_pattern*)
	  match_pattern_regex=`expr "$deplibs_check_method" : "$1 \(.*\)"`
		  match_pattern_regex=`expr "$deplibs_check_method" : "$1 \(.*\)"`
max_cmd_len=805306365
	# Maybe install the static library, too.
      # Maybe just do a dry run.
	# may have been created when compiling PIC objects.
		  memcpy (concat_name, p, p_len);
  memcpy (concat_name, tmp, tmp_len);
		  memcpy (concat_name, tmp, tmp_len);
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# metacharacters that are still active within double-quoted strings.
# Method to check whether dependent libraries are shared objects.
	# might have to extract them afterwards, e.g., when creating a
	      mingw*)
	      *mingw* | *cygwin* )
  *-*-mingw | *-*-os2* | *-cegcc*)
	  minor_current=$func_arith_result
        # mkdir can fail with a `File exist' error if two processes
: ${MKDIR="mkdir"}
        $MKDIR "$my_dir" 2>/dev/null || :
        $MKDIR "$my_tmpdir"
      $MKDIR \"\$progdir\"
      --mode)
# MODE-ARGS vary depending on the MODE.  When passed as first option,
      -model|-arch|-isysroot|--sysroot)
# `--mode=MODE' may be abbreviated as `MODE' or a unique abbreviation of that.
#       --mode=MODE          use operation mode MODE
# MODE must be one of the following:
# mode:shell-script
# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT
# modify it under the terms of the GNU General Public License as
      -module)
  -module           build a library that can dlopened
module_cmds=""
module_expsym_cmds=""
    module=no
	module=yes
	    moreargs=
#	      moreargs+=" $fil"
      /more detailed .*MODE/d
      # move library search paths that coincide with paths to not yet
      -msg_*)
    # ms-generated import library
      # -msg_* for osf cc
    *MS\ Windows\ PE\ Intel*)
      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC
      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \
	-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \
      -multi_module)
# Must ONLY be called from within func_mode_link because
# Must we lock files when doing compilation?
	  mv -f $tmpdir/tmp-la $lib
: ${MV="mv -f"}
	    $MV "$nlist"T "$nlist"
      $MV \"\$progdir/\$file\" \"\$progdir/\$program\"; }
    $MV \"\$progdir/\$file\" \"\$progdir/\$program\" 2>/dev/null ||
		    $MV "${realname}U" "$realname" )
		$MV "${realname}U" "$realname" )
      $MV "${write_libobj}T" "${write_libobj}"
        my_arg="$1" ;;
	my_arg=`$ECHO "$1" | $SED \
        my_arg="\"$my_arg\""
	    $my_cmd"
    my_cmd="$1"
    my_directory_path="$1"
        my_directory_path=`$ECHO "$my_directory_path" | $SED -e "$dirname"`
        -*) my_directory_path="./$my_directory_path" ;;
    my_dir_list=
      my_dir_list=`$ECHO "$my_dir_list" | $SED 's,:*$,,'`
        my_dir_list="$my_directory_path:$my_dir_list"
    my_dlsyms=
	my_dlsyms="${my_outputname}S.c"
/* $my_dlsyms - symbol resolution table for \`$my_outputname' dlsym emulation. */
    my_fail_exp="${2-:}"
    my_gentop="$1"; shift
    my_oldlibs=${1+"$@"}
    my_oldobjs=""
      my_oldobjs="$my_oldobjs "`find $my_xdir -name \*.$objext -print -o -name \*.lo -print | sort | $NL2SP`
    my_originator="$2"
  { \"$my_originator\", (void *) 0 },"
    my_outputname="$1"
    my_pic_p="${3-no}"
    my_prefix=`$ECHO "$my_originator" | sed 's%[^a-zA-Z0-9]%_%g'`
      my_status=$?
    my_template="${TMPDIR-/tmp}/${1-$progname}"
      my_tmpdir=`mktemp -d "${my_template}-XXXXXXXX" 2>/dev/null`
      my_tmpdir="${my_template}-$$"
        my_tmpdir="${my_template}-${RANDOM-0}$$"
    my_xabs=""
	*) my_xabs=`pwd`"/$my_xlib" ;;
    my_xdir=""
      my_xdir="$my_gentop/$my_xlib_u"
    my_xlib=""
      my_xlib="$func_basename_result"
	*" $my_xlib_u "*)
	  my_xlib_u=lt$extracted_serial-$my_xlib ;;
      my_xlib_u=$my_xlib
    name += 2;
      name="$func_basename_result"
	  name="$func_basename_result"
		name="$func_basename_result"
	name="$func_basename_result"
	      name=$func_stripname_result
	  name=$func_stripname_result
		name=$func_stripname_result
	name=$func_stripname_result
# name if it has been set yet.
	      # name in a special purpose variable, and (later) extracting the
	name=$name_save
# name of the DLL associated with the specified
# Name of the non-PIC object
# Name of the PIC object.
	name_save=$name
# Names of additional weak libraries provided by this library
# Names of this library.
             namespace, but it is not one of the ones we know about and
             namespace. The first time any user complains about this, we'll
     n backslashes followed by a double quote (n >= 0):
#   -n, --dry-run            display commands without modifying any files
# Need a lot of goo to handle *both* DLLs and import libs
need_lib_prefix=no
      need_locks=no
need_locks="no"
	      need_relink=no
    need_relink=no # whether we're linking any uninstalled libtool libraries
	      need_relink=yes
	      # need to be listed more than once, so we keep only the
	      # Need to hardcode shared library paths
	    # Need to link against all dependency_libs?
             need to make LTWRAPPER_OPTION_PREFIX a configure-time option
need_version=no
	  *-*-netbsd*)
  newargc=0;
  new_argv[argc] = NULL;
	new_argv[i] = (char *) string;
	  new_argv[i] = quoted_string;
	new_argv[i] = xstrdup ("\"\"");
  new_argv = XMALLOC (char *, argc + 1);
  newargz[0] =
  newargz[++newargc] = NULL;
      newargz[++newargc] = xstrdup (argv[i]);
  newargz = prepare_spawn (newargz);
  newargz = XMALLOC (char *, argc + 1);
    newdependency_libs=
	    newdependency_libs=
	      *) newdependency_libs+=" $deplib" ;;
	      newdependency_libs="$deplib $newdependency_libs"
	    newdependency_libs="$deplib $newdependency_libs"
		newdependency_libs+=" -L$func_replace_sysroot_result"
		newdependency_libs+=" ${lt_sysroot:+=}$libdir/$name"
		newdependency_libs+=" -R$func_replace_sysroot_result"
	  newdeplibs=""
	newdeplibs=
	      newdeplibs+=" $a_deplib"
		      newdeplibs+=" $a_deplib"
		  newdeplibs+=" $a_deplib"
			newdeplibs+=" $a_deplib"
	  newdeplibs=$deplibs
	  newdeplibs=`$ECHO " $newdeplibs" | $SED 's/ -lc / System.ltframework /'`
	  newdeplibs=`$ECHO " $newdeplibs" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
		      newdeplibs+=" $i"
		    newdeplibs+=" $i"
		newdeplibs+=" $i"
	    newdlfiles=
	newdlfiles=
	      newdlfiles+=" $abs"
	      newdlfiles+=" $deplib"
	      *) newdlfiles+=" $lib" ;;
	    newdlfiles+=" $lib"
		newdlfiles+=" ${lt_sysroot:+=}$libdir/$name"
	    newdlprefiles=
	newdlprefiles=
	      newdlprefiles+=" $abs"
	      newdlprefiles+=" $deplib"
	        newdlprefiles+=" $dir/$dlname"
	        newdlprefiles+=" $dir/$linklib"
	        newdlprefiles+=" $dir/$old_library"
		newdlprefiles+=" ${lt_sysroot:+=}$libdir/$name"
    new_inherited_linker_flags=
	    * ) new_inherited_linker_flags+=" $arg" ;;
		    * ) new_inherited_linker_flags+=" $deplib" ;;
	  new_inherited_linker_flags=`$ECHO " $new_inherited_linker_flags" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
	      *) new_inherited_linker_flags+=" $tmp_inherited_linker_flag";;
	    newlib=libimp-$func_stripname_result.a
      new_libs=
	  new_libs=
	  *) new_libs+=" $deplib" ;;
	*) new_libs+=" $deplib" ;;
	    #new_libs="$deplib $new_libs"
		*) new_libs="$deplib $new_libs" ;;
    newlib_search_path=
	  newlib_search_path=
	  newlib_search_path+=" $absdir"
	         newlib_search_path+=" $func_resolve_sysroot_result"
	    newlib_search_path+=" $func_resolve_sysroot_result"
	  newlib_search_path+=" $ladir"
	    new_libs+=" -L$path/$objdir" ;;
   newly allocated full path name if found, NULL otherwise
		*[\ /]"$newobj "*) ;;
		newobj=lt$counter-$objbase
          new_value[len-1] = '\0';
      new_value = XMALLOC (char, add_len + orig_value_len + 1);
      new_value = xstrdup (add);
NL2SP="tr \\015\\012 \\040\\040"
	nlist="$output_objdir/${my_outputname}.nm"
# NLS nuisances: We save the old values to restore during execute mode.
NMEDIT=""
nm_file_list_spec="@"
NM="/usr/bin/nm -B"
no_builtin_flag=""
no_builtin_flag=" -fno-builtin"
		    $nocaseglob
	    noexename=$func_stripname_result
	  noexename=$name
      -no-fast-install)
  -no-fast-install  disable the fast-install mode
      -no-install)
  -no-install       link a not-installable executable
    no_install=no
	*) no_install=yes ;;
	no/*-*-irix* | /*-*-irix*)
	            # no lafile. user explicitly requested -dlpreopen <import library>.
    no_mode=:
	    no_mode=false
	      /* no more DIR_SEPARATORS left */
	none) ;;
nonempty (const char *s)
                  nonempty (path));
                  nonempty (wrapper));
	none | unknown | *)
nonnull (const char *s)
		  nonnull (lt_argv_zero));
                  nonnull (name), nonnull (value));
                              nonnull (strerror (errno)));
              nonnull (strerror (errno)));
    nonopt="$opt"
      # non-PIC code in shared libraries is not supported
	  non_pic_object=
		non_pic_object=
	  # Non-PIC object.
		# Non-PIC object.
	    non_pic_object="$pic_object"
		  non_pic_object="$pic_object"
    non_pic_objects=
	    non_pic_objects+=" $non_pic_object"
		  non_pic_objects+=" $non_pic_object"
non_pic_object=$write_oldobj
	    non_pic_object=$xdir$func_lo2o_result
		  non_pic_object=$xdir$func_lo2o_result
	    non_pic_object="$xdir$non_pic_object"
		  non_pic_object="$xdir$non_pic_object"
	    nonstopux) verstring_prefix=nonstopux ;;
	      # No point in relinking DLLs because paths are not encoded
#       --no-quiet, --no-silent
      normal )
  # Normalisation. If bindir is libdir, return empty string,
      --no-silent|--no-quiet)
      /* no slashes; search PATH */
	-no-suppress)
  -no-suppress      do not suppress compiler output for multiple passes
      # Not a directory, so check to see that there is only one file specified.
	  # Not a shared library
# NOTE: Changes made to this file will be lost: look at ltmain.sh.
	    # note $name still contains .exe if it was in $file originally
# Note that it is not necessary on cygwin/mingw to append a dot to
   Note that spawn() does not by itself call the command interpreter
	  # Note the libdir as a future libdir.
	      # note: this script will not be executed, so do not chmod.
      /* not found in PATH; assume curdir */
	  notinst_deplibs=
	      notinst_deplibs+=" $lib"
    notinst_deplibs= # not-installed libtool libraries
  notinst_deplibs='$notinst_deplibs'
	    notinst_path+=" $abs_ladir"
    notinst_path= # paths that contain not-installed libtool libraries
# not in the set a-zA-Z0-9_ are replaced with '_'. Further,
      # Not necessarily an ordinary path; POSIX reserves leading '//'
# not shown.
	# not supported by libtool).
    # not support -o with -c
      # not to be eliminated).
# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP
      -no-undefined)
  -no-undefined     declare that a library does not refer to external symbols
no_undefined_flag=""
      # -no-undefined on the libtool link line when we can be certain
      --no-verbose)
#       --no-verbose         don't print the extra informational messages
      # Now actually substitute the argument into the commands.
      # Now add the directory to shlibpath_var.
#       --no-warn            don't display warning messages
      --no-warning|--no-warn)
  # Now calculate path; take care to avoid doubling-up slashes.
	# Now compile the dynamic symbol file.
    # Now create the libtool archive.
      # Now create the wrapper script.
	    # Now, create the wrapper script for func_source use:
      # Now hardcode the library paths
      # Now prepare to actually exec the command.
    # Now print the configurations for the tags.
      # Now set the variables for building old libraries.
# Now that we've collected a possible --mode arg, show help if necessary
  NULLCMD=:
      # Nullify the symbol file.
	  number_major="$1"
	  number_minor="$2"
	  number_revision="$3"
o2lo="s/\\.${objext}\$/.lo/"
    obj)
	    *[\ /]"$objbase "*)
	    objbase="$func_basename_result"
objdir=.libs
    $objdir )   thisdir=. ;;
    *[\\\\/]$objdir ) thisdir=\`\$ECHO \"\$thisdir\" | $SED 's%[\\\\/][^\\\\/]*$%%'\` ;;
OBJDUMP="objdump"
  $OBJDUMP -s --section "$1" "$2" 2>/dev/null |
# Object dumper program.
object files.
# Object file suffix (normally "o").
	  # object format with DLL files.  See the long comment at the top of
      -objectlist)
	objectlist)
  -objectlist FILE  Use a list of object files found in FILE to specify objects
      # Objects from convenience libraries.  This assumes
      *.$objext)
	*.$objext)
	    *.$objext | *.gcno)
objext=o
	obj=$func_lo2o_result
	      objlist=
	  objlist=
	    objlist+=" $obj"
		  objlist=" $obj"
		  objlist+=" $obj"
    objname="$func_basename_result"
	obj="$output"
    objs=
	objs+=" $arg"
      objs+="$old_deplibs"
# obtained by writing to the Free Software Foundation, Inc.,
	      # occurrences thereof are not removed.  Compare this
	  *" $odir "*) ;;
	odir="$dir/$objdir"
	odir="$objdir"
      -O*|-flto*|-fwhopr*|-fuse-linker-plugin)
      # -O*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization
    # Of those that remain, print the first one.
            ## Okay now we've a bunch of thin objects, gotta fatten them up :)
old_archive_cmds=""
old_archive_cmds="\$AR \$AR_FLAGS \$oldlib\$oldobjs~\$RANLIB \$tool_oldlib"
old_archive_from_expsyms_cmds=""
old_archive_from_new_cmds=""
# Old archive suffix (normally "a").
    old_convenience=
	    old_convenience+=" $ladir/$objdir/$old_library"
    old_deplibs=
	old_deplibs+=" $arg"
      old_dlfiles="$dlfiles"
      old_dlprefiles="$dlprefiles"
    oldIFS=$IFS
    oldlib)
      oldlib="$destdir/$name"
      old_library=
		  old_library=
	old_library=
old_library='$old_library'
      oldlibs=
    oldlibs=
      oldlibs="$output"
	      oldlibs="$output_objdir/$libname.$libext"
		oldlibs="$output_objdir/$libname.$libext"
	oldlibs+=" $output_objdir/$libname.$libext"
	  oldlibs="$output_objdir/$libname.$libext $oldlibs"
	  oldobjs=
	  oldobjs=" $archiver_list_spec$func_to_tool_file_result"
	  oldobjs+=" $func_extract_archives_result"
	oldobjs+=" $func_extract_archives_result"
	      oldobjs+=" $gentop/$newobj"
	  oldobjs="$libobjs_save"
	oldobjs="$libobjs_save $symfileobj"
	    " ") oldobjs=$obj ;;
	    *) oldobjs+=" $obj" ;;
	      oldobjs=$objlist
	  oldobjs=$objlist
	oldobjs="$objs "`$ECHO "$libobjs" | $SP2NL | $SED "/\.${libext}$/d; $lo2o" | $NL2SP`
	  oldobjs="$old_deplibs $non_pic_objects"
	    oldobjs+=" $symfileobj"
old_postinstall_cmds="chmod 644 \$oldlib~\$RANLIB \$tool_oldlib"
old_postuninstall_cmds=""
old_striplib="strip --strip-debug"
	  # On all known operating systems, these are identical.
    # On Cygwin there's no "real" PIC flag so we must build both object types
	# one anyway
      # on failure, ensure result is empty
      # Only actually do things if not in dry run mode.
	  # Only an error if not doing a dry-run.
		# Only an error if not doing a dry-run.
# Only attempt this if the compiler in the base compile
    # Only build a PIC object if we are building libtool libraries.
    # Only build a position-dependent object if we build old libraries.
	  # Only check for convenience libraries
      # Only create the output if not a dry run.
	# Only do commands if we really have different PIC objects.
    # Only execute mode is allowed to have -dlopen flags.
only library objects (\`.lo' files) may be specified, and \`-rpath' is
		# Only pass preopened files to the pseudo-archive (for
	# On Rhapsody replace the C library is the System framework
	  # On Rhapsody replace the C library with the System framework
# on the platform and compiler that created the implib.
  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects
  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE
	  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
	 *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
      -o) prev=output ;;
    opt="$1"
}$optarg"
			optarg="$1"
			opt_config=:
opt_config=false
    $opt_debug
  $opt_debug
			$opt_debug
opt_debug=:
			opt_dlopen="${opt_dlopen+$opt_dlopen
      $opt_dry_run || {
    $opt_dry_run || {
	        $opt_dry_run || {
	      $opt_dry_run || {
	    $opt_dry_run || {
	} # !$opt_dry_run
	$opt_dry_run || {
			opt_dry_run=:
	  $opt_dry_run || cp "$export_symbols" "$output_objdir/$libname.uexp"
      $opt_dry_run && current_libdirs=" -n$current_libdirs"
	$opt_dry_run || $ECHO > "$output_objdir/$my_dlsyms" "\
	  $opt_dry_run || echo ': @PROGRAM@ ' > "$nlist"
	  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?
	  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?
	      $opt_dry_run || eval "$cmd" || {
	  $opt_dry_run || eval "$cmd" || {
	  $opt_dry_run || eval "$cmds" || admincmds+="
	      $opt_dry_run || eval '$ECHO "$include_expsyms" | $SP2NL >> "$tmp_export_symbols"'
	  $opt_dry_run || eval '$ECHO "$include_expsyms" | $SP2NL >> "$tmp_export_symbols"'
	# $opt_dry_run || eval "echo timestamp > $libobj" || exit $?
	    $opt_dry_run || eval "$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'"
opt_dry_run=false
	$opt_dry_run || if test -n "$outputname"; then
	  $opt_dry_run || $RM conftest
		$opt_dry_run || $RM conftest
	  $opt_dry_run || $RM conftest.c
	      $opt_dry_run || $RM $export_symbols
	    $opt_dry_run || $RM $export_symbols
      $opt_dry_run || rm -f "$lockfile"
      $opt_dry_run || $RM $obj $libobj
	$opt_dry_run || $RM $output
      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname
    $opt_dry_run || $RM $removelist
	$opt_dry_run || $RM $removelist
        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'
		  $opt_dry_run || ${RM}r "$tmpdir"
	      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\(.*\)\([ \,].*\),s|^\1$|\1\2|,' < $export_symbols > $output_objdir/$libname.filter
	  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\(.*\)\([ \,].*\),s|^\1$|\1\2|,' < $export_symbols > $output_objdir/$libname.filter
	      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols
	  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols
      opt_duplicate_compiler_generated_deps=:
      opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps
			opt_features=:
opt_features=false
			opt_finish=:
opt_finish=false
  $opt_help || {
$opt_help || {
			opt_help=:
			opt_help_all=:
opt_help_all=false
opt_help=false
opt_help=': help-all'
# Option defaults:
			opt_mode="$optarg"
			opt_preserve_dup_deps=:
opt_preserve_dup_deps=false
opt_quiet=false
    opts=
	        $opt_silent || {
	      $opt_silent || {
	  $opt_silent || {
			opt_silent=:
opt_silent=:
    $opt_silent && exit $EXIT_SUCCESS
    ${opt_silent-false} || {
			opt_silent=false
opt_silent=false
			opt_tag="$optarg"
			opt_verbose=:
opt_verbose=:
        opt_verbose=false
			opt_verbose=false
opt_verbose=false
    $opt_verbose && func_echo ${1+"$@"}
opt_warning=:
    $opt_warning && $ECHO "$progname: ${opt_mode+$opt_mode: }warning: "${1+"$@"} 1>&2
			opt_warning=false
             or a configure.ac-settable value.
	      # or/and link against static libraries
	##        order, and fix it there properly
	  # or, if using GNU ld and skipped_export is not :, use a linker
	orig_export_symbols=
	      orig_export_symbols="$export_symbols"
# or obtained by writing to the Free Software Foundation, Inc.,
# or path in func_cygpath_result (input file name or path is assumed to be in
	  *-*-os2*)
	  # osf3 & osf4 and I'm not really sure... Just
      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);
      /* otherwise ... */
		# Otherwise fall back on heuristic.
Otherwise, only FILE itself is deleted using RM."
# otherwise set result to NONDIR_REPLACEMENT.
	      # (otherwise, the dlopen module name will be incorrect).  We do
        # ...otherwise throw away the child directory and loop
	      # Otherwise, use the dlname, so that lt_dlopen finds it.
OTOOL=""
OTOOL64=""
	      output=
	    : > $output
	output)
	    output=$firstobj\"$file_list_spec$func_to_tool_file_result\"
	         output=$func_stripname_result ;;
	          output=$func_stripname_result.exe;;
	    output=$func_to_tool_file_result
	  output_la=$func_basename_result
		output_la=$func_basename_result
	output="$libobj"
	  outputname=
# $outputname - a libtool library file
    outputname="$func_basename_result"
	    output_name=$func_basename_result
	    outputname=$func_stripname_result ;;
	        outputname="$tmpdir/$file"
      output="$obj"
      output_obj=
    output_objdir="$func_dirname_result$objdir"
	    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)
      output_obj=`$ECHO "$srcfile" | $SED 's%^.*/%%; s%\.[^.]*$%%'`.${objext}
	      output=$output_objdir/$output_la-${k}.$objext
		  output=$output_objdir/$output_la-${k}.$objext
	    output=${output_objdir}/${output_la}.lnk
	    output=${output_objdir}/${output_la}.lnkscript
		output=${output_objdir}/${output_la}.nm
	    output="$output_objdir/$outputname"i
	    output_path=$func_dirname_result
	  output=$save_output
		output=$save_output
# $output - temporary wrapper script for $objdir/$outputname
      # over CIFS/SMB, so we conserve a leading double slash if found.
		# overlaps.
        p
      /./p' |
	      *p++ = '"';
	    *p++ = '"';
	    p--;
	*p = '/';
		    *p++ = '\\';
		*p++ = '\\';
	  *p = '\0';
PACKAGE=libtool
package_revision=1.3337
      :para
        # Parent dir; strip last assembled component from result.
  # Parse options
# Parse options once, thoroughly.  This comes as soon as possible in the
	# Parse the name list into a source file.
	# Parse the version information argument.
		pass_all)
	pass_all)
    *)  passes="conv"
	passes="conv dlpreopen link"
	passes="conv scan dlopen dlpreopen link"
	      *" $path "*) ;;
	      path=
		      path=
# $PATH. Assumes ARG has no leading or trailing path separator characters.
pathcar='s,^/\([^/]*\).*$,\1,'
pathcdr='s,^/[^/]*,,'
#   path conversion function         : func_convert_path_X_to_Y ()
    PATH=$dllsearchpath:\$PATH
/* path handling portability macros */
		  path="-L$absdir"
		  path="-L$absdir/$objdir"
PATH_SEPARATOR=":"
# Path separators are also converted from $build format to $host format.  If
  patlen = strlen (pat);
	      *p++ = c;
    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are
# perform func_basename and func_dirname in a single function
# Permission mode override for installation of shared libraries.
    perm_rpath=
	      *) perm_rpath+=" $libdir" ;;
	  *) perm_rpath+=" $libdir" ;;
pic_flag=""
	pic_flag_for_symtable=
	      pic_flag_for_symtable=" $pic_flag"
	    pic_flag_for_symtable=" $pic_flag"  ;;
	    pic_flag_for_symtable=" $pic_flag -DFREEBSD_WORKAROUND" ;;
pic_flag=" -fPIC"
pic_flag=" -fPIC -DPIC"
	  # pic_flag when linking with -static.  The problem exists in
      pic_mode=default
pic_mode=default
	pic_mode=no
	pic_mode=yes
	  pic_object=
		pic_object=
pic_object=$write_lobj
	    pic_object=$xdir$objdir/$func_lo2o_result
		  pic_object=$xdir$objdir/$func_lo2o_result
	    pic_object="$xdir$pic_object"
		  pic_object="$xdir$pic_object"
    pie_flag=
          pie_flag+=" $arg"
	  -pie | -fpie | -fPIE) ;;
	-pie | -fpie | -fPIE)
	  # place dlname in correct position for cygwin
      # Place marker at beginning of archive member dllname section
	# Place PIC objects in $objdir
# Platform-specific function to extract the
# platform-specific function to extract the name of the
# Please DO NOT delete this file!
	      p_len = q - p;
	      p_next = (*q == '\0' ? q : q + 1);
/* portability defines, excluding path handling macros */
# positional parameter $0, within a function call, is the name of the
    # positional parameters, so assign one to ordinary parameter first.
	# POSIX demands no paths to be encoded in archives.  We have
	# Possibly a libtool archive, so verify it.
	# Possibly a libtool object, so verify it.
postdep_objects=""
postdeps=""
      # $postdeps and mark them as special (i.e., whose duplicates are
postdeps="-lgfortran -lm -lgcc_s -lquadmath -lm -lgcc_s -lc -lgcc_s"
postdeps="-lstdc++ -lm -lgcc_s -lc -lgcc_s"
postinstall_cmds=""
postlink_cmds=""
	  postlink_cmds=`func_echo_all "$postlink_cmds" | $SED -e 's%@OUTPUT@%'"$output"'%g' -e 's%@TOOL_OUTPUT@%'"$func_to_tool_file_result"'%g'`
	postlink_cmds=`func_echo_all "$postlink_cmds" | $SED -e 's%@OUTPUT@%'"$output_objdir/$outputname"'%g' -e 's%@TOOL_OUTPUT@%'"$func_to_tool_file_result"'%g'`
postuninstall_cmds=""
		  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
		    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`
			*) potlib=`$ECHO "$potlib" | $SED 's,[^/]*$,,'`"$potliblink";;
			potliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`
		      potlib="$potent_lib"
		    potlib="$potent_lib" # see symlink-check above in file_magic test
      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC
	  p = quoted_string;
	    # practice:
#pragma GCC diagnostic ignored \"-Wstrict-prototypes\"
	    # Pragmatically, this seems to cause very few problems in
      -precious-files-regex)
    precious_files_regex=
	  precious_files_regex="$arg"
  -precious-files-regex REGEX
	precious_regex)
predep_objects=""
predeps=""
      -prefer-non-pic)
  -prefer-non-pic   try to build non-PIC objects only
      -prefer-pic)
  -prefer-pic       try to build PIC objects only
	  prefer_static_libs=built
    prefer_static_libs=no
	  prefer_static_libs=yes
	      # Prefer using a static library (so that no silly _DYNAMIC symbols
# PREFIX and SUFFIX must not contain globbing or regex special
prelink_cmds=""
    preload=no
	      # Preload the old-style object.
		    # Preload the old-style object.
	    preload=yes
/* Prepares an argument vector before calling spawn().
prepare_spawn (char **argv)
	  # Prepare the list of exported symbols
	# Prepare the list of exported symbols
	    # Prepend the subdirectory the object is found in.
		  # Prepend the subdirectory the object is found in.
      pre_post_deps=
	  *" $pre_post_dep "*) specialdeplibs+=" $pre_post_deps" ;;
	  pre_post_deps+=" $pre_post_dep"
      # Preserve any variables that may affect compiler behavior
	# Preserve any variables that may affect compiler behavior
preserve_args=
preserve_args+=" $opt"
preserve_args+=" $opt $optarg"
  # preserve --debug
      --preserve-dup-deps)
#       --preserve-dup-deps  don't remove duplicate dependency libraries
	  # Preserve sysroot, but never include relative directories
    prev=
	      prev=
	    prev=
	  prev=
		      prev=
		    prev=
    prevarg=
	  prev=$arg
	prev=$arg
      prevarg="$arg"
	prev=bindir
	prev=dlfiles
		      prev=dlprefiles
		prev=dlprefiles
	prev=dlprefiles
	  prev=expsyms
	  prev=expsyms_regex
	prev=framework
	prev=inst_prefix
	prev=objectlist
	prev=precious_regex
	prev=release
	prev=rpath
	prev=shrext
	prev=vinfo
        prev=weak
	prev=xcclinker
	prev=xcompiler
	prev=xlinker
	prev=xrpath
      # Print
#                            print informational messages (default)
  # Print the debug banner immediately:
	    # problems, so we reset it completely
    # Processed it all yet?
    prog)
	  prog)
     progdir=`cd "$progdir" && pwd`
     progdir=$func_dirname_result
  progdir=\"\$thisdir/$objdir\"
	  progfiles=`$ECHO "$objs$old_deplibs" | $SP2NL | $SED "$lo2o" | $NL2SP`
$progname: and run autoconf again.
$progname: but the definition of this LT_INIT comes from revision $macro_revision.
$progname: definition of this LT_INIT comes from an older release.
$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.
progname=$func_basename_result
#         $progname:	(GNU libtool) 2.4.2 Debian-2.4.2-1ubuntu1
$progname: of $PACKAGE $VERSION and run autoconf again.
$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the
$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,
$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION
$progname: You should recreate aclocal.m4 with macros from revision $package_revision
     ' < "$progpath"
     }' < "$progpath"
    }' < "$progpath"
progpath="$0"
     progpath="$progdir/$progname"
	/^# '$PROGRAM' (GNU /,/# warranty; / {
PROGRAM=libtool
  program=lt-'$outputname'$exeext
  program_name = (char *) xstrdup (base_name (argv[0]));
  program='$outputname'
      # Protect directory names starting with `-'
# Provide generalized library-building support services.
	  p = tmp_pathspec + strlen (tmp_pathspec) - 1;
# published by the Free Software Foundation; either version 2 of
  /* Put quoted arguments into the new argument vector.  */
      qarg=$func_quote_for_eval_unquoted_result
		*" $qarg.ltframework "*) ;;
      # -q*                  compiler args for the IBM compiler
    qECHO=`$ECHO "$ECHO" | $SED "$sed_quote_subst"`
    qsrcfile=$func_quote_for_eval_result
#       --quiet, --silent    don't print informational messages
      # Quote arguments (to preserve shell metacharacters).
	  quoted_string = XMALLOC (char, length + 1);
	# quotes we have to do it in 2 steps:
      # Quote the link command for shipping.
      # Quote the relink command for shipping.
# Quote VALUE and append to the end of shell variable VAR, separated
      -R)
      -R*)
	      -R*)
	    -R*) ;;
      # -r[0-9][0-9]*        specify processor for the SGI compiler
	  RANLIB=:
RANLIB="ranlib"
	  RANLIB=$save_RANLIB
		RANLIB=$save_RANLIB
    # rather than running their programs.
	    read lalib_p_line
	# Read the .la file
	# Read the libtool library.
	  # Read the .lo file
		# Read the .lo file
      # really was required.
	    realname="$1"
	  realname="$1"
	realname="$1"
    re_begincf='^# ### BEGIN LIBTOOL'
  re_begincf="^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\$"
    # Recognize several different file suffixes.
# (redirection is the responsibility of the caller)
    re_endcf='^# ### END LIBTOOL'
  re_endcf="^# ### END LIBTOOL TAG CONFIG: $tagname\$"
  /* Relative path | not found in path: prepend cwd */
      # Relative path, prepend $cwd.
      -release)
    release=
	release=""
	release)
	  release="-$arg"
# release of libtool.
	release=$release_save
  -release RELEASE  specify package release information
	release_save=$release
	# release should show up in the -l (ie -lgmp5) so we don't want to
	    relink)
	      relink_command=
	    relink_command=
	  relink_command=
	relink_command=
	relink_command="(cd `pwd`; $relink_command)"
      relink_command="(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)"
	    relink_command=`$ECHO "$compile_var$compile_command$compile_rpath" | $SED 's%@OUTPUT@%\$progdir/\$file%g'`
      relink_command=`$ECHO "$relink_command" | $SED "$sed_quote_subst"`
	relink_command=`$ECHO "$relink_command" | $SED "$sed_quote_subst"`
	    relink_command=`$ECHO "$relink_command" | $SED "s%@inst_prefix_dir@%%"`
	    relink_command=`$ECHO "$relink_command" | $SED "s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%"`
	        relink_command=`$ECHO "$relink_command" | $SED 's%@OUTPUT@%'"$outputname"'%g'`
	  relink_command="$finalize_var$finalize_command$finalize_rpath"
	relink_command="$finalize_var$finalize_command$finalize_rpath"
relink_command=\"$relink_command\"
relink_command=\"$relink_command\""
	    relink_command="{ test -z \"\${$var+set}\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command"
	  relink_command="{ test -z \"\${$var+set}\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command"
	    relink_command="$var=; export $var; $relink_command"
	  relink_command="$var=; export $var; $relink_command"
	    relink_command="$var=$func_quote_for_eval_result; export $var; $relink_command"
	  relink_command="$var=$func_quote_for_eval_result; export $var; $relink_command"
    # relink executable if necessary
	      # reloadable object file.  All subsequent reloadable object
reload_cmds=""
reload_cmds="\$LD\$reload_flag -o \$output\$reload_objs"
      # reload_cmds runs $LD directly, so let us get rid of
      reload_conv_objs=
	  reload_conv_objs=$reload_objs\ `$ECHO "$tmp_whole_archive_flags" | $SED 's|,| |g'`
	  reload_conv_objs="$reload_objs $func_extract_archives_result"
reload_flag=""
reload_flag=" -r"
	reload_objs="$libobjs $reload_conv_objs"
		    reload_objs=$objlist
	      reload_objs="$objlist $last_robj"
		    reload_objs="$objlist $last_robj"
      reload_objs="$objs$old_deplibs "`$ECHO "$libobjs" | $SP2NL | $SED "/\.${libext}$/d; /\.lib$/d; $lo2o" | $NL2SP`" $reload_conv_objs" ### testsuite: skip nested quoting test
   relocations are performed -- see ld's documentation on pseudo-relocs.  */
      # Remember odir for removal later, being careful to avoid duplicates
    # Remove all lines with less than 43 characters
removedotparts=':dotsl
# Remove doubled-up and trailing slashes, "." path components,
	# remove .exe since cygwin /usr/bin/install will append another
Remove files from the build directory.
    # Remove leading and trailing path separator characters from
    # Remove leading and trailing path separator characters from ARG.  MSYS
Remove libraries from an installation directory.
    # remove .libs from thisdir
	removelist=
      removelist="$lobj $libobj ${libobj}T"
    removelist+=" $lockfile"
	removelist=$lockfile
      removelist="$obj $lobj $libobj ${libobj}T"
      removelist+=" $output_obj"
	       removelist+=" $p"
	# Remove our outputs, but don't remove object files since they
      # Remove sysroot references
      # Remove the marker
	    # Remove this search path later
      # Remove trailing dots and whitespace
	# Remove version info from name if versioning should be avoided
	# Remove ${wl} instances when linking with ld.
# Re-`\' parameter expansions in output of double_quote_subst that were
repeat this compilation, it may succeed, by chance, but you had better
# Replace a leading = in PATH with a sysroot.  Store the result into
	    # Replace all uninstalled libtool libraries with the installed ones
	  ;;            #  replaced later.  I would guess that would be a bug.
      # Replace the output file specification.
	        # Replace the output file specification.
	# Replace the output file specification.
             report an error. Otherwise, targets might begin to believe
# Report bugs to <bug-libtool@gnu.org>.
required, except when creating a convenience library.
# resorting to external programs.  To this end, it redirects stdin and
# restored at link time.
  # Restore leading double-slash if one was found on entry.
      # Restore saved environment variables
	    # Restore the uninstalled library and exit
	# Restore the uninstalled library and exit
		# Restore the uninstalled library and exit
	  # Restore the value of output.
# result in func_convert_core_msys_to_w32_result.
# result in func_to_tool_file_result.  If the conversion in use is listed
# Result is available in $func_convert_core_file_wine_to_w32_result, and will
# Result is available in $func_convert_core_path_wine_to_w32_result.
# Result is available in the variable
# Result is stored in $func_tr_sh_result.  All characters
# Result will be available in $func_to_host_file_result.
    ret=$?
      return
    return 0;
	  return 0;
    return 1;
      return 127;
      # Return a directory name, but don't create it in dry-run mode
  return base;
    return concat_name;
	    return concat_name;
		return concat_name;
	return concat_name;
  return lt_${my_prefix}_LTX_preloaded_symbols;
  return new_argv;
  return new_value;
    return NULL;
  return NULL;
  return p;
  return rval;
  return rval; /* =127, but avoids unused variable warning */
# Returns result in func_to_host_file_result.
  return (s && !*s) ? "(empty)" : nonnull (s);
  return s ? s : "(null)";
  return str;
  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),
# return the library type of file 'arg'
      return xstrdup (pathspec);
  return xstrdup (pathspec);
  return xstrdup (tmp_pathspec);
	  revision="$2"
	    revision="$number_minor"
	    revision="$number_revision"
revision=$revision
	      -R*) func_stripname '-R' '' "$libdir"
	    # Rhapsody C and math libraries are in the System framework
	    # Rhapsody C library is in the System framework
      *-*-rhapsody* | *-*-darwin1.[012])
	  *-*-rhapsody* | *-*-darwin1.[012])
	*-*-rhapsody* | *-*-darwin1.[012])
  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries
      -*) RM+=" $arg" ;;
	    $RM $cwrappersource $cwrapper
    rmdirs=
	  *) rmdirs+=" $odir" ;;
	      $RM $export_symbols
	    rmfiles+=" $dir/$non_pic_object"
	    rmfiles+=" $dir/$pic_object"
      rmfiles="$file"
	    rmfiles+=" $file"
	      rmfiles+=" $func_ltwrapper_scriptname_result"
	      rmfiles+=" $odir/lt-$name"
	      rmfiles+=" $odir/lt-${noexename}.c"
	    rmfiles+=" $odir/$n"
	    rmfiles+=" $odir/$name $odir/${name}S.${objext}"
    rmforce=
	    $RM $func_ltwrapper_scriptname_result
RM is the name of the program to use to delete files associated with each FILE
        $RM "$lockfile"
    RM="$nonopt"
	    $RM $output
	  $RM $output
      $RM \"\$progdir/\$file\"
    $RM \"\$progdir/\$file\"
	$RM \"\$progdir/\$file\"
    { $RM \"\$progdir/\$program\";
	        $RM "${realname}T" && \
		    $RM "${realname}T" && \
	    $RM -rf unfat-$$
: ${RM="rm -f"}
        ${RM}r "$tmpdir"
	  ${RM}r "$tmpdir"
	      $RM "unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}"
      -rpath)
      rpath=
    rpath=
	    rpath=
	  rpath=
	    *) rpath+=" $arg" ;;
	      rpath+="$dir:"
	    rpath+="$dir:"
	  rpath="$finalize_rpath"
	    rpath+=" $flag"
  -rpath LIBDIR     the created library will eventually be installed in LIBDIR
	rpath | xrpath)
runpath_var=LD_RUN_PATH
      # Run the actual program with our arguments.
# Run-time system search path for libraries.
      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);
  rval = _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);
        s/^# //
      -s)
		s,/\.$,/,'
	s/^# *$//
s/\([\\"]\)/\\\1/g
    s/^.\{43\}//' |
s/^\(.\{79\}\)\(..*\)/\1\
# Same as above, but do not quote variable references.
# same distribution terms that you use for the rest of that program.
# same.  If conversion functions are added for new $build/$host combinations,
    # Sanity checks first:
	s/\$autoconf_version/'"`(${AUTOCONF-autoconf} --version) 2>/dev/null |$SED 1q`"'/
	s/\$automake_version/'"`(${AUTOMAKE-automake} --version) 2>/dev/null |$SED 1q`"'/
	    save_arg=$arg
	save_deplibs="$deplibs"
  # save first non-option argument
     save_IFS="$IFS"
    save_ifs=$IFS; IFS='~'
	    save_ifs="$IFS"; IFS='~'
	  save_ifs="$IFS"; IFS=','
	save_ifs="$IFS"; IFS='~'
	save_ifs="$IFS"; IFS=','
	save_ifs="$IFS"; IFS=':'
	    save_libobjs=$libobjs
		save_libobjs=$libobjs
          save_$lt_var=\$$lt_var
      save_mkdir_p_IFS="$IFS"; IFS=':'
        save_mktempdir_umask=`umask`
	  save_oldobjs=$oldobjs
	  save_output=$output
		save_output=$output
	  save_RANLIB=$RANLIB
	  # Save the value of $output and $libobjs because we want to
  s/^$bs2$dollar/$bs&/
  s/$bs4/&\\
  s/\\([^$bs]\\)$bs2$dollar/\\1$bs2$bs$dollar/g
        s/\((C)\)[ 0-9,-]*\( [1-9][0-9]*\)/\1\2/
		  *-*-sco3.2v5.0.[024]*) add_dir="-L$dir" ;;
	  *-*-sco3.2v5* | *-*-sco5v6*)
	      # 's' commands which not all seds can handle. GNU sed should be fine
	  # 's' commands which not all seds can handle. GNU sed should be fine
	  # script.
# /script/ and the wrapper /executable/ which is used only on
# script's $0 value, followed by "$@".
# script to make things like `--version' happen as quickly as we can.
	  /* search backwards for last DIR_SEPARATOR */
	    searchdirs="$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path"
	    searchdirs="$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path"
/* Searches for the full path of the wrapper.  Returns
	    # search path.
	      # Search the libtool library
# SECTION_NAME is either .idata$6 or .idata$7, depending
    sed '1d
    $SED "1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\$d" < "$progpath"
SED="/bin/sed"
    $SED '/^Contents of section '"$match_literal"':/{
sed_double_backslash="\
			 $SED -e 10q |
      $SED -e 4q "$1" 2>/dev/null \
    $SED -e '/^\./d;/^.\./d;q'
	            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'"
        $SED -e "$lt_replace_pathsep_chars"`
        $SED -e "$lt_sed_naive_backslashify"`
    $SED -e 's/[ ]*$//' -e "$lt_sed_naive_backslashify"`
	  sed -e "${sysroot_cmd} s/\([ ']-[LR]\)=/\1/g; s/\([ ']\)=/\1/g" $lib \
  sed_extractcf="/$re_begincf/,/$re_endcf/p"
sed_make_literal_regex='s,[].[^$\\*\/],\\&,g'
    $SED -n '
    } | sed -n '1p; 2,$s/^Usage:/  or: /p'
    $SED -n '/(C)/!b go
	      $SED -n -e '
	$SED -n -e '
      $SED -n "/$re_begincf TAG CONFIG: $tagname\$/,/$re_endcf TAG CONFIG: $tagname\$/p" < "$progpath"
    $SED -n '/^# Usage:/,/^#  *.*--help/ {
    $SED -n '/^# Usage:/,/# Report bugs to/ {
sed_quote_subst='s/\([`"$\\]\)/\\\1/g'
sed_quote_subst='$sed_quote_subst'
# Sed substitution that converts a w32 file name or path
# Sed substitution that helps us do robust quoting.  It backslashifies
# Sed substitution that turns a string into a regex matching for the
# Sed that helps us avoid accidentally triggering echo(1) options like -n.
	  # See comment for -static flag below, for more details.
    # See func_convert_path_msys_to_w32:
    # See if our shared archives depend on static archives.
    # See if we need to build an old-fashioned archive.
	# See the names of the shared library.
	  self)
      # Separate non-argument short options:
      # Separate optargs to long options:
		    set dummy $deplib_matches; shift
		  set dummy $deplib_matches; shift
	  set dummy $deplibs_check_method; shift
		  set dummy $deplibs_check_method; shift
      set dummy $files; shift
			set dummy "$func_split_long_opt_name" "$func_split_long_opt_arg" ${1+"$@"}
			set dummy "$func_split_short_opt_name" "-$func_split_short_opt_arg" ${1+"$@"}
	    set dummy $library_names
	set dummy $library_names
	set dummy $library_names; shift
set dummy --mode finish ${1+"$@"}; shift
      *)		set dummy "$opt" ${1+"$@"};	shift; break  ;;
      set dummy $rpath
	set dummy $vinfo 0 0 0
    setenv (name, str, 1);
# Set func_split_long_opt_name and func_split_long_opt_arg shell
# Set func_split_short_opt_name and func_split_short_opt_arg shell
  setopt NO_GLOB_SUBST
# set therein.
		# set to false by a later but shorter cmd.
# Set to "yes" if building a shared library automatically hardcodes DIR
# Set to "yes" if exported symbols are required.
# Set to yes if linker adds runtime paths of dependent libraries
# Set to "yes" if using DIR/libNAME${shared_ext} during linking hardcodes
# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
      # Set up the ranlib parameters.
      *) set x \"\$@\" \"\$lt_wr_arg\"; shift;;
	    set x $save_libobjs
		s@/\./@/@g
      -shared)
  -shared           do not build a \`.o' file suitable for static linking
#    $sharedlib_from_linklib_cmd
	            $sharedlib_from_linklib_cmd "$dlprefile"
sharedlib_from_linklib_cmd="printf %s\\n"
    sharedlib_from_linklib_result=""
#    $sharedlib_from_linklib_result
  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify "$1"`
    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' "$1"`
    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' "$1"`
# Shared library path variable.
# Shared library runtime path variable.
# Shared library suffix (normally ".so").
  -shared           only do dynamic linking of libtool libraries
	  # shared platforms.
	-shared | -static | -prefer-pic | -prefer-non-pic)
#! $SHELL
SHELL="/bin/bash"
: ${SHELL="${CONFIG_SHELL-/bin/sh}"}
#         shell:		$SHELL
# Shell to use when invoking shell scripts.
    shift
      shift
	  shift
	    shift
	      shift
			shift
  shift; set dummy --mode clean ${1+"$@"}; shift
  shift; set dummy --mode compile ${1+"$@"}; shift
  shift; set dummy --mode execute ${1+"$@"}; shift
  shift; set dummy --mode finish ${1+"$@"}; shift
  shift; set dummy --mode install ${1+"$@"}; shift
  shift; set dummy --mode link ${1+"$@"}; shift
  shift; set dummy --mode uninstall ${1+"$@"}; shift
# sh-indentation:2
	shlibpath="$finalize_shlibpath"
shlibpath_overrides_runpath=no
    $shlibpath_var=\`\$ECHO \"\$$shlibpath_var\" | $SED 's/::*\$//'\`
shlibpath_var=LD_LIBRARY_PATH
    $shlibpath_var=\"$temp_rpath\$$shlibpath_var\"
      shlib_search_path=
		    shopt -s nocaseglob
# Shorthand for --mode=foo, only valid as the first argument
	s*\$host*'"$host"'*
    # should not be "improved".  See libtool.info.
shouldnotlink=$module
	shouldnotlink=no
# Should we warn about portability when linking against -modules?
	# $show "echo timestamp > $libobj"
      -shrext)
	shrext)
	  shrext_cmds="$arg"
shrext_cmds=".so"
  -shrext SUFFIX    override the standard shared library file extension
      --silent|--quiet)
		    s,.*,import,
# Since each input `\' is now two `\'s, look for any number of runs of
# since we can't tell whether shared libraries were disabled because
	single_module="${wl}-multi_module"
    single_module="${wl}-single_module"
      # single-version convenience libraries.  Whenever we create
  size_t argc;
  size_t i;
	  size_t length;
  size_t len, patlen;
	      size_t p_len;
	    # Skip directories that are in the system default run-time
  /* Skip over the disk name in MSDOS pathnames. */
		skipped_export=:
		skipped_export=false
	# Skip this library if it cannot be dlopened.
# slash if non-empty, suitable for immediately appending a filename
	s*\$LD*'"$LD"'*
	sleep 2
	s*\$LTCC*'"$LTCC"'*
	s*\$LTCFLAGS*'"$LTCFLAGS"'*
      s/^====MARK====//
      s/.*/====MARK====/
	  s/\n# / /
s/$/\\n/
s/\([^\n]*\).*/  fputs ("\1", f);/p
      s/\n//g
  s/\n//g"
      # so, if we see these flags be careful not to treat them like -L
	solaris2.[6789]|solaris2.1[0-9])
	  # Some compilers have problems with a `.al' extension so
      # Some other compiler argument.
      # Some other compiler flag.
    # Some systems cannot cope with colon-terminated $shlibpath_var
      /* some systems can't cope with a ':'-terminated path #' */
	      soname="$dlname"
	    soname="$func_basename_result"
	      soname="$realname"
	  soname="$realname"
soname_spec="\${libname}\${release}\${shared_ext}\$major"
	    soroot="$soname"
		sort +2
		sort -k 3
      # so that -L comes before libs that need it for instance...
# Source FILE, adding directory component if necessary.
SOURCEFILE, then substituting the C source code suffix \`.c' with the
	    # so we also need to try rm && ln -s.
SP2NL="tr \\040 \\012"
   - Space and tab are interpreted as delimiters. They are not treated as
    # special case for '.'
    specialdeplibs=
                specialdeplibs+=" $func_resolve_sysroot_result" ;;
	    # special handling for platforms with PE-DLLs.
   special way:
# specified import library.
# Specify filename containing input files.
# Specify filename containing input files for $NM.
                    specify library version info [each variable defaults to 0]
# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH
    sprintf (str, "%s=%s", name, value);
	s/\$progname/'$progname'/
	s*\$progname*'$progname'*
$srcfile
	  srcfile="$arg"
    srcfile=$func_to_tool_file_result
    srcfile="$nonopt"  #  always keep a non-empty value in "srcfile"
	  srcname="$realname"
	s*\$SHELL*'"$SHELL"'*
      s/[\. \t]*$//
# Standard options:
  # Start from root dir and reassemble the path.
      -static)
	-static)
	*" -static "*) ;;
	    # statically, we need to preload.  We also need to preload any
	      # static and shared are present.  Therefore, ensure we extract
	# static archive out of a convenience library, or when linking
  /* static buffer for getcwd */
static const char *
static const char *debug_opt            = LTWRAPPER_OPTION_PREFIX "debug";
static const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX "dump-script";
static const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;
static const char *nonempty (const char *s);
static const char *nonnull (const char *s);
static const void *lt_preloaded_setup() {
	  staticdest="$destfile"
	  staticdest=$func_lo2o_result
  -static           do not do any dynamic linking of uninstalled libtool libraries
static int lt_debug = 0;
static int lt_debug = 1;
    staticlibs=
	staticlibs+=" $file"
  -static-libtool-libs
	-static-libtool-libs)
	  staticobj=$func_lo2o_result
  -static           only build a \`.o' file suitable for static linking
      -static | -static-libtool-libs)
static void
		   'stat=$?; rm -f "$lockfile"; exit $stat'
	    # Stick the inst_prefix_dir data into the link command.
  /* stop here, and copy so we don't have to do this twice */
        # stop in that case!
# store the result into func_replace_sysroot_result.
	*str = '\0';
  strcat (newargz[0], "/");
  strcat (newargz[0], actual_cwrapper_name);
  strcat (newargz[0], "$objdir");
		  strcpy (concat_name + p_len + 1, wrapper);
  strcpy (concat_name + tmp_len + 1, wrapper);
		  strcpy (concat_name + tmp_len + 1, wrapper);
  strcpy (newargz[0], actual_cwrapper_path);
          strcpy (new_value, add);
          strcpy (new_value + add_len, orig_value);
          strcpy (new_value, orig_value);
          strcpy (new_value + orig_value_len, add);
  strendzap (actual_cwrapper_name, ".exe");
  strendzap (actual_cwrapper_path, actual_cwrapper_name);
strendzap (char *str, const char *pat)
  strendzap (target_name, ".exe");
# string literally.
# STRING may not start with a hyphen.
			  string) : NULL;
    # Strip any trailing slash from the destination.
	      $STRIP $cwrapper
striplib="strip --strip-unneeded"
    stripme=
	stripme=" -s"
	stripped_ext=""
	      stripped_ext=".exe"
# strip PREFIX and SUFFIX off of NAME.
# Strips options in the --lt-* namespace from \$@ and
STRIP="strip"
		    strlen ("$objdir") + 1 + strlen (actual_cwrapper_name) + 1));
      str += len - patlen;
  struct stat s;
  struct stat st;
      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))
      # Substitute the hardcoded libdirs into the rpath.
	  # Substitute the hardcoded libdirs into the rpath.
	      # such unportable linking tricks to link the library
		*-*-sunos*) add_shlibpath="$dir" ;;
# support having both static and shared libraries enabled at the same
      # Suppress compiler output if we already did a PIC compilation.
	  suppress_opt=no
    suppress_opt=yes
    suppress_output=
	suppress_output=' >/dev/null 2>&1'
      s/^Usage:.*--mode=\([^ ]*\) .*/Description of \1 mode:/'
	s/\$with_gnu_ld/'"$with_gnu_ld"'/
	      # symbols from the import library if a shared library is present
# Symbols that must always be exported.
# Symbols that should not be listed in the preloaded symbols.
	symfileobj="$output_objdir/${my_outputname}S.$objext"
	symtab_cflags=
	  *) symtab_cflags+=" $arg" ;;
sys_lib_dlsearch_path_spec="/lib /usr/lib /lib/i386-linux-gnu /usr/lib/i386-linux-gnu /lib/i686-linux-gnu /usr/lib/i686-linux-gnu /usr/local/lib "
sys_lib_search_path_spec="/lib/ /usr/lib/ /usr/X11R6/lib/ /usr/local/lib/"
        sysroot_cmd=
        sysroot_cmd="s/\([ ']\)$sysroot_regex/\1/g;"
      # --sysroot=*          for sysroot support
        sysroot_regex=`$ECHO "$lt_sysroot" | $SED "$sed_make_literal_regex"`
	  # systems (darwin).  Don't bleat about dlopened modules though!
	  # systems that can't hard-code library paths into their executables
	  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)
		  *-*-sysv4*uw2*) add_dir="-L$dir" ;;
		  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \
      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \
      --tag)
	taglist="$taglist $tagname"
  tagname="$1"
	      tagname=$z
#       --tag=TAG            use configuration variables from tag TAG
	      # Take the normal branch if the nm_file_list_spec branch
# Take the output of nm and produce a listing of raw symbols and C names.
      target )
    target)
		  target_name);
  target_name = tmp_pathspec;
  /* target_name transforms -- use actual target program name; might have lt- prefix */
  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));
		tdlname=../bin/$dlname
	  tdlname=$dlname
		tdlname=$func_relative_path_result$dlname
		t dotsl
	    temp_deplibs=
	      *) temp_deplibs+=" $libdir";;
      # template prelinking step
# temporary ltwrapper_script.
temporary object file, and libtool could not work around it because
	tempremovelist=`$ECHO "$output_objdir/*"`
    temp_rpath=
	      *) temp_rpath+="$absdir:" ;;
		   *" $temp_xrpath "*) ;;
	temp_xrpath=
	           temp_xrpath=$func_stripname_result
	  temp_xrpath+=" -R$func_replace_sysroot_result"
			test $# = 0 && func_missing_arg $opt && break
		  test "$absdir" != "$libdir" && \
      # Test again, we may have decided not to build it any more
	  *":$testbindir:"*) ;;
	  testbindir=`$ECHO "$dir" | $SED 's*/lib$*/bin*'`
	  testbindir=`${ECHO} "$libdir" | ${SED} -e 's*/lib$*/bin*'`
	     test "$build_libtool_libs" = no; then
	       { test "$build_libtool_libs" = yes &&
	test "$build_libtool_libs" != yes && \
      test "$build_libtool_libs" != yes && libobjs="$non_pic_objects"
	       test "$build_old_libs" = yes ||
      test "$build_old_libs" = yes && old_library="$libname.$libext"
	  test_cmds=
	test_compile)
	    test "$compiler_needs_object" = yes &&
    test -d "$dest" && isdir=yes
	  *" $test_deplib "*) ;;
	     { test "$deplibs_check_method" = pass_all ||
	&& test "$dlopen_self_static" = unknown && \
	&& test "$dlopen_self" = unknown \
        && test "$dlopen_support" = unknown \
	     test "$dlopen_support" != yes ||
      test "$dlself" != no && \
      test -d "$my_directory_path" || \
      test -d "$my_tmpdir" || \
test "${ECHO+set}" = set || ECHO=${as_echo-'printf %s\n'}
    test -f "$1" &&
	  test -f "$arg" \
      test -f "$file" \
	 test -f "$file"; then
		 test -f "$inst_prefix_dir$libdir/$linklib" ; then
	  test -f "$nlist" || : > "$nlist"
	# test for cygwin because mv fails w/o .exe extensions
      test "$#" -gt 1 && \
	         test "$hardcode_direct_absolute" = no; then
	       test "$hardcode_direct_absolute" = no; then
	     { test "$hardcode_into_libs" != yes ||
	     test "$hardcode_into_libs" = yes; then
		 test "$hardcode_minus_L" != yes &&
		 test "$hardcode_shlibpath_var" = yes; then
	 { test -h "$file"; } >/dev/null 2>&1 ||
	  test "$inst_prefix_dir" = "$destdir" && \
    test "$lalib_p" = yes
		 && { test "$len" -lt "$max_cmd_len" \
	   test "$len" -lt "$max_cmd_len" || test "$max_cmd_len" -le -1; then
		   test "$len" -lt "$max_cmd_len"; then
	      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
		      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
	   test "$linkmode,$pass" = "prog,scan" ||
	 test "$linkmode,$pass" = "prog,scan"; then
	   { test "$linkmode" != prog && test "$linkmode" != lib; }; then
	      test "$linkname" != "$realname" \
	  test "$link_static" = no && newdependency_libs="$abs_ladir/$laname $newdependency_libs"
	       test "$link_static" = yes; }; then
		      || test "$max_cmd_len" -le -1; }
	test "$module" = no && \
	test -n "$7" && \
      test -n "$absdir" && dir="$absdir"
  test -n \"\$absdir\" && thisdir=\"\$absdir\"
	      test -n "$add" && compile_deplibs="$add $compile_deplibs"
	      test -n "$add" && deplibs="$add $deplibs"
	      test -n "$add_dir" && compile_deplibs="$add_dir $compile_deplibs"
	      test -n "$add_dir" && deplibs="$add_dir $deplibs"
	      test -n "$add_dir" && finalize_deplibs="$add_dir $finalize_deplibs"
	      test -n "$add" && finalize_deplibs="$add $finalize_deplibs"
	  test -n "$dep_rpath" && deplibs="$dep_rpath $deplibs"
	test -n "$destfile" && \
	    *) test -n "$dlname" && rmfiles+=" $odir/$dlname" ;;
	  test -n "$dlopen" && dlfiles+=" $dlopen"
	  test -n "$dlpreopen" && dlprefiles+=" $dlpreopen"
      test -n "$export_symbols$export_symbols_regex" && \
  test -n "$func_cygming_gnu_implib_tmp"
  test -n "$func_cygming_ms_implib_tmp"
    test -n "$future_libdirs" && \
    test -n "$generated" && \
	     test -n "$hardcode_libdirs"; then
	 test -n "$hardcode_libdirs"; then
	    test -n "$libdir" && rmfiles+=" $odir/$name $odir/${name}i"
	  test -n "$libobj" && \
	  test -n "$library_names" && \
		 test -n "$library_names"; }; }; then
	test -n "$objs$old_deplibs" && \
    test -n "$old_archive_from_new_cmds" && build_old_libs=yes
	    test -n "$old_library" && linklib="$old_library"
	  test -n "$old_library" && rmfiles+=" $odir/$old_library"
	test -n "$old_library" && staticlibs+=" $dir/$old_library"
	     test "$non_pic_object" = none; then
	     test "$non_pic_object" != none; then
		   test "$non_pic_object" = none; then
	      test -n "$orig_export_symbols" && tmp_export_symbols="$orig_export_symbols"
	  test -n "$orig_export_symbols" && tmp_export_symbols="$orig_export_symbols"
          'test -n "$output_obj" && $RM $removelist; exit $EXIT_FAILURE'
    test -n "$prev" && \
     test -n "$progdir" || progdir=`pwd`
      test -n "$release" && \
	test -n "$release" && \
	  test -n "$relink_command" && srcname="$realname"T
	test -n "$removelist" && \
      test -n "$rpath" && \
	    test -n "$save_libobjs" &&
      test -n "$vinfo" && \
	test -n "$vinfo" && \
      test -n "$xrpath" && \
  test "$opt_debug" = : || preserve_args+=" --debug"
  test "$opt_mode" = compile && func_mode_compile ${1+"$@"}
test "$opt_mode" = execute && func_mode_execute ${1+"$@"}
test "$opt_mode" = finish && func_mode_finish ${1+"$@"}
test "$opt_mode" = install && func_mode_install ${1+"$@"}
{ test "$opt_mode" = link || test "$opt_mode" = relink; } &&
	  test "$opt_mode" != relink && rpath="$compile_rpath$rpath"
	test "$opt_mode" != relink && shlibpath="$compile_shlibpath$shlibpath"
      test "$opt_mode" = uninstall && odir="$dir"
{ test "$opt_mode" = uninstall || test "$opt_mode" = clean; } &&
	    test "$pass" = conv && continue
	     test "$pic_object" = none &&
		   test "$pic_object" = none &&
	     test "$pic_object" != none; then
	     test "$prefer_static_libs,$installed" = "built,no"; }; then
	         test "$prefer_static_libs,$installed" = "built,yes"; } ||
	     { { test "$prefer_static_libs" = no ||
	   { test "$prefer_static_libs" = yes ||
      test "$preload" = yes \
	  # tests/bindir.at for full details.
	   { test "$use_static_libs" = no || test -z "$old_library"; }; then
		test "$want_nocaseglob" = yes && nocaseglob=`shopt -p nocaseglob`
	    test "X$arg" = "X-lc" && continue
	 test "X`cat $lockfile 2>/dev/null`" != "X$srcfile"; then
       test \"X\$file\" != \"X\$progdir/\$program\"; }; then
	  test "X$hardcode_automatic" = Xyes && avoidtemprpath=yes
      test "X$libobjs" = "X " && libobjs=
	    test "X$libobjs" = "X " && libobjs=
	  test "X$libobjs" = "X " && libobjs=
	test "X$libobjs" = "X " && libobjs=
    test "X$libobj" != "X$func_quote_for_eval_result" \
	  test "X$link_all_deplibs" != Xno && libs="$libs $dependency_libs"
        test \"X\$lt_dump_D\" = \"X\$lt_script_arg0\" && lt_dump_D=.
       test -x "$progdir/$progname" && break
  test \"x\$thisdir\" = \"x\$file\" && thisdir=.
	  test -z "$absdir" && \
    test -z "$base_compile" && \
    test -z "$cmd" && \
	      test -z "$concat_cmds" || concat_cmds=$concat_cmds~
test -z "$exec_cmd" && \
	  test -z "$generated_by_libtool_version" && \
    test -z "$install_prog" && \
	        test -z "$libdir" && \
		  test -z "$libdir" && \
		test -z "$libdir" && \
      test -z "$libobj" && {
	    test -z "$libobjs"; then
	     test -z "$non_pic_object" ||
		   test -z "$non_pic_object" ||
	       test -z "$old_library"; }; then
test -z "$opt_mode" && {
	test -z "$pic_flag" && libobjs=`$ECHO "$libobjs" | $SP2NL | $SED "$lo2o" | $NL2SP`
    test -z "$RM" && \
	      # than once as an explicit dependence of a library, or
    # than running their programs.
      # that all symbols are satisfied, otherwise we get a static library.
    # that are linked more than once (e.g. -la -lb -la)
# that is supplied when $file_magic_command is called.
	    #        that some nasty dependency loop isn't accidentally
	    # that the program can be linked against the static library.
	        # that they are being used correctly in the link pass.
     that within double quotes, space and tab are treated like normal
	      # the above command should be used before it gets too long
# The archiver.
# The build system.
# The coded name of the library, if different from the real name.
		# The command line is too long to execute in one step.
	  # the command line is too long to link in one step, link in parts
	  # The command line is too long to link in one step, link piecewise
The commands that this mode executes may require superuser privileges.  Use
# The commands to extract the exported symbol list from a shared archive.
# The commands to list exported symbols.
		  # The command $test_cmds is almost too long, add a
	      # The compiler in the base compile command matches
  # the cwrapper.
# The directories searched by this compiler when creating a shared library.
the \`--dry-run' option if you just want to see what would be executed."
	# The effects of -shared are defined in a previous loop.
	# The effects of -static are defined in a previous loop.
	# the entirety of a libtool archive into another (currently
      # the extraction.
    # The first argument is the command name.
# The first argument to this parsing function should be the
		    # The first file doesn't have a previous command to add.
The following components of INSTALL-COMMAND are treated specially:
The following components of LINK-COMMAND are treated specially:
# the Free Software Foundation; either version 2 of the License, or
	      # The given exports_symbols file has to be filtered, so filter it.
	  # The given exports_symbols file has to be filtered, so filter it.
  /* The GNU banner must be the first non-error debug message */
# The host system.
# The HP-UX ksh and POSIX shell print the target directory to stdout
# The is the core of a fallback implementation of a
# The last name is the one that the linker finds with -lNAME
		    # the last one created.
		# the library:
# The library search path used internally by the compiler when linking
	  # The library was specified with -dlpreopen.
# the libtool wrapper, (b) are identical between the wrapper
# the License, or (at your option) any later version.
# The linker used to build libraries.
	      # the list of exported symbols" if statement, so the
/* The mapping between symbol names and symbols.  */
	      # them as such. So, trigger use of export_symbols_cmds.
# them.  This is particularly important on AIX, because we don't
	      then
# The name of the directory that contains temporary libtool files.
# The name of the static archive.
# The name of this program:
# The names of the tagged configurations supported by this script.
# The name that we can dlopen(3).
      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*
Then, COMMAND is executed, with ARGS as arguments."
    # The next three entries are used to spot a run of precisely
# the $objdir directory.  This is a cygwin/mingw-specific
	      # the one in the tagged configuration.
The output file name is determined by removing the directory component from
   The $output program cannot be directly executed until all the libtool
# The $output program cannot be directly executed until all the libtool
	  # The PATH hackery in wrapper scripts is required on Windows
# The PATH separator for the build system.
  # the path to end with a slash for ease of parsing, so make sure
      # The preopen pass in lib mode reverses $deplibs; put it back here
	  # The previous "srcfile" becomes the current argument.
    # The program doesn't exist.
    # The real first argument should be the name of the installation program.
# There are only two supported options: --lt-debug and
	  # There are really only two kinds -- those that
  # there but not specially marked.
  # there is one (and only one) here.
    # There may be an optional sh(1) argument at the beginning of
The rest of the components are interpreted as arguments to that command (only
# The result will be available in $func_to_host_path_result.
# The root where to search for dependent libraries,and in which our libraries should be installed.
    # The second colon is a workaround for a bug in BeOS R4 sed
    # These lines can sometimes be longer than 43 characters, but
# These SED scripts presuppose an absolute path with a trailing slash.
	    # these systems don't actually have a c library (as such)!
	    # These systems don't actually have a C library (as such)
	    # These systems don't actually have a C or math library (as such)
	    # the situation: Compile a separate program for each library.
	  # the spec.
		      # The statement above tries to avoid entering an
	    # the symlink we replace!  Solaris /bin/ln does not understand -f,
# The TAGs below are defined such that we never get into a situation
# the two new functions must follow this pattern, or func_init_to_host_path_cmd
# the user asked for that or because the platform doesn't support
	    # The wrapper executable is built using the $host compiler,
# the _XPG environment variable is not equal to 1 (one), the special
             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX
      # (they stay in deplibs)
	      # this by putting the import library name into $newdlprefiles.
	  # This code stresses the "libraries are programs" paradigm to its
  thisdir=\`\$ECHO \"\$file\" | $SED 's%/[^/]*$%%'\`
      thisdir=\`pwd\`
      *) thisdir=\"\$thisdir/\$destdir\" ;;
# This environment variable determines our operation mode.
# This fallback implementation is for use when $DLLTOOL
#   This file is part of GNU Libtool.
# This function implements the same check as func_lalib_p without
# This function is only a basic sanity check; it will hardly flush out
# This function returns two values: FUNC_QUOTE_FOR_EVAL_RESULT
This indicates that another process is trying to use the same
	  # This is a shared library
# This is free software; see the source for copying conditions.  There is NO
	    # this is ok
	  # This is the magic to use -rpath.
  # this just eases exit handling
	  # This library was specified with -dlopen.
	# This library was specified with -dlopen.
	# This library was specified with -dlpreopen.
	  # This may have to be revisited, in case too many
	  # This might be a little naive.  We might want to check
This mode accepts the following additional options:
This mode sets the library path environment variable according to \`-dlopen'
# This must work even if $libdir does not exist
# this pattern).
# This predicate returns with zero status (TRUE) if
	# this retains compatibility with .la files and attempts
/* This system does not cope well with relocations in const data.  */
    # This variable tells wrapper scripts just to set shlibpath_var
    # This variable tells wrapper scripts just to set variables rather
/* This works around a problem in FreeBSD linker */
   This wrapper executable should never be moved out of the build directory.
# This wrapper script should never be moved out of the build directory.
# those functions but instead duplicate the functionality here.
	      # though. Also, the filter scales superlinearly with the number of
	  # though. Also, the filter scales superlinearly with the number of
      -thread-safe)
    thread_safe=no
	thread_safe=yes
      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)
        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)
# time on that platform, so we default to a shared-only configuration.
TIMESTAMP=""
      # Time to change all our "foo.ltframework" stuff back to "-framework foo"
	# Time to change all our "foo.ltframework" stuff back to "-framework foo"
        tmp_deplibs=
	tmp_deplibs=
	  tmp_deplibs="$deplib $tmp_deplibs"
	  tmp_deplibs=`$ECHO " $deplibs" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`
	      tmp_deplibs=`$ECHO " $tmp_deplibs" | $SED "s,$i,,"`
	    tmp_deplibs+=" $test_deplib"
        tmpdir=`func_mktempdir`
	        tmpdir=`func_mktempdir`
	    > $tmpdir/tmp-la
	      tmp_export_symbols="$export_symbols"
	  tmp_export_symbols="$export_symbols"
	      *" $tmp_inherited_linker_flag "*) ;;
	  tmp_inherited_linker_flags=`$ECHO "$inherited_linker_flags" | $SED 's/-framework \([^ $]*\)/\1.ltframework/g'`
  tmp_len = strlen (tmp);
		  tmp_len = strlen (tmp);
      tmp_libs=
	    tmp_libs=
	  tmp_libs=
	      *) tmp_libs+=" $deplib" ;;
	      tmp_libs+=" $deplib"
	    *) tmp_libs+=" $deplib" ;;
	    tmp_libs+=" $deplib"
	    tmp_libs+=" $func_resolve_sysroot_result"
	  tmp_libs+=" $i"
		      tmp_pathspec);
		  tmp_pathspec);
  tmp_pathspec = 0;
  tmp_pathspec = find_executable (argv[0]);
  tmp_pathspec = lt_extend_str (actual_cwrapper_name, ".exe", 1);
  tmp_pathspec = lt_extend_str (target_name, ".exe", 1);
		    tmp_pathspec, nonnull (strerror (errno)));
  tmp_pathspec = NULL;
  tmp_pathspec = realpath (pathspec, buf);
  tmp_pathspec = xstrdup (newargz[0]);
	# to avoid creating archives with duplicate basenames if we
	# to be aesthetically quoted because they are evaled later.
	    # TODO: could optimize this to just extract one archive.
  $to_host_file_cmd "$1"
to_host_file_cmd=func_convert_file_noop
to_host_path_cmd=
  $to_host_path_cmd "$1"
    to_host_path_cmd="func_convert_path_${func_stripname_result}"
      # to make a dll which has undefined symbols, in which case not
	# to make the code below a bit more comprehensible
#             to NONDIR_REPLACEMENT.
      tool_oldlib=$func_to_tool_file_result
	tool_oldlib=$func_to_tool_file_result
    tool_output_objdir=$func_to_tool_file_result
# Tool to change global to local symbols on Mac OS X.
# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
# Tool to manipulate fat objects and archives on Mac OS X.
# to runtime path list.
	# to shlibpath, because on Windows, both are PATH and uninstalled
    *,"$to_tool_file_cmd",*)
      $to_tool_file_cmd "$1"
to_tool_file_cmd=func_convert_file_noop
      # -tp=*                Portland pgcc target processor selection
        # Trailing empty path component, ignore it.
	# Transform all the library objects into standard objects.
	  # Transform arg to wrapped name.
	# Transform deplibs into only deplibs that can be linked in shared.
	# Transform .lo files to .o files.
# Transform the output of nm in a C name address pair.
# Transform the output of nm in a C name address pair when lib prefix is needed.
# Transform the output of nm in a proper C declaration.
	# Transform the symbol file into the correct name.
    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15
	    trap "$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE" 1 2 15
	    trap "$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE" 1 2 15
	    trap "$RM $output; exit $EXIT_FAILURE" 1 2 15
treated as uninstalled libtool libraries, other files are standard or library
      # Tru64 UNIX uses -model [arg] to determine the layout of C++
# True if ARG is an import lib, as indicated by $file_magic_cmd
# True iff FILE is a libtool `.la' library or `.lo' object file.
# True iff FILE is a libtool wrapper executable
# True iff FILE is a libtool wrapper script
# True iff FILE is a libtool wrapper script or wrapper executable
	    # Try `ln -sf' first, because the `ln' binary might depend on
	      # Try looking first in the location we're being installed to.
		# Try looking first in the location we're being installed to.
		  try_normal_branch=no
		  try_normal_branch=yes
# Try `$progname --help --mode=MODE' for a more detailed description of MODE.
	  # Try sorting and uniquifying the output.
        # try to create one of the directories concurrently.  Don't
                    try to export only the symbols listed in SYMFILE
                    try to export only the symbols matching REGEX
  # Try to get the absolute directory name.
    # Try to remove the ${objdir}s in the directories where we deleted files
	      tstripme=""
	  tstripme="$stripme"
# Turn $1 into a string suitable for a shell variable name.
      # turning comma into space..
# turn newlines into spaces.
# turn spaces into newlines.
    # two leading slashes without using negated character classes;
typedef struct {
(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
        umask 0077
        umask $save_mktempdir_umask
# Unconvertible file (directory) names in ARG are skipped; if no directory names
   - Unescaped double quotes are removed from the input. Their only effect is
    # Unfortunately, winepath does not exit with a non-zero error code, so we
  # unfortunately, winepath doesn't convert paths, only file names
      uninstall)
	  uninstall)
#         uninstall          remove libraries from an installed directory
uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)
	      uniq > "$nlist"S; then
		    *-*-unixware7*) add_dir="-L$dir" ;;
    # unknown
	# Unknown arguments in both finalize_command and compile_command need
# unless 'noexit' is passed as argument.
# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is
      # Unlock the critical section if it was locked
		    "unrecognized %s option: '%s'",
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
	  unsigned int backslashes;
	      unsigned int j;
		  unsigned int j;
      until $opt_dry_run || ln "$progpath" "$lockfile" 2>/dev/null; do
      # Unusual form of absolute path, do nothing.
  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must
# Usage: $progname [OPTION]... [MODE-ARG]...
"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...
"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE
"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...
"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...
"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...
"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...
"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...
	    # use dlname if we got it. it's perfectly good, no?
# Used to examine libraries when file_magic_cmd begins with "file".
# Used when --lt-debug. Prints its arguments to stdout
	  # Use '-' rather than '.', since we only want one
# uses $file to determine the appropriate filename for a
	# Use standard objects if they are pic
	  use_static_libs=no
	use_static_libs=$prefer_static_libs
	          # Use subshell, to avoid clobbering current variable values
	  # use the current revision as the major version
	  # use them later.  If we have whole_archive_flag_spec, we
using \`ar' and \`ranlib', or on Windows using \`lib'.
	      # using -Wl,-lname, so that libtool does not consider it
	*/usr/bin/install*,*cygwin*)
  # Usually 'no', except on cygwin/mingw when embedded into
  va_end (ap);
      va_end (args);
	      valid_a_lib=no
		    valid_a_lib=yes
		  valid_a_lib=yes
  # Validate options:
  # Validate tagname.
  # Valid mode arguments:
  va_list ap;
  va_list args;
	  # value of $libobjs for piecewise linking.
#             value retuned in "$func_basename_result"
#             value returned in "$func_dirname_result"
#             value returned in "$func_normal_abspath_result"
#             value returned in "$func_relative_path_result"
# variable here.
# variables after splitting LONGOPT at the `=' sign.
# variables after splitting SHORTOPT after the 2nd character.
variables_saved_for_relink="PATH LD_LIBRARY_PATH LD_RUN_PATH GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
# Variables whose values should be saved in libtool wrapper scripts and
# variable will take.  If 'yes', then the emitted script
	  vars="compile_deplibs finalize_deplibs"
	  vars="deplibs"
  va_start (ap, message);
      va_start (args, fmt);
         v.dwPlatformId == VER_PLATFORM_WIN32_NT;
      --verbose|-v)
# Verify that ARG1 (a file name in $build format) was converted to $host
# Verify that FROM_PATH (a path in $build format) was converted to $host
# Verify that TAGNAME is valid, and either flag an error and exit, or
VERSION="2.4.2 Debian-2.4.2-1ubuntu1"
      --version)	func_version				;;
      -version-info)
  -version-info CURRENT[:REVISION[:AGE]]
# Version information for $libname.
      -version-number)
#       --version            print version information
version_type=linux
	    verstring=
	  verstring=""
	verstring=
	    verstring="0.0"
	  verstring="-compatibility_version $minor_current -current_version $minor_current.$revision"
	  verstring+=":${current}.0"
	  verstring="$current.$age.$revision"
	  # verstring for coding it into the library header
	    *)         verstring_prefix=sgi ;;
	    verstring="$verstring:${iface}.0"
	    verstring="$verstring_prefix$major.$iface:$verstring"
	  verstring="$verstring_prefix$major.$revision"
	    versuffix=
	  versuffix=
	versuffix=
	versuffix=""
	    versuffix=".0.0"
	  versuffix=".$current"
	  versuffix=".$current.$age.$revision"
	  versuffix=".$current.$revision"
	  versuffix=".$current.$revision";
	  versuffix="-$major"
		versuffix="-$major"
	  versuffix="$major.$age.$revision"
	  versuffix="$major.$revision"
	versuffix_save=$versuffix
	versuffix=$versuffix_save
# Very basic option parsing. These options are (a) specific to
  /* very simple arg parsing; don't want to rely on getopt
  vfprintf (stderr, message, ap);
    vinfo=
    vinfo_number=no
	vinfo_number=yes
# vi:sw=2
  void *address;
      (void) fprintf (stderr, "%s:%s:%d: ", program_name, file, line);
void lt_debugprintf (const char *file, int line, const char *fmt, ...);
void lt_dump_script (FILE *f);
void lt_dump_script (FILE* f)
void lt_fatal (const char *file, int line, const char *message, ...);
void lt_setenv (const char *name, const char *value);
void lt_update_exe_path (const char *name, const char *value);
void lt_update_lib_path (const char *name, const char *value);
  void *p = (void *) malloc (num);
      (void) vfprintf (stderr, fmt, args);
void *xmalloc (size_t num);
volatile const char * MAGIC_EXE = "$magic_exe";
#   -v, --verbose            print more informational messages than default
want_nocaseglob="no"
	  # want to use save_libobjs as it was before
	  # Warn about portability, can't link against -module's on some
	  # Warn if it was a shared library.
# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
	# was found and let the user know that the "--tag" command
      -Wc,*)
  -Wc,FLAG
  -Wc,FLAG          pass FLAG directly to the compiler
      -weak)
  -weak LIBNAME     declare that the target provides the LIBNAME interface
weak_library_names='$weak_libs'
    weak_libs=
	  weak_libs+=" $arg"
	      # We cannot seem to hardcode it, guess we'll fake it.
	    # we can't check for "0.0" in archive_cmds due to quoting
	# We don't need to create a wrapper script.
	# We have no uninstalled library dependencies, so finalize right now.
      # We keep going just in case the user didn't refer to
	      # we know (pedantically, we assume) the library does not
		      # We might still enter an endless loop, since a link
	  # We need an absolute path.
	# We need an absolute path.
		# We need an absolute path.
    # We need to accept at least all the BSD install flags.
    # We need to display help for each of the modes.
	    # We need to do some special things here, and not later.
	    # We need to hardcode the library path
    # We need to know -static, to get the right output filenames.
	      # we need to preload.
    # we now have a list, one entry per line, of the stringified
	    # We only need to search for static libraries
	      # We recover the dlopen module name by 'saving' the la file
	    # We're trying link a shared library against a static one
      # we shouldn't force the makefile maintainer to figure out
	    # We should set the runpath_var.
	  # We should set the runpath_var.
    # we take advantage of case's first-match behaviour.
	# We used to do the same as -all-static on platforms that
    # We use this script file to make the link, it avoids creating a new file
# What is the maximum length of a command?
# What type of objects to build.
# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)
# When reporting a bug, please describe a test case to reproduce it and
      /^When reporting/,/^Report/{
  # When we are sourced in execute mode, \$file and \$ECHO are already set.
# where, for any given $build/$host combination the 'X_to_Y' value is the
# Whether dlopen is supported.
# Whether dlopen of programs is supported.
# Whether dlopen of statically linked programs is supported.
# Whether libtool must link a program against all its dependency libraries.
# Whether or not to add -lc for building shared libraries.
# Whether or not to build shared libraries.
# Whether or not to build static libraries.
# Whether or not to disallow shared libs when runtime libs are static.
# Whether or not to optimize for fast installation.
# Whether the compiler copes with passing no objects directly.
	  # whether the library exists or not.  But this is on
# whether the shell understands "unset".
	  # whether they linked in statically or dynamically with ldd.
# Whether to use a lock for old archive extraction.
# Whether we are building with GNU ld or not.
# Whether we need a single "-rpath" flag with a separated argument.
# Whether we need soft or hard links.
# Whether we should hardcode library paths into libraries.
# which are still active within double quotes backslashified.
# which contains forward slashes, into one that contains
	  # which has an extra 1 added just for fun
	      # which of the given symbols are data symbols and tag
# Which release of libtool.m4 was used?
      # which system we are compiling for in order to pass an extra
} while (0)
      while :; do
  while :; do
	      while :; do
      while (((len = strlen (new_value)) > 0) && IS_PATH_SEPARATOR (new_value[len-1]))
    while ((p = strchr (lt_argv_zero, '\\')) != NULL)
    while ((p = strchr (newargz[0], '\\')) != NULL)
	  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))
      # While some portion of DIR does not yet exist...
  while (strlen (tmp_pathspec) && !has_symlinks)
      while test ! -d "$my_directory_path"; do
    while test "$#" -gt 0; do
  while test $# -gt 0; do
		      while test -h "$potlib" 2>/dev/null; do
	  while test "$loop" -ne 0; do
  while test -n \"\$file\"; do
	    whole_archive_flag_spec=
whole_archive_flag_spec=""
	  # whole_archive_flag_spec was expanded, because we can't
whole_archive_flag_spec="\${wl}--whole-archive\$convenience \${wl}--no-whole-archive"
# will assume that the directory in which it is stored is
# will be execed at the end.  This prevents here-documents from being
# will break.
	  # Will only happen for absolute or sysroot arguments
  win32_fileres=`file -L $1 2>/dev/null`
  win32_libid_type="unknown"
    win32_libid_type="x86 archive import"
      *)        win32_libid_type="x86 archive static";;
      win32_libid_type="x86 DLL"
    win32_libid_type="x86 DLL"
      win32_nmres=`eval $NM -f posix -A \"$func_to_tool_file_result\" |
	# win32 will think the script is a binary if it has
	windows)
# windows platforms, and (c) all begin with the string "--lt-"
with_gcc=
with_gcc=yes
with_gnu_ld=""
with_gnu_ld="yes"
	      # with having the same library being listed as a
with it are deleted. Otherwise, only FILE itself is deleted using RM."
# with nonzero status (FALSE) otherwise.
# WITHOUT ANY WARRANTY; without even the implied warranty of
# without needing to append a separator.
      # Without this assignment, base_compile gets emptied.
      wl=
      -Wl,*)
  -Wl,FLAG
      # -Wl from whole_archive_flag_spec and hope we can get by with
wl="-Wl,"
      # word splitting and command substitution for a subsequent eval.
      # word splitting, command substitution and and variable
# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh
    # work around that:
	# would be equivalent was wrong.  It would break on at least
# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when
# wrapper executable.  Must ONLY be called from within
	    wrapper=$file
	      wrapper=$func_ltwrapper_scriptname_result
	      wrapper=$func_stripname_result
  /* wrapper name transforms */
  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1
          wrappers_required=no
        wrappers_required=no
      wrappers_required=yes
    write_libobj=${1}
# $write_libobj - a libtool object file
      write_lobj=\'${2}\'
      write_lobj=none
      write_oldobj=\'${3}\'
      write_oldobj=none
#   Written by Gordon Matzigkeit, 1996
# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
      $x
      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler
	xcclinker)
      -XCClinker)
  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)
	xcompiler)
      -Xcompiler)
	-Xcompiler)
  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler
    xdir="$func_dirname_result"
	    xdir="$func_dirname_result"
	  xdir="$func_dirname_result"
		  xdir="$func_dirname_result"
		xdir="$func_dirname_result"
	    # $xdir was prepended to $pic_object above.
		  # $xdir was prepended to $pic_object above.
  XFREE (actual_cwrapper_name);
  XFREE (actual_cwrapper_path);
      XFREE (concat_name);
  XFREE (concat_name);
	      XFREE (concat_name);
	  XFREE (concat_name);
      XFREE (new_value);
        XFREE (str);
  XFREE (target_name);
  XFREE (tmp_pathspec);
	  xlcverstring="${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision"
	xlinker)
      -Xlinker)
  -Xlinker FLAG     pass linker-specific FLAG directly to the linker
		    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);
    XMALLOC (char, (strlen (actual_cwrapper_path) +
		    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);
xmalloc (size_t num)
    xrpath=
	    *) xrpath+=" $arg" ;;
	    *) xrpath+=" $dir" ;;
	*) xrpath+=" $dir" ;;
		   *) xrpath+=" $temp_xrpath";;
: ${Xsed="$SED -e 1s/^X//"}
Xsed="${SED}"' -e 1s/^X//'
Xsed="$SED -e 1s/^X//"
xstrdup (const char *string)
your compiler does not support \`-c' and \`-o' together.  If you
# You should have received a copy of the GNU General Public License
    # zero AND non-empty stdout, which explains the odd construction:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # Zsh 3.x and 4.x performs word splitting on \${1+\"\$@\"}, which
