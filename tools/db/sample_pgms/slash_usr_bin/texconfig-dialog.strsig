              ;;
            ;;
            "")
            *)
          "") : ;;
          *)
        ;;
      ;;
      *)
    "") 
###############################################################################
  "$@" 2>&1 | tee -a $log
      23 80 14 \
    23 80 14 \
" 23 80 2>"$tmpmenu"
          23 80 8 `texconfig dvips paper-list` \
      23 80 9 \
          2>"$tmpmenu"
        2>"$tmpmenu" || break
      2>"$tmpmenu" || break
    A4	'ISO A4 (210x297mm)' \
    || abort "could not create directory \`$tmpdir'"
# abort(errmsg)
      ADD)
      ADD	'add a printer configuration' \
a file. You can look at this file using "LOG". If cursor keys make
	batch mode of texconfig.  Try 'texconfig help' to get a list
be differences between modes of the same resolution. See the comments in the file modes.mf for more details.
    binLoc=`texconfig findprog $bin`
#!/bin/sh
        break
#   call mktexdir script, disable all features (to prevent sticky directories)
canWriteConfig=false
    canWriteConfig=true
canWriteVardata=false
    canWriteVardata=true
  case $1 in
case $1 in
    case $binLoc in
    case `cat "$tmpmenu"` in
  case $DIALOG_PROG in
          case $menuDvipsAns in
        case $menuDvipsAns in
    case $menuDvipsAns in
    case $menuDvipsDest in
  case $needsCleanup in
  case $p in
    cat <<-eof
  cat <<-'eof'
    && { cd / && rm -rf "$tmpdir"; }
      CHANGE)
      CHANGE	'change printer settings (config.$PRINTER)' \
Choose format to set up hyphenation for.
Chosse a mode to be used when metafont generates font bitmaps. The resolution is the most important point, but there might
# cleanup()
cleanup()
cleanup 0
  cleanup 1
#   clean up the temp area and exit with proper exit status
    clear)
      CONF)
      CONF      'show configuration' \
	crashes now, you can still set up your teTeX system using the
                   # date '+%s' (with GNU date)
      DEL)
      DEL	'remove a printer configuration' \
      DEST)
      DEST      'define default destination of the generated Postscript' \
      "") DIALOG_PROG="";;
      *)  DIALOG_PROG=$binLoc; break;;
    $DIALOG_PROG --title "TeX setup utility" ${1+"$@"}
      : ${DIALOG_TERM=generic}
      : ${DIALOG_TERMINFO=$TEXMFMAIN/texconfig}
      DVIPS)
      DVIPS     'dvips configuration' \
dvips GLOBAL section. Define the most common default settings (config.ps).
dvips settings for printer $menuDvipsDest (config.$menuDvipsDest). Define
      echo
  (echo; echo ">>> Executing \`$@' <<<") >> $log
      echo "press return to continue..."
  echo "$progname: $1." >&2
    echo "$progname: cached variable runtime data files cannot be written." >&2
    echo "$progname: configuration data cannot be changed." >&2
  || echo "$progname: directory \`$TEXMFCONFIG' (from TEXMFCONFIG variable) does not exist and cannot be created" >&2
    echo "$progname: directory \`$TEXMFCONFIG' (from TEXMFCONFIG variable) is not writable."
  || echo "$progname: directory \`$TEXMFVAR' (from TEXMFVAR variable) does not exist and cannot be created" >&2
    echo "$progname: directory \`$TEXMFVAR' (from TEXMFVAR variable) is not writable."
echo "$progname: started `date`" > $log
    esac
        esac
          esac
  eval \
        eval runDialog \
#   execute the right dialog program with the right default parameters
      EXIT)
    exit 0
      EXIT      'exit' \
  (exit $rc); exit $rc
  (exit $runDialogRc)
export PATH
export TEXMFCONFIG TEXMFVAR TEXMFMAIN
#   faked TERM and TERMINFO variables when calling that dialog.
      FAQ)
      FAQ       'view frequently asked questions + answers' \
        fi
findDialog
findDialog()
# findDialog(void)
  for bin in whiptail dialog
      FORMATS)
      FORMATS   'edit format definitions' \
      GLOBAL)
      GLOBAL	'change global settings (config.ps)' \
# hack around a bug in zsh:
handle. Maybe, you can use GhostScript to do the conversion (if your
  help|--help)
Hint: all output of external commands (e.g. tex) is logged into
      HYPHENATION)
      HYPHENATION   'customize hyphenation' \
        if test $? = 0; then
if test -d "$TEXMFCONFIG"; then
if test -d "$TEXMFVAR"; then
  if test -n "$DIALOG_PROG"; then
        if test -n "$mode"; then
  if test -n "$mode"; then
        if test -n "$paper"; then
  if test -w "$TEXMFCONFIG"; then
  if test -w "$TEXMFVAR"; then
In general, you need a command like 'lpr' or 'lpr -Pfoo'.
	inside an xterm window.
# invoke the right shell:
    LETTER)
    LETTER 'US (8.5x11in)' 2>"$tmpmenu"
local settings for this printer. To switch back to global settings mode,
      LOG)
        <"$log" eval $PAGER
logexec()
        logexec texconfig conf
            logexec texconfig dvips add $menuDvipsAns
	    logexec texconfig dvips del $menuDvipsAns
          logexec texconfig dvips $menuDvipsPrinterOpt mode "$mode"
            logexec texconfig dvips $menuDvipsPrinterOpt offset "$menuDvipsAns"
          logexec texconfig dvips $menuDvipsPrinterOpt printcmd "$menuDvipsPrintOpt"
          logexec texconfig dvips paper "$paper"
    logexec texconfig mode "$mode"
      logexec texconfig paper a4
      logexec texconfig paper letter
        logexec texconfig rehash
      LOG       "$logMessage" \
    logMessage='view logfile'
log=$tmpdir/log
# main()
      --menu "
      --menu \""
    --menu "
        menuDvips
menuDvips()
          menuDvipsAns=`cat "$tmpmenu"`
        menuDvipsAns=`cat $tmpmenu`
    menuDvipsAns=`cat "$tmpmenu"`
          *)  menuDvipsDest=$menuDvipsAns;;
        menuDvipsDest=ps
  menuDvipsDest=ps
        menuDvipsMsg="
        menuDvipsPrinterOpt=
        menuDvipsPrinterOpt="-P $menuDvipsDest"
              menuDvipsPrintOpt=-
              menuDvipsPrintOpt=$menuDvipsAns
  menuGetMode
        menuGetMode
menuGetMode()
        menuHyphenation
menuHyphenation()
menuMain
menuMain()
# menuMain(void)
      --menu "$menuDvipsMsg
        menuMode
menuMode()
          --menu \'\\n\\nChoose the default papersize definition for dvips.\\n\\n\' \
        menuPaper
menuPaper()
mktexdir()
# mktexdir(args)
  || mktexdir "$TEXMFCONFIG" >/dev/null 2>&1 \
  || mktexdir "$TEXMFVAR" >/dev/null 2>&1 \
      MODE)
        mode=`cat "$tmpmenu"`
  mode=`cat "$tmpmenu"`
      MODE      'change metafont mode/resolution' \
      MODE      'default metafont mode and resolution' \
  MT_FEATURES=none "$TEXMFMAIN/web2c/mktexdir" "$@" >&2
needsCleanup=false
  $needsCleanup && test -n "$tmpdir" && test -d "$tmpdir" \
  needsCleanup=true
NOTE: If you just press return, printing will be disabled and the output saved to a file by default.
      OFFSET)
offset), e.g. 2mm,-0.5in (right 2mm and up .5in):" 23 80 2>"$tmpmenu"; menuDvipsAns=`cat "$tmpmenu"`
      OFFSET    'shift output by some offset' \
	of options.
: ${PAGER=more}
      PAPER)
        paper=`cat "$tmpmenu"`
      PAPER     'default paper: A4 or letter (us)' \
      PAPER     'define the default paper' \
  p=`cat "$tmpmenu"`
printer is supported)." \
#   print `errmsg' to stderr and exit with error code 1
printing system to convert PostScript to a format that your printer can
progname=texconfig-dialog
	$progname version $version.
      ps)
      read a
    readln)
      REHASH)
      REHASH    'rebuild filename databases' \
    reset)
      reset 2>/dev/null
      return
      RETURN)
      RETURN	'back to the main menu' \
    RETURN 'return to the main menu' \
  return $runDialogRc
    runDialog \
  runDialog \
runDialog()
# runDialog(args, ...)
        runDialog --inputbox "Enter a dimension pair (a rightwards offset and a downwards
        runDialog --inputbox "Enter the command to print.
        runDialog --inputbox "Printer name (for future settings of DEST / MODE / OFFSET)" 23 80 2>"$tmpmenu"
        runDialog --inputbox "Printer name (for printer to add)" 23 80 2>"$tmpmenu"
        runDialog --inputbox "Printer name (for printer to delete)" 23 80 2>"$tmpmenu"
    runDialogRc=$?
  && { RUNNING_BSH=true; export RUNNING_BSH; exec /bin/bsh $0 ${1+"$@"}; }
  && { RUNNING_KSH=true; export RUNNING_KSH; exec /bin/ksh $0 ${1+"$@"}; }
select GLOBAL.
Select your default paper format.
#   set up a temp directory and a trap to remove it
setupTmpDir
# setupTmpDir()
setupTmpDir()
#   some convenience utilities for terminal control
#   Some systems have their own dialog. Use it then and do not use
      stty sane 2>/dev/null
      tcdialog --title "TeX setup utility" ${1+"$@"}
termCtl()
# termCtl(arg)
      termCtl clear
  termCtl clear
            termCtl readln
          termCtl readln
        termCtl readln
      termCtl readln
    termCtl readln
  termCtl readln
  termCtl reset
    TERM=$DIALOG_TERM TERMINFO=$DIALOG_TERMINFO \
test -d "$TEXMFCONFIG" \
test -d "$TEXMFVAR" \
test -f /bin/bsh && test -z "$RUNNING_BSH" \
test -f /bin/ksh && test -z "$RUNNING_KSH" \
      test -n "$NO_CLEAR" && return
test -n "${ZSH_VERSION+set}" && alias -g '${1+"$@"}'='"$@"'
        texconfig faq
        texconfig formats
    `texconfig hyphen-list | sed 's@\(.*\)@\1 \1@'`  2>"$tmpmenu"
      texconfig hyphen "$p"
      `texconfig mode-list` 2>"$tmpmenu"
# TeX-Config version 3.0
: ${TEXMFCONFIG=`kpsewhich -var-value=TEXMFCONFIG`}
: ${TEXMFMAIN=`kpsewhich -var-value=TEXMFMAIN`}
: ${TEXMFVAR=`kpsewhich -var-value=TEXMFVAR`}
	The interactive mode works best with a real vt100 terminal or
	The interactive texconfig utility will be started now. Make sure
#   the main menu
then CHANGE it.
# the version string
# Thomas Esser, te@dbs.uni-hannover.de. Public domain.
tmpdir=${TMPDIR-${TEMP-${TMP-/tmp}}}/tcdtmp.$$
tmpmenu=$tmpdir/tmpmenu
To define settings for a specific printer, first ADD a printer definition,
  trap 'cleanup 1' 1 2 3 7 13 15
trouble, you may have more luck with +/- and TAB.
    true) return;;
      tty >/dev/null 2>&1 && clear
  (umask 077; mkdir "$tmpdir") \
  && { UNAMES=`uname -s`; test "x$UNAMES" = xAIX; } 2>/dev/null \
  && { UNAMES=`uname -s`; test "x$UNAMES" = xULTRIX; } 2>/dev/null \
unset RUNNING_BSH
unset RUNNING_KSH
	Usage: $progname [--help|--version]
  --version)
version=1184605103 # seconds since `00:00:00 1970-01-01 UTC'
  # we need eval to get the command line right... :-(
  while :; do
You can use dvips for non PostScript printers, if you can setup your
	your screen has at least 24 rows and 80 columns. If texconfig
