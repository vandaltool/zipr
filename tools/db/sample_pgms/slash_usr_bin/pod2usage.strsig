#############################################################################
    1 : print SYNOPSIS only
    2 : print SYNOPSIS sections and any OPTIONS/ARGUMENTS sections
    3 : print the entire manpage (similar to running pod2text)
are used then standard output is used. If ">&2" or ">&STDERR" is used then
@ARGV = ('-')  unless (@ARGV);
# as Perl itself.
Based on code for B<pod2text(1)> written by
[B<-exit>S< >I<exitval>]
[B<-help>]
[B<-man>]
[B<-output>S< >I<outfile>]
[B<-pathlist> I<dirlist>]
B<pod2usage> invokes the B<pod2usage()> function in the B<Pod::Usage>
B<pod2usage> will read the given input file looking for pod
Brad Appleton E<lt>bradapp@enteract.comE<gt>
[B<-verbose> I<level>]
# Copyright (c) 1996-2000 by Bradford Appleton. All rights reserved.
## Define options
documentation and will print the corresponding usage message.
## Dont default to STDIN if connected to a terminal
    eval 'exec perl -S $0 "$@"'
eval 'exec /usr/bin/perl  -S $0 ${1+"$@"}'
    'exit=i',
GetOptions(\%options, @opt_specs)  ||  pod2usage(2);
=head1 AUTHOR
=head1 DESCRIPTION
=head1 NAME
=head1 OPTIONS AND ARGUMENTS
=head1 SEE ALSO
=head1 SYNOPSIS
    'help',
        if 0;
    if 0; # not running under some shell
if (@ARGV > 1) {
If no input file is specified then standard input is read.
=item B<-exit> I<exitval>
=item B<-help>
=item B<-man>
=item B<-output> I<outfile>
=item B<-pathlist> I<dirlist>
=item B<pod2usage>
=item B<-verbose> I<level>
=item I<file>
list should be separated by a ':' on Unix (';' on MSWin32 and DOS).
L<Pod::Usage>, L<pod2text(1)>
    'man',
module. Please see L<Pod::Usage/pod2usage()>.
my %options = ();
my @opt_specs = (
my %usage = ();
    'output=s',
=over 12
## Parse options
    'pathlist=s',
Please report bugs using L<http://rt.cpan.org>.
pod2usage(1)  if ($options{help});
    pod2usage(2);
pod2usage(2) if ((@ARGV == 0) && (-t STDIN));
# pod2usage -- command to print usage messages from embedded pod docs
pod2usage - print usage messages from embedded pod docs in files
pod2usage(\%usage);
pod2usage(VERBOSE => 2)  if ($options{man});
Print a brief help message and exit.
    print STDERR "pod2usage: Too many filenames given\n\n";
Print this command's manual page and exit.
Specifies one or more directories to search for the input file if it
standard error is used.
The desired level of verbosity to use:
The exit status value to return.
The output file to print to. If the special names "-" or ">&1" or ">&STDOUT"
The pathname of a file containing pod documentation to be output in
# This file is part of "PodParser". PodParser is free software;
Tom Christiansen E<lt>tchrist@mox.perl.comE<gt>
$usage{-exitval}  = $options{'exit'}      if (defined $options{'exit'});
$usage{-input}    = shift(@ARGV);
usage message format (defaults to standard input).
$usage{-output}   = $options{'output'}    if (defined $options{'output'});
$usage{-pathlist} = $options{'pathlist'}  if (defined $options{'pathlist'});
$usage{-verbose}  = $options{'verbose'}   if (defined $options{'verbose'});
#use diagnostics;
use Getopt::Long;
use Pod::Usage;
use strict;
#!/usr/bin/perl
    'verbose=i',
was not supplied with an absolute path. Each directory path in the given
# you can redistribute it and/or modify it under the same terms
