 %02x->(%02x:%02x)->%02x
 %02x %c %s
%04x:%02x:%02x.%x
 %04x->(%04x:%04x)->%04x
 %08x->(%08x:%08x)->%08x
%-20s %s (%s)
-A <method>	Use the specified PCI access method (see `-A help' for a list)
<base>:		<address>
BASE_ADDRESS_0
BASE_ADDRESS_1
BASE_ADDRESS_2
BASE_ADDRESS_3
BASE_ADDRESS_4
BASE_ADDRESS_5
BRIDGE_CONTROL
BRIDGE_ROM_ADDRESS
CACHE_LINE_SIZE
(cap %02x @%02x) 
Capability
CAP_AGP3
CAP_CCRC
CAP_CHSWP
CAP_HOTPLUG
CAP_MSIX
CAP_PCIX
cap pos w name
CAP_SATA
CAP_SECURE
CAP_SLOTID
CAP_SSVID
CARDBUS_CIS
CB_BUS_NUMBER
CB_CAPABILITIES
CB_CARDBUS_BASE
CB_CARDBUS_LATENCY
CB_CARDBUS_NUMBER
CB_IO_BASE_0
CB_IO_BASE_0_HI
CB_IO_BASE_1
CB_IO_BASE_1_HI
CB_IO_LIMIT_0
CB_IO_LIMIT_0_HI
CB_IO_LIMIT_1
CB_IO_LIMIT_1_HI
CB_LEGACY_MODE_BASE
CB_MEMORY_BASE_0
CB_MEMORY_BASE_1
CB_MEMORY_LIMIT_0
CB_MEMORY_LIMIT_1
CB_SEC_STATUS
CB_SUBORDINATE_BUS
CB_SUBSYSTEM_ID
CB_SUBSYSTEM_VENDOR_ID
CLASS_DEVICE
CLASS_PROG
DEVICE_ID
<device>:	-s [[[<domain>]:][<bus>]:][<slot>][.[<func>]]
-D		List changes, don't commit them
dump.name
--dumpregs
--dumpregs	Dump all known register names and exit
		-d [<vendor>]:[<device>]
(ecap %04x @%03x) 
ECAP_ACS
ECAP_AER
ECAP_ARI
ECAP_ATS
		[E]CAP_<capability-name>
		[E]CAP<capability-number>
ECAP_DSN
ECAP_MFVC
ECAP_RBCB
ECAP_RCECOLL
ECAP_RCILINK
ECAP_RCLINK
ECAP_SRIOV
ECAP_VNDR
__errno_location
Extended capability
-f		Don't complain if there's nothing to do
Filter specification expected
__fprintf_chk
-G		Enable PCI access debugging
General options:
GLIBC_2.0
GLIBC_2.3.4
GLIBC_2.4
__gmon_start__
HEADER_TYPE
		<hex>:<mask>
-H <mode>	Use direct hardware access (<mode> = 1 or 2)
INTERRUPT_LINE
INTERRUPT_PIN
Invalid mask "%s"
Invalid offset "%s"
Invalid option -%c
Invalid or misplaced option -%c
Invalid PCI access parameter syntax: %s
Invalid value "%s"
Invalid width "%c"
Invalid width "%s"
IO_BASE_UPPER16
IO_LIMIT
IO_LIMIT_UPPER16
_IO_putc
_IO_stdin_used
_Jv_RegisterClasses
Known PCI access methods:
Known PCI access parameters:
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
LIBPCI_3.0
LIBPCI_3.1
libpci.so.3
Mask "%s" is out of range
Missing value
Missing width
		<named-register>
No operation specified
No such PCI access method: %s (see `-A help' for a list)
-O <par>=<val>	Set PCI access parameter (see `-O help' for a list)
Option -%c requires an argument
PCI access options:
pci_alloc
pci_filter_init
pci_filter_match
pci_filter_parse_id
pci_filter_parse_slot
pci_find_cap
pci_get_method_name
pci_init
pci_lookup_method
pci_read_byte
pci_read_long
pci_read_word
pci_scan_bus
pci_set_param
pci_walk_params
pci_write_byte
pci_write_long
pci_write_word
PREF_BASE_UPPER32
PREF_LIMIT_UPPER32
PREF_MEMORY_BASE
PREF_MEMORY_LIMIT
PRIMARY_BUS
__printf_chk
<reg>:		<base>[+<offset>][.(B|W|L)]
Register number %02x out of range
REVISION
%s: Access of width %d to register %04x out of range
SEC_LATENCY_TIMER
SECONDARY_BUS
setpci: 
setpci version 3.1.8
setpci: Warning: No devices selected for "%s".
Setting commands:
__sprintf_chk
%s: %s %04x not found
__stack_chk_fail
strcasecmp
strncasecmp
%s: Unaligned access of width %d to register %04x
Try `setpci --help' for more information.
Unable to allocate %d bytes of memory
Unable to parse filter -d %s
Unable to parse filter -s %s
Unable to parse option -%c
Unaligned register address %02x
Unknown filter option -%c
Unknown hardware configuration type %s
Unknown register "%s"
Unrecognized PCI access parameter: %s (see `-O help' for a list)
Usage: setpci [<options>] (<device>+ <reg>[=<values>]*)*
<value>:	<hex>
Value "%s" is out of range
<values>:	<value>[,<value>...]
-v		Be verbose
--version
__vfprintf_chk
