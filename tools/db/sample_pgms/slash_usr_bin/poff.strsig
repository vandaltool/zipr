 "a") MODE="all"; shift ;;
  -a        Stop all pppd's.  'provider' will be ignored.
#!/bin/sh
# by Phil Hands <phil@hands.com>.  Distributed under the GNU GPL
case $FLAG in
   cat <<!EOF!
  -c        Cause pppd to renegotiate compression.
# Check for additional options.  Should be none.
 "c") SIG=USR2; DONE=signalled; shift ;;
DONE="stopped"
 "d") SIG=USR1; DONE=signalled; shift ;;
  -d        Toggle the state of pppd's debug option.
   echo "$0: I could not find a pppd process for provider '$1'. None ${DONE}."
    echo "$0: Illegal option -- ${OPTARG}."
        echo "$0: $KILL failed.  None ${DONE}."
    echo "$0: More than one pppd running and no "-a" option and 
    echo "$0: No pppd is running.  None ${DONE}."
    exit 0
        exit 1
    exit 1
   exit 1
 "?") exit 1;
# Find out how many pppd's are running.
    FLAG="null"
# FLAG on error with "null".
# Get option.  If there are none replace the "?" that getopts puts in
getopts :rdcavh DUMMY
getopts rdcavh FLAG
# Get the PIDs of all the pppds running.  Could also get these from
  -h        Print this help summary and exit.
 "h") usage; exit 0 ;;
# $Id: poff,v 1.8 1999/08/28 16:34:51 phil Exp $
# If either there are no arguments or '-a' was specified kill all the
if [ "$#" -eq 0 -a "$N" -gt 1 -a $FLAG != "a" ]; then
if [ "$#" -eq 0 -o "$MODE" = "all" ]; then
if [ "$?" -eq 0 ]; then
if [ "$?" -ne 0 ]; then
if [ "$PID" ]; then
If 'provider' is omitted pppd will be stopped or signalled if and only if
# If there are no arguments we can't do anything if there is more than one
if [ -x /usr/bin/kill ]; then
if [ -z "$PIDS" ]; then
  KILL="/bin/kill"
    $KILL -$SIG $PID || {
    $KILL -$SIG $PIDS || {
  KILL="/usr/bin/kill"
N=$(echo "$PIDS" | wc -w)
no arguments supplied. Nothing ${DONE}."
  none      Stop pppd.
options:
Options may not be combined.
PEER=$(echo $1 | sed -e 's#/#\\/#g')
PID=$(ps -o pid,cmd axw | awk "/^ *[0-9]* *(\/usr\/sbin\/)?pppd call $PEER( |\$)/ {print \$1}")
PIDS=$(pidof pppd)
# poff is pointless if pppd isn't running.
# pppd running.
# pppd's.
'provider' is supplied the pppd controlling the connection to that
provider will be stopped or signalled.
  -r        Cause pppd to drop the line and redial.
 "r") SIG=HUP;  DONE=signalled; shift ;;
SIG=TERM
# There is an argument, so kill the pppd started on that provider.
there is exactly one running unless the '-a' option was given.  If
usage ()
usage: $0 [option] [provider]
# /var/run, but pppd doesn't create .pid files until ppp is up.
 "v") echo "$0$Revision: 1.8 $_TrickToPrint_RCS_Revision"; exit 0 ;;
  -v        Print version and exit.
# Written by John Hasler <john@dhh.gt.org> and based on work 
