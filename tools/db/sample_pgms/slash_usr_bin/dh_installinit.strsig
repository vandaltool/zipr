	}       
		addsubstvar($package, "misc:Depends", "upstart-job");
					# always stops script
					autoscript($package,"postinst", "postinst-init",
				autoscript($package,"postinst", "postinst-init-nostart",
					autoscript($package,"postinst", "postinst-init-restart",
					autoscript($package,"postinst", "postinst-upstart",
				autoscript($package,"postinst", "postinst-upstart-replace",
					autoscript($package,"postinst", "postinst-upstart-restart",
			autoscript($package,"postrm","postrm-init",
				autoscript($package,"preinst", "preinst-removeconffile",
					autoscript($package,"prerm","prerm-init",
					autoscript($package,"prerm","prerm-init-norestart",
					autoscript($package,"prerm","prerm-upstart",
					autoscript($package,"prerm","prerm-upstart-norestart",
B<#DEBHELPER#> token.
B<dh_installinit> is a debhelper program that is responsible for installing
B<dh_installinit --onlyscripts> is called, this program will assume that an
B<dh_installinit> [S<I<debhelper options>>] [B<--name=>I<name>] [B<-n>] [B<-R>] [B<-r>] [B<-d>] [S<B<--> I<params>>]
between invocations of this command. Otherwise, it may cause multiple
build directories, and in the former case providing compatibility handling
build directory.
Call the named shell I<function> if running the init script fails. The
code to replace an init script with that upstart job.
completed. This is different than the default behavior, which stops the
described below.)
dh_installinit - install upstart jobs or init scripts into package build directories
			doit("install","-d","$tmp/etc/default");
				doit("install","-d","$tmp/etc/init");
			doit("install","-d","$tmp/etc/init.d");
		doit("install","-p","-m644",$default,"$tmp/etc/default/$script");
			doit("install","-p","-m644",$job,"$tmp/etc/init/$jobfile.conf");
		doit("install","-p","-m755",$init,"$tmp/etc/init.d/$script");
		doit("ln","-sf","/lib/init/upstart-job","$tmp/etc/init.d/$jobfile");
Do not modify F<postinst>/F<postrm>/F<prerm> scripts.
Do not start the init script on install or upgrade, or stop it on removal.
Do not stop init script on upgrade.
Do not stop the init script until after the package upgrade has been
		# -d on the command line sets D_FLAG. We will 
downtime during upgrade. But you should make sure that the daemon will not
				else {
			else {
		else {
	elsif ($dh{D_FLAG}) {
	elsif ($dh{INIT_SCRIPT}) {
ending in B<d>. (Note: this takes precedence over the B<--init-script> parameter
		# ensures that our /etc/init.d/ symlink points to a valid
F<debian/package.init> and F<debian/package.default>.
F<debian/package.name.default>, instead of the usual F<debian/package.upstart>,
F<etc/init.d/> (and also use it as the filename for the defaults file, if it
	# Figure out what filename to install it as.
filename I<name> instead of the default filename, which is the package name.
filename the init script is installed as in etc/init.d and the default file
filename the upstart job file is installed as in F<etc/init/> , or for the
foreach my $package (@{$dh{DOPACKAGES}}) {
for non-upstart systems.
F<package.scriptname> and if so will install it as the init script in
function should be provided in the F<prerm> and F<postinst> scripts, before the
get confused by the package being upgraded while it's running before using
=head1 AUTHORS
=head1 DESCRIPTION
=head1 FILES
=head1 NAME
=head1 NOTES
=head1 OPTIONS
=head1 SEE ALSO
=head1 SYNOPSIS
if a file in the F<debian/> directory exists that looks like
	if ($default ne '' && ! $dh{ONLYSCRIPTS}) {
	if (defined $dh{NAME}) {
		if (defined($dh{U_PARAMS})) {
		if (! $dh{NOSCRIPTS}) {
			if (! $dh{NO_START}) {
		if (! $dh{ONLYSCRIPTS}) {
				if ($dh{RESTART_AFTER_UPGRADE}) {
				if ($dh{R_FLAG} || $dh{RESTART_AFTER_UPGRADE}) {
			if (! $dh{UPSTART_ONLY}) {
		if (! -d "$tmp/etc/default") {
			if (! -d "$tmp/etc/init") {
		if (! -d "$tmp/etc/init.d") {
	if ($init ne '' && ! $dh{ONLYSCRIPTS}) {
	if ($init ne '' || ($dh{ONLYSCRIPTS} && ! -e "$tmp/etc/init/$jobfile.conf"))
	if ($job ne '' || ($dh{ONLYSCRIPTS} && -e "$tmp/etc/init/$jobfile.conf"))
	if ($job ne '' || ($dh{ONLYSCRIPTS} && -e "$tmp/etc/init/$jobfile.conf")) {
If no upstart job file is installed in the target directory when
		if ($params eq '') {
		if ($script=~m/(.*)d$/) {
If this exists, it is installed into etc/default/I<package> in the package
If this exists, it is installed into etc/init/I<package>.conf in the package
		# implementation
init(options => {
		$init=pkgfile($package,$script) || pkgfile($package,"init") ||
init script is being installed and not provide the compatibility symlinks
	"init-script=s" => \$dh{INIT_SCRIPT},
Install the upstart job file or the init script (and default file) using the
instances of the same text to be added to maintainer scripts.
into etc/init.d/I<package> in the package build directory.
is installed as in F<etc/default/> . This may be useful for daemons with names
is installed). If you use this parameter, B<dh_installinit> will look to see
It also automatically generates the F<postinst> and F<postrm> and F<prerm> commands
=item B<-d>, B<--remove-d>
=item B<--error-handler=>I<function>
=item B<--init-script=>I<scriptname>
=item B<--> I<params>
=item B<--name=>I<name>
=item B<-n>, B<--noscripts>
=item B<--no-start>
=item B<-o>, B<--onlyscripts>
=item B<-r>, B<--no-restart-on-upgrade>
=item B<-R>, B<--restart-after-upgrade>
=item B<-u>I<params> B<--update-rcd-params=>I<params>
=item B<--upstart-only>
=item debian/I<package>.default
=item debian/I<package>.init
=item debian/I<package>.upstart
			$jobfile=$script=$1;
		$jobfile=$script=$dh{NAME};
Joey Hess <joeyh@debian.org>
				# just update-rc.d
L<debhelper(7)>
make it easy to let B<dh_installinit> find it.
	my $default=pkgfile($package,'default');
	my $init='';
	my $jobfile=$package;
	my $job=pkgfile($package,"upstart");
		my $params='';
	my $script;
	my $tmp=tmpdir($package);
named F<debian/package.name.upstart>, F<debian/package.name.init> and
needed to set up the symlinks in F</etc/rc*.d/> to start and stop the init
new and only to be used on Upstart-based systems.
	"no-restart-on-upgrade" => \$dh{R_FLAG},
	"no-start" => \$dh{NO_START},
Note that this command is not idempotent. L<dh_prep(1)> should be called
Only call B<update-rc.d>. Useful for rcS scripts.
Only install an upstart job file, and do not include maintainer script
Only modify F<postinst>/F<postrm>/F<prerm> scripts, do not actually install any init
	"onlyscripts-upstart" => \$dh{ONLYSCRIPTS},
or upstart dependencies.
Otherwise, if this exists, it is installed
parameter will be ignored completely for upstart jobs.
			$params="defaults";
			$params=join(' ',@{$dh{U_PARAMS}});
passed to L<update-rc.d(8)>.
Pass I<params> to L<update-rc.d(8)>. If not specified, B<defaults> will be
			pkgfile($package,"init.d");
preference to the files it normally installs.
	"r" => \$dh{R_FLAG},
		# remove a trailing 'd' from the package name and 
	"remove-d" => \$dh{D_FLAG},
			# removes rc.d links
Remove trailing B<d> from the name of the package, and use the result for the
					# restart (or start if new install) job
	"R|restart-after-upgrade" => \$dh{RESTART_AFTER_UPGRADE},
Scott James Remnant <scott@canonical.com>
script, default files, or upstart job. May be useful if the init script or
		$script=$dh{INIT_SCRIPT};
script in the F<prerm>, and starts it again in the F<postinst>.
				$script=$jobfile;
		$script=$package;
scripts.
						"s/#JOB#/$jobfile/;s/#ERROR_HANDLER#/$dh{ERROR_HANDLER}/");
					"s!#OLD#!/etc/init.d/$script!g;s!#PACKAGE#!$package!g");
					"s/#SCRIPT#/$script/;s/#ERROR_HANDLER#/$dh{ERROR_HANDLER}/");
				"s/#SCRIPT#/$script/;s/#INITPARMS#/$params/;s/#ERROR_HANDLER#/$dh{ERROR_HANDLER}/");
					"s/#SCRIPT#/$script/;s/#INITPARMS#/$params/;s/#ERROR_HANDLER#/$dh{ERROR_HANDLER}/");
						"s/#SCRIPT#/$script/;s/#INITPARMS#/$params/;s/#ERROR_HANDLER#/$dh{ERROR_HANDLER}/");
					# start if new install) script
					# start script
Steve Langasek <steve.langasek@canonical.com>
					# stops script only on remove
		# the parameters to pass to update-rc.d. If not set,
This can be useful for daemons that should not have a possibly long
		# This is set by the -u "foo" command line switch, it's
this option.
This parameter is deprecated, use the B<--name> parameter instead. This
This parameter is intended for use when the "package.upstart" file is
This program is a part of debhelper.
					# update-rc.d, and restart (or
					# update-rc.d, and start script
	"update-rcd-params=s", => \$dh{U_PARAMS},
upstart job files or init scripts with associated defaults files into package
upstart job is shipped and/or installed by upstream in a way that doesn't
	"upstart-only" => \$dh{UPSTART_ONLY},
use Debian::Debhelper::Dh_Lib;
Use I<scriptname> as the filename the init script is installed as in
use strict;
		# use that as the name.
#!/usr/bin/perl -w
			warning("\"$package\" has no final d' in its name, but -d was specified.");
		# we have to say "defaults".
When this parameter is used, B<dh_installinit> looks for and installs files
