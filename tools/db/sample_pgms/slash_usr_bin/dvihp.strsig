' 0 1 2 3 6 7 13 15
  and then \$DVILJ (dvilj4 by default).
    -A)  opt="$opt -D1";;                       # -A => -D1 (odd pages)
-A    print odd pages
#!/bin/sh
    -B)  opt="$opt -D2";;                       # -B -> -D2 (even pages)
-B    print even pages
  case "$1" in
  cd "${TMPDIR}"
cmd="$DVILJ $opt $output_opt$output \"$vfless_dvi\" $maybe_spool_cmd"
  # Doing this pipe means the true exit status might get lost, but it
    -d*) opt="$opt `echo $1 | sed s/d/-D/`";;
-d #  set debug bits to # (see documentation)
-D #  set resolution to #
    -d)  shift; opt="$opt --D$1";;              # -d => --D (debug)
    -D)  shift; opt="$opt -R$1";;               # -D => -R (resolution)
# dvilj can't read from a pipe, so always write to a file.
: ${DVILJ=dvilj4}       # the dvilj variant to run
  echo "$0: dvicopy $infile failed." >&2
  echo "$0: $DVILJ failed." >&2
      echo "`basename $0` (Dviljk 2.6) $version"
  echo "`basename $0`: Missing argument(s)." >&2
  || { echo "cannot create directory \`$tmpdir'."; exit 1; }
      echo "There is NO warranty.  This script is public domain."
  echo "Try \``basename $0` --help' for more information." >&2
         else shift; output="$1"; fi;;
Email bug reports to tex-k@mail.tug.org."
      exit 0;;
  exit 0
  exit 1
  exit 2
# Expand VF references.
    -f)  infile=; output=-;;                    # -f (run as filter)
-f    run as filter
    -help|--help) echo "$usage"; exit 0;;
# $Id: dvihp,v 1.3 1996/12/03 19:53:56 karl Exp karl $
if dvicopy $infile >"$vfless_dvi"; then :; else
if eval $cmd; then :; else
# If $infile is null, this will read standard input.
if test $# -eq 0; then
if test -z "$output"; then
    *)   infile="$1";;
  In the absence of other options, pipe the PCL to \$SPOOL (lpr by default).
-l #  don't print pages after #
    -l*) opt="$opt `echo $1 | sed s/l/t/`";;
    -l)  shift; opt="$opt -t$1";;               # -l => -t (ending page)
# Make sure the filenames are unique on MS-DOS
  maybe_spool_cmd=
  maybe_spool_cmd="| $SPOOL $spool_opt"
-m    manual feed
    -m)  opt="$opt -A";;                        # -m => -A (manual feed)
    -n*) opt="$opt `echo $1 | sed s/^-n/-p/`";;
           # No remaining args, output to foo.lj.
-n #  print # pages
    -n)  shift; opt="$opt -p$1";;               # -n => -p (page count)
    -o)  if test $# -eq 1; then                 # -o (output file)
    -o*) output="`echo $1 | sed 's/^-o//'`";;
  Options are recognized from dvips where possible:
    -*)  opt="$opt $1";;                        # pass other options through
         opt="$opt -x$x -y$y";;
-O #,#  set/change paper offset to #,# mm
    -O)  shift; x=`echo $1 | sed 's/,.*//'`     # -O => -x, -y (page offsets)
-o s  output to s instead of spooling
    -O*) temp="`echo $1 | sed 's/^-O//'`"
Other options are passed to the dvilj program.
           output=`basename $infile .dvi`.lj
output_opt=-e
  output=- # output to stdout
-p #  don't print pages before #
    -p*) opt="$opt `echo $1 | sed s/p/f/`";;
    -P*) output=; spool_opt="$1";;
    -p)  shift; opt="$opt -f$1";;               # -p => -f (starting page)
    -P)  shift; output=; spool_opt="-P$1";;     # -Pprinter
-Ps   pass directly to lpr
rcs_revision='$Revision: 1.3 $'
# Run dvicopy, then dvilj[k].  kb@mail.tug.org, 1994.  Public domain.
  # seems worth it to avoid the temporary file. (Bad enough to have one.)
    --)  shift; infile="$1"; break;;            # -- => end of options
: ${SPOOL=lpr}          # used to print an LJ file
  test -d "$tmpdir" && { rm -f "$tmpdir"/*; rmdir "$tmpdir"; }
: ${TMPDIR=${TEMP-${TMP-/tmp}}} # for the dvicopy output
tmpdir="${TMPDIR}"/dvihp$$
# Translate DVI to LJ.
  Translate the given DVIFILE to Hewlett-Packard PCL by calling dvicopy
# Try to accept arguments a la dvips, from Thomas Esser.
(umask 077; mkdir "$tmpdir") \
unset infile opt output
usage="Usage: `basename $0` [OPTIONS] [DVIFILE[.dvi]].
$verbose && echo "Running $cmd" >&2
$verbose && echo "Running dvicopy $infile >$vfless_dvi" >&2
verbose=false
$verbose && ls -l "$vfless_dvi" >&2
version=`set - $rcs_revision; echo $2`
    -version|--version) 
vfless_dvi="$tmpdir"/dvi$$.vf
-v    verbose operation
    -v)  verbose=true; opt="$opt -v";;
while test $# -gt 0; do
         x=`echo $temp | sed 's/,.*//'`
    -x*) opt="$opt `echo $1 | sed s/x/m/`";;
-x #  set magnification to #
    -x)  shift; opt="$opt -m$1";;               # -x => -m (magnification)
         y=`echo $1 | sed 's/.*,//'`;  opt="$opt -x$x -y$y";;
         y=`echo $temp | sed 's/.*,//'`;
