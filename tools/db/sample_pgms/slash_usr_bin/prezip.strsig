            ;;
      ;;
    -* ) ;;
  and its documentation for any purpose is hereby granted without
# and its documentation for any purpose is hereby granted without
  and that both that copyright notice and this permission notice 
# and that both that copyright notice and this permission notice 
  appear in supporting documentation.  Kevin Atkinson makes no
# appear in supporting documentation.  Kevin Atkinson makes no
             as "precat" the default action is to decompress to stdout.
             as "preunzip" the default action is to decompress.
            base2=`basename "$f" .cwl`
            base=`basename "$f" .pz`
            base=`basename "$f" .wl`
#!/bin/sh
  case $1 in
case $cmd in
    case $f in
          case $mode in
  case $mode in
case $mode in
      case $parm in
    case $parm in
  case $p in
  cat <<EOF
cmd=`basename "$0"`
  combined so that "-c -s" is the same as "-cs".
    compress   ) mode=z ;;
  Copyright (c) 2004
# Copyright (c) 2004
   -c --stdout      decompress to standard output
      c ) stdout=t ;;
          d )
   -d --decompress  force decompression
    decompress ) mode=d ;;
            dir=`dirname "$f"`
      d ) mode=d ;;
    done
  d ) zip2 d ;;
  echo "$cmd: $1" >&2
      elif test -e "$f"
            elif test "$file" != "$base2"
            elif test "$force"
    else
      else
        else
            else
error () 
        error "$f: No such file"
      * ) error "invalid option -- $parm";;
    *          ) error "invalid option -- $parm";;
    error "Output file $3 already exists."
    errors=t
  errors=t
    esac
      esac
          esac
  exit 0
  exit 1
  fee, provided that the above copyright notice appear in all copies  
# fee, provided that the above copyright notice appear in all copies  
   -f --force       force
      f ) force=t ;;
      fi
        fi
            fi
            file=`basename "$f"`
    force      ) force=t ;;
  from the standard input to the standard output.  Short flags can be
    help       ) mode=h ;;
   -h --help        display help
      h ) mode=h ;;
  If invoked as "prezip" the default action is to compress.
  If no file names are given then prezip will compress or decompress
  if test -e "$3" -a ! "$force"
  if test $? -eq 0
if test "$errors" 
      if test \( -f "$f" -a ! -L "$f" \) \
            if test "$file" != "$base"
            if test "$nocwl" -o "$file" = "$base"
if test $num -gt 0
    if test "$sort"
        if test "$stdout"
    if test -z "$keep"; then rm "$2"; fi
  if test -z "$quiet"; then echo "$cmd: $1" >&2 ; fi
    keep       ) keep=t ;;
  Kevin Atkinson
# Kevin Atkinson
   -k --keep        keep input files
      k ) keep=t ;;
      LC_COLLATE=C sort -u | prezip-bin -z "$cmd: $2"
    license    ) mode=L ;;
  likely _increase_ the size of binary data.
   -L --license     display software license
      L ) mode=L ;;
  mode=h
*)        mode=h ;;
    nocwl      ) nocwl=t ;;
    num=`expr $num + 1`
              -o \( \( "$stdout" -o "$force" \) -a -L "$f" \)
              out="$dir/$base"
              out="$dir/$base2.wl"
              out="$f.out"
      parm=`expr "$p" : '\(.\)'`
    parm=`expr "x$p" : '...\(.*\)'`
  Permission to use, copy, modify, distribute and sell this software
# Permission to use, copy, modify, distribute and sell this software
      p=`expr "$p" : '.\(.*\)'`
    p=`expr "x$p" : '..\(.*\)'`
precat)   mode=d; stdout=t ;;
preunzip) mode=d ;; 
    prezip-bin -d "$cmd: $2"
  prezip-bin -V
      prezip-bin -z "$cmd: $2"
  Prezip is _not_ a general purpose compressor.  It should only be
prezip)   mode=z ;;
  purpose.  It is provided "as is" without express or implied
# purpose.  It is provided "as is" without express or implied
   -q --quiet       suppress all warnings
      q ) quiet=t ;;
    quiet      ) quiet=t ;;
  representations about the suitability of this software for any
# representations about the suitability of this software for any
    return 0
    return 1
    rm "$3"
   -S --nocwl       do not rename .wl suffix to .cwl (use .wl.pz instead)
      S ) nocwl=t ;;
    sort       ) sort=t ;;
   -s --sort        sort and remove duplicates before compressing
      s ) sort=t ;;
    stdout     ) stdout=t ;;
    then
      then
        then
            then
            then 
  usage $0 [-dzhLV] [-cfksSq] [file ...]
  used on sorted word lists or other similar text files.  It will
    version    ) mode=V ;;
      V ) mode=V ;;
   -V --version     display version
warn () 
              warn "can't guess original name - using \"$out\""
              warn "$f does not end in .pz or .cwl - ignored"
        warn "$f is not a regular file - ignored"
  warranty.
# warranty.
    while test "$p"
          z )
   -z --compress    dorce compression
  zip2 $1 "$2: " < "$2" > "$3"
          zip2 $mode "$f: " < "$f"
              zip d "$f" "$out"
              zip z "$f" "$dir/$base.cwl"
              zip z "$f" "$f.pz"
      z ) mode=z ;;
  z ) zip2 z ;;
