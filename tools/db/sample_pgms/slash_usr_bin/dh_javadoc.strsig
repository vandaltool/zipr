Add package listings to common directory
Add substvar for documentation dependencies
A file named debian/package.javadoc may list additional packages to have
also provide a substitution variable for documentation package dependencies.
  # and remove gjdoc_rawcomment.cache
Any package specified as parameters will be installed into the first package
B<dh_javadoc> [S<I<debhelper options>>] [B<-p<package>>] [B<--sourcedir I<source path>>] [S<I<Java packages>>]
be supplied with javadoc documentation (neither in their main package or in a
Check parameters more carefully.
		close PACKAGES or warning("Error closing debian/$package.javadoc: $!");
dh_javadoc - generate javadoc documentation and install in package directory
dh_javadoc is a debhelper program that is responsible for generating HTML Java
dh_javadoc is told to act on. Use of the standard debhelper B<-p> option is
documentation and installing it in package directories. This should be done in
documentation generated. These should be separated by new lines.
documentation in a common place so that javadoc pages may be interlinked; and
	doit('install', '-g', '0', '-o', '0', '-d', "$tmp/usr/share/doc/$package/api/");
	doit('javadoc', "-sourcepath",  $src_dir, "-d",  "$tmp/usr/share/doc/$package/api/", @packages);
  doit('rm', "-f", "gjdoc_rawcomment.cache");
Don't put the 'common' directory in all packages - refer to one in
		error("/usr/bin/javadoc not found");
foreach my $package (@{$dh{DOPACKAGES}}) {
Generate dependency substvar based on additional doc packages used.
	# generate javadoc
=head1 AUTHOR
=head1 DESCRIPTION
=head1 NAME
=head1 OPTIONS
=head1 SEE ALSO
=head1 SYNOPSIS
=head1 TODO
highly recommended.
	if ($dh{SOURCEDIR}){
	if (-e "debian/$package.javadoc"){
	if (! -e "/usr/bin/javadoc"){
implementation. When new features are added to this (such as overview files),
init(options => {
=item + 
=item B<--sourcedir I<source path>>
=item I<Java packages>
Javadoc generation is done using gjdoc, currently the only free javadoc
L<debhelper(7)>
	# make directory
Mark Howard <mh@debian.org>
		my $i = 0;
	my @packages = @ARGV;
		my @pkgs;
	my $src_dir;
	my $tmp=tmpdir($package);
Names of Java packages to be documented.
		open PACKAGES, "debian/$package.javadoc"
			or error("Unable to open file: debian/$package.javadoc: $!");
Other items depend on gjdoc improvements:
		@packages = (@packages, @pkgs);
separate documentation package)
        "sourcedir=s" => \$dh{SOURCEDIR},
Specify the source path in which to look for Java source files.
		$src_dir = getcwd();
		$src_dir = getcwd .'/'. $dh{SOURCEDIR};
the documentaion package of all Java libraries. Normal Java programs should not
This program is designed similar to debhelper
this script will be modified accordingly.
use Cwd;
use Debian::Debhelper::Dh_Lib;
use strict;
#!/usr/bin/perl -w
/usr/share/gjdoc & insist on creating that dependency 
When the Java policy is modified, this script will also install links to the
		while(<PACKAGES>){chomp($pkgs[$i++]=$_);}
