## -----------------------------------------------------------------------
##   (at your option) any later version; incorporated herein by reference.
    $b = int((shift @colorset) * 255 / 63 + 0.5);
##   Boston MA 02111-1307, USA; either version 2 of the License, or
		$c += 16;
	    $c = get_nybble();
		$c = get_nybble();
		$c += get_nybble() << 4;
	$ch = ord($ch);
%color = ();
    $color{$i} = pack("ccc", $r, $g, $b);
## Convert an LSS-16 image to PPM
##   Copyright 2001-2008 H. Peter Anvin - All Rights Reserved
	    $c = $xsize-$x if ( $c > $xsize-$x );
		# Double-nybble run
    } else {
	} else {
eval { binmode STDIN; };
eval { binmode STDOUT; };
eval { use bytes; };
    exit 1;
	    exit 1;
	exit 127;
foreach $arg ( @ARGV ) {
for ( $i = 0 ; $i < 16 ; $i++ ) {
for ( $y = 0 ; $y < $ysize ; $y++ ) {
    $g = int((shift @colorset) * 255 / 63 + 0.5);
    if ( $arg eq '-map' ) {
	    if ( $c == 0 ) {
    if ( defined($nybble_buf) ) {
if ( $magic != 0x1413f33d ) {
    if ( $map ) {
	if ( $n != $last ) {
	if ( read(STDIN, $ch, 1) != 1 ) {
if ( read(STDIN, $header, 56) != 56 ) {
##   it under the terms of the GNU General Public License as published by
    $last = 0;
	    $last = $n;
## lss16toppm:
##	lss16toppm [-map] < file.lss > file.ppm
($magic, $xsize, $ysize, @colorset) = unpack("Vvvc48", $header);
$map = 0;
	$map = 1;
    my($ch,$n);
	$n = $ch & 0xF;
	$n = get_nybble();
	$n = $nybble_buf;
	$nybble_buf = $ch >> 4;
	    # Output run
print "255\n";
	    print $color{$n};
	    print $color{$n} x $c;
	printf STDERR "#%02x%02x%02x=%d\n", $r, $g, $b, $i;
print "P6\n";
    print STDERR "$0: Invalid file format\n";
    print STDERR "$0: Short file\n";
	    print STDERR "$0: Short read on input (file corrupt)\n";
	print STDERR "$0: Unknown option: $arg\n";
print "$xsize $ysize\n";
    return $n;
    $r = int((shift @colorset) * 255 / 63 + 0.5);
sub get_nybble() {
##   the Free Software Foundation, Inc., 53 Temple Place Ste 330,
## The -map causes the color map to be output on stderr.
##   This program is free software; you can redistribute it and/or modify
	    # Truncate overlong runs
	undef $nybble_buf;
    undef $nybble_buf;		# Nybble buffer starts clear on each line
## Usage:
#!/usr/bin/perl
    while ( $x < $xsize ) {
	    $x++;
    $x = 0;
	    $x += $c;
