analyzing colors...
BMPEncode 1
BMPEncode 2
BMPlencolormap
BMPwriteinfoheader
BMPwritergb
__bss_start
cannot handle cBitCount: %d
Can't specify both --windows and --os2 options.
couldn't write row %ld
d$\;t$\|;
GLIBC_2.0
__gmon_start__
in the BMP format are 1, 4, 8, and 24 bits per pixel
Invalid --bpp value specified.  The only values valid
_IO_putc
_IO_stdin_used
is the input file specificaton
_Jv_RegisterClasses
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
libnetpbm.so.10
More than %d colors found
number of bits per pixel you requested: %d.
pm_bitfini
pm_bitinit
pm_bitwrite
pm_close
pm_error
pm_maxvaltobits
pm_message
pm_openr
pm_optParseOptions2
pm_writelittlelong
pm_writelittleshort
ppm_colorhisttocolorhash
ppm_computecolorhist
ppm_freecolorhash
ppm_freecolorhist
ppm_init
ppm_lookupcolor
ppm_readppm
row had bad number of bytes: %d
%s: internal error!
stdout: write error
__strdup
There are too many colors in the image to represent in the
Too many arguments.  The only argument accepted
Writing %d bits per pixel truecolor (no pallette)
Writing %d bits per pixel with a color pallette
You may use Ppmquant to reduce the number of colors in the image.
