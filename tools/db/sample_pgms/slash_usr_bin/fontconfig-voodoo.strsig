        
            abort(_("A configuration exists already. Use '--force' to "
            # abort here
            abort(_("No fontconfig-voodoo configuration found for the "
                      action="store_true",
                      action="store_true", dest="silent", default=False)
    # check if we have arguments at all
                    "current LANGUAGE"))
    def abort(msg=None):
def main():
    # do the work
            else:
        except FontConfig.ExceptionNoConfigForLocale:
        except FontConfig.ExceptionUnconfigured:
    fc = FontConfig.FontConfigHack()
            fc.getCurrentConfig()
        fc.removeConfig()
            fc.setConfigBasedOnLocale()
            fc.setConfig(options.lang)
from gettext import gettext as _
from LanguageSelector import FontConfig
from optparse import OptionParser
        " helper for a clean abort "
                      help=_("Force even when a configuration exists"))
                      help=_("Guess a configuration based on the "
                      help=_("List the available fontconfig-voodoo configs"))
                      help=_("Remove the current fontconfig-voodoo config"))
                      help=_("Set fontconfig voodoo for the selected "
                      help=_("Show the current fontconfig-voodoo config"))
    if len(sys.argv[1:]) == 0:
            if msg:
if __name__ == "__main__":
    if not options.force:
        if not options.silent:
    if options.auto:
    if options.lang:
    if options.list:
    if options.remove_current:
    if options.show_current:
            if options.silent:
            # if this does not raise a "Unconfigured" exception, we
import sys
    # init the option parser
                             "language"))
                             "LANGUAGE environment. Sets the config to "
    main()
                             "'none' if nothing suitable was found"))
    (options, args) = parser.parse_args()
                    "overwrite it. "))
    parser.add_option("-a", "--auto", dest="auto",
    parser.add_option("-c", "--current", dest="show_current",
    parser.add_option("-f", "--force", dest="force",
    parser.add_option("-l", "--list", dest="list",
    parser.add_option("-q", "--quiet",
    parser.add_option("-r", "--remove-current", dest="remove_current",
    parser.add_option("-s", "--set", dest="lang",
    parser = OptionParser(usage)
        parser.print_help()
    # parse them
            pass
            print _("Aborting")
                print "Current config: %s" % fc.getCurrentConfig()
                print fc.getCurrentConfig()
                print msg
        print "\n".join(fc.getAvailableConfigs())
            print _("Unconfigured")
                    "selected locale"))
        sys.exit(0)
        sys.exit(1)
        try:
    usage = "usage: %prog [options]"
#!/usr/bin/python
