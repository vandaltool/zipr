                ;;
		    ;;
0|1|2|3)	;;
		[024568])	NUP="1$OPTARG";;
[0-9]*)		;;
[0-9]*)				;;
		[0-9]*\ [0-9]*)
                    0=KM 2300DL / HP 1000 / HP 1005
                  0=no, 1=Y, 2=X, 3=XY
                  0=Perceptual, 1=Colorimetric, 2=Saturation, 3=Absolute
		0)	set_clipping 170 80	169 80;;
		0)	set_clipping 171 78	171 78;;
		0)	set_clipping 174 74	174 74;;
		0)	set_clipping 174 78	173 78;;
		0)	set_clipping 176 84	176 84;;
		0)	set_clipping 200 100	200 100;;
		0)	set_clipping 204 102	204 106;;
		0)	set_clipping 206 102	206 102;;
		0)	set_clipping 207 107	207 107;;
                    10=ICM RGB color profile (using -G *.icm file)
11|a5|A5)	PAPER=11;	paper=a5;        XDIM="6992";  YDIM="4960"
1200x600)	;;
    1200x600)	SCREEN=screen1200.ps;;
1|2|3|4|5)	;;
13|b5|B5)	PAPER=13;	paper=b5;        XDIM="8598";  YDIM="6070"
	1)	case "$OPTARG" in
                  1=Cyan, 2=Magenta, 3=Yellow, 4=Black
                    1=HP 1018 / HP 1020 / HP 1022
                    1=letter, 5=legal, 7=executive, 9=A4, 11=A5, 13=B5jis
1|letter)	PAPER=1;	paper=letter;    XDIM="10200"; YDIM="6600"
                    1=off, 2=longedge, 3=shortedge
1|off|none)	DUPLEX=1;;
		1)	PAPER=260; set_clipping 126 87	126 87;;
		1)	PAPER=261; set_clipping 126 87	126 87;;
		1)	PAPER=262; set_clipping 174 78	173 78;;
1|photo)
                    1=Photos, 2=Photo and text, 3=Graphics and text
		1)	set_clipping 170 80	169 80;;
		1)	set_clipping 171 78	171 78;;
		1)	set_clipping 173 84	173 84;;
		1)	set_clipping 174 74	174 74;;
		1)	set_clipping 174 78	173 78;;
		1)	set_clipping 176 84	176 84;;
		1)	set_clipping 192 96	192 96;;
		# 1)	set_clipping 96 96	288 96;;
                    1=standard, 2=transparency, 3=glossy, 257=envelope,
1|standard|plain)		MEDIA=1;;
                    1=upper, 2=lower, 4=manual, 7=auto
1|upper)	SOURCE=1;;
                    20=env#10, 27=envDL 28=envC5 34=envB5 37=envMonarch
20|"env#10")	PAPER=20;	paper=env10;     XDIM="4950";  YDIM="5700"
			# 2200DL
-2/-3/-4/-6/-8/-10/-12/-14/-15/-16/-18
[234689]|1[024568])	PREFILTER="nup";;
	[234689])	NUP="$opt";;
    [2368]|1[0458])
2400x600)	;;
	2400x600)	lrx=`expr $lrx \* 2`;;
    2400x600)	SCREEN=screen2400.ps;;
	2400x600)	ulx=`expr $ulx \* 2`;;
2400x600)	XDIM=`expr $XDIM \* 2`;;
		    257=16K 197x273, 258=fanfold german legal, 259=b5iso,
		    257=16K 197x273, 263=16K 184x260, 264=16K 195x270,
257|16k197x273) PAPER=257;      paper=executive;XDIM="9306";  YDIM="6448"
257|envelope)			MEDIA=257;;	# -z0
                    258=fanfold german legal
258|fanfoldgermanlegal)
                    258=fanfold german legal, 268=photo4x6, 269=photo5x8,
		    258=light, 261=cardstock, 263=rough, 265=labels,
258|light)			MEDIA=258;;	# -z1, -z2
259|b5iso|B5ISO) PAPER=259;	paper=b5;        XDIM="8316";  YDIM="5904"
                    259=letterhead, 261=thickstock, 262=postcard, 263=labels
259|letterhead)			MEDIA=259;;	# -z0
                    260=postcard, 261=doublepostcard, 262=A6
261|thickstock|cardstock)	MEDIA=261;;
262|postcard|heavy)		MEDIA=262;;
263|16k184x260) PAPER=263;      paper=executive;XDIM="8692";  YDIM="6142"
263|labels|rough)		MEDIA=263;;	# -z0 labels, -z[12] rough
264|16k195x270) PAPER=264;      paper=executive;XDIM="9212";  YDIM="6378"
265|labels)			MEDIA=265;;	# -z1, -z2
                    267=envelope, 273=vellum, 512=color, 513=letterhead,
267|envelope)			MEDIA=267;;	# -z1, -z2
268|photo4x6)
269|photo5x8)
		    270=photo10x15
270|photo10x15)
273|vellum)			MEDIA=267;;	# -z1, -z2
27|envDL)	PAPER=27;	paper=envDL;     XDIM="5200";  YDIM="5200"
28|envC5)	PAPER=28;	paper=envC5;     XDIM="7650";  YDIM="5408"
2|graphics)
                    2=HP Pro P1102 / P1566 / P1606dn
2|long*)	DUPLEX=2;;
2|lower)	SOURCE=2;;
		2)	PAPER=43; set_clipping 126 87	126 87;;
		2)	PAPER=70; set_clipping 174 78	173 78;;
		2)	PAPER=82; set_clipping 126 87	126 87;;
		2)	set_clipping 122 87	122 87;;
		2)	set_clipping 126 87	126 87;;
		2)	set_clipping 170 80	169 80;;
		2)	set_clipping 171 78	171 78;;
		2)	set_clipping 173 84	173 84;;
		2)	set_clipping 174 74	174 74;;
		2)	set_clipping 174 78	173 78;;
		2)	set_clipping 176 84	176 84;;
		2)	set_clipping 192 96	192 96;;
2|transparency)			MEDIA=2;;
34|envB5)	PAPER=34;	paper=envB5;     XDIM="8316";  YDIM="5892"
37|envMonarch)	PAPER=37;	paper=envMonarch;XDIM="4650";  YDIM="4500"
	    3)	GAMMAFILE=hp-cp1025-rgb-392-bpp1.icm;;
3|glossy)			MEDIA=3;;
                    3=HP Pro CP1025nw
		3)	PAPER=43; set_clipping 126 87	126 87;;
		3)	PAPER=70; set_clipping 174 78	173 78;;
		3)	PAPER=82; set_clipping 126 87	126 87;;
		3)	set_clipping 122 87	122 87;;
		3)	set_clipping 126 87	126 87;;
		3)	set_clipping 170 80	169 80;;
		3)	set_clipping 171 78	171 78;;
		3)	set_clipping 173 84	173 84;;
		3)	set_clipping 174 74	174 74;;
		3)	set_clipping 174 78	173 78;;
		3)	set_clipping 176 84	176 84;;
		3)	set_clipping 192 96	192 96;;
3|short*)	DUPLEX=3;;
43|260|postcard)		paper=executive;XDIM="4728";  YDIM="3498"
		    43=postcard, 70=A6, 82=double postcard rotated,
    [49]|1[26])
4|manual)	SOURCE=4;;
4|tonersave)
512|color)			MEDIA=512;;
513|letterhead)			MEDIA=513;;	# -z1, -z2
                    514=preprinted, 515=prepunched, 516=recycled
514|preprinted)			MEDIA=514;;	# -z1, -z2
515|prepunched)			MEDIA=515;;	# -z1, -z2
516|recycled)			MEDIA=516;;	# -z1, -z2
	[57])	error "Can't find acceptable layout for $opt-up";;
5|legal)	PAPER=5;	paper=legal;     XDIM="10200"; YDIM="8400"
600x600)	;;
	600x600)	lrx=`expr $lrx / 2`;;
    600x600)	SCREEN=screen1200.ps;;
	600x600)	ulx=`expr $ulx / 2`;;
600x600)	XDIM=`expr $XDIM / 2`;;
70|262|A6)			paper=A6;	XDIM="4956";  YDIM="3498"
		#792.000000 612.000000 1 0.000000 0.000000
7|auto)		SOURCE=7;;
7*)	DEFAULTCOLORMODE=10
7|executive)	PAPER=7;	paper=executive; XDIM="8700";  YDIM="6300"
82|261|doublepostcardrotated)
    9.*)
9|a4|A4)	PAPER=9;	paper=a4;        XDIM="9920";  YDIM="7016"
	A)	AIB=-A;;
		    /AccurateScreens true
                  adjust colors using the setcolorrendering PS operator.
    AIB=-A
#* along with this program; if not, write to the Free Software
	and converts it to Zenographics ZjStream printer format.
#	and will pixel skew if you try to print there.
		    /Angle 37
#	area for ZjStream printers.  Various versions of ZjS print
#* (at your option) any later version.
#* Authors: Rick Richardson <rick.richardson@comcast.net>
BASENAME=`basename $PROGNAME`
		"`basename $ICC2PS` -o $GAMMAFILE -t$INTENT > $ICCTMP.crd.ps"
	$BASENAME [options] [ps-file]
	B)	BC=-B;;
	    $BC $AIB $COLOR2MONO $NOPLANES $EXTRAPAD -D$DEBUG
    BC=-B
		#%%BeginFeature: *CustomPageSize True
	b)	GSBIN="$OPTARG";;
#!/bin/sh
#			  break anything if you use them.
#	But it won't hurt it if we do the clipping here.
#* but WITHOUT ANY WARRANTY; without even the implied warranty of
	# Can't handle different size pages
    case "$COLORMODE" in
case "$COLORMODE" in
case "$DENSITY" in
case "$DUPLEX" in
    case "$GAMMAFILE" in
	case "$GAMMAFILE" in
    case "$GSVER" in
case "$GSVER" in
case "$MEDIA" in
	    case "$MODEL" in
		case "$MODEL" in
case "$MODEL" in
    case "$NUP" in
case $NUP in
	case $opt in
case "$PAPER" in
case "$QUALITY" in
	case "$RES" in
case "$RES" in
case "$SOURCE" in
		case "$tmp" in
	cat <<EOF
	cat > $ICCTMP.selcrd.ps <<-EOF
	    cat >> $ICCTMP.usecie.ps <<-EOF
		cat >> $ICCTMP.usecie.ps <<-EOF
	cat > $ICCTMP.usecie.ps <<-EOF
		cat >$TMPFILE
	c)	COLOR=-c;;
-C colormode      Colormode [$COLORMODE]
	C)	COLORMODE="$OPTARG";;
CLIP_LOG=
CLIP_LR=
	CLIP_LR="-l ${lrx}x${lry}"
CLIP_UL=
	CLIP_UL="-u ${ulx}x${uly}"
CMDLINE="$*"
		    Code numbers may vary with printer model.
COLOR2MONO=
                  color correction using the setcolortransfer PS operator.
    COLORMODE=
COLORMODE=default
		COLORMODE=gs9
colorspace() {
Color Tweaking Options:
		# Command line only
COPIES=1
#* Copyright (C) 2003-2006  Rick Richardson
#	corrupted image data.
-c                Print in color (else monochrome)
CRDBASE="$PREFIX/share/foo2zjs/crd"
    # Create a Postscript CRD
	    create_crd
	create_crd
create_crd() {
	    cs=`colorspace $GAMMAFILE`
		/Current /ColorRendering findresource setcolorrendering
Custom*)
Custom*x*)
dbgcmd() {
	D)	DEBUG="$OPTARG";;
	dd if=$1 bs=4c skip=4 count=1 2>/dev/null
                  -dDITHERPPI=nnn, etc.  May appear more than once. []
-d duplex         Duplex code to send to printer [$DUPLEX]
	d)	DUPLEX="$OPTARG";;
Debugging Options:
    default)
#	default clipping region.  Unfortunately, this is a trouble
*)	DEFAULTCOLORMODE=2
	DEFAULTCOLORMODE=2
    default)	COLORMODE=$DEFAULTCOLORMODE;;
DENSITY=3       #Medium
DIM="${XDIM}x${YDIM}"
-D lvl            Set Debug level [$DEBUG]
# doesn't have :-
    done
DUPLEX=1
		    echo
		    echo "	$0 $CMDLINE"
	    echo "$@" >&2
	echo "$BASENAME: $1" >&2
		    echo "Illegal command:"
	echo none
# e.g. /usr/share/ghostscript/7.07/lib/gs_statd.ps
elif [ "$COLOR" != "" -a "$QUALITY" = as ]; then
    elif [ -f $CRDBASE/$COLORMODE ]; then
    elif [ -r "$SHARE/icm/$1" ]; then
    elif [ -r "$SHARE/icm/$GAMMAFILE" ]; then
	elif [ -r "$SHARE/icm/$GAMMAFILE" ]; then
    else
	    else
		    else
# Else, the input comes from stdin.
#	engines react differently when asked to print into their
error() {
		*)	error "Can't find acceptable layout for 1$OPTARG-up";;
	error "Can't find CRD '$COLORMODE' in . or in $CRDBASE"
		    error "Custom page size '$PAPER' != 1-99999"
		    error "Custom page size [XY]DIM != 1-99999"
	error "Illegal call to nup()."
*)		error "Illegal print density (-T) $DENSITY";;
*)		error "Illegal resolution $RES";;
		|| error "Problem converting .ICM file to Postscript"
*)		error "Unimplemented paper code $PAPER";;
		*)	error "Unimplemented paper code $PAPER";;
    error "Unknown color method '$COLORMODE'"
*)		error "Unknown duplex code $DUPLEX";;
*)				error "Unknown media code $MEDIA";;
*)	error "Unknown model code $MODEL";;
*)		error "Unknown source code $SOURCE";;
    esac
	    esac
		esac;;
    exec < $1
		exec <$TMPFILE
EXTRAPAD=
# fallback to whatever the Linux distro has installed (usually 7.07)
	# Faster, but can't handle AllIsBlack or BlackClears
	[ -f $file ] && rm -f $file
		    fi
#	Figure out the paper dimensions in pixels/inch, and set the
#	Figure out USERNAME
	file="$ICCTMP.$i"
# Filter thru psnup if N-up printing has been requested
foo2zjs-pstops $PSTOPS_OPTS | \
	"foo2zjs -r$RES -g$DIM -p$PAPER -m$MEDIA \
| foo2zjs -r$RES -g$DIM -p$PAPER -m$MEDIA -n$COPIES -d$DUPLEX -s$SOURCE \
	Foomatic printer wrapper for the foo2zjs printer driver.
    for i in crd.ps log usecie.ps selcrd.ps
#* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
		    /Frequency 137
    [ -f "$TMPFILE" ] && rm -f $TMPFILE
    GAMMAFILE=
	    GAMMAFILE=
	GAMMAFILE=
GAMMAFILE=
    GAMMAFILE="$CRDBASE/prolog.ps"
	    *)	GAMMAFILE=DL2312.icm;;
	GAMMAFILE="$GAMMAFILE $COLORMODE"
    GAMMAFILE="$GAMMAFILE $CRDBASE/2300w-1200@150-l250-kx,ucr100,0-per.crd"
    #GAMMAFILE="$GAMMAFILE $CRDBASE/2300w-1200@150-l250-kx,ucr100,50-per.crd"
    #GAMMAFILE="$GAMMAFILE $CRDBASE/2300w-1200@150-l250-kx,ucr100,75-per.crd"
    GAMMAFILE="$GAMMAFILE $CRDBASE/2300w-1200@150-l250-kx,ucr125,75-per.crd"
	GAMMAFILE="$GAMMAFILE $CRDBASE/$COLORMODE"
    GAMMAFILE="$GAMMAFILE $CRDBASE/kh.crd"
    GAMMAFILE="$GAMMAFILE $CRDBASE/kx.crd"
    GAMMAFILE="$GAMMAFILE $CRDBASE/$SCREEN"
	*)	GAMMAFILE="$ICCTMP.usecie.ps $ICCTMP.crd.ps $ICCTMP.selcrd.ps";;
	    GAMMAFILE="$SHARE/icm/$GAMMAFILE"
	GAMMAFILE="-sOutputICCProfile=$GAMMAFILE"
	GAMMAFILE="-sOutputICCProfile=$SHARE/icm/$GAMMAFILE"
	G)	GAMMAFILE="$OPTARG";;
-G gamma-file.ps  Prepend gamma-file to the Postscript input to perform
-g gsopts         Additional options to pass to Ghostscript, such as
	g)	GSOPTS="$GSOPTS $OPTARG";;
#* GNU General Public License for more details.
-G profile.icm    Convert profile.icm to a Postscript CRD using icc2ps and
    # Graphic and Text
                    gs9=New gs9+ ICM CMYK color profile (using -G *.icm file)
    GSBIN=gs904
        GSBIN=${GSBIN:-gs}
        GSBIN=${GSBIN:-gs.foo}
    GSBIN=gsgit	# gs 9.04+
	"$GSBIN $PAPERSIZE -g$DIM -r$RES $GSDEV $GSOPTS $GAMMAFILE"
	GSDEV=-sDEVICE=bitcmyk
GSDEV=-sDEVICE=pbmraw
	GSDEV=-sDEVICE=pksmraw
GS="$GSBIN -q -dBATCH -dSAFER -dQUIET -dNOPAUSE"
    GSOPTS="-dCOLORSCREEN -dMaxBitmap=500000000 $GSOPTS"
    GSOPTS="-dCOLORSCREEN $GSOPTS"
    GSOPTS="-dMaxBitmap=500000000 $GSOPTS"
| ($GS $PAPERSIZE -g$DIM -r$RES $GSDEV $GSOPTS \
GSVER=`$GSBIN --version`
			# Hack fix for LJ1000
		    /HalftoneName (Round Dot Screen) cvn
		    /HalftoneType 1
# HP LaserJet 1000	- Same as 2200 DL, plus needs -P
# HP LaserJet 1005	- Same as 2200 DL, plus needs -P
# HP LaserJet 1018	- Same as 2200 DL, plus needs -P -z1 -L0
# HP LaserJet 1020	- Same as 2200 DL, plus needs -P -z1 -L0
# HP LaserJet 1022	- Same as 2200 DL, plus needs -P -z1 -L0
# HP LaserJet M1319 MFP	- Same as 2200 DL, plus needs -P -z1 -L0
# HP LaserJet P2035n	- Same as 2200 DL, plus needs -P -z1 -L0
# HP LaserJet P2035	- Same as 2200 DL, plus needs -P -z1 -L0
# HP LaserJet Pro CP1025nw- Same as 2200 DL, plus needs -P -z3 -L0
# HP LaserJet Pro P1102	- Same as 2200 DL, plus needs -P -z2 -L0
# HP LaserJet Pro P1102w- Same as 2200 DL, plus needs -P -z2 -L0
# HP LaserJet Pro P1566	- Same as 2200 DL, plus needs -P -z2 -L0
# HP LaserJet Pro P1606dn- Same as 2200 DL, plus needs -P -z2 -L0
	    $ICC2PS -o $GAMMAFILE -t$INTENT > $ICCTMP.crd.ps 2>$ICCTMP.log \
    ICC2PS=$PREFIX/bin/foo2zjs-icc2ps
    ICCTMP=/tmp/icc
    ICCTMP=/tmp/icc$$
    *.icm|*.ICM|*.icc|*.ICC)
    if [ "" = "$AIB" -a "" = "$BC" ]; then
    if [ "$CLIP_LR" = "" ]; then
    if [ "$CLIP_UL" = "" ]; then
		if [ "$CMDLINE" != "-?" -a "$CMDLINE" != -h ]; then
if [ "$COLOR" != "" -a "$QUALITY" = wts ]; then
if [ "" = "$COLOR" ]; then
if [ "" != "$COLOR" ]; then
	    if [ "$cs" = "CMYK" ]; then
		if [ $DEBUG = 0 ]; then
		    if [ $DEBUG = 0 ]; then rm -f $TMPFILE; fi
if [ $DEBUG -eq 0 ]; then
	if [ $DEBUG -ge 1 ]; then
if [ "$DEBUG" -ge 9 ]; then
if [ $DEBUG -gt 0 ]; then
if eval gs.foo -v >/dev/null 2>&1; then
    if [ -f $COLORMODE ]; then
if [ $# -ge 1 ]; then
    if [ "$LPJOB" = "" ]; then
if [ "$LPUSER" != "" ]; then
		    if [ "$NOPLANES" != "" -a "$RES" = 600x600 ]; then
	if [ "$QUALITY" = wts -o "$QUALITY" = as ]; then
	    if [ "$QUALITY" = wts ]; then
    if [ -r "$1" ]; then
    if [ -r "$GAMMAFILE" ]; then
	if [ -r "$GAMMAFILE" ]; then
# If there is an argument left, take it as the file to print.
if [ `uname -n` = dual.rkkda.org -a $MODEL = 3 ]; then
		if [ "$XDIM" -eq 0 -o "$YDIM" -eq 0 ]; then
		if [ "$XDIM" = "" -o "$YDIM" = "" ]; then
    if [ -x $ICC2PS ]; then
if [ -x /usr/bin/logger -o -x /bin/logger ]; then
	    if [ -x /usr/bin/logger ]; then
if [ -x /usr/bin/logger ]; then
	I)	INTENT="$OPTARG";;
-I intent         Select profile intent from ICM file [$INTENT]
INTENT=0
#	intermingled with the printer drivers output, resulting in
	# Its really an .ICM file, not a gamma file.
#* it under the terms of the GNU General Public License as published by
	    -J "$LPJOB" -U "$USER" \
	L)	CLIP_LOG="-L $OPTARG";;
	l)	CLIP_LR="-l $OPTARG";;
-L mask           Send logical clipping values from -u/-l in ZjStream [3]
		l*)	NUP_ORIENT=-l;;
    logger -t "$BASENAME" -p lpr.info -- \
		logger -t "$BASENAME" -p lpr.info -- \
    logger -t "$BASENAME" -p lpr.info -- "$BASENAME $@" </dev/null
#	Log the command line, for debugging and problem reports
	: # LPJOB="$1"
    lrx=$3; lry=$4
-l <xoff>x<yoff>  Set offset of lower right printable in pixels [varies]
#	Main Program, just cobble together the pipeline and run it
		MEDIA=261
#* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Minolta/QMS 2200 DL	- Requires -X16 (which is on by default)
# Minolta/QMS 2300 DL	- Does not need clipping, -X16, or -P.  But it doesn't
-m media          Media code to send to printer [$MEDIA]
	m)	MEDIA="$OPTARG";;
    # Monochrome
                  monochrome-only printers.
# N.B. := operator used here, when :- would be better, because "ash"
-n$COPIES -d$DUPLEX -s$SOURCE -z$MODEL $COLOR $CLIP_UL $CLIP_LR $CLIP_LOG \
-n copies         Number of copies [$COPIES]
	n)	COPIES="$OPTARG";;
    none | none.icm | */none.icm)
	none | none.icm | */none.icm)
	none | none.icm | */none.icm) GAMMAFILE="$ICCTMP.usecie.ps";;
NOPLANES=
Normal Options:
#	N-up-ify the job.  Requires psnup from psutils package
NUP_ORIENT=
	o)	case "$OPTARG" in
-o orient         For N-up: -op is portrait, -ol is landscape, -os is seascape.
#	Overload -G.  If the file name ends with ".icm" or ".ICM"
		PAPER=256;        paper=letter;
		PAPER=258;      paper=legal;	XDIM="10200";  YDIM="7800"
		PAPER=268;      paper=a6;	XDIM="4800";  YDIM="3600"
		PAPER=269;      paper=statement; XDIM="6000";  YDIM="4800"
		PAPER=270;      paper=postcard; XDIM="4818";  YDIM="3590"
				paper=executive;XDIM="6996";  YDIM="4722"
PAPERSIZE="-sPAPERSIZE=$paper";
PATH=$PATH:/sw/bin:/opt/local/bin
-P                Do not output START_PLANE codes.  May be needed by some
    # Photo
    # Photo and Text
	P)	NOPLANES=-P;;
		p*|*)	NUP_ORIENT=;;
		#pop pop pop pop pop
	p)	PAPER="$OPTARG";;
-p paper          Paper code [$PAPER]
$PREFILTER \
*)			PREFILTER=cat;;
    PREFILTER="tee /tmp/$BASENAME.ps"
PREFIX=/usr
# Printer Notes:
Printer Tweaking Options:
#	Print the color space from an ICC file using "dd"
                  Print with N-up (requires psutils)
#       Process the options
PROGNAME="$0"
		%!PS-Adobe-3.0
PSTOPS_OPTS="-n"
    PSTOPS_OPTS="$PSTOPS_OPTS -a"
	PSTOPS_OPTS="$PSTOPS_OPTS -c"
    PSTOPS_OPTS="$PSTOPS_OPTS -w"
	q)	QUALITY="$OPTARG";;
		QUALITY=
	QUALITY=1
QUALITY=1
QUALITY=wts
    # Reduced toner
#	region.  It will do the clipping itself.  This is as it should be.
#	Remove cruft
#       Report an error and exit
#			- Requires clipping
RES=1200x600
	r)	RES="$OPTARG";;
-r <xres>x<yres>  Set device resolution in pixels/inch [$RES]
SAVETONER=
$SAVETONER -T$DENSITY $BC $AIB $COLOR2MONO $NOPLANES $EXTRAPAD"
	S)	COLOR2MONO="-S$OPTARG";;
		    | sed -n '/CustomPageSize/{n;p;n;p;}' \
set_clipping() {
			set_clipping 200 100	200 100
                set_clipping 2 100     2 100
			set_clipping 224 100	224 100
    # Set clipping region if it isn't already set
		>> sethalftone
                  $SHARE/icm/ will be searched for profile.icm.
SHARE=$PREFIX/share/foo2zjs
shift `expr $OPTIND - 1`
		s*)	NUP_ORIENT=-r;;
#	(some versions?) of Ghostscript where Postscript's stdout gets
SOURCE=7
    -sOutputFile="|cat 1>&3" $GAMMAFILE -_ >/dev/null) 3>&1 \
-S plane          Output just a single color plane from a color print [all]
		    /SpotFunction { 180 mul cos exch 180 mul cos add 2 div}
	s)	SOURCE="$OPTARG";;
-s source         Source code to send to printer [$SOURCE]
	T)      DENSITY="$OPTARG";;
-T density        Print density (1-5) [$DENSITY]
-t                Draft mode.  Every other pixel is white.
# Testing for gs9...
	# The file can be a full path name, or the name of a file in $SHARE/icm/
#* the Free Software Foundation; either version 2 of the License, or
#	The HP1000 will print blank pages when asked to print into its
#	The malarky with file descriptors 1 and 3 is to avoid a bug in
#	The Minolta 2200 DL is sensitive to its unprintable regions,
#	The Minolta 2300 DL doesn't care if print into the unprintable
#	then convert the ICC color profile to a Postscript CRD,
#	then prepend it to the users job.  Select the intent
#* This program is distributed in the hope that it will be useful,
#* This program is free software; you can redistribute it and/or modify
	This script reads a Postscript ps-file or standard input
		    TMPFILE=/tmp/cus$$
		    TMPFILE=/tmp/custom.ps
		tmp=`head -n 10000 $TMPFILE \
		    | tr '\n' ' '`
	tr '\r' '\n' | psnup $NUP_ORIENT -d2 -$NUP -m.3in -p$paper -q
	tr '\r' '\n' | psnup $NUP_ORIENT -d2 -$NUP -m.5in -p$paper -q
# Try to use a local copy of GhostScript 8.54, if available.  Otherwise,
	t)	SAVETONER="-t";;
	u)	CLIP_UL="-u $OPTARG";;
    ulx=$1; uly=$2
#	unprintable region.
#	unprintable regions.
		usage;;
usage() {
		<</UseCIEColor true>>setpagedevice
    # Use new icc method in gs 9.*
    # Use old ICM method
    USER=""
    USER="$LPUSER@$LPHOST"
		    << /UseWTS false >> setuserparams
		    << /UseWTS true >> setuserparams
#	using the -I option.
-u <xoff>x<yoff>  Set offset of upper left printable in pixels [varies]
#	Validate Duplex code
#	Validate media code
#	Validate model code
#	Validate Print Density
#	Validate Resolution
#	Validate source (InputSlot) code
	V)	echo "$VERSION"; foo2zjs -V; foo2zjs-pstops -V; exit 0;;
VERSION='$Id: foo2zjs-wrapper.in,v 1.152 2011/11/23 15:03:16 rick Exp $'
-V                $VERSION
# What mode to use if the user wants us to pick the "best" mode
while getopts "1:23456789o:b:cC:d:g:l:u:L:m:n:p:q:r:s:tT:z:ABS:D:G:I:PX:Vh?" opt
		XDIM=`dc -e "$XDIM 1200* 72/p"`
		XDIM=`echo "$PAPER" | sed -e "s/Custom.//" -e "s/x.*//" `
		    XDIM=`echo "$tmp" | sed 's/ .*//'`
	X)	EXTRAPAD="-X $OPTARG";;
-X padlen         Add extra zero padding to the end of BID segments [16]
		YDIM=`dc -e "$YDIM 600* 72/p"`
		YDIM=`echo "$PAPER" | sed -e "s/.*x//" `
		    YDIM=`echo "$tmp" | sed -e 's/^[^ ]* //' -e 's/ .*//'`
#* You should have received a copy of the GNU General Public License
                  -z0:
                  -z1: -z0 plus
                  -z1,-z2,-z3: above plus
                  -z2: -z0 plus
                  -z3: -z0 plus
	    -z$MODEL $COLOR $CLIP_UL $CLIP_LR $CLIP_LOG $SAVETONER -T$DENSITY \
-z model          Model: [0]
	z)	MODEL="$OPTARG";;
