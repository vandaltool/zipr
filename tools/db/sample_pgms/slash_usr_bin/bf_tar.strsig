# argument above [ $# -ne 1 ]
#! /bin/sh
: ${BOGOFILTER:=bogofilter}
  $BOGOFILTER -QQ -d "$BOGOHOME" | grep '^wordlist ' | cut -f3 -d,
BOGOHOME=${1:-.}
: ${BOGOUTIL:=bogoutil}
    $BOGOUTIL --db-checkpoint="$BOGOHOME"
  $BOGOUTIL --db-list-logfiles="$BOGOHOME" all
    $BOGOUTIL --db-prune="$BOGOHOME"
	*) break;
# (C) 2004 by Matthias Andree
    case "$1" in
  c="${BOGOHOME}/DB_CONFIG"
# database first, then the logs.
	-*) echo >&2 "`basename $0`: unknown option $1" ; exit 1 ;;
    echo >&2 'Options are:'
    echo >&2 "   or: `basename $0` [options] bogodir | gzip -c >outfile.tar.gz"
    echo >&2 ' -r - remove inactive log files after archiving'
    echo >&2 ' -R - remove inactive log files before archiving (use with caution)'
    echo >&2 "Usage: `basename $0` [options] bogodir > outfile.tar"
    echo $BOGOHOME must be a directory, not a file
    esac
    exit 1
files=$(
# GNU GPL v2.
# $Id: bf_tar.in 6750 2008-10-15 23:18:45Z clint $
if [ ! -d "$BOGOHOME" ] ; then
  if [ -f "$c" ] ; then echo "$c" ; fi
if [ $# -ne 1 ] ; then
if [ $REMOVEAFT -eq 1 ] ; then nukelogs ; fi
if [ $REMOVEBEF -eq 1 ] ; then
    nukelogs
nukelogs() {
# pax options: -w: write archive, -v: verbosely, -x ustar: pick tar format.
REMOVEAFT=0
REMOVEBEF=0
# remove if requested
# Requires: pax
	-r) REMOVEAFT=1 ;;
	-R) REMOVEBEF=1 ;;
    shift
	--) shift ; break ;;
tar --create --to-stdout --verbose --format=ustar $files
# that state will not be recoverable!
# the log MUST be newer than the database, if it's the other way around,
# This file dumps a bogofilter to standard output in POSIX-tar format.
# we could write $1 for the moment being as we demand exactly this
while [ "$1" ] ; do
