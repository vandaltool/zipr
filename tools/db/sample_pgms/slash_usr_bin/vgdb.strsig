             
  1. standalone to send monitor commands to a Valgrind gdbserver.
  2. relay application between gdb and a Valgrind gdbserver.
accept failed
acquire_and_suspend_threads
acquire_lock
add_written
after sleep written_by_vgdb %d seen_by_valgrind %d invoked_written %d
after waitpid pid %d p %d status 0x%x %s
args error. Try `vgdb --help` for more information
__assert_fail
attach main pid
attach_thread
attach to 'main' pid %d
Bad checksum, sentsum=0x%x, csum=0x%x, buf=%s
      between the Valgrind gdbserver and vgdb.
bind failed
blocked in a system call *after* an initial successful attach
broken PTRACE_GETREGS unexpected errno %ld
cannot acquire lock.
cannot create socket
cannot use 32 bits vgdb with a 64bits valgrind process
can't allocate memory
can't reallocate memory
Can't use both -D and -l options
Can't use both --pid and -l options
Can't use --port to send commands
check_trial %d 
cleanup_restore_and_detach dying: %d
closedir
close from_pid
close to_pid
--cmd-time-out=
  --cmd-time-out (default 99999999) tells vgdb to exit if the found Valgrind
             [--cmd-time-out=<number>] [-l] [-D] [-d]
command %s too long
connected.
connection %s fd %d POLLERR error condition
connection %s fd %d POLLHUP error condition
connection %s fd %d POLLNVAL error condition
Could not sigstop before reset
  -d  arg tells to show debug info. Multiple -d args for more debug info
  -D  arg tells to show shared mem status and then exit.
detach_from_all_threads
detected a broken PTRACE_GETREGS with EIO
detected a working PTRACE_GETREGS
empty packet rcvd (packet qRcmd not recognised?)
E NN error packet rcvd: %s (unknown monitor command?)
__errno_location
error attach main pid %d
ERROR attach pid %d tid %d
error listen failed
error mmap shared memory file %s
error opening cmdline file %s %s
error opening %s %s
error opening %s shared memory file
error reading bytes from gdb
error reading bytes from pid
error reading packet
error reading %s
error size shared memory file %s.
error when writing + (ack)
error when writing - (nack)
error write %s
expecting O packet, received: %s
expecting size %d (32bits) got %ld.
((((__extension__ (((union { __typeof(status) __in; int __i; }) { .__in = (status) }).__i))) & 0xff) == 0x7f)
found tid %d status %s lwpid %d
__fprintf_chk
FROM_GDB
from gdb on stdin
FROM_PID
-from-vgdb-to-
__fxstat
     gdbserver has not processed a command after number seconds
[getpkt: discarding char '%c']
getpkt ("%s");  [sending ack] 
getregs PTRACE_GETREGS
getregs PTRACE_PEEKUSER(s) peek_bsz %ld
getregs regs_bsz %ld
gettimeofday
GLIBC_2.0
GLIBC_2.1
GLIBC_2.3.3
GLIBC_2.3.4
GLIBC_2.7
__gmon_start__
has_working_ptrace_getregs == 1
has_working_ptrace_getregs == -1
  -h --help shows this message
HOSTNAME
      if you want to change the default prefix for the FIFOs communication
invalid --cmd-time-out argument %s
invalid --max-invoke-ms argument %s
invalid --pid argument %s
invalid --port argument %s
invalid --wait argument %s
invoke_gdbserver
invoke_gdbserver: check for pid %d existence failed
invoke_gdbserver_in_valgrind: check for pid %d existence failed
IO for command started
_IO_stdin_used
joining with invoke_gdbserver_in_valgrind_thread
_Jv_RegisterClasses
  -l  arg tells to show the list of running Valgrind gdbserver and then exit.
%ld.%6.6ld 
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
libpthread.so.0
listening on port %d ...
lwpid ptrace_read_memory
--max-invoke-ms=
  --max-invoke-ms (default 100) gives the nr of milli-seconds after which vgdb
--max-invoke-ms must be < --cmd-time-out * 1000
multiple --pid arguments given
no --pid= arg given and multiple valgrind pids found:
Note: your kernel restricts ptrace invoker using %s
no thread live => PTRACE_DETACH pid %d
not set lwpid tid %d status %s lwpid %d
nr received signals: sigint %d sigterm %d sighup %d sigpipe %d
      of seconds if a Valgrind gdbserver can be found.
OK packet rcvd
     Only OPTION(s) can be given.
__open_2
opened %s %s fd %d
 OPTIONS are [--pid=<number>] [--vgdb-prefix=<prefix>]
  --pid arg must be given if multiple Valgrind gdbservers are found.
pid %d did not handle a command in %d seconds
!pid_found
poll ret %d errno %d
  --port instructs vgdb to listen for gdb on the specified port nr.
             [--port=<portnr>
__printf_chk
Probably vgdb pid %d already speaks with Valgrind pid %d
/proc/%d/cmdline
         process is blocked in a system call).
/proc/sys/kernel/yama/ptrace_scope
PR_SET_PTRACER defined but could not determine ptrace scope from %s
pthread_cancel
pthread_cancel invoke_gdbserver_in_valgrind_thread
pthread_create
pthread_join
__pthread_register_cancel
__pthread_unregister_cancel
__pthread_unwind_next
PTRACE_CONT to invoke
PTRACE_DETACH pid %d res %ld
PTRACE_DETACH pid %d tid %d status %s
PTRACE_DETACH pid %d tid %d status %s res %ld
PTRACE_GETREGS %ld
PTRACE_PEEKUSER offset %ld
PTRACE_POKEUSER offset %ld res %ld
PTRACE_SETREGS %ld
PTRACE_SETREGS restore registers: no pid
push bad_return return address ptrace_write_memory
push check arg ptrace_write_memory
read 0 bytes from gdb => assume exit
read 0 bytes from pid => assume exit
readchar
readchar: Got EOF
read cmd result from pid
read mode from pid
read %s %s
relaying data between gdb and process %d
Reply contains invalid hex digit %c
searching pid in directory %s format %s
sending command %s to pid %d
setregs PTRACE_POKEUSER(s) %ld
setregs PTRACE_SETREGS
setregs regs_bsz %ld
setregs restore registers pid %d
setregs restore registers pid %d after cont
%s-from-vgdb-to-%d-by-%s-on-%s
sigaction
sigemptyset
__sigsetjmp
sigstop before reset regs
skipping PTRACE_DETACH pid %d tid %d status %s
snprintf
__snprintf_chk
some IO was done => restart command
__sprintf_chk
%s PTRACE_ATTACH pid %d
%s PTRACE_ATTACH pid %d %ld
%s-shared-mem-vgdb-%d-by-%s-on-%s
%s SIGSTOP pid %d
%s SIGSTOP pid %d %ld
static buf readchar
status ptrace_read_memory
%s-to-vgdb-from-%d-by-%s-on-%s
strerror
%s waitpid pid %d in waitstopped %d status 0x%x %s
syscall failed
     The OPTION(s) must be followed by the command to send
  To get help from the Valgrind gdbserver, use vgdb help
     To send more than one command, separate the commands with -c
T resume reply packet received: %s
trying %s
unexpected lwpid tid %d status %s lwpid %d
unexpected POLLIN on %s
unexpected poll ret %d
unexpected signal %d
unknown or invalid argument %s
Usage: vgdb [OPTION]... [[-c] COMMAND]...
use --pid=%d for %s
Using vgdb standalone implies to give -D or -l or a COMMAND
vgdb %d written_by_vgdb %d seen_by_valgrind %d
vgdb error: invalid pid %d given
vgdb error: no FIFO found and no pid given
vgdb error: no FIFO found matching pid %d
vgdb error: opening directory %s searching vgdb fifo
vgdb error pthread_join invoke_gdbserver_in_valgrind_thread
vgdb error: reading directory %s for vgdb fifo
vgdb error sigaction SIGALRM
vgdb error sigaction SIGINT
vgdb error sigaction SIGPIPE
vgdb error sigaction SIGTERM
vgdb error sigaction SIGUSR1
vgdb error: stat %s searching vgdb fifo
vgdb pid %d
/vgdb-pipe
--vgdb-prefix=
  --vgdb-prefix arg must be given to both Valgrind and vgdb utility
vgdb: using %s %s %s
vgdb (valgrind gdb) has two usages
vgdb will only be able to attach to a Valgrind process
VgTs_???
VgTs_Empty
VgTs_Init
VgTs_Runnable
VgTs_WaitSys
VgTs_Yielding
VgTs_Zombie
  --wait (default 0) tells vgdb to check during the specified number
             [--wait=<number>] [--max-invoke-ms=<number>]
waitpid status after PTRACE_CONT to invoke
waitstopped
waitstopped PTRACE_CONT
waitstopped PTRACE_CONT with signal %d
waitstopped %s before waitpid signal_expected %d
WCOREDUMP 
WIFCONTINUED 
WIFEXITED %d 
WIFSIGNALED %d 
WIFSTOPPED %d 
      will force the invocation of the Valgrind gdbserver (if the Valgrind
write \003 on SIGUSR1
write \003 to wake up
write to pid
Writing 
writing hex command to pid
writing %s len %d %s notify: %d
written_by_vgdb_before_sleep %d seen_by_valgrind_before_sleep %d
W stopped packet rcvd: %s
