        
                            ;;
                        *)
             -- "$@"`
        "$@"
########                                                     #########
######################################################################
########################################################################################
			    ;;
                        0)
#     3 or T  : show a three way difference between current, older,                    #
    $action cp -pf "$new_file" "${real_file}"
	$action cp -pf "$orig_new_file" "$statedir/cache/$cached_file"
	    $action cp -pf "${real_file}" "${real_file}.${OLD_SUFFIX}"
        action='echo'; docmd='NO'; 
    $action mkdir -p $statedir/cache ;
	    $action rm -f "$dest_file";
	$action rm -f "$statedir/cache/$cached_file"
action='withecho'
#      a: If the md5sum of the dest file is the same as lastsum, replace the 
#      a: If we have a directory containing historical md5sums of this
#         and ask'
#               and new versions of the file                                           #
#               and new versions of the file [Very Experimental]                       #
             and pass it this parameter. For now, ucf will revert to using
            # an empty parameter will be generated if its optional
		ANSWER="$RET"
#         are done
            # argument is not found.
#       At this point, we are almost certain that either the
# Author           : Manoj Srivastava ( srivasta@glaurung.green-gryphon.com )
                   awk '{print $1;}' )
		    awk '{print $1;}')
			awk '{print $1;}')
		    -a "X$THREEWAY" != "X" ]; then
		    bash >/dev/tty </dev/tty || true
            # be asked now, unless specified otherwise.
#      b: If the md5sum of the dest file differs from lastsum, we need to ask
#!/bin/bash
#                    Bingo
#                           Bingo! replace, set the md5sum, and we are done 
#      b: We do not have a historical list of md5sums, or none
By default, the directory the new_file lives in is assumed to be the src-dir,
cached_file=$(echo $dest_file | tr / :)
    case "$1" in
	    case "$2" in
	case "$ANSWER" in
                    case "$ret" in
        cat >&2 <<END
# 		cat >&2 <<EOPEND                                                       #
# 		cat >&2 <<EOPRMT                                                       #
# 			cat >&2 <<EOTD                                                 #
    cat <<EOF
#       changed the configuration file. Rather than guessing and
                             changes into a (potentially modified) local 
			choices2="$(db_metaget $override_template Choices-C)"
			choices="$(db_metaget $templ Choices-C)"
#       chosing one of the historical md5sums, we fall through to the
#      c: If the destination file is the same as the new maintianer provided one,
########              Command line args                      #########
# Command line, env variable, config file, or default
	# Commented out for now, uncomment after a while to begin nagging
conditions.  There is NO warranty.
                             configuration file. )
# Configuration file \`$dest_file'                                                     #
# confmodule is sourced, so only test before that.
			continue
           Copyright (C) 2002-2005 Manoj Srivastava.
    # cp -pf "$orig_new_file" "$dest_file.${DIST_SUFFIX}"
			    cp -pf "$orig_new_file" "$dest_file.${DIST_SUFFIX}"
			cp -pf "$orig_new_file" "$dest_file.${DIST_SUFFIX}"
		cp -pf "$orig_new_file" "$dest_file.${DIST_SUFFIX}"
	cp -pf "$orig_new_file" "$dest_file.${DIST_SUFFIX}"
		cp -pf "${statedir}/hashfile.${i}" \
	    cp -pf "$statedir/hashfile"  "$statedir/hashfile.0" 
# Created On       : Fri Feb  1 03:41:47 2002
# Created On Node  : glaurung.green-gryphon.com
	db_capb
	db_capb escape
		db_fset $templ seen false
	db_fset $templ seen false
		db_get $templ
	db_get $templ
			    db_go || true
	db_go || true
		db_input critical $templ || true
	db_input critical $templ || true
			    db_input critical ucf/conflicts_found || true
		db_reset $templ
	db_reset $templ 
		db_subst $templ BASENAME $(basename "$dest_file")
	db_subst $templ DIFF ""
	db_subst $templ DIFF "$(printf %s "$DIFF" | debconf-escape -e)"
		db_subst $templ FILE "$dest_file"
			    db_subst ucf/conflicts_found dest_file "$dest_file"
			    db_subst ucf/conflicts_found ERR_SUFFIX "${ERR_SUFFIX}"
		db_title "Modified configuration file"
            db_x_loadtemplatefile "$(dpkg-query --control-path ucf templates)" ucf
	-D|-d|--debug|--DEBUG)
	DEBCONF_ALREADY_RUNNING='NO'
	DEBCONF_ALREADY_RUNNING='YES'
       --debconf-ok) DEBCONF_OK=YES;                    shift   ;;
             --debconf-ok    Indicate that it is ok for uct to use an already
	DEBCONF_OK='NO'
	DEBCONF_OK='YES'
			# debconf's backup capb. The best thing to do seems to be
########                  DebConf stuff                      #########
	--debconf-template)
             --debconf-template bar
Debian GNU/Linux $progname $pversion.
########                  Debugging dump                     #########
                             default '/var/lib/ucf'. Used mostly for testing.
# Description      :
#         destfile, saying we are replacing old config files
			    "$dest_file" "$statedir/cache/$cached_file" \
			"$dest_file" "$statedir/cache/$cached_file" \
                destsum='AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
    destsum=$(md5sum "$dest_file"  | awk '{print $1}');
# Determine the action for the current file. The default is to ask,
#	   determining that automatically. Please note that unless
			    /dev/null "$statedir/cache/$cached_file" \
            # d has an optional argument. As we are in quoted mode,
            DIFF="$1"
		    diff3 -L Current -L Older -L New -m \
                             diff3 option allowing the merging of maintainer
	    diff|D|d)
                        DIFF="$(diff3 -L Current -L Older -L New -A \
		        DIFF="$(diff3 -L Current -L Older -L New -A \
		    DIFF="$(diff -uBbw "$dest_file" "$new_file")" || true
			DIFF="$(diff -uBbw "$dest_file" "$new_file")"  || true
		    DIFF="$(diff -uBbw /dev/null "$new_file")" || true
			DIFF="$(diff -uBbw /dev/null "$new_file")"  || true
		    DIFF="$( sdiff -BbW "$dest_file" "$new_file")"  || true
		    DIFF="$(sdiff -BbW /dev/null "$new_file")"  || true
            DIFF="The differences between the files are too large to display."
	DIFF="There are no non-white space differences in the files."
	    diff_threeway|3|t|T)
#       directory/file.
DIST_SUFFIX="ucf-dist"
     -d [n], --debug    [n]  Set the Debug level to N
docmd='YES'
#         does, We need to determine how to initialize the
    done
    done='NO';
    # do not mangle $dest_file since it's the one registered in the hashfile
#         do not match, we need to take action.
                    # Don't know what to do
		    do_replace_md5sum=1;
########               Do the replacement                    #########
#       D     : show the differences between the versions                              #
    echo "$1" | sed -e "s,','\\\\'',g"
            echo >&2 ""
        echo " $@" >&2
			    echo >&2 \
				echo >&2 \
	echo >&2 ""
    echo >&2 "       be set";
	echo >&2 "Creating config file $dest_file with new version"
	    echo >&2 "$dest_file is a broken symlink!"
	echo >&2 "*** ERROR: Need exactly one argument when purging, got $#";
	echo >&2 "*** ERROR: Need exactly two arguments, got $#";
    echo >&2 "Error: Only one of force_conffold and force_conffnew should";
	echo >&2 "Error: The new file ${temp_new_file} does not exist!";
	echo >&2 "even though the files differ, since you asked for it"
		echo >&2 "Histotical md5sums did not match."
			echo >&2 "However, a default entry exists, using it."
	*) echo >&2 "Internal error!" ; exit 1 ;;
	echo >&2 "md5sums match, nothing needs be done."
	    echo >&2 "md5sums of the file in place matches, nothing needs be done."
		echo >&2 "Merging changes into the new version"
            echo >&2 "Need debconf to interact"
		echo >&2 "No match found, we shall ask."
                    echo >&2 "No terminal, and no DISPLAY set, can't fork shell."
            echo >&2 "Not replacing deleted config file $dest_file";
		echo >&2 "Not saving ${real_file}, since it was unmodified"
	echo >&2 "Preparing to purge ${dest_file}"
	    echo >&2 "$progname: $3 is $2";
                echo >&2 "$progname: Not changing title, since we are not running as root."
        echo >&2 "$progname: Not loading confmodule, since we are not running as root."
	echo >&2 "$progname: Unable to determine $3"
	    echo >&2 "Recreating deleted config file $dest_file with new version, as asked"
		echo >&2 "Replacing config file $dest_file with new version"
	echo >&2 "Replacing config file $dest_file with new version"
	echo >&2 "The hash file exists"
    echo >&2 "ucf: do not have write privilege to the state data"
		echo cp -pf "${statedir}/hashfile.${i}" \
	    echo cp -pf "$statedir/hashfile"  "$statedir/hashfile.0" 
	echo "$DIFF" | sensible-pager
	echo egrep "[[:space:]]${safe_dest_file}$" "$statedir/hashfile"
	    #echo "egrep -v [[:space:]]${safe_dest_file}$ $statedir/hashfile"
	    echo "(egrep -v \"[[:space:]]${safe_dest_file}$\" \"$statedir/hashfile\""
		echo "(egrep -v \"[[:space:]]${safe_dest_file}$\" \"$statedir/hashfile\";"
		echo "egrep -v [[:space:]]${safe_dest_file}$ $statedir/hashfile"
    echo "Error handling options.Terminating..." >&2 ;
			echo "Error: unknown response from debconf:'$RET'" >&2
	echo "Historical md5sums are not available"
            echo "However, there are historical md5sums around."
	echo $lastsum
	    echo " md5sum \"$orig_new_file\" | sed \"s|$orig_new_file|$dest_file|\" >" \
	    echo " md5sum \"$orig_new_file\" | sed \"s|$orig_new_file|$dest_file|\"; " 
		echo mv -f "$statedir/hashfile.tmp"  "$statedir/hashfile"
# 			echo -n >&2 "*** " $(basename "$dest_file") \                  #
			echo "Please answer with one of the single letters listed." >&2
        echo "$progname: Need to be run as root." >&2
        echo "$progname: Setting up no action mode." >&2
	    #echo "Saving  ${real_file}.${OLD_SUFFIX},  in case."
	    echo ") | sort > \"$statedir/hashfile\""
	echo "The destination file does not exist."
	echo "The destination file exists, and has md5sum:"
	echo "The historical md5sum dir $old_mdsum_dir exists"
	echo "The historical md5sum file $old_mdsum_file exists"
	echo "The new file does not exist."
	echo "The new file exists, and has md5sum:"
	echo "The old md5sum does not exist."
	echo "The old md5sum exists, and is:"
	egrep "[[:space:]]${safe_dest_file}$" "$statedir/hashfile" || true
	    egrep -v "[[:space:]]${safe_dest_file}$" "$statedir/hashfile" > \
		egrep -v "[[:space:]]${safe_dest_file}$"  "$statedir/hashfile" \
		egrep -v "[[:space:]]${safe_dest_file}$"  "$statedir/hashfile" || true;
    elif [ -f "$old_mdsum_file" ]; then
	    elif [ -f "$old_mdsum_file" ]; then
    elif [ "$lastsum" = "$newsum" ]; then
                elif [ -n "$DISPLAY" ]; then
elif [ -s /usr/bin/pager ] && 
elif [ -x /bin/more ]; then
elif [ ! "x$conf_force_conffmiss" = "x" ]; then
elif [ ! "x$conf_force_conffnew" = "x" ]; then
elif [ ! "x$conf_force_conffold" = "x" ]; then
elif [ ! "x$conf_old_mdsum_file" = "x" ]; then
elif [ ! "x$conf_source_dir" = "x" ]; then
elif [ ! "x$conf_state_dir" = "x" ]; then
elif [ "X$my_pager" = "X/bin/more" ]; then
elif [ ! "x$UCF_FORCE_CONFFMISS" = "x" ]; then
elif [ ! "x$UCF_FORCE_CONFFNEW" = "x" ]; then
elif [ ! "x$UCF_FORCE_CONFFOLD" = "x" ]; then
elif [ ! "x$UCF_OLD_MDSUM_FILE" = "x" ]; then
elif [ ! "x$UCF_SOURCE_DIR" = "x" ]; then
elif [ ! "x$UCF_STATE_DIR" = "x" ]; then
elif [ -x /usr/bin/sensible-pager ]; then
    else
        else
            else
                else
                    else
    else 
# 		else                                                                   #
	    else
	    else 
		    else
else  # "$dest_file" does not exist
# EOPEND                                                                               #
# EOPRMT                                                                               #
# EOTD                                                                                 #
ERR_SUFFIX="merge-error"
    esac
                    esac
	    esac ;;
# Escape single quotes in the arguments passed in
# (/etc/emacs21/site-stard.d/50<pkg>-init.el)), and it should do the rest.
# /etc/emacs21/site-stard.d/50psgml-init.el) These start files are not
    . /etc/ucf.conf
	eval "$1=\"\$2\"";
eval set -- "$saved"
eval set -- "$TEMP"
            # Even though the user has deleted this file, they should
                exit 0;
    exit 0;
	    exit 0;
		    exit 0
			    exit 0
			    exit 0;
			exit 0;
		exit 0;
	exit 0 ;
	exit 0 ;		
	exit 0;
    exit 0;			# Hah. Match. We are done.
	exit 0;			# Hah. Match. We are done.
    exit 1 ;
    exit 1;
			exit 1
	exit 1;
            exit 2
export DEBCONF_ALREADY_RUNNING
        fi
            fi
                fi
                    fi
        fi        	
# 		fi                                                                     #
	    fi 
	    fi	
		    fi
			    fi
#  ==> File also in package provided by package maintainer.                            #
########        file and hash save/restore functions         #########
#         file in question, we should look and see if the currently
#  ==> File on system created by you or by a script.                                   #
    file_size=$(stat -c '%s' "$orig_new_file")
	fi # the old md5sum file does not exist, and the historical
    fi # the old md5sum file does not exist (bug))
# flavour of installed emacsen by calling it with the proper values of
for arg in "$@"; do
    force_conffmiss=''
    force_conffnew=''
    force_conffold=''
		for file in ${old_mdsum_dir}/*; do
    for i in $(/usr/bin/seq 6 -1 0); do
# for start files for emacs lisp packages (for example,
# Here, the destfile exists.
     -h,     --help          print this message
	-h|--help) usageversion;                        exit 0 ;;
#       historical record of md5sums is not complete, or the user has
# HISTORY          :
			# However, we could get here, if the caller turned on
if [ $? != 0 ] ; then
    if [ $# != 1 ]; then
    if [ $# != 2 ]; then
        if  [ 99999 -lt $(echo $1 | wc -c | awk '{print $1; }') ]; then
			if [ "$choices" = "$choices2" ]; then
		if ! db_go; then
	if ! db_settitle ucf/title 2>/dev/null; then
    if [ "$DEBCONF_ALREADY_RUNNING" = 'NO' ]; then
if [ "$DEBCONF_ALREADY_RUNNING"  = 'YES' ] && [ "$DEBCONF_OK" = NO ]; then
    if [ "$DEBCONF_ALREADY_RUNNING" = 'YES' ]; then
    if [ "$DEBCONF_OK" = "YES" ] && [ "$DEBIAN_HAS_FRONTEND" ]; then
	if [ "$DEBCONF_OK" = "YES" ] && [ "$DEBIAN_HAS_FRONTEND" ]; then
        if [ "$DEBCONF_OK" = 'YES' ]; then
		if [ "$DEBCONF_OK" = "YES" ]; then
    if [ "$DEBIAN_HAS_FRONTEND" ]; then
if [ $DEBUG -gt 0 ]; then
if [ "$destsum" = "$lastsum" ]; then
    if [ "$docmd" = "YES" ]; then
        if [ -d "$old_mdsum_dir" -o -f "$old_mdsum_file" ]; then
	if [ -d "$old_mdsum_dir" -o -f "$old_mdsum_file" ]; then
    if [ -d "$old_mdsum_dir" ]; then
	    if [ -d "$old_mdsum_dir"  ]; then
if [ ! -d $statedir/cache ]; then
                    if [ -e "$dest_file" ]; then
		    if [ -e "$dest_file" ]; then
		if [ -e "$dest_file" ]; then
if [ -e "$dest_file" ]; then
    if [ -e "$new_file" ]; then
		if [ -e "${old_mdsum_dir}/default" ]; then
    if [ -e "$real_file" ]; then
		if [ -e "$statedir/cache/$cached_file" \
		if [ -e "$statedir/cache/$cached_file" ]; then
if [ -e "$statedir/hashfile" -a ! -w "$statedir/hashfile" ]; then
	if [ -e "${statedir}/hashfile.${i}" ]; then
    if [ -e "$statedir/hashfile" ]; then
if [ -e "$statedir/hashfile" ]; then
    if [ ! -e "$temp_new_file" ]; then
if [ -e /usr/share/debconf/confmodule ]; then
if [ -f /etc/ucf.conf ]; then
#   if file in always overwrite, state +=1;
#   if file in ask; state +=4
#   if file in never overwrite, state +=2;
    # If it was running, then we do not want to clobber the
if [ "$lastsum" = "$newsum" ]; then
    if [ -L "$dest_file" ]; then
    if [ "$newsum" = "$destsum" ]; then
if [ -n "$opt_old_mdsum_file" ]; then
		    if [ "$oldsum" = "$destsum"  ]; then
    if [ -s "$dest_file" ]; then
#   if state == 0; then state = default
#   if state == 1; then replace_conffile; exit
#   if state == 2; exit
#   if state == 3;  ask
#   if state >= 4; ask
            if test $(id -u) = 0; then
    if test $(id -u) = 0; then
if test $(id -u) != 0; then
# If the config dir exists
                if tty -s; then
    if [ "x$2" = "x" ]; then
    if [ "X$docmd" = "XYES" ]; then
	    if [ "X$docmd" = "XYES" ]; then
	if [ "X$docmd" = "XYES" ]; then
    if [ "X$do_replace_md5sum" != "X" ]; then
        if [ "X$force_conffmiss" != "X" ]; then
    if [ "X$force_conffnew" != "X" ]; then
if [ "X$force_conffold" != "X" -a "X$force_conffnew" != "X" ]; then
            if [ "X$force_conffold" = "X" ]; then
    if [ "X$force_conffold" = "X" ]; then
    if [ "X$force_conffold" != "X" ]; then
		    if [ "X$force_conffold" = "X" ]; then
			if [ "X$force_conffold" = "X" ]; then
    if [ "X$lastsum" = "X" ]; then
    if [ "X$lastsum" != "X" ]; then
	if [ "X$lastsum" = "X" ]; then
if [ "X$my_pager" = "X" ]; then
    if [ "X$new_file" != "X" ]; then
		if [ "X$oldsum" != "X" ]; then
if [ ! "x$opt_force_conffmiss" = "x" ]; then
if [ ! "x$opt_force_conffnew" = "x" ]; then
if [ ! "x$opt_force_conffold" = "x" ]; then
if [ ! "x$opt_source_dir" = "x" ]; then
if [ ! "x$opt_state_dir" = "x" ]; then
		if [ "X$override_template" != "X" ]; then
if [ "X$PAGER" != "X" ] && which $PAGER >/dev/null 2>&1 ; then
if [ "X$PURGE" = "XYES" ]; then
	if [ "x$real_file" = "x" ]; then
# 		if [ "X$THREEWAY" != "X" -a -e "$statedir/cache/$cached_file" ]; then  #
    if [ "X$THREEWAY" != "X" ] || [ $file_size -lt 25600 ]; then
if [ "X$VERBOSE" = "X0" ]; then
	    if [ "x$VERBOSE" != "x" ]; then
	if [ "x$VERBOSE" != "x" ]; then
    if [ "X$VERBOSE" != "X" ]; then
	    if [ "X$VERBOSE" != "X" ]; then
		    if [ "X$VERBOSE" != "X" ]; then
			    if [ "X$VERBOSE" != "X" ]; then
			if [ "X$VERBOSE" != "X" ]; then
	if [ "X$VERBOSE" != "X" ]; then
    if [ -z "$1" ]; then
    if [ ! -z "$cached_file" -a -f "$statedir/cache/$cached_file" ]; then
if [ -z "$DEBCONF_ALREADY_RUNNING" ]; then
if [ -z "$DEBCONF_OK" ]; then
	if [ -z "$RETAIN_OLD" ]; then
	# immediatly after use so it is never written
#         installed file matches any of the old md5sums; in which case
        # installed on this machine.
	    install_new|y|Y|I|i)
# in /usr (/usr/share/<pkg> is a good location), and maintain files in
# Is debconf already running? Kinda tricky, because it will be after the
#         it can be silently replaced.
	    keep_current|n|N|o|O|'')
# Last Machine Used: glaurung.internal.golden-gryphon.com
# Last Modified By : Manoj Srivastava
# Last Modified On : Tue Jun  6 09:48:22 2006
	    lastsum='AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
		    lastsum=$(cat "${old_mdsum_dir}/default" | \
    lastsum=$(egrep "[[:space:]]${safe_dest_file}$" "$statedir/hashfile" | \
		    lastsum=$oldsum;
#	   (like just one), the maintainer is also making a guess at
	# Load our templates, just in case our template has
# Load site defaults and over rides.
      --long help,src-dir:,sum-file:,dest-dir:,debug::,DEBUG::,no-action,purge,verbose,three-way,debconf-ok,debconf-template:,state-dir: \
# Long term variables#
#	   maintainer has an opinion on how to set the ``md5sum of the
	# maintainers to fix their scripts.
# make sure we exit on error
#         matched, and we still need to initialize the
	# may contain sensitive information, so clear
	md5sum "$dest_file"
	md5sum "$new_file"
	    md5sum "$orig_new_file" | sed "s|$orig_new_file|$dest_file|" >> \
	    md5sum "$orig_new_file" | sed "s|$orig_new_file|$dest_file|"  > \
		 md5sum "$orig_new_file" | sed "s|$orig_new_file|$dest_file|" ;
#       M     : Do a 3 way merge between current, older,                               #
	    merge_threeway|M|m)
#                               -*- Mode: Sh -*-
########               More Sanity checking                  #########
			    mv $dest_file.${NEW_SUFFIX} $dest_file.${ERR_SUFFIX} 
	    mv -f "$statedir/hashfile.tmp"  "$statedir/hashfile" 
		mv -f "$statedir/hashfile.tmp"  "$statedir/hashfile" 
    my_pager=
    my_pager=/bin/more
    my_pager=/usr/bin/pager
    my_pager=/usr/bin/sensible-pager
    my_pager=$(which $PAGER);
# Need to run as root, or else the 
		            new_file="$dest_file.${NEW_SUFFIX}"
			"$new_file" > $dest_file.${NEW_SUFFIX} || ret=$?
			    "$new_file")"  || true
# new file (/usr/share/emacs/site-lisp/<pkg>/<pkg>-init.el), and dest file
NEW_SUFFIX="ucf-new"
newsum=$(md5sum "$new_file" | awk '{print $1}')
	-n|--no-action) action='echo'; docmd='NO';      shift  ;;
     -n,     --no-action     Dry run. No action is actually taken.
#     N or O  : keep your currently-installed version                                  #
	# not been loaded or the Debconf DB lost or corrupted
# Note that we use `"$@"' to let each command-line parameter expand to a
# Note the quotes around `$TEMP': they are essential!
        # nothing needs be done, unless we have been told differently
#         not they made any changes, so we err on the side of caution
# now we can restore $@
        # OK. New upstream version. 
        # OK, new version of the file is the same as the last version
        # Ok, so there is no indication that the package was ever
      	    # Older debconf that does not support that command.
old_mdsum_dir="$source_dir/"$(basename "${new_file}")".md5sum.d";
    old_mdsum_file="$source_dir/"$(basename "${new_file}")".md5sum";
#         ${old_mdsum_prefix}.old file..               
#         ${old_mdsum_prefix}.old file. We can't determine whther or
#         "${old_mdsum_prefix}.old" to the md5sum of the new file, and we
             old-style, non-debconf prompting. Ugh!
OLD_SUFFIX="ucf-old"
		    oldsum=$(cat "$file"  | awk '{print $1}');
		oldsum=$(egrep "^${destsum}" "$old_mdsum_file" || true)
		oldsum=$(egrep "[[:space:]]default$" "$old_mdsum_file" | \
    # Only set the title if debconf was not already running.
Options:
	    opt_old_mdsum_file="$2";		  shift 2 ;;
	    opt_source_dir="$2";                       shift 2 ;;
	    opt_state_dir="$2";                        shift 2 ;;
orig_new_file="$new_file"	# Since sometimes we replace the newfile below
    # or we have been ask to register
	    override_template="$2";                    shift 2 ;;
             Please inform the package maintainer about this problem.
# post installation configuration phase by the script
        -p|--purge) PURGE=YES;                         shift   ;;
     -p,     --purge         Remove any reference to destination from records
#	   previously installed version'', since we have no way of
progname="`basename \"$0\"`"
# 		# Prompt without using debconf.                                        #
    purge_md5sum;
purge_md5sum () {
pversion='$Revision: 1.26 $'
            # questions asked.
quote_single() {
#   		read -e ANSWER </dev/tty                                               #
    real_file="$dest_file"
	    real_file="$dest_file"
	real_file="$(readlink -nf $dest_file || :)"
	   # record failed
	    replace_conf_file;
		            replace_conf_file
		    replace_conf_file
			    replace_conf_file;
			replace_conf_file;
		replace_conf_file;
	replace_conf_file;
replace_conf_file () {
    replace_md5sum;
			    replace_md5sum;
			replace_md5sum;
		replace_md5sum;
	replace_md5sum;
replace_md5sum () {
				    "Replacing config file $dest_file with new version"
				"Replacing config file $dest_file with new version"
		    ret=0
		            RETAIN_OLD=YES
		RETAIN_OLD=YES
		    rm -f "$dest_file.${NEW_SUFFIX}" # don't need this around no mo'
			    rm -f "$dest_file.${NEW_SUFFIX}" # don't need this around no mo'
                             running debconf instance for prompting.
safe_dest_file=$(echo $dest_file | perl -nle 'print "\Q$_\E\n"')
########              Sanity checking                        #########
    saved="${saved:+$saved }'$(quote_single "$arg")'"
# save up the cmdline with proper quoting/escaping
# script, one may ship a bunch of default cofiguration files somewhere
             script should be fixed to not stop debconf before calling ucf,
	    sdiff|S|s)
# separate word. The quotes around `$@' are essential!
########              Set Default Values                     #########
	    set -e
	    set +e
setq() {
		"") setq DEBUG 1    "The Debug value"; shift 2 ;;
		*)  setq DEBUG "$2" "The Debug value"; shift 2 ;;
    setq dest_file "$(readlink -q -m $temp_dest_file)" "The Destination file";
    setq force_conffmiss "$conf_force_conffmiss" "Replace any missing files"
    setq force_conffmiss "$opt_force_conffmiss" "Replace any missing files"
    setq force_conffmiss "$UCF_FORCE_CONFFMISS" "Replace any missing files"
    setq force_conffnew "$conf_force_conffnew" "Replace the old file"
    setq force_conffnew "$opt_force_conffnew" "Replace the old file"
    setq force_conffnew "$UCF_FORCE_CONFFNEW" "Replace the old file"
    setq force_conffold "$conf_force_conffold" "Keep the old file"
    setq force_conffold "$opt_force_conffold" "Keep the old file"
    setq force_conffold "$UCF_FORCE_CONFFOLD" "Keep the old file"
    setq new_file  "$(readlink -q -m $temp_new_file)"  "The new file";
    setq old_mdsum_file "$conf_old_mdsum_file" "Replace the old file"
    setq old_mdsum_file "$opt_old_mdsum_file" "The md5sum is found here"
    setq old_mdsum_file "$UCF_OLD_MDSUM_FILE" "The md5sum is found here"
    setq source_dir "$conf_source_dir" "The Source directory"
	setq source_dir $(dirname "$new_file") "The Source directory"
    setq source_dir "$opt_source_dir" "The Source directory"
	setq source_dir /tmp "The Source directory"
    setq source_dir "$UCF_SOURCE_DIR" "The Source directory"
    setq statedir "$conf_state_dir" "The State directory"
    setq statedir "$opt_state_dir" "The State directory"
    setq statedir "$UCF_STATE_DIR" "The State directory"
    setq statedir '/var/lib/ucf'  "The State directory"    
# set the version and revision
     -s foo, --src-dir  foo  Set the src dir (historical md5sums live here)
	    shell|Z|z)
	--)  shift ;                                   break   ;;
# shipped in a Debian package, but handled by the postinst. Using this
# shipped with the package, instead, they are installed during the
########        Short circuit if we are purging              #########
show_diff() {
		    show_diff "$DIFF"
		show_diff "$DIFF"
	# since then, but only if it is OK to use debconf.
                    sleep 3;
#       solution used if there had been no historical md5sums
                             Specify an alternate, caller-provided debconf
#       S     : show the side-by-side differences between the versions                 #
	-s|--src-dir)
########                Start Processing                     #########
# Start up debconf or at least get the db_* commands available
	--state-dir)
             --state-dir bar Set the state directory to bar instead of the
		"$statedir/hashfile" 
		"\"$statedir/hashfile\""
                          "${statedir}/hashfile.$(($i+1))"
		    "${statedir}/hashfile.$(($i+1))"
		"$statedir/hashfile.tmp"; 
		"$statedir/hashfile.tmp" || true; 
statedir='/var/lib/ucf';
# Status           : Unknown, Use with caution!
# Step 1: If we have no record of this file, and dest file
# Step 2: If destfile does not exist, create it, set the file
# step 3: If the old md5sum and the md5sum of the new file
    STOP=YES
	--sum-file)
             --sum-file bar  Force the historical md5sums to be read from
    temp_dest_file=$1;
    temp_dest_file=$2;
TEMP=`getopt -a -o hs:d::D::nv -n "$progname" \
                             template to use for prompting.
				templ=$override_template
			templ=ucf/changeprompt
			templ=ucf/changeprompt_threeway
	templ=ucf/show_diff
    temp_new_file=$1;
# test and see if this file exists in the database
    test -n "$VERBOSE" && echo "The cache file is $cached_file"
			# The current ucf interface does not provide a way for it
#  The default action is to keep your current version.                                 #
The destination is         \`$dest_file\' (\`$safe_dest_file\')
The file may be cached at \'$statedir/cache/$cached_file\'
The history is kept under  \'$source_dir\'
# The motivation for this script was to provide conffile like handling
The new start file is      \`$new_file\'
#	   there are limited number of previously released packages
             the script did not pass --debconf-ok to ucf. The maintainer
#         the user what action to take.
                             this file.  Overrides any setting of --src-dir.
This is free software; see the GNU General Public Licence for copying
#	   this point by supplying a historical md5sum default file. 
# This script attempts to provide conffile like handling for files not
# This script is meant to be invoked by the packages install script at
THREEWAY=
             --three-way     Register this file in the cache, and turn on the
       --three-way) THREEWAY=YES;                       shift   ;;
# Time to start nagging the users who call ucf without debconf-ok
    # title used for configuring the whole package with debconf.
	# to disk
			# to ignore requests to back up.
			# to tell its caller that the user chose to back up.
		    || true;
# updateConfFile.sh ---
# Update Count     : 186
Usage: $progname  [options] new_file  destination
Usage: $progname  -p  destination
	usageversion;
usageversion () {
		# Use debconf to prompt.
# Use debconf to show the differences
            # User has said to replace missing files, so we do so, no
# /usr/lib/emacsen-common/emacs-package-install $package_name.
# /usr/lib/emacsen-common/packages/install/$package_name for each
	. /usr/share/debconf/confmodule
########              Utility functions                      #########
    # Variable Value Doc_string
    VERBOSE=''
VERBOSE=''
# VERBOSE of 0 is supposed to be the same as not setting VERBOSE
     -v,     --verbose       Make the script verbose
	-v|--verbose) VERBOSE=1;                        shift  ;;
*** WARNING: ucf was run from a maintainer script that uses debconf, but
#	   Well, nothing matched. We now check to see if the
#         we need do nothing.
# We need TEMP as the `eval set --' would nuke the return value of getopt.
        # we saw. Since the user apparently has deleted the file,
#    What would you like to do about it ?  Your options are:                           #
which is where we look for any historical md5sums.
while true ; do
    while [ "X$done" = "XNO" ]; do
withecho () {
# with non-replacement being the norm.
     [ "X$(readlink -e /usr/bin/pager || :)" != "X" ]; then
                    x-terminal-emulator || true
# 			    " (Y/I/N/O/D/3/T/M/Z) [default=N] ?"                       #
# 			    " (Y/I/N/O/D/Z) [default=N] ?"                             #
#     Y or I  : install the package maintainer's version                               #
#       Z     : start a new shell to examine the situation                             #
