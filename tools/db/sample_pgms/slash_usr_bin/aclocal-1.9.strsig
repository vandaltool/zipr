# -------------------------
# --------------------------
# ---------------------------------
################################################################
# 02110-1301, USA.
# 2005  Free Software Foundation, Inc.
#   AC_DEFUN([macroname], ...)
#   AC_DEFUN(macroname, ...)
							    'AC_DEFUN_ONCE',
$ac_defun_rx =
	  $acdir = $1;
  --acdir=DIR           directory holding config files
$acdir = '/usr/share/aclocal';
	    . "acinclude.m4 but never used\n")
# aclocal - create aclocal.m4 by scanning configure.ac
  # aclocal sees the potential definition, but this definition is
$ac_require_rx = "AC_REQUIRE\\((?:\\[([^]]+)\\]|([^],)\n]+))\\)";
      # AC_SUBSTs.
  # actually never processed and the Autoconf implementation is used
# Add a file to output.
# Add a macro to the output.
# added to the command line.  If acdir has been redirected,
      add_file ('acinclude.m4');
    &add_file ($map{$macro});
  add_macro ($_) foreach (@rlist);
  # a file A if it is going to be output before a file B that includes
  # All candidate files.
  # All candidate macros.
# along with this program; if not, write to the Free Software
  # Always include acinclude.m4, even if it does not appear to be used.
# any later version.
	      # are hard to work around, especially when you must
  "(?:AU_ALIAS|A[CU]_DEFUN|AC_DEFUN_ONCE)\\((?:\\[([^]]+)\\]|([^],)\n]+))";
							    'AU_DEFUN',
		. "automake.html#Extending-aclocal\n"
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# but WITHOUT ANY WARRANTY; without even the implied warranty of
  # By default $(datadir)/aclocal doesn't exist.  We don't want to
  # can happen when an Autoconf macro is conditionally defined:
check_acinclude;
# Check macros in acinclude.m4.  If one is not used, warn.
      # Check the time stamp of this file, and all files it includes.
      chomp;
	  chomp ($contents=$_);
      close (DEFAULT_DIRLIST);
	closedir (DIR);
    # complain when we trace for macro usage later.
  # configure.ac is implicitly included.
# configure.ac or configure.in.
$configure_ac = require_configure_ac;
    # Construct a new function that does the searching.  We use a
# contains a list of directories, one per line, to be added
      $contents .= $_;
# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
## cperl-brace-offset: 0
## cperl-continued-brace-offset: 0
## cperl-continued-statement-offset: 2
## cperl-extra-newline-before-brace: t
## cperl-indent-level: 2
## cperl-label-offset: -2
## cperl-merge-trailing-else: nil
  # creates aclocal.m4t and then rename it to aclocal.m4, but the
$default_acdir = $acdir;
  $default_dirlist="$acdir/dirlist"
$default_dirlist = "$default_acdir/dirlist";
# (Definitions in first files we have scanned should override those from
  delete $files{$configure_ac};
	  delete $files{$ifile};
    die "internal error: $@\n search is $search" if $@;
    # "die" is correctly and easily propagated if run.
  # directory and it hasn't been created.
# Ditto, but records the last definition of each macro as returned by --trace.
# does not exist.
  # doing so invalidate Autom4te's cache and therefore slows down
  # Do not scan a file twice.
  # Do not scan the same file twice.
      # don't match things that look like macro assignments or
	      # duplicated macro.  However, this turns out to be
# Each key in %FILES is a file that must be present in the output.
      else
      elsif ($arglist[0] eq '--force')
      elsif ($arglist[0] eq '--help')
      elsif ($arglist[0] eq '-I')
      elsif ($arglist[0] eq '--print-ac-dir')
      elsif ($arglist[0] eq '--verbose')
      elsif ($arglist[0] eq '--version')
      elsif ($arglist[0] =~/^--output=(.+)$/)
eval 'case $# in 0) exec /usr/bin/perl -S "$0";; *) exec /usr/bin/perl -S "$0" "$@";; esac'
    eval $search;
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# except `]'.  Otherwise macroname stops on the first `]', `,', `)',
      exit 0;
	  exit 0;
      exit 1;
	    exit 1;
	  exit 1;
exit $exit_code;
  exit $status;
	      # extremely unpopular.  It causes actual problems which
  # file A, not the converse.
%file_contents = ();
  $file_contents{$file} = $contents;
    $file_contents{$file} : contents $file;
  # File included by $configure_ac are redundant.
%file_includes = ();
  $file_includes{$file} = \@all_inc_files;
@file_order = ();
  $files{'acinclude.m4'} = 1 if -f 'acinclude.m4';
  # Files at the end of @file_order should override those at the beginning,
  $files{$configure_ac} = 1;
%file_seen = ();
  $file_seen{$file} = 1;
      $files{$map{$m}} = 1 if $map{$m} eq $map_traced_defs{$m};
  %files = strip_redundant_includes %files;
  # (Filter out unused macro definitions with $map_traced_defs.  This
  # Finally, adds any directory listed in the `dirlist' file.
    # Finally, scan all files in our search path.
    # First, scan configure.ac.  It may contain macro definitions,
  # FIXME: Shouldn't we diagnose this?
      # FIXME: should print line number of acinclude.m4.
  --force               always update output file
$force_output = 0;
	  $force_output = 1;
	foreach $file (reverse sort grep (! /^\./, readdir (DIR)))
    foreach $m4dir (@dirlist)
  foreach my $file (reverse @file_order)
      foreach my $ifile (@{$file_includes{$file}})
  foreach my $key (keys %map)
    foreach my $key (reverse sort keys %map)
  foreach (split ("\n", $contents))
  for $file (grep { exists $files{$_} } @file_order)
      for my $ifile ($file, @{$file_includes{$file}})
  for my $m (@macros)
  # For some reason I don't understand, it does not work
# for uses of known macros and AC_REQUIREs of possibly unknown macros.
		    . '"); $found = 1; }' . "\n");
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
#           Free Software Foundation, Inc.
	    $fullfile = File::Spec->canonpath ("$m4dir/$file");
    # function (instead of just evaluating $search in the loop) so that
Generate `aclocal.m4' by scanning `configure.ac' or `configure.in'
# Generated from aclocal.in; do not edit by hand.
  # get an error in the case where we are searching the default
  # Get the list of files containing definitions for the macros used.
# gives unlimited permission to copy and/or distribute it,
# GNU General Public License for more details.
$greatest_mtime = 0;
  $greatest_mtime = $mtime if $greatest_mtime < $mtime;
	  $greatest_mtime = $mtime if $greatest_mtime < $mtime;
      && $greatest_mtime < mtime ($output_file)
  --help                print this help, then exit
# However some of these files might already include other files in %FILES,
# How much to say.
  -I DIR                add directory to search list for .m4 files
    if 0;
    if $acdir eq $default_acdir;
    if $acdir ne $default_acdir;
      if ($arglist[0] =~ /^--acdir=(.+)$/)
	  if (-d $contents )
	  if (! defined $1)
	  if (! defined $map{$macro})
  if (! -e $file)
    if exists $scanned_configure_dep{$file};
if (! $exit_code)
    if (-f 'acinclude.m4')
  if (-f 'acinclude.m4')
      if ($file =~ m,^(?:\w:)?[\\/],)
  if (!$force_output
	if ($macro eq 'AC_DEFUN'
	if $map{$key} eq 'acinclude.m4' && ! $macro_seen{$key};
  if (open (DEFAULT_DIRLIST, $default_dirlist))
	if (! opendir (DIR, $m4dir))
  if ($print_and_exit)
      if (! &search && /(^|\s+)(AM_[A-Z0-9_]+)($|[^\]\)=A-Z0-9_])/)
      # If the file to add looks like outside the project, copy it
	    if $verbose;
		if $verbose;
      # Ignore `##' lines.
	  # Ignore '#' lines.
    # Ignore unknown required macros.  Either they are not really
	  $inc_lines{$ifile} = $.;
  # instead.)
# It's important to output the contents of aclocal.m4 in the opposite order.
# it under the terms of the GNU General Public License as published by
							    keys %macro_seen));
# later files.  So they must appear last in the output.)
      ++$line;
  local (@arglist) = @_;
    local (@dirlist) = @_;
  local (@dirlist);
local (@dirlist) = parse_arguments (@ARGV);
  local ($file) = @_;
	local ($file, $fullfile);
    local ($m4dir);
    local ($macro) = @_;
  local ($print_and_exit) = 0;
  local ($status) = @_;
## Local Variables:
$m4_include_rx = "(?:m4_)?(s?)include\\((?:\\[([^]]+)\\]|([^],)\n]+))\\)";
		. "macro `$2' not found in library\n");
	    || $macro eq 'AC_DEFUN_ONCE'
	    || $macro eq 'AU_DEFUN');
	  # Macro not found, but AM_ prefix found.
%macro_seen = ();
    $macro_seen{$macro} = 1;
  # Make sure we include acinclude.m4 if it exists.
	  # Make this just a warning, because we do not know whether
  #     make to call aclocal in loop.)
%map = ();
# Map file names to file contents.
# Map file names to included files (transitively closed).
	      $map{$macro} = $file;
# Map macro names to file names.
		       map { scan_file ($_, "$file:$inc_lines{$_}") } @copy);
%map_traced_defs = ();
      $map_traced_defs{$arg1} = $file
# Matches a macro definition.
# Matches an AC_REQUIRE line.
# Matches an m4_include line
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	      # mix-and-match tool versions.
# Modification time of the youngest dependency.
  my @all_inc_files = (@inc_files,
my $configure_ac;
  my $contents = '';
  my $contents = exists $file_contents{$file} ?
  my @copy = @inc_files;
  my $fh = new Automake::XFile $file;
  my ($file) = @_;
      my ($file, $macro, $arg1) = split (/:/);
  my %files = ();
  my %files = @_;
  my %files = map { $map{$_} => 1 } keys %macro_seen;
  my ($file, $where) = @_;
	  my $ifile = $2 || $3;
  my @ilist = ();
  my @inc_files = ();
  my %inc_lines = ();
  my $line = 0;
	  my $macro = $1 || $2;
    my %macro_traced = trace_used_macros;
  my $mtime = mtime $file;
	  my $mtime = mtime $ifile;
  my $out = new Automake::XFile "> $output_file";
  my $output = '';
  my ($output_file, @macros) = @_;
  my $perllibdir = $ENV{'perllibdir'} || '/usr/share/automake-1.9';
  my @rlist = ();
my %scanned_configure_dep = ();
    my $search = "sub search {\nmy \$found = 0;\n";
  my %traced = ();
  my $tracefh = new Automake::XFile ("$traces $configure_ac |");
  my $traces = ($ENV{AUTOM4TE} || 'autom4te');
my $underquoted_manual_once = 0;
  # name in the header.
    # needed (e.g., a conditional AC_REQUIRE), in which case aclocal
      next if /^##/;
	  next if /^#/;
	  next if $1 eq 's' && ! -f $ifile;
	    next if $file eq 'aclocal.m4';
      next unless exists $files{$file};
	  next unless exists $files{$ifile};
	    next unless $file =~ /\.m4$/;
# Note also that the versioned directory is handled later.
# Note that this isn't pkgdatadir, but a separate directory.
	      # Note: we used to give an error here if we saw a
  # Nothing to output?!
  #     (Not updating $output_file in this situation would cause
  #   * One of the dependencies is younger.
  # Only add a file once.
	    # Only examine .m4 files.
# Option --force.
    # or may include other files that define macros.
# or `\n' encountered.
		. "  or see http://sources.redhat.com/automake/"
	  # Otherwise, simply include the file.
$output";
      && $output eq contents ($output_file))
	  $output_file = $1;
$output_file = 'aclocal.m4';
	  $output .= $file_contents{$file} . "\n";
# Output file name.
  --output=FILE         put output in FILE (default aclocal.m4)
  $output = "# generated automatically by aclocal $VERSION -*- Autoconf -*-
	  $output .= "m4_include([$file])\n";
  # override acdir.
# Parse command line.
# PARTICULAR PURPOSE.
# -*- perl -*-
## perl-brace-imaginary-offset: 0
## perl-brace-offset: 0
## perl-continued-brace-offset: 0
## perl-continued-statement-offset: 2
## perl-indent-level: 2
## perl-label-offset: -2
# Point to the documentation for underquoted AC_DEFUN only once.
  # Prevent potential infinite recursion (if two files include each other).
  print "\
      print $acdir, "\n";
  --print-ac-dir        print name of directory holding m4 files
	  print "aclocal (GNU $PACKAGE) $VERSION\n";
	  $print_and_exit = 1;
	  print "Copyright (C) 2005 Free Software Foundation, Inc.\n";
  print $out $output;
	    print STDERR "aclocal: couldn't open directory `$m4dir': $!\n";
	      print STDERR "aclocal: found macro $macro in $file: $.\n"
	      print STDERR "aclocal: ignoring macro $macro in $file: $.\n"
      print STDERR "aclocal: $output_file unchanged\n" if $verbose;
  print STDERR "aclocal: running $traces $configure_ac\n" if $verbose;
    print STDERR "aclocal: saw macro $macro\n" if $verbose;
	  print STDERR "aclocal: unrecognized option -- `$arglist[0]'\nTry `aclocal --help' for more information.\n";
  print STDERR "aclocal: writing $output_file\n" if $verbose;
	      print STDERR "$file:$.: warning: underquoted definition of $2\n";
	  print STDERR "$ifile is already included by $file\n"
	      print STDERR "  run info '(automake)Extending aclocal'\n"
      print STDERR "$where: file `$file' does not exist\n";
	  print "This is free software; see the source for copying conditions.  There is NO\n";
  print "Usage: aclocal [OPTIONS] ...\n\n";
# Print usage and exit.
	  print "warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n";
	  print "Written by Tom Tromey <tromey\@redhat.com>\n\n";
  push (@dirlist, $acdir)
  push (@dirlist, "$acdir-$APIVERSION")
	  push (@dirlist, $arglist[0]);
	      push (@dirlist, $contents);
	  push @ilist, $ifile;
	  push (@inc_files, $ifile);
	  push (@rlist, $1 || $2);
  # rebuild rules generated by Automake create aclocal.m4 directly --
# Recursively scan m4_included files.
# Remember the order into which we scanned the files.
      # Remove comments from current line.
Report bugs to <bug-automake\@gnu.org>.\n";
      return;
  return ()
  return;
  return @all_inc_files;
  return @dirlist;
  return @$file_includes{$file} if exists $file_includes{$file};
  return %files;
  return () if exists $file_contents{$file};
  return if ($file_seen{$file});
  return if ! length ($output);
# Return the list of included files.
  return %traced;
    return unless defined $map{$macro};
      s/\#.*$//;
      s/\bdnl\b.*$//;
# Scan a configure dependency (configure.ac, or separate m4 files)
# Scan all the installed m4 files and construct a map.
# Scan a single M4 file ($FILE), and all files it includes.
scan_configure;
  scan_configure_dep ($configure_ac);
  scan_configure_dep $file;
# scan_configure_dep ($file)
  &scan_configure_dep ($_) foreach (@ilist);
	&scan_file ('acinclude.m4', 'aclocal');
    &scan_file ($configure_ac, 'aclocal');
# scan_file ($FILE, $WHERE)
	    &scan_file ($fullfile, 'aclocal');
scan_m4_files (@dirlist);
      # scan_m4_files.  The last parenthetical match makes sure we
  $scanned_configure_dep{$file} = 1;
	$search .= ('if (/\b\Q' . $key . '\E(?!\w)/) { & add_macro ("' . $key
    $search .= "return \$found;\n};\n";
  # Search the versioned directory near the end, and then the
### Setup "GNU" style for perl-mode and cperl-mode.
      shift (@arglist);
	  shift (@arglist);
    # should be quiet, or they are needed and Autoconf itself will
	  # Skip missing `sinclude'd files.
	    # Skip some files when running out of srcdir.
  # so it is important to preserve these trailing files.  We can remove
# Some globals.
# so there is no point in including them another time.
	  s/\s*\#.*$//;
	  # strip off newlines and end-of-line comments
# strip_redundant_includes (%FILES)
sub add_file ($)
sub add_macro ($)
sub check_acinclude ()
sub parse_arguments (@)
sub scan_configure ()
sub scan_configure_dep ($)
sub scan_file ($$)
sub scan_m4_files (@)
sub strip_redundant_includes (%)
sub trace_used_macros ()
sub usage ($)
sub write_aclocal ($@)
  #   * The contents of the current file are different from what
  #   * The --force option is in use.
# the Free Software Foundation; either version 2, or (at your option)
	  # the macro is actually used (it could be called conditionally).
    # Then, scan acinclude.m4 if it exists.
      # The search function is constructed dynamically by
      # things like `/', `\', or `c:\'.
  # this creates spurious differences when using autoreconf.  Autoreconf
# This file is free software; the Free Software Foundation
# This program is distributed in the hope that it will be useful,
# This program is free software; you can redistribute it and/or modify
# This removes items of %FILES which are already included by another file.
  # this would gives two ways to get the same file, with a different
  # to do `map { scan_file ($_, ...) } @inc_files' below.
  # tools called after aclocal.
# to the dirlist in addition to $acdir, as if -I had been
      # to the output.  The regex catches filenames starting with
      $traced{$macro} = 1 if $macro_seen{$macro};
  $tracefh->close;
  $traces .= join (' ', grep { exists $files{$_} } @file_order) . " ";
  $traces .= join (' ', map { "--trace='$_:\$f:\$n:\$1'" } ('AC_DEFUN',
  $traces .= " --language Autoconf-without-aclocal-m4 ";
	      $underquoted_manual_once = 1;
    unless $acdir eq $default_acdir && ! -d $acdir;
		unless $underquoted_manual_once;
  unshift @file_order, $file;
  unshift @INC, (split ':', $perllibdir);
  # unversioned directory last.  Only do this if the user didn't
	  &usage (0);
use Automake::Channels;
use Automake::Config;
use Automake::Configure_ac;
use Automake::FileUtils;
use Automake::General;
use Automake::XFile;
use Cwd;
	# used in preference to foo1.m4.
use File::Basename;
use File::stat;
#!/usr/bin/perl
	  ++$verbose;
$verbose = 0;
  --verbose             don't be silent
  --version             print version number, then exit
	  warn ("aclocal:$file:$line: warning: "
      warn ("aclocal: warning: macro `$key' defined in "
  #     we have computed.
  # We need to overwrite $output_file in the following situations.
	# We reverse the directory contents so that foo2.m4 gets
  # We try not to update $output_file unless necessary, because
  # We used to print `# $output_file generated automatically etc.'  But
# we will also check the specified acdir (this is done later).
# When macroname is `['-quoted , we accept any character in the name,
# $WHERE is the location to use in the diagnostic if the file
# Which files have been seen.
# Which macros have been seen.
      while (/$ac_defun_rx/go)
      while (/$ac_require_rx/go)
  while (@arglist)
      while (<DEFAULT_DIRLIST>)
  while ($_ = $fh->getline)
      while (/$m4_include_rx/go)
  while ($_ = $tracefh->getline)
# with or without modifications, as long as this notice is preserved.
  # With Perl 5.8.2 it undefines @inc_files.
    write_aclocal ($output_file, keys %macro_traced);
# Write output.
# Written by Tom Tromey <tromey@redhat.com>.
# You should have received a copy of the GNU General Public License
