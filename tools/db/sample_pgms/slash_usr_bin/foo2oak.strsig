 !"#	%&'()*+,-./0123456789:;<=>? ABCDEFGHIJKLMNO0QRSTUVWGYZ[\]^V`abcd]fghcjkgmkomoarith_decode
$&'(*+-.0134689;<>? !
                    0=auto 1=plain 2=preprinted 3=letterhead 4=transparency
                    0=HP-1500, 1=KM-1635/2035
                  0=no, 1=Y, 2=X, 3=XY
                    10=cardstock 11=heavy 12=envelope 13=light 14=tough
                    15=vellum 16=rough 19=thick 20=highqual
                   1=letter, 3=ledger, 5=legal, 6=statement, 7=executive,
                    1=off, 2=longedge, 3=shortedge
                    1=tray1 2=tray2 4=manual 7=auto
		    20=env10, 27=envDL, 28=envC5, 30=envC4, 37=envMonarch,
		    257=A6, 258=B6, 259=B5iso, 260=env6
                    5=prepunched 6=labels 7=bond 8=recycled 9=color
		    8=A3, 9=A4, 11=A5, 12=B4, 13=B5jis, 14=folio, 19=env9,
\$@9\$0s
9J|~:;0u
-A                AllIsBlack: convert C=1,M=1,Y=1 to just K=1
ABORT marker segment encountered
                  -A, -B work with bitcmyk input only
@ACDEFHIJKMNO0223456789:;==
	and other OAKT-based black and white printers.
arith_encode
__assert_fail
-b bits           Bits per plane if autodetect doesn't work (1 or 2) [%d]
-B                BlackClears: K=1 forces C,M,Y to 0
b:cd:g:n:m:p:r:s:u:l:z:L:ABJ:M:S:U:D:V?h
BD$d;t$d
Cannot allocate space for bit plane
Cannot allocate space for subplane
Can't allocate page buffer
Can't allocate row buffer
Can't allocate space for chain
Can't allocate space for compressed data
Can't open '%s' for reading
-c                Force color mode if autodetect doesn't work
cmyk_page: w=%d, h=%d, bitbpl=%d
                    Code numbers may vary with printer model
	Convert Ghostscript bitcmyk format to a 1-bpp color OAKT stream,
	Convert Ghostscript pbm format to a 1-bpp monochrome OAKT stream,
	Convert Ghostscript pgm format to a 2-bpp monochrome OAKT stream,
Could not allocate space for carries
cx >= 0 && cx < 4096
D$0+D$$=
D$,9D$(t
D$(9D$\v
                  %d=Cyan, %d=Magenta, %d=Yellow, %d=Black
%d	%d %d %d %d
D$D+L$X)
-d duplex         Duplex code to send to printer [%d]
Debugging Options:
DEVICE_URI
-D lvl            Set Debug level [%d]
Don't know how to handle pgm maxVal '%d'
D$(OTHEf
%d x %d, %d
efghcijkg
First chunk must be BIH and 20 bytes long
   foo2oak [options] <bitcmyk-file >OAKT-file
   foo2oak [options] <pbmraw-file >OAKT-file
   foo2oak [options] <pgmraw-file >OAKT-file
	| foo2oak -r600x600 -g5100x6600 -p1 >testpage.oak
	for driving the HP LaserJet 1500 color laser printer
	for driving the HP LaserJet 1500 color laser printer.
__fprintf_chk
fscanf: rc == 0!
fwrite(10): rc == 0!
fwrite(11): rc == 0!
fwrite(12): rc == 0!
fwrite(1): rc == 0!
fwrite(2): rc == 0!
fwrite(3): rc == 0!
fwrite(4): rc == 0!
fwrite(5): padlen=%d rc == 0!
fwrite(7): rc == 0!
fwrite(8): rc == 0!
fwrite(9): rc == 0!
GLIBC_2.0
GLIBC_2.1
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.7
__gmon_start__
	gs -q -dBATCH -dSAFER -dQUIET -dNOPAUSE \ 
-g <xpix>x<ypix>  Set page dimensions in pixels [%dx%d]
$Id: foo2oak.c,v 1.69 2011/11/08 20:25:27 rick Exp $
$Id: jbig.c,v 1.6 2011/06/09 11:54:12 rick Exp $ 
Illegal format '%s' for -g
Illegal format '%s' for -l
Illegal format '%s' for -r
Illegal format '%s' for -u
Illegal magic number
Illegal number of bits per color (%d)
Illegal value '%s' for -b
Illegal value '%s' for -C
Illegal value '%s' for -d
Illegal value '%s' for -L
Illegal value '%s' for -z
Illegal X value '%d' for -l
Illegal X value '%d' for -u
Illegal X value '%s' for -g
Illegal Y value '%d' for -l
Illegal Y value '%d' for -u
Illegal Y value '%s' for -g
Incremental BIE does not continue previous one
Input data stream contains invalid data
Input data stream uses unimplemented JBIG features
_IO_getc
_IO_stdin_used
__isoc99_fscanf
jbig_ar.c
JBIG-KIT 2.0 -- (c) 1995-2008 Markus Kuhn -- Licence: GPL
-J filename       Filename string to send to printer [%s]
l$H9T$htx
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
-L mask           Send logical clipping values from -u/-l in ZjStream [%d]
localtime
-l <xoff>x<yoff>  Set offset of lower right printable in pixels [%dx%d]
-m media          Media code to send to printer [%d]
-M mirror         Mirror bytes (0=KM-1635/KM-2035, 1=HP CLJ 1500) [%d]
	N.B. Color correction is expected to be performed by ghostscript.
-n copies         Number of copies [%d]
Normal Options:
Not a bitcmyk, cups, pbm, or pgm file!
Not a pbmraw data stream
Not a pgmraw data stream
Not enough memory available
PAD_PAD_PAD_PAD_
PAGE: %d %d
-p paper          Paper code to send to printer [%d]
PQRSTVWWHHJJKMM
Preamture EOF reading height
Preamture EOF reading magic number
Preamture EOF reading width
Preamture EOF skipping bitPerPixel
Preamture EOF skipping end of CUPS header
Preamture EOF skipping mediaType
Preamture EOF skipping start of CUPS header
Premature EOF(1) on input at y=%d
Premature EOF(2) on input at y=%d
Premature EOF(3) on input at y=%d
Premature EOF(4) on input at y=%d
Premature EOF(5) on input at y=%d
Premature EOF on input stream
Premature EOF(pbm) on input stream
Premature EOF(pgm) on input stream
Printer Tweaking Options:
Program error: missing BIH at start of chain
Reached specified image size
read_and_clip_image: bpl=%d, h=%d
read_and_clip_image: clipleft=%d data=%d clipright=%d
read_and_clip_image: rawBpl=%d, rightBpl=%d, pixelsePerByte=%d
-r <xres>x<yres>  Set device resolution in pixels/inch [%dx%d]
s->buffer != 0xff
	    -sOutputFile=- - < testpage.ps \ 
		-sOutputFile=- - < testpage.ps \ 
	    -sPAPERSIZE=letter -g5100x6600 -r600x600 -sDEVICE=bitcmyk \ 
		-sPAPERSIZE=letter -r600x600 -sDEVICE=pbmraw \ 
		-sPAPERSIZE=letter -r600x600 -sDEVICE=pgmraw \ 
-S plane          Output just a single color plane from a color print [all]
ss < 113
-s source         Source code to send to printer [%d]
__stack_chk_fail
__strcpy_chk
Unable to allocate page buffer of %d x %d = %d bytes
Unexpected end of input data stream
@Unknown error code passed to jbg_strerror()
Unknown marker segment encountered
u&;t$@s 
-U username       Username string to send to printer [%s]
-u <xoff>x<yoff>  Set offset of upper left printable in pixels [%dx%d]
__vfprintf_chk
-V                Version %s
-z model          Model [%d]
