# 0.1   96-04-20 fl     Created
# 0.2   96-10-04 fl     Use draft mode when converting images
# 0.3   96-12-30 fl     Optimize output (PNG, JPEG)
# 0.4   97-01-18 fl     Made optimize an option (PNG, JPEG)
# 0.5   98-12-30 fl     Fixed -f option (from Anthony Baxter)
        apply(im.save, (argv[1], format), options)
        apply(im.save, (argv[1],), options)
# convert image files
        convert = "L"
convert = None
        convert = "P"
        convert = "RGB"
def usage():
    elif o == "-c":
    elif o == "-o":
    elif o == "-p":
    elif o == "-q":
    elif o == "-r":
            else:
    else:
except getopt.error, v:
        for i in id:
        format = a
format = None
for o, a in opt:
from PIL import Image
# History:
        id = Image.ID[:]
        id.sort()
    if convert and im.mode != convert:
    if format:
            if Image.SAVE.has_key(i):
if len(argv) != 2:
if len(sys.argv) == 1:
    if o == "-f":
    if o == "-g":
        Image.init()
        im.draft(convert, im.size)
    im = Image.open(argv[0])
        im = im.convert(convert)
import getopt, string, sys
import site
    opt, argv = getopt.getopt(sys.argv[1:], "c:dfgopq:r")
options = { }
        options["optimize"] = 1
        options["quality"] = string.atoi(a)
    print
    print "cannot convert image",
    print "  -c <format>  convert to format (default is given by extension)"
    print "  -f           list supported file formats"
    print "  -g           convert to greyscale"
                print i,
                print i+"*",
    print "  -o           optimize output (trade speed for size)"
    print "Options:"
    print "  -p           convert to palette image (using standard palette)"
    print "PIL Convert 0.5/1998-12-30 -- convert image files"
    print "  -q <value>   set compression quality (0-100, JPEG only)"
    print "  -r           convert to rgb"
    print "(%s:%s)" % (sys.exc_type, sys.exc_value)
        print "Supported formats (* indicates output format):"
    print "Usage: pilconvert [option] infile outfile"
    print v
        sys.exit(1)
    sys.exit(1)
# The Python Imaging Library.
    usage()
#! /usr/bin/python
