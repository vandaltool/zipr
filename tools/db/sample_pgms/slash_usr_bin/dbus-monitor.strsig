--address
array of bytes [
array of bytes "%s"
boolean %s
__bss_start
Couldn't add filter!
__cxa_finalize
dbus_bus_add_match
dbus_bus_get
dbus_bus_register
dbus_connection_add_filter
dbus_connection_open
dbus_connection_read_write_dispatch
dbus_error_free
dbus_error_init
dbus_error_is_set
dbus_message_get_destination
dbus_message_get_error_name
dbus_message_get_interface
dbus_message_get_member
dbus_message_get_path
dbus_message_get_reply_serial
dbus_message_get_sender
dbus_message_get_serial
dbus_message_get_type
dbus_message_is_signal
dbus_message_iter_get_arg_type
dbus_message_iter_get_basic
dbus_message_iter_init
dbus_message_iter_next
dbus_message_iter_recurse
 (dbus-monitor too dumb to decipher arg type '%c')
dict entry(
Disconnected
double %g
 error_name=%s reply_serial=%u
Error: %s
Failed to open connection to %s: %s
Failed to register connection to bus at %s: %s
Failed to setup match "%s": %s
__fprintf_chk
gettimeofday
GLIBC_2.0
GLIBC_2.1.3
GLIBC_2.3.4
__gmon_start__
int16 %d
int32 %d
int64 %lld
I only support monitoring one bus at a time!
_IO_stdin_used
_Jv_RegisterClasses
libc.so.6
__libc_start_main
libdbus-1.so.3
/lib/ld-linux.so.2
method call
method return
--monitor
(null destination)
(null sender)
object path "
org.freedesktop.DBus.Local
__printf_chk
--profile
 reply_serial=%u
 serial=%u path=%s; interface=%s; member=%s
--session
session bus
signature "
%s	%lu	%lu
snprintf
%s sender=%s -> dest=%s
string "
struct {
--system
system bus
type='error'
type='method_call'
type='method_return'
type='signal'
uint16 %u
uint32 %u
uint64 %llu
(unknown message type)
Usage: %s [--system | --session | --address ADDRESS] [--monitor | --profile ] [watch expressions]
variant 
