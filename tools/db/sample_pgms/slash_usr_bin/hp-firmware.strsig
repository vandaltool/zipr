# along with this program; if not, write to the Free Software
                   app.exec_()
            app = QApplication(sys.argv)
# (at your option) any later version.
# Author: Don Welch, Sarbeswar Meher
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# (c) Copyright 2003-2009 Hewlett-Packard Development Company, L.P.
# -*- coding: utf-8 -*-
        d.close()
        d = device.Device(device_uri, printer_name)
                delay = 0.0
    delay = 0.0
                delay = float(a)
        device_uri = mod.getDeviceUri(device_uri, printer_name,
    device_uri = None
        device_uri, sane_uri, fax_uri = device.makeURI(usb_bus_node, 1)
                   dialog.exec_loop()
            dialog = FirmwareDialog(None, device_uri)
            dialog.show()
__doc__ = "Download firmware to a device that requires downloaded firmware to function. (Note: Most printers do not require the use of this utility)."
            d.open()
            d.queryModel()
        elif o in ('-y', '--delay'):
                elif ui_toolkit == 'qt3':
    elif ui_toolkit == 'qt3':
            else:
        else:
    else:
    except Error:
        except Error, e:
           except ImportError:
            except KeyboardInterrupt:
except KeyboardInterrupt:
            except ValueError:
        extra_options=[
            filter={'fw-download': (operator.gt, 0)})
    finally:
    for o, a in opts:
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
from base.g import *
from base import device, status, utils, tui, module
from prnt import cups
            from PyQt4.QtGui import QApplication
            from qt import *
            from ui4.firmwaredialog import FirmwareDialog
            from ui.firmwaredialog import FirmwareDialog
        fw_download = d.mq.get('fw-download', 0)
# GNU General Public License for more details.
        if 1:
            if d.downloadFirmware(usb_bus_id, usb_device_id):
        if delay:
        if fw_download:
            if len(usb_bus_id) != 3 or len(usb_device_id) != 3:
    if mode == GUI_MODE:
    if mode in (GUI_MODE, INTERACTIVE_MODE):
        if not device_uri:
                if not silent:
       if not utils.canEnterGUIMode():
        if not utils.canEnterGUIMode4():
        if o == '-s':
        if ui_toolkit == 'qt3':
                if ui_toolkit == 'qt4':
        if ui_toolkit == 'qt4':
    if ui_toolkit == 'qt4':
    if usb_bus_node is not None:
import getopt
import gzip
import operator
import os
import sys
import time
                        (INTERACTIVE_MODE, GUI_MODE, NON_INTERACTIVE_MODE),
# it under the terms of the GNU General Public License as published by
                log.debug("Starting GUI loop...")
                log.debug("USB bus ID: %s" % usb_bus_id)
        log.debug("USB bus node: %s" % usb_bus_node)
                log.debug("USB device ID: %s" % usb_device_id)
            log.error("Device %s does not support or require firmware download." % device_uri)
        log.error("Error opening device. Exiting.")
            log.error("Error opening device (%s). Exiting." % e.msg)
                log.error("Firmware download failed.")
                log.error("Invalid delay value. Must be numeric (float) value. Setting delay to 0.0")
            log.error("Invalid USB Device ID or USB bus ID. No device found.")
                log.error("Invalid USB IDs: %s" % a)
                log.error("Invalid USB IDs '%s'. Must be the format: bbb.ddd" % a)
            log.error("%s -u/--gui requires Qt3 GUI support. Entering interactive mode." % __mod__)
            log.error("%s -u/--gui requires Qt4 GUI support. Entering interactive mode." % __mod__)
            log.error("Unable to load Qt3 support. Is it installed?")
            log.error("Unable to load Qt4 support. Is it installed?")
    log.error("User exit")
                    log.info("Done.")
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
            mode = INTERACTIVE_MODE
            mode = NON_INTERACTIVE_MODE
__mod__ = 'hp-firmware'
    mod = module.Module(__mod__, __title__, __version__, __doc__, None,
        mod.parseStdOpts('y:s:', ['delay='])
        mod.quiet = False
    mod.setUsage(module.USAGE_FLAG_DEVICE_ARGS,
        mod.showTitle()
    mod.showTitle()
    opts, device_uri, printer_name, mode, ui_toolkit, lang = \
    printer_name = None
        ("Seconds to delay before download:", "-y<secs> or --delay=<secs> (float value, e.g. 0.5)", "option", False)],
         see_also_list=['hp-plugin', 'hp-toolbox'])
    silent = False
            silent = True
# Std Lib
                sys.exit(0)
        sys.exit(0)
                sys.exit(1)
            sys.exit(1)
        sys.exit(1)
# the Free Software Foundation; either version 2 of the License, or
# This program is distributed in the hope that it will be useful,
# This program is free software; you can redistribute it and/or modify
             time.sleep(delay)
__title__ = 'Firmware Download Utility'
            try:
           try:
        try:
    try:
                        (UI_TOOLKIT_QT4, UI_TOOLKIT_QT3), True, True)
    usb_bus_id = None
                usb_bus_id, usb_device_id = a.split(":", 1)
            usb_bus_node = a
    usb_bus_node = None
    usb_device_id = None
        ("Use USB IDs to specify printer:", "-s bbb:ddd, where bbb is the USB bus ID and ddd is the USB device ID. The ':' and all leading zeroes must be present.", "option", False),
#!/usr/bin/python
__version__ = '2.4'
# You should have received a copy of the GNU General Public License
