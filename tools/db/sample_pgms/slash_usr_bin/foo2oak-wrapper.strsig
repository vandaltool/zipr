		    ;;
		[024568])	NUP="1$OPTARG";;
[0-9]*)		;;
		[0-9]*\ [0-9]*)
                    0=auto 1=plain 2=preprinted 3=letterhead 4=graytrans
0|auto)		MEDIA=0;;
0)	MIRROR=1; ROTATE90=0;;
                  0=no, 1=Y, 2=X, 3=XY
                  0=Perceptual, 1=Colorimetric, 2=Saturation, 3=Absolute
                    10=cardstock 11=heavy 12=envelope 13=light 14=tough
10|cardstock)	MEDIA=10;;
11|a5|A5)	PAPER=11;	paper=a5;        XDIM="6992";  YDIM="4960"
11|heavy)	MEDIA=11;;
1200x600)	;;
    1200x600)       YDIMpoints=`dc -e "6k $YDIM 1200 / 72 *p"`;;
12|b4|B4)	PAPER=12;	paper=b4;        XDIM="12142"; YDIM="8598"
12|envelope)	MEDIA=12;;
13|b5jis|B5jis)	PAPER=13;	paper=b5;        XDIM="8598";  YDIM="6070"
13|light)	MEDIA=13;;
14|folio|Folio)	PAPER=14;	paper=folio;     XDIM="9922";  YDIM="7796"
14|tough)	MEDIA=14;;
		    15=vellum 16=rough 19=thick 20=highqual
15|vellum)	MEDIA=15;;
16|rough)	MEDIA=16;;
19|env9|"env#9")
19|thick)	MEDIA=19;;
	1)	case "$OPTARG" in
                  1=Cyan, 2=Magenta, 3=Yellow, 4=Black
1)	if [ "" = "$COLOR" ]; then
                    1=letter, 3=ledger, 5=legal, 6=statement, 7=executive,
1|letter)	PAPER=1;	paper=letter;    XDIM="10200"; YDIM="6600"
1)	MIRROR=0; ROTATE90=1;;
                    1=off, 2=longedge, 3=shortedge
1|off|none)	DUPLEX=1;;
1|plain)	MEDIA=1;;
                    1=tray1, 2=tray2, 4=manual, 7=auto
1|tray1)	SOURCE=1;;
		    20=env10, 27=envDL, 28=envC5, 30=envC4, 37=envMonarch,
20|env10|"env#10")
20|highqual)	MEDIA=20;;
-2/-3/-4/-6/-8/-10/-12/-14/-15/-16/-18
[234689]|1[024568])	PREFILTER="nup";;
	[234689])	NUP="$opt";;
    [2368]|1[0458])
2400x600)	;;
	2400x600)	lrx=`expr $lrx \* 2`;;
	2400x600)	ulx=`expr $ulx \* 2`;;
2400x600)	XDIM=`expr $XDIM \* 2`;;
    2400x600)       YDIMpoints=`dc -e "6k $YDIM 2400 / 72 *p"`;;
		    257=A6, 258=B6, 259=B5iso, 260=env6
257|a6|A6)	PAPER=257;	paper=a6;        XDIM="4961";  YDIM="3496"
258|b6|B6)	PAPER=258;	paper=b6;        XDIM="6048";  YDIM="4300"
259|b5iso|B5iso)
260|env6|"env#6")
27|envDL)	PAPER=27;	paper=envDL;     XDIM="5200";  YDIM="5200"
28|envC5)	PAPER=28;	paper=envC5;     XDIM="7650";  YDIM="5408"
2)	if [ "" = "$COLOR" ];
2|long*)	DUPLEX=2;;
2|preprinted)	MEDIA=2;;
2|tray2)	SOURCE=2;;
30|envC4)	PAPER=30;	paper=envC4;     XDIM="10818"; YDIM="7654"
#34|envB5)	PAPER=34;	paper=envB5;     XDIM="8316";  YDIM="5892"
37|envMonarch)	PAPER=37;	paper=envMonarch;XDIM="4650";  YDIM="4500"
3|ledger)	PAPER=3;	paper=ledger;    XDIM="20400"; YDIM="6600"
3|letterhead)	MEDIA=3;;
3|short*)	DUPLEX=3;;
    [49]|1[26])
4|manual|mp)	SOURCE=4;;
4|transparency)	MEDIA=4;;
	[57])	error "Can't find acceptable layout for $opt-up";;
5|legal)	PAPER=5;	paper=legal;     XDIM="10200"; YDIM="8400"
                    5=prepunched 6=labels 7=bond 8=recycled 9=color
5|prepunched)	MEDIA=5;;
600x600)	;;
	600x600)	lrx=`expr $lrx / 2`;;
	600x600)	ulx=`expr $ulx / 2`;;
600x600)	XDIM=`expr $XDIM / 2`;;
    600x600)        YDIMpoints=`dc -e "6k $YDIM 600 / 72 *p"`;;
6|labels)	MEDIA=6;;
6|statement)	PAPER=6;	paper=statement; XDIM="6600";  YDIM="5100"
		#792.000000 612.000000 1 0.000000 0.000000
7|auto)		SOURCE=7;;
7|bond)		MEDIA=7;;
7*)	DEFAULTCOLORMODE=10
7|executive)	PAPER=7;	paper=executive; XDIM="8700";  YDIM="6300"
		    8=A3, 9=A4, 11=A5, 12=B4, 13=B5jis, 14=folio, 19=env9,
8|a3|A3)	PAPER=8;	paper=a3;        XDIM="19842"; YDIM="7014"
8|recylcled)	MEDIA=8;;
9|a4|A4)	PAPER=9;	paper=a4;        XDIM="9920";  YDIM="7014"
9|color)	MEDIA=9;;
    a3)		;;
	A)	AIB=-A;;
		    /AccurateScreens true
                  adjust colors using the setcolorrendering PS operator.
    AIB=-A
#* along with this program; if not, write to the Free Software
	and converts it to Oak Technoligies OAKT printer format.
		    /Angle 37
#* (at your option) any later version.
#* Authors: Rick Richardson <rick.richardson@comcast.net>
BASENAME=`basename $PROGNAME`
		"`basename $ICC2PS` -o $GAMMAFILE -t$INTENT > $ICCTMP.crd.ps"
	$BASENAME [options] [ps-file]
	B)	BC=-B;;
-b bits           Bits per plane (1 or 2) [$BPP]
	b)	BPP=$OPTARG;;
$BC $AIB $COLOR2MONO"
	    $BC $AIB $COLOR2MONO -D$DEBUG
    BC=-B
		#%%BeginFeature: *CustomPageSize True
#!/bin/sh
#* but WITHOUT ANY WARRANTY; without even the implied warranty of
	# Can't handle different size pages
case "$BPP" in
    case "$COLORMODE" in
case "$COLORMODE" in
case "$DUPLEX" in
    case "$GAMMAFILE" in
	case "$GAMMAFILE" in
case `$GSBIN --version` in
case "$MEDIA" in
case "$MODEL" in
    case "$NUP" in
case $NUP in
	case $opt in
    case $paper in
case "$PAPER" in
case "$QUALITY" in
    case "$RES" in
	case "$RES" in
case "$RES" in
case "$SOURCE" in
		case "$tmp" in
	cat <<EOF
	cat > $ICCTMP.selcrd.ps <<-EOF
	    cat >> $ICCTMP.usecie.ps <<-EOF
		cat >> $ICCTMP.usecie.ps <<-EOF
	cat > $ICCTMP.usecie.ps <<-EOF
		cat >$TMPFILE
	c)	COLOR=-c;;
	C)	COLORMODE="$OPTARG";;
CLIP_LOG=
CLIP_LR=
	CLIP_LR="-l ${lrx}x${lry}"
CLIP_UL=
$CLIP_UL $CLIP_LR $CLIP_LOG \
	CLIP_UL="-u ${ulx}x${uly}"
CMDLINE="$*"
		    Code numbers may vary with printer model.
COLOR2MONO=
                  color correction using the setcolortransfer PS operator.
    COLORMODE=
COLORMODE=default
Color Tweaking Options:
		# Command line only
COPIES=1
#* Copyright (C) 2003-2006  Rick Richardson
#	corrupted image data.
-c                Print in color (else monochrome)
    # Create a Postscript CRD
	    create_crd
	create_crd
create_crd() {
		/Current /ColorRendering findresource setcolorrendering
Custom*)
Custom*x*)
dbgcmd() {
	D)	DEBUG="$OPTARG";;
                  -dDITHERPPI=nnn, etc.  May appear more than once. []
-d duplex         Duplex code to send to printer [$DUPLEX]
	d)	DUPLEX="$OPTARG";;
Debugging Options:
#	default clipping region.
*)	DEFAULTCOLORMODE=10
	DEFAULTCOLORMODE=10
    default)	COLORMODE=$DEFAULTCOLORMODE;;
    default)	GAMMAFILE=hpclj2500rgb.icm;;
DIM="${XDIM}x${YDIM}"
-D lvl            Set Debug level [$DEBUG]
# doesn't have :-
    done
DUPLEX=1
		    echo
		    echo "	$0 $CMDLINE"
	    echo "$@" >&2
	echo "$BASENAME: $1" >&2
		    echo "Illegal command:"
# e.g. /usr/share/ghostscript/7.07/lib/gs_statd.ps
elif [ "$COLOR" != "" -a "$QUALITY" = as ]; then
	elif [ -r "$SHARE/icm/$GAMMAFILE" ]; then
    else
	    else
# Else, the input comes from stdin.
error() {
		*)	error "Can't find acceptable layout for 1$OPTARG-up";;
		    error "Custom page size '$PAPER' != 1-99999"
		    error "Custom page size [XY]DIM != 1-99999"
	error "Illegal call to nup()."
*)	error "Illegal number of bits per plane ($BPP)";;
*)		error "Illegal resolution $RES";;
		|| error "Problem converting .ICM file to Postscript"
*)		error "Unimplemented paper code $PAPER";;
*)		error "Unknown duplex code $DUPLEX";;
*)		error "Unknown media code $MEDIA";;
*)	error "Unknown model code $MODEL";;
*)		error "Unknown source code $SOURCE";;
    esac
		esac;;
    exec < $1
		exec <$TMPFILE
# fallback to whatever the Linux distro has installed (usually 7.07)
	# Faster, but can't handle AllIsBlack or BlackClears
	[ -f $file ] && rm -f $file
#	Figure out the paper dimensions in pixels/inch, and set the
#	Figure out USERNAME
	file="$ICCTMP.$i"
# Filter thru psnup if N-up printing has been requested
	"foo2oak -r$RES -g$DIM -p$PAPER -m$MEDIA \
| foo2oak -r$RES -g$DIM -p$PAPER -m$MEDIA -n$COPIES -d$DUPLEX -s$SOURCE \
foo2zjs-pstops $PSTOPS_OPTS | \
	Foomatic printer wrapper for the foo2oak printer driver.
    for i in crd.ps log usecie.ps selcrd.ps
#* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
		    /Frequency 137
    [ -f "$TMPFILE" ] && rm -f $TMPFILE
    GAMMAFILE=
	    GAMMAFILE=
	GAMMAFILE=
GAMMAFILE=default
	*)	GAMMAFILE="$ICCTMP.usecie.ps $ICCTMP.crd.ps $ICCTMP.selcrd.ps";;
	    GAMMAFILE="$SHARE/icm/$GAMMAFILE"
	G)	GAMMAFILE="$OPTARG";;
-G gamma-file.ps  Prepend gamma-file to the Postscript input to perform
-g gsopts         Additional options to pass to Ghostscript, such as
	g)	GSOPTS="$GSOPTS $OPTARG";;
#* GNU General Public License for more details.
-G profile.icm    Convert profile.icm to a Postscript CRD using icc2ps and
        GSBIN=${GSBIN:-gs}
        GSBIN=${GSBIN:-gs.foo}
	"$GSBIN $PAPERSIZE -g$DIM -r$RES $GSDEV $GSOPTS $GAMMAFILE"
	    GSDEV=-sDEVICE=bitcmyk
	GSDEV=-sDEVICE=bitcmyk
	    GSDEV="-sDEVICE=cups -dcupsColorSpace=6 -dcupsBitsPerColor=2"
	    GSDEV=-sDEVICE=pbmraw
GSDEV=-sDEVICE=pbmraw
	    GSDEV=-sDEVICE=pgmraw
	GSDEV=-sDEVICE=pksmraw
GS="$GSBIN -q -dBATCH -dSAFER -dQUIET -dNOPAUSE"
    GSOPTS="-dCOLORSCREEN -dMaxBitmap=500000000 $GSOPTS"
    GSOPTS="-dCOLORSCREEN $GSOPTS"
    GSOPTS="-dMaxBitmap=500000000 $GSOPTS"
| ($GS $PAPERSIZE -g$DIM -r$RES $GSDEV $GSOPTS \
		    /HalftoneName (Round Dot Screen) cvn
		    /HalftoneType 1
#	HP Color LaserJet 1500:	-z0 (mirror bytes)
	    $ICC2PS -o $GAMMAFILE -t$INTENT > $ICCTMP.crd.ps 2>$ICCTMP.log \
    ICC2PS=$PREFIX/bin/foo2zjs-icc2ps
    ICCTMP=/tmp/icc
    ICCTMP=/tmp/icc$$
	*.icm|*.ICM|*.icc|*.ICC)
    if [ "" = "$AIB" -a "" = "$BC" ]; then
    if [ "$CLIP_LR" = "" ]; then
    if [ "$CLIP_UL" = "" ]; then
		if [ "$CMDLINE" != "-?" -a "$CMDLINE" != -h ]; then
if [ "$COLOR" != "" -a "$QUALITY" = wts ]; then
if [ "" = "$COLOR" ]; then
if [ "" != "$COLOR" ]; then
		if [ $DEBUG = 0 ]; then
		    if [ $DEBUG = 0 ]; then rm -f $TMPFILE; fi
if [ $DEBUG -eq 0 ]; then
	if [ $DEBUG -ge 1 ]; then
if [ "$DEBUG" -ge 9 ]; then
if [ $DEBUG -gt 0 ]; then
if eval gs.foo -v >/dev/null 2>&1; then
if [ $# -ge 1 ]; then
    if [ "$LPJOB" = "" ]; then
if [ "$LPUSER" != "" ]; then
	if [ "$QUALITY" = wts -o "$QUALITY" = as ]; then
	    if [ "$QUALITY" = wts ]; then
	    if [ -r "$GAMMAFILE" ]; then
if [ $ROTATE90 = 1 ]; then
# If there is an argument left, take it as the file to print.
		if [ "$XDIM" -eq 0 -o "$YDIM" -eq 0 ]; then
		if [ "$XDIM" = "" -o "$YDIM" = "" ]; then
    if [ -x $ICC2PS ]; then
if [ -x /usr/bin/logger -o -x /bin/logger ]; then
	    if [ -x /usr/bin/logger ]; then
if [ -x /usr/bin/logger ]; then
	I)	INTENT="$OPTARG";;
-I intent         Select profile intent from ICM file [$INTENT]
INTENT=0
#	intermingled with the printer drivers output, resulting in
	# Its really an .ICM file, not a gamma file.
#* it under the terms of the GNU General Public License as published by
	    -J "$LPJOB" -U "$USER" \
#	Kyocera Mita KM-1635:	-z1 (rotate 90)
#	Kyocera Mita KM-2035:	-z1 (rotate 90)
	L)	CLIP_LOG="-L $OPTARG";;
	l)	CLIP_LR="-l $OPTARG";;
    ledger)	;;
-L mask           Send logical clipping values from -u/-l in ZjStream [3]
		l*)	NUP_ORIENT=-l;;
    logger -t "$BASENAME" -p lpr.info -- \
		logger -t "$BASENAME" -p lpr.info -- \
    logger -t "$BASENAME" -p lpr.info -- "$BASENAME $@" </dev/null
#	Log the command line, for debugging and problem reports
	: # LPJOB="$1"
    lrx=$3; lry=$4
-l <xoff>x<yoff>  Set offset of lower right printable in pixels [varies]
#	Main Program, just cobble together the pipeline and run it
#* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-m media          Media code to send to printer [$MEDIA]
	m)	MEDIA="$OPTARG";;
    # Monochrome
# N.B. := operator used here, when :- would be better, because "ash"
-n$COPIES -d$DUPLEX -s$SOURCE -z$MODEL -M$MIRROR $COLOR -b$BPP \
-n copies         Number of copies [$COPIES]
	n)	COPIES="$OPTARG";;
    none | none.icm | */none.icm)
	none | none.icm | */none.icm)
	none | none.icm | */none.icm) GAMMAFILE="$ICCTMP.usecie.ps";;
Normal Options:
#	N-up-ify the job.  Requires psnup from psutils package
NUP_ORIENT=
	o)	case "$OPTARG" in
-o orient         For N-up: -op is portrait, -ol is landscape, -os is seascape.
#	Overload -G.  If the file name ends with ".icm" or ".ICM"
		PAPER=19;	paper=env9;      XDIM="4650";  YDIM="5362"
		PAPER=20;	paper=env10;     XDIM="4950";  YDIM="5700"
		PAPER=259;	paper=b5iso;     XDIM="8516";  YDIM="5906"
		PAPER=260;	paper=env6;     XDIM="4356";  YDIM="3900"
		PAPER=296;        paper=letter;
		PAPER=296;      paper=letter;
PAPERSIZE="-sPAPERSIZE=$paper";
PATH=$PATH:/sw/bin:/opt/local/bin
		p*|*)	NUP_ORIENT=;;
		#pop pop pop pop pop
	p)	PAPER="$OPTARG";;
-p paper          Paper code [$PAPER]
$PREFILTER \
*)			PREFILTER=cat;;
    PREFILTER="tee /tmp/$BASENAME.ps"
PREFIX=/usr
# Printer Notes:
Printer Tweaking Options:
                  Print with N-up (requires psutils)
#       Process the options
PROGNAME="$0"
		%!PS-Adobe-3.0
PSTOPS_OPTS="-n"
    PSTOPS_OPTS="$PSTOPS_OPTS -a"
	PSTOPS_OPTS="$PSTOPS_OPTS -c"
    *)		PSTOPS_OPTS="$PSTOPS_OPTS -h $YDIMpoints -r";;
    PSTOPS_OPTS="$PSTOPS_OPTS -w"
	q)	QUALITY="$OPTARG";;
	QUALITY=1
QUALITY=1
QUALITY=wts
#	Remove cruft
#       Report an error and exit
RES=600x600
	r)	RES="$OPTARG";;
-r <xres>x<yres>  Set device resolution in pixels/inch [$RES]
	S)	COLOR2MONO="-S$OPTARG";;
		    | sed -n '/CustomPageSize/{n;p;n;p;}' \
#	Select the ghostscript device to use
set_clipping() {
#		set_clipping 140 100	140 100
		set_clipping 140 100	140 100
		set_clipping 160 100	160 100
                set_clipping 2 100     2 100
    # Set clipping region if it isn't already set
		>> sethalftone
                  $SHARE/icm/ will be searched for profile.icm.
SHARE=$PREFIX/share/foo2oak
shift `expr $OPTIND - 1`
		s*)	NUP_ORIENT=-r;;
#	(some versions?) of Ghostscript where Postscript's stdout gets
SOURCE=7
    -sOutputFile="|cat 1>&3" $GAMMAFILE -_ >/dev/null 2>/dev/null) 3>&1 \
-S plane          Output just a single color plane from a color print [all]
		    /SpotFunction { 180 mul cos exch 180 mul cos add 2 div}
	s)	SOURCE="$OPTARG";;
-s source         Source code to send to printer [$SOURCE]
	# The file can be a full path name, or the name of a file in $SHARE/icm/
#* the Free Software Foundation; either version 2 of the License, or
#	The malarky with file descriptors 1 and 3 is to avoid a bug in
#	then convert the ICC color profile to a Postscript CRD,
#	then prepend it to the users job.  Select the intent
#* This program is distributed in the hope that it will be useful,
#* This program is free software; you can redistribute it and/or modify
	This script reads a Postscript ps-file or standard input
		    TMPFILE=/tmp/cus$$
		    TMPFILE=/tmp/custom.ps
		tmp=`head -n 10000 $TMPFILE \
    tmp=$XDIM
		    | tr '\n' ' '`
	tr '\r' '\n' | psnup $NUP_ORIENT -d2 -$NUP -m.3in -p$paper -q
	tr '\r' '\n' | psnup $NUP_ORIENT -d2 -$NUP -m.5in -p$paper -q
# Try to use a local copy of GhostScript 8.54, if available.  Otherwise,
	u)	CLIP_UL="-u $OPTARG";;
    ulx=$1; uly=$2
		usage;;
usage() {
		<</UseCIEColor true>>setpagedevice
    # Use old ICM method
    USER=""
    USER="$LPUSER@$LPHOST"
		    << /UseWTS false >> setuserparams
		    << /UseWTS true >> setuserparams
#	using the -I option.
-u <xoff>x<yoff>  Set offset of upper left printable in pixels [varies]
#	Validate Duplex code
#	Validate media code
#	Validate model code
#	Validate Resolution
#	Validate source (InputSlot) code
	V)	echo "$VERSION"; foo2oak -V; foo2zjs-pstops -V; exit 0;;
VERSION='$Id: foo2oak-wrapper.in,v 1.60 2011/08/07 16:49:30 rick Exp $'
-V                $VERSION
# What mode to use if the user wants us to pick the "best" mode
while getopts "1:23456789o:b:cC:d:g:l:u:L:m:n:p:q:r:s:z:ABS:D:G:I:Vh?" opt
		XDIM=`dc -e "$XDIM 1200* 72/p"`
		XDIM=`echo "$PAPER" | sed -e "s/Custom.//" -e "s/x.*//" `
		    XDIM=`echo "$tmp" | sed 's/ .*//'`
    XDIM=$YDIM
		YDIM=`dc -e "$YDIM 600* 72/p"`
		YDIM=`echo "$PAPER" | sed -e "s/.*x//" `
		    YDIM=`echo "$tmp" | sed -e 's/^[^ ]* //' -e 's/ .*//'`
    YDIM=$tmp
#* You should have received a copy of the GNU General Public License
	    -z$MODEL -M$MIRROR $COLOR -b$BPP $CLIP_UL $CLIP_LR $CLIP_LOG \
-z model          Model: 0=HP CLJ 1500, 1=KM-1635/KM-2035 [$MODEL]
	z)	MODEL="$OPTARG";;
