   ...> 
---------------------------------------------------------------------------------------------
) || ',' || 
2011-11-01 00:52:41 c7c6050ef060877ebe77b41d959e9df13f8c9b5e
%9.9s: %s
add_history
ambiguous option name: "%s"
ANALYZE sqlite_master;
Autoindex Inserts:                   %d
.backup ?DB? FILE      Backup DB (default "main") to FILE
.bail ON|OFF           Stop after hitting an error.  Default OFF
   -bail                stop after hitting an error
   -batch               force batch I/O
BEGIN TRANSACTION;
benign_malloc_hooks
bitvec_test
__bss_start
                         column   Left-aligned columns.  (See .width)
   -column              set output mode to 'column'
/****** CORRUPTION ERROR *******/
CPU Time: user %f sys %f
CREATE TABLE sqlite_master (
CREATE TEMP TABLE sqlite_temp_master (
CREATE VIRTUAL TABLE
                         csv      Comma-separated values
   -csv                 set output mode to 'csv'
__ctype_b_loc
__ctype_tolower_loc
%d (0x%08x)
databases
.databases             List names and files of attached databases
DELETE FROM sqlite_sequence;
.dump ?TABLE? ...      Dump the database in an SQL text format
.echo ON|OFF           Turn command echo on or off
   -echo                print commands before execution
Enter ".help" for instructions
Enter SQL statements terminated with a ";"
Error: cannot open "%s"
Error: cannot write to "%s"
Error: CLI support for testctrl %s not implemented
/**** ERROR: (%d) %s *****/
Error: incomplete SQL: %s
Error: invalid arguments:  "%s". Enter ".help" for help
Error: invalid testctrl option: %s
Error: mode should be one of: column csv html insert line list tabs tcl
Error: near line %d:
Error: non-null separator required for import
Error: querying schema information
Error: querying sqlite_master and sqlite_temp_master
Error: %s
/****** ERROR: %s ******/
Error: %s line %d: expected %d columns of data but found %d
Error: source database is busy
Error: testctrl %s takes a single int option
Error: testctrl %s takes a single unsigned int option
Error: testctrl %s takes no options
Error: unable to open database "%s": %s
Error: unable to process SQL "%s"
Error: unknown command or invalid arguments:  "%s". Enter ".help" for help
.exit                  Exit this program
.explain ?ON|OFF?      Turn output mode suitable for EXPLAIN on or off.
fault_install
FILENAME is the name of an SQLite database. A new database is created
__fprintf_chk
|| ')' FROM  
Fullscan Steps:                      %d
getpwuid
getrusage
GLIBC_2.0
GLIBC_2.1
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.4
__gmon_start__
.header(s) ON|OFF      Turn display of headers on or off
   -help                show this message
.help                  Show this message
                         html     HTML <table> code
   -html                set output mode to HTML
                         If TABLE specified, only dump tables matching
                         If TABLE specified, only list tables matching
                         If TABLE specified, only show indices for tables
                         If TABLE specified, only show tables matching
if the file does not previously exist.
.import FILE TABLE     Import data from FILE into TABLE
.indices ?TABLE?       Show names of all indices
   -init filename       read/process named file
INSERT INTO sqlite_master(type,name,tbl_name,rootpage,sql)VALUES('table','%q','%q',0,'%q');
INSERT INTO %s VALUES(
INSERT INTO %s VALUES(?
                         insert   SQL insert statements for TABLE
-interactive
   -interactive         force interactive I/O
_IO_putc
_IO_stdin_used
iskeyword
_Jv_RegisterClasses
Largest Allocation:                  %d bytes
Largest Pcache Allocation:           %d bytes
Largest Scratch Allocation:          %d bytes
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
libreadline.so.6
libsqlite3.so.0
                         LIKE pattern TABLE.
                         line     One value per line
   -line                set output mode to 'line'
   -list                set output mode to 'list'
                         list     Values delimited by .separator string
.load FILE ?ENTRY?     Load an extension library
-- Loading resources from %s
.log FILE|off          Turn logging on or off.  FILE can be stderr/stdout
Lookaside failures due to OOM:       %d
Lookaside failures due to size:      %d
Lookaside Slots Used:                %d (max %d)
                         matching LIKE pattern TABLE.
:memory:
Memory Used:                         %d (max %d) bytes
.mode MODE ?TABLE?     Set output mode where MODE is one of:
  name text,
-noheader
   -[no]header          turn headers on or off
no such VFS: "%s"
-nullvalue
.nullvalue STRING      Print STRING in place of NULL values
   -nullvalue 'text'    set text string for NULL values
Number of Outstanding Allocations:   %d (max %d)
Number of Pcache Overflow Bytes:     %d (max %d) bytes
Number of Scratch Overflow Bytes:    %d (max %d) bytes
optimizations
OPTIONS include:
.output FILENAME       Send output to FILENAME
.output stdout         Send output to the screen
Page cache hits:                     %d
Page cache misses:                   %d
Pager Heap Usage:                    %d bytes
pending_byte
PRAGMA database_list; 
PRAGMA foreign_keys=OFF;
PRAGMA table_info(
PRAGMA writable_schema=OFF;
PRAGMA writable_schema=ON;
__printf_chk
prng_reset
prng_restore
prng_save
.prompt MAIN CONTINUE  Replace the standard prompts
.quit                  Exit this program
.read FILENAME         Execute SQL in FILENAME
read_history
readline
RELEASE dump;
.restore ?DB? FILE     Restore content of DB (default "main") from FILE
ROLLBACK
ROLLBACK; -- due to errors
  rootpage integer,
/****** %s ******/
SAVEPOINT dump; PRAGMA writable_schema=ON
Schema Heap Usage:                   %d bytes
.schema ?TABLE?        Show the CREATE statements
scratchmalloc
SELECT * FROM %s
SELECT 'INSERT INTO ' || 
SELECT name FROM sqlite_master WHERE type='index' AND name NOT LIKE 'sqlite_%' UNION ALL SELECT name FROM sqlite_temp_master WHERE type='index' ORDER BY 1
SELECT name FROM sqlite_master WHERE type='index' AND tbl_name LIKE shellstatic() UNION ALL SELECT name FROM sqlite_temp_master WHERE type='index' AND tbl_name LIKE shellstatic() ORDER BY 1
SELECT name FROM sqlite_master WHERE type IN ('table','view') AND name LIKE shellstatic() UNION ALL SELECT name FROM sqlite_temp_master WHERE type IN ('table','view') AND name LIKE shellstatic() ORDER BY 1
SELECT name FROM sqlite_master WHERE type IN ('table','view') AND name NOT LIKE 'sqlite_%' UNION ALL SELECT name FROM sqlite_temp_master WHERE type IN ('table','view') ORDER BY 1
SELECT name, type, sql FROM sqlite_master WHERE name=='sqlite_sequence'
SELECT name, type, sql FROM sqlite_master WHERE sql NOT NULL AND type=='table' AND name!='sqlite_sequence'
SELECT name, type, sql FROM sqlite_master WHERE tbl_name LIKE shellstatic() AND type=='table'  AND sql NOT NULL
SELECT sql FROM   (SELECT sql sql, type type, tbl_name tbl_name, name name     FROM sqlite_master UNION ALL   SELECT sql, type, tbl_name, name FROM sqlite_temp_master) WHERE tbl_name LIKE shellstatic() AND type!='meta' AND sql NOTNULL ORDER BY substr(type,2,1), name
SELECT sql FROM   (SELECT sql sql, type type, tbl_name tbl_name, name name     FROM sqlite_master UNION ALL   SELECT sql, type, tbl_name, name FROM sqlite_temp_master) WHERE type!='meta' AND sql NOTNULL AND name NOT LIKE 'sqlite_%'ORDER BY substr(type,2,1), name
SELECT sql FROM sqlite_master WHERE sql NOT NULL AND type IN ('index','trigger','view')
SELECT sql FROM sqlite_master WHERE sql NOT NULL  AND type IN ('index','trigger','view')  AND tbl_name LIKE shellstatic()
-separator
.separator STRING      Change separator used by output mode and .import
   -separator 'x'       set output field separator (|)
%s: Error: cannot locate your home directory
%s: Error: missing argument for option: %s
%s: Error: out of memory
%s: Error: too many options: "%s"
%s: Error: unknown option: %s
shellstatic
.show                  Show the current values for various settings
%s ORDER BY rowid DESC
Sort Operations:                     %d
sqlite> 
sqlite3_backup_finish
sqlite3_backup_init
sqlite3_backup_step
sqlite3_bind_text
sqlite3_busy_timeout
sqlite3_close
sqlite3_column_blob
sqlite3_column_bytes
sqlite3_column_count
sqlite3_column_name
sqlite3_column_text
sqlite3_column_type
sqlite3_complete
sqlite3_config
sqlite3_create_function
sqlite3_db_status
sqlite3_enable_load_extension
sqlite3_errcode
sqlite3_errmsg
sqlite3_exec
sqlite3_finalize
sqlite3_free
sqlite3_free_table
sqlite3_get_table
sqlite3_interrupt
sqlite3_libversion
sqlite3_load_extension
sqlite3_malloc
sqlite3_mprintf
sqlite3_open
sqlite3_prepare
sqlite3_prepare_v2
sqlite3_reset
sqlite3_result_text
sqlite3_sleep
sqlite3_snprintf
sqlite3_sourceid
sqlite3_sql
sqlite3_status
sqlite3_step
sqlite3_stmt_status
sqlite3_test_control
sqlite3_vfs_find
sqlite3_vfs_register
SQLite header and source version mismatch
sqlite_master
sqlite_sequence
SQLite %s %s
sqlite_stat1
sqlite_temp_master
SQLite version %s %.19s
  sql text
%-*.*s%s
%*s = %s
%s/.sqlite_history
%s/.sqliterc
__stack_chk_fail
Statement Heap/Lookaside Usage:      %d bytes
.stats ON|OFF          Turn stats on or off
   -stats               print memory stats before each finalize
stifle_history
Successful lookaside attempts:       %d
.tables ?TABLE?        List names of tables
                         tabs     Tab-separated values
  tbl_name text,
                         tcl      TCL list elements
testctrl
.timeout MS            Try opening locked tables for MS milliseconds
.timer ON|OFF          Turn the CPU timer measurement on or off
t$<&t <>t
  type text,
<<tY<&t}<>
Usage: %s [OPTIONS] FILENAME [SQL]
Use -help for a list of options.
/usr/lib/i386-linux-gnu
 || ' VALUES(' || 
-version
   -version             show SQLite version
   -vfs NAME            use NAME as the default VFS
.width NUM1 NUM2 ...   Set column widths for "column" mode
                         With no args, it turns EXPLAIN on.
write_history
