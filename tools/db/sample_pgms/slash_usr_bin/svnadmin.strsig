administrator
administrators who wish to make use of new Subversion functionality
amount of work needed to accomplish this while still maintaining the
and load operation.  As such, the upgrade performs only the minimum
apr_allocator_create
apr_allocator_max_free_set
apr_allocator_owner_set
apr_array_make
apr_array_push
apr_file_open_stdin
apr_file_open_stdout
apr_getopt_long
apr_hash_first
apr_hash_make
apr_hash_next
apr_hash_set
apr_hash_this
a process that crashes while holding an open repository handle.
apr_palloc
apr_pool_clear
apr_pool_destroy
apr_psprintf
apr_pstrdup
apr_signal
Available subcommands:
bdb-log-autoremove
bdb-log-keep
bdb-txn-nosync
been getting errors indicating that recovery ought to be run.
Berkeley DB recovery requires exclusive access and will
__bss_start
/build/buildd/subversion-1.6.17dfsg/subversion/svnadmin/main.c
bypass-hooks
--bypass-hooks to avoid triggering the revision-property-related hooks
bypass the repository hook system
call hook after changing revision property
call hook before changing revision property
call post-commit hook after committing revisions
call pre-commit hook before committing revisions
Can't open stdio file
case, the second and subsequent revisions, if any, describe only paths
Caught signal
changed in those revisions.)
clean-logs
Comment (%i line):
Comment (%i lines):
config-dir
crashtest
Create a new, empty repository at REPOS_PATH.
Created: %s
dcgettext
dcngettext
Delete the named transaction(s).
delta from the preceding revision.  If no revisions are specified,
Deltifying revision %ld...
Describe the usage of this program or its subcommands.
disable automatic log file removal [Berkeley DB]
disable fsync at transaction commit [Berkeley DB]
dump incrementally
Dump the contents of filesystem to stdout in a 'dumpfile'
                             earlier than 1.4
                             earlier than 1.5
                             earlier than 1.6
essence compresses the repository by only storing the differences or
every path present in the repository as of that revision.  (In either
Exactly one file argument required
Exactly one property name and one file argument required
exit if the repository is in use by another process.
Expires: %s
Failed to get exclusive repository access; perhaps another process
fication on the paths changed in those revisions.  Deltification in
First revision cannot be higher than second
force-uuid
(for example, if you do not want an email notification sent
                             from source repository [Berkeley DB]
from your post-revprop-change hook, or because the modification of
general usage: svnadmin SUBCOMMAND REPOS_PATH  [ARGS & OPTIONS ...]
generate a brand new UUID for the repository.
GLIBC_2.0
GLIBC_2.2
__gmon_start__
If --incremental is passed, the first revision dumped will describe
if not provided, is the root of the repository).
ignore any repos UUID found in the stream
ignore-uuid
incremental
integrity of the repository.  It does not guarantee the most optimized
Invalid revision specifier
_IO_stdin_used
_Jv_RegisterClasses
libapr-1.so.0
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
libpthread.so.0
libsvn_delta-1.so.1
libsvn_fs-1.so.1
libsvn_repos-1.so.1
libsvn_subr-1.so.1
List all Berkeley DB log files.
list-dblogs
List unused Berkeley DB log files.
list-unused-dblogs
load at specified directory in repository
LOWER rev through UPPER rev.  If no revisions are given, dump all
Makes a hot copy of a repository.
Missing revision
Multiple revision arguments encountered; try '-r N:M' instead of '-r N -r M'
new revisions into the repository's filesystem.  If the repository
NEW_UUID is provided, use that as the new repository UUID; otherwise,
No paths to unlock provided
no progress (only errors) to stderr
NOTE: Revision properties are not versioned, so this command will
notification sent from your post-revprop-change hook).
one specified in the stream.  Progress feedback is sent to stdout.
Only one revision allowed
only the paths changed in that revision; otherwise it will describe
Open the repository at REPOS_PATH, then abort, thus simulating
overwrite the previous log message.
overwrite the previous value of the property.
Owner: %s
Packing shard %s...
parent-dir
Path: %s
Path '%s' isn't locked.
Please wait; recovering the repository may take some time...
Please wait; upgrading the repository may take some time...
portable format, sending feedback to stderr.  Dump revisions
Possibly compact the repository into a more efficient storage model.
pre-1.4-compatible
pre-1.5-compatible
pre-1.6-compatible
Print descriptions of all locks on or under PATH-IN-REPOS (which,
Print the names of all uncommitted transactions.
Read a 'dumpfile'-formatted stream from stdin, committing
read user configuration files from directory ARG
Recovery completed.
Removed lock on '%s'.
remove redundant Berkeley DB log files
Repository argument required
Repository lock acquired.
repository state as a dump and subsequent load would.
Reset the repository UUID for the repository located at REPOS_PATH.  If
revision properties has not been enabled in the pre-revprop-change
Revisions must not be greater than the youngest revision (%ld)
revision trees.  If only LOWER is given, dump that one revision tree.
Run over the requested revision range, performing predecessor delti-
Run the recovery procedure on a repository.  Do this if you've
schema version.
set repos UUID to that found in stream, if any
setrevprop
Set the log-message on revision REVISION to the contents of FILE.  Use
Set the property NAME on revision REVISION to the contents of FILE. Use
show help on a subcommand
show program version information
'%s' is an URL when it should be a path
specify revision number ARG (or X:Y range)
subcommand argument required
Subcommand '%s' doesn't accept option '%s'
subversion
such as httpd, svnserve or svn has it open?
svnadmin
svnadmin: 
svn_cmdline_fflush
svn_cmdline_fprintf
svn_cmdline_fputs
svn_cmdline__getopt_init
svn_cmdline_handle_exit_error
svn_cmdline_init
svn_cmdline_printf
svn_config_get_config
svn_cstring_count_newlines
svn_delta
svn_delta_version
svn_error_clear
svn_error_create
svn_error_createf
svn_error__locate
svn_error_quick_wrap
svn_error_wrap_apr
svn_fs_abort_txn
svn_fs_change_rev_prop
svn_fs_create_access
svn_fs_deltify_revision
svn_fs_get_lock
svn_fs_initialize
svn_fs_list_transactions
svn_fs_open_txn
svn_fs_print_modules
svn_fs_purge_txn
svn_fs_set_access
svn_fs_set_uuid
svn_fs_set_warning_func
svn_fs_unlock
svn_fs_version
svn_fs_youngest_rev
svn_handle_error2
svn_opt__args_to_target_array
svn_opt_format_option
svn_opt_get_canonical_subcommand2
svn_opt_get_option_from_code2
svn_opt_parse_all_args
svn_opt_parse_revision
svn_opt_print_help3
svn_opt_subcommand_takes_option3
svn_path_canonicalize
svn_path_internal_style
svn_path_is_url
svn_path_join
svn_path_local_style
svn_pool_create_ex
svn_repos
svn_repos_create
svn_repos_dated_revision
svn_repos_db_logfiles
svn_repos_dump_fs2
svn_repos_fs
svn_repos_fs_change_rev_prop3
svn_repos_fs_get_locks
svn_repos_fs_pack
svn_repos_hotcopy
svn_repos_load_fs2
svn_repos_open
svn_repos_recover3
svn_repos_upgrade
svn_repos_verify_fs
svn_repos_version
svn_stream_create
svn_stream_from_aprfile2
svn_stream_set_write
svn_stringbuf_create
svn_stringbuf_from_file2
svn_string_create
svn_subr
svn_subr_version
svn_subst_translate_string
svn_time_to_human_cstring
svn_user_get_name
svn_utf_cstring_to_utf8
svn_ver_check_list
Syntax error in revision argument '%s'
The following repository back-end (FS) modules are available:
The latest repos revision is %ld.
the revision property-related hooks (for example, if you want an email
This functionality is provided as a convenience for repository
This may not apply to all repositories, in which case, exit.
this will simply deltify the HEAD revision.
Transaction '%s' removed.
Try 'svnadmin help' for more info
t$(;t$(~
type of repository: 'fsfs' (default) or 'bdb'
Type 'svnadmin help %s' for usage.
Type 'svnadmin help <subcommand>' for help on a specific subcommand.
Type 'svnadmin --version' to see the program version and FS modules.
Unconditionally remove lock from each LOCKED_PATH.
Unknown command: '%s'
Upgrade completed.
Upgrade of this repository is not supported; consider dumping and loading the data elsewhere
Upgrade of this repository's underlying versioned filesystem is not supported; consider dumping and loading the data elsewhere
Upgrade the repository located at REPOS_PATH to the latest supported
usage: svnadmin crashtest REPOS_PATH
usage: svnadmin create REPOS_PATH
usage: svnadmin deltify [-r LOWER[:UPPER]] REPOS_PATH
usage: svnadmin dump REPOS_PATH [-r LOWER[:UPPER] [--incremental]]
usage: svnadmin help [SUBCOMMAND...]
usage: svnadmin hotcopy REPOS_PATH NEW_REPOS_PATH
usage: svnadmin list-dblogs REPOS_PATH
usage: svnadmin list-unused-dblogs REPOS_PATH
usage: svnadmin load REPOS_PATH
usage: svnadmin lslocks REPOS_PATH [PATH-IN-REPOS]
usage: svnadmin lstxns REPOS_PATH
usage: svnadmin pack REPOS_PATH
usage: svnadmin recover REPOS_PATH
usage: svnadmin rmlocks REPOS_PATH LOCKED_PATH...
usage: svnadmin rmtxns REPOS_PATH TXN_NAME...
usage: svnadmin setlog REPOS_PATH -r REVISION FILE
usage: svnadmin setrevprop REPOS_PATH -r REVISION NAME FILE
usage: svnadmin setuuid REPOS_PATH [NEW_UUID]
usage: svnadmin upgrade REPOS_PATH
usage: svnadmin verify REPOS_PATH
                             use by another process
use deltas in dump output
use format compatible with Subversion versions
use-post-commit-hook
use-post-revprop-change-hook
use-pre-commit-hook
use-pre-revprop-change-hook
--use-pre-revprop-change-hook/--use-post-revprop-change-hook to trigger
UUID Token: %s
Verifies the data stored in the repository.
--version
Waiting on repository lock; perhaps another process has it open?
wait instead of exit if the repository is in
WARNING: Modifying or deleting logfiles which are still in use
was previously empty, its UUID will, by default, be changed to the
will cause your repository to be corrupted.
without having to undertake a potentially costly full repository dump
