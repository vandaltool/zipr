# Author: John Lenton <john.lenton@canonical.com>
    bus = dbus.SessionBus(mainloop=loop)
# by the Free Software Foundation.
# Copyright 2010-2012 Canonical Ltd.
   credentials for Ubuntu One in the keyring, nothing further happens.
    d.addCallbacks(lambda _: os._exit(0), lambda _: os._exit(1))
@defer.inlineCallbacks
def main():
    d = main()
# do not wish to do so, delete this exception statement from your
# files in the program, then also delete it here.
    files_sync_enabled = get_user_config().get_files_sync_enabled()
   files_sync_enabled to False in the syncdaemon configuration file),
# file(s) with this exception, you may extend this exception to your
   file sync via Ubuntu One control panel (or equivalently via setting
# for all of the code used other than OpenSSL.  If you modify
from dbus.mainloop.glib import DBusGMainLoop
from twisted.internet import defer
from ubuntuone.platform.tools import SyncDaemonTool, is_already_running
from ubuntuone.syncdaemon.config import get_user_config
    gobject.set_application_name("ubuntuone-launch")
        # have SD start
if __name__ == '__main__':
    if not files_sync_enabled:
    if not os.path.isdir(U1ROOT):
    if not running:
 * if syncdaemon has never synced to the server, or if there are no
 * If you've never used Ubuntu One file sync, or if you've disabled
import dbus
import glib
import gobject
import os
import sys
# In addition, as a special exception, the copyright holders give
# including the two.
# individual source file, and distribute linked combinations
                lambda a: a.get('name', '') == 'READY')
   local rescan is allowed to finish.
    loop = DBusGMainLoop(set_as_default=True)
    mainloop = glib.MainLoop()
    mainloop.run()
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
        # no directory, just quit
# OpenSSL library under certain conditions as described in each
    # os._exit feels like it's cheating, but it's simple and fast
 * otherwise if syncdaemon is not already running it is started, and
 * otherwise, syncdaemon is asked to connect.
# permission to link the code of portions of this program with the
# PURPOSE.  See the GNU General Public License for more details.
        raise RuntimeError("File sync is disabled")
    running = yield is_already_running(bus=bus)
   script being run.
        # SD will not start (has been disabled by user)
    """Start syncdaemon and ask it to connect, if possible."""
   syncdaemon is not started, and nothing happens as a result of this
    sync_daemon_tool = SyncDaemonTool(bus)
        sys.exit(1)
    # this check is done early to speed up startup on people who are not
# This program is distributed in the hope that it will be useful, but
# This program is free software: you can redistribute it and/or modify it
This script decides whether to start and connect syncdaemon.
U1ROOT = os.path.expanduser('~/Ubuntu One/')
# ubuntuone-launch - Ubuntu One storage synchronization daemon startup helper
Ubuntu One storage synchronization daemon (syncdaemon) startup helper.
# under the terms of the GNU General Public License version 3, as published
#!/usr/bin/python
# version.  If you delete this exception statement from all source
# version of the file(s), but you are not obligated to do so.  If you
# WITHOUT ANY WARRANTY; without even the implied warranties of
# with this program.  If not, see <http://www.gnu.org/licenses/>.
    # (yet) using the service (this way avoids all the imports).
        yield sync_daemon_tool.start()
        yield sync_daemon_tool.wait_for_signal('StatusChanged',
# You must obey the GNU General Public License in all respects
# You should have received a copy of the GNU General Public License along
