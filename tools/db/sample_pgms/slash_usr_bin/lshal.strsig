------------------------------------------------
-------------------------------------------------
acquired
__bss_start
*** capability: %s
           condition_details=%s
           condition_name=%s
Could not initialise connection to hald.
Couldn't obtain list of devices
%d (0x%x)
dbus_bus_get
dbus_connection_setup_with_g_main
dbus_connection_unref
dbus_error_free
dbus_error_init
dbus_error_is_set
*** [DIE] %s:%s():%d : 
dump_devices
Dumped %d device(s) from the Global Device List.
Dumping %d device(s) from the Global Device List:
error: dbus_bus_get: %s: %s
error: libhal_ctx_init: %s: %s
error: libhal_ctx_new
error: libhal_ctx_set_dbus_connection: %s: %s
error: monitoring devicelist - libhal_device_property_watch_all: %s: %s
__fprintf_chk
getopt_long
gettimeofday
g_get_current_time
GLIBC_2.0
GLIBC_2.3.4
g_main_loop_new
g_main_loop_run
__gmon_start__
g_snprintf
    -h, --help           Show this information and exit
%H:%M:%S
info.parent
           interface_name=%s
_IO_stdin_used
           is_removed=%s, is_added=%s
_Jv_RegisterClasses
libc.so.6
__libc_start_main
libdbus-1.so.3
libdbus-glib-1.so.2
libglib-2.0.so.0
libhal_ctx_free
libhal_ctx_init
libhal_ctx_new
libhal_ctx_set_dbus_connection
libhal_ctx_set_device_added
libhal_ctx_set_device_condition
libhal_ctx_set_device_lost_capability
libhal_ctx_set_device_new_capability
libhal_ctx_set_device_property_modified
libhal_ctx_set_device_removed
libhal_ctx_set_global_interface_lock_acquired
libhal_ctx_set_global_interface_lock_released
libhal_ctx_set_interface_lock_acquired
libhal_ctx_set_interface_lock_released
libhal_ctx_shutdown
libhal_device_exists
libhal_device_get_all_properties
libhal_device_get_property_bool
libhal_device_get_property_double
libhal_device_get_property_int
libhal_device_get_property_string
libhal_device_get_property_strlist
libhal_device_get_property_type
libhal_device_get_property_uint64
libhal_device_property_watch_all
libhal_free_property_set
libhal_free_string
libhal_free_string_array
libhal_get_all_devices
libhal_property_set_sort
libhal_psi_get_bool
libhal_psi_get_double
libhal_psi_get_int
libhal_psi_get_key
libhal_psi_get_string
libhal_psi_get_strlist
libhal_psi_get_type
libhal_psi_get_uint64
libhal_psi_has_more
libhal_psi_init
libhal_psi_next
libhal.so.1
/lib/ld-linux.so.2
    -l, --long           Long output
%llu (0x%llx)
localtime
           lock_owner=%s
lshal version 0.5.14
mlstu:hUV
    -m, --monitor        Monitor device list
*** new value: {
*** new value: %d (0x%x)  (int)
*** new value: %g  (double)
*** new value: %llu (0x%llx)  (uint64)
*** new value: %s  (bool)
*** new value: '%s'  (string)
Normally this means the HAL daemon (hald) is not running or not ready.
           num_locks=%d
Options:
/org/freedesktop/Hal/devices/
__printf_chk
released
  %s = {
  %s = %.1f (%g) (double)
  %s = %d  (0x%x)  (int)
%s: global_interface_lock_%s %s by %s (%d lockers)
Shows all devices and their properties. If the --monitor option is given
  %s = %llu  (0x%llx)  (uint64)
*** %s: lshal: device_added, udi='%s'
*** %s: lshal: device_condition, udi=%s
*** %s: lshal: device_removed, udi='%s'
*** %s: lshal: global_interface_lock_%s
*** %s: lshal: interface_lock_%s, udi=%s
*** %s: lshal: lost_capability, udi='%s'
*** %s: lshal: new_capability, udi='%s'
*** %s: lshal: property_modified, udi=%s, key=%s
%s: %s added
  %s = %s  (bool)
%s: %s capability %s added
%s: %s capability %s lost
%s: %s condition %s = %s
    -s, --short          short output (print only nonstatic part of udi)
%s: %s interface_lock_%s %s by %s (%d lockers)
%s: %s property %s 
%s: %s removed
  %s = '%s'  (string)
Start monitoring devicelist:
__strdup
strftime
}  (string list)
} (string list)
then the device list and all devices are monitored for changes.
    -t, --tree           Tree view
udi = '%s'
Unknown type %d=0x%02x
Unknown type %d='%c'
usage : %s [options]
    -u, --show <udi>     Show only the specified device
    -V, --version        Print version number
Without any given options lshal will start with option --long.
