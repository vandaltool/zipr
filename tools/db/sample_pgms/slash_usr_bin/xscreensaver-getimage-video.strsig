 2001-2011 Jamie Zawinski <jwz@jwz.org>.
  #         "-ao null -vo pnm -frames 1 2>&- " .
# are known, and the first one found is used.
  "atitv snap $tmpfile",			# ATI video capture card
  "bttvgrab -d q -Q -l 1 -o ppm -f $tmpfile",	# BTTV
    close $in;
    $_ = $cmd;
    $cmd .= " $tmpfile";
    $cmd .= " --verbose" if ($verbose);
    $cmd = "xscreensaver-getimage-file";
# Copyright 
# copyright notice and this permission notice appear in supporting
# Created: 13-Apr-2001.
# documentation for any purpose is hereby granted without fee, provided that
# documentation.  No representations are made about the suitability of this
  } else {
    else { usage; }
    elsif (m/^--?name$/)   { $return_filename_p = 1; }
    elsif (m/^--?stdout$/) { $use_stdout_p = 1; }
    elsif (m/^-./) { usage; }
    elsif (m/^-v+$/) { $verbose += length($_)-1; }
  } elsif ($use_stdout_p) {
      error ("\"$cmd\" produced no data.");
  error ("none of: " . join (", ", @names) . " were found on \$PATH.");
  exit 1;
  foreach my $cmd (@programs) {
    foreach my $dir (split (/:/, $ENV{PATH})) {
  "gqcam -t PPM -d $tmpfile",			# GTK+ Qcam clone
  grab_image();
  "grab -type ppm -format ntsc -source 1 " .	# *BSD BT848 module
						# (hardware jpeg encoder)
    # horrid kludge for SGIs, since they don't use PPM...
    if ($cmd =~ m/^vidtomem\s/) {
    if ($_ eq "--verbose") { $verbose++; }
  if ($return_filename_p) {
      if (-x "$dir/$name") {
# If you add other programs to this list, please let me know!
  if (-z $tmpfile)
# implied warranty.
# is assumed to be written to $tmpfile (in some image format acceptable to
# "jigsaw", etc.) get the image to manipulate by running the
    local $/ = undef;  # read entire file
  "motioneye -j $tmpfile",			# Sony Vaio MotionEye
  # "mplayer -really-quiet tv://0 " .		# Maybe works with some cams?
  #	"&& mv 00000001.ppm $tmpfile",
	"&& mv $tmpfile-00000.rgb $tmpfile",
  my $cmd = pick_grabber();
  my ($e) = @_;
    my ($name) = m/^([^ ]+)/;
  my @names = ();
    my $ppm = "";
my $progname = $0; $progname =~ s@.*/@@g;
my @programs = (
    my $reader  = "<$tmpfile";
my $return_filename_p = 0;
my $tmpdir   = $ENV{TMPDIR} || "/tmp";
my $tmpfile1 = sprintf ("%s/xssgv01.ppm", $tmpdir, rand(0xFFFFFFFF));
my $tmpfile3 = sprintf ("%s/xssgv03.ppm", $tmpdir, rand(0xFFFFFFFF));
my $tmpfile  = sprintf("%s/xssv.%08x.ppm", $tmpdir, rand(0xFFFFFFFF));
my $use_stdout_p      = 0;
my $verbose           = 0;
my $version  = q{ $Revision: 1.21 $ }; $version =~ s/^[^0-9]+([0-9.]+).*$/$1/;
  $names[$#names] = "or " . $names[$#names];
# of these programs that exists on $PATH will be used, and the image file
    open (my $in, $reader) || error ("reading $tmpfile: $!");
# Permission to use, copy, modify, distribute, and sell this software and its
    $ppm = <$in>;
      print STDERR "$progname:   checking $dir/$name\n" if ($verbose > 3);
  print STDERR "$progname: $e\n";
    print STDERR "$progname: executing \"$cmd\"\n" if ($verbose);
  print STDERR "$progname: executing \"$cmd\"\n" if ($verbose);
    print STDERR "$progname: looking for $name...\n" if ($verbose > 2);
    print STDERR "$progname: reading $tmpfile\n" if ($verbose > 1);
    print STDERR "$progname: wrote \"$tmpfile\"\n" if ($verbose);
  print STDERR "usage: $progname [--verbose] [--name | --stdout]\n";
    print STDOUT $ppm;
    print STDOUT "$tmpfile\n";
    push @names, "\"$name\"";
  "qcam > $tmpfile",				# Connectix Qcam
      $reader .= " |";
      $reader .= " 2>/dev/null" if ($verbose <= 1);
      $reader  = "sgitopnm $tmpfile";
require 5;
        return $cmd;
# setting in the ~/.xscreensaver file (or in the app-defaults file, usually
	"-settle 0.75 -output $tmpfile",
    shift @ARGV;
# software for any purpose.  It is provided "as is" without express or 
  "streamer -a -s 768x576 -o $tmpfile",		# XawTV
  "streamer -a -t3 -r1 -o $tmpfile1; mv $tmpfile3 $tmpfile",		# XawTV after 2 sec
sub error($) {
sub grab_image() {
sub main() {
sub pick_grabber() {
sub usage() {
    system ($cmd);
  system ($cmd);
# the above copyright notice appear in all copies and that both that
  #   the "-a" option ("mute audio") arrived with XawTV 3.76.
# These are programs that can be used to grab a video frame.  The first one
# The various screen savers invoke "xscreensaver-getimage", which will in
# The various xscreensaver hacks that manipulate images ("slidescreen",
# This program attempts to grab a single frame of video from the system's
# turn invoke this program, depending on the value of the "grabVideoFrames"
      unlink $tmpfile;
    unlink $tmpfile;
  unlink $tmpfile;
#use diagnostics;	# Fails on some MacOS 10.5 systems
use strict;
#!/usr/bin/perl -w
# /usr/lib/X11/app-defaults/XScreenSaver).
  "v4lctl snap ppm full $tmpfile",		# XawTV 3.94.
  "vidcat -b -f ppm -s 640x480 > $tmpfile 2>-",	# w3cam/ovcam
# video capture card, and then load it on to the root window using the
  "vidtomem -f $tmpfile 2>&- " .		# Silicon Graphics
  while ($_ = $ARGV[0]) {
# "xscreensaver-getimage-file", e.g., PPM or JPEG.)
# "xscreensaver-getimage-file" program.  Various frame-grabbing programs
# "xscreensaver-getimage" program.
