        -a|--all      Install all fonts.
    "all|a",
# allowed.  Perl always needs forward slashes.
@allpackages=@ARGV;
    @alltmps=readdir TMPDIR;
@ARGS=@ARGV;
    chdir "$SYSTMP" or die "! ERROR: Can't cd '$SYSTMP'.\n";
chdir "$tmpdir" or die "! ERROR: Can't cd '$tmpdir'.";
check_installroot;
check_tmpdir;
    chop $retstring;
    closedir TMPDIR;
    close KPSEWHICH;
# conditions of the LaTeX Project Public License, either version 1.3
## Copyright 2006-2008 Reinhard Kotucha <reinhard.kotucha@web.de>
        -d|--debug    Provide additional messages for debugging.
    "debug|d",
    debug_msg 'Download method: HTTP.':debug_msg 'Download method: FTP.';
	    debug_msg "Environment variable $var='$ENV{$var}'.";
	    debug_msg "Environment variable $var not set.";
debug_msg "Exit status of getfont$TL_version is $exit_status.";
	debug_msg "Extracting the first element of the list ($var\[0\]):";
    debug_msg "Found '$kpsewhich'.";
debug_msg "getnonfreefonts rev. $revision (TL $TL_version).";
    debug_msg "Info: Execute updmap if exit status is 2.";
    debug_msg "Info: Execute updmap-sys if exit status is 2.";
debug_msg "INSTALLROOT='$INSTALLROOT'.";
debug_msg "Internal variable INSTALLROOT converted to '$INSTALLROOT'.";
    debug_msg "Internal variable SYSTMP converted to '$SYSTMP'.";
debug_msg "Internal variable SYSTMP set to '$SYSTMP'.";
debug_msg "Internal variable tmpdir set to '$tmpdir'.";
debug_msg "Note that not all fonts are accessible via HTTP." if $opt_http;
debug_msg "No wget binary found on your system, trying curl." 
	debug_msg "PATH\[$index\]: '$dir'.";
debug_msg "Removing leading \"!!\" and trailing \"//\"and set INSTALLROOT:";
    debug_msg "Running 'curl -O $getfont_url'.";
debug_msg "Running '@getfont'.";
    debug_msg "Running 'wget $getfont_url'.";
    debug_msg "Search for kpsewhich in PATH:";
debug_msg "Supported signals: @signals.";
debug_msg "Try --html if your firewall blocks FTP." unless $opt_http;
debug_msg "Using script '$getfont_url'.";
	debug_msg "$var\[0\]='$retlist[0]'.";
	    debug_msg "$var\[$index\]: '$entry'.";
# Determine INSTALLROOT.
# Determine the URL.
    die "! ERROR: The install directory '$INSTALLROOT' doesn't " .
    die "! ERROR: The install directory '$INSTALLROOT' is not writable.\n"
die "! ERROR: The temporary directory '$SYSTMP' doesn't exist.\n"
die "! ERROR: The temporary directory '$SYSTMP' is not writable.\n"
    die "! ERROR: The variable $INSTALLROOTNAME is not set.\n"
  Directories:
	    $dir=~s/\\/\//g;
$done=GetOptions 
# Download the fonts.
    } else {
} else {
	} else {
} elsif (defined $ENV{'TEMP'}) {
} elsif (defined $ENV{'TMPDIR'}) {
} elsif (which "wget") {
ENDUSAGE
# Evaluate the exit status.  It will be 2 if something had been
	"exist.\n" .
        -f|--force    Install fonts even if they are installed already.
	[font1] [font2] ...
    "force|f",
    foreach $file (@alltmps) {
    foreach my $dir (@PATH) {
	foreach my $entry (@retlist) {
foreach my $signal (@signals) {
	for my $dir (@PATH) {
	    for my $ext (@PATHEXT) {
    for my $var qw(TMP TEMP TMPDIR) {
    $getfont_url="ftp://tug.org/tex/getnonfreefonts/getfont$TL_version";
    $getfont_url="http://tug.org/~kotucha/getnonfreefonts/getfont$TL_version";
## getnonfreefonts
    getnonfreefonts installs fonts in $TEXMFHOME.
    getnonfreefonts[-sys] [-a|--all] [-d|--debug] [-f|--force]
    getnonfreefonts-sys installs fonts in $TEXMFLOCAL.
$Getopt::Long::autoabbrev=0;
Getopt::Long::Configure ("bundling");
# get TMP|TEMP|TMPDIR environment variable
    $has_wget=1; ## shipped with TL.
    $has_wget=1; ## wget is in PATH.
    "help|h",
        -h|--help     Print this message.
	-H|--http     Use http instead of ftp (see manual).
    "http|H",
#   http://www.latex-project.org/lppl.txt
if (defined $ENV{'TMP'}) {
	if (defined $ENV{$var}) {
if ($exit_status==2) {
		if (-f "$dir/$prog$ext") {
if ($has_wget) {
    if ($message=~/^\[/) {
    if ($^O=~/^MSWin(32|64)/i) {
    if ($opt_debug) {
if ($opt_debug) {
if ($opt_help or !@ARGS) {
if ($opt_http) {
if ($sys) {		     
	"         If this is the correct path, please create " .
    if (&win32) {
    if (win32) {
if (win32) {
	    if (-x "$dir/$prog") {
	    ++$index;
	++$index;
# installed and in this case we need to run texhash/updmap.
       install:   '$INSTALLROOT'
$INSTALLROOT=expand_braces "$INSTALLROOTNAME";
$INSTALLROOTNAME=($sys)? 'TEXMFLOCAL':'TEXMFHOME';
$INSTALLROOT=~s/^!!//;
$INSTALLROOT=~s/\/\/$//;
$INSTALLROOT=~s/\\/\//g if (win32);
        -l|--lsfonts  List all fonts available.
        [-l|--lsfonts] [-v|--verbose] [--version] [-H|--http]
    "lsfonts|l",
    message $?? '[failed]':'[done]';
    message "Updating map files ($updmap_command)...";
    mkdir "$INSTALLROOT" unless (-d "$INSTALLROOT");
mkdir "$tmpdir" or die "! ERROR: Can't mkdir '$tmpdir'.";
my @common_signals=qw(INT ILL FPE SEGV TERM ABRT);
my $exit_code=$?;
my $exit_status=int($exit_code/256);
my @getfont=('perl', "./getfont$TL_version", '--getnonfreefonts');
my $getfont_url;
my $has_wget=0;
    my $index=0;
	my $index=0;
    my $kpsewhich=which "kpsewhich";
    my $message=shift;
    my @PATH;
    my $PATH=$ENV{'PATH'};
	my @PATHEXT=split ';', $ENV{'PATHEXT'};
    my $pathsep;
    my $prog=shift;
    my @retlist;
    my $retstring;
my $revision='2009-08-08';
my @signals_UNIX=qw(QUIT BUS PIPE);
my @signals_Win32=qw(BREAK);
my $sys=($0=~/-sys$/)? 1:0;
my $TL_version='2009';  
my $tmpdir="$SYSTMP/getfont-$$";
    my $var=shift;
	next if $file=~/^\./;
# of this license or (at your option) any later version.
    opendir TMPDIR, "$tmpdir" 
	open KPSEWHICH, 'kpsewhich --expand-braces=$'  . "$var |";
	open KPSEWHICH, 'kpsewhich --expand-braces=\$' . "$var |";
	open KPSEWHICH, 'kpsewhich --expand-var=$'  . "$var |";
	open KPSEWHICH, 'kpsewhich --expand-var=\$' . "$var |";
$opt_force=0;
($opt_http)? 
    Options:
$opt_lsfonts=0;
	or die "! Error: Can't execute curl.\n";
	or die "! Error: Can't execute wget.\n";
	or print "! ERROR: Can't read directory '$tmpdir'.\n";
	$pathsep=';';
	$pathsep=':';
	@PATH=split ';', $ENV{'PATH'};
	@PATH=split ':', $ENV{'PATH'};
	@PATH=split ';', $PATH;
	@PATH=split ':', $PATH;
    print <<"ENDUSAGE";
    print <<'EOF';
	printf "%-60s", $message;
	print "$message\n";
    print "\n";
    print "\nThis is getnonfreefonts";
    print "\n"; usage; exit 1;
	print STDERR "DEBUG: $message\n";
    print '-sys' if ($sys);
print "$TL_version\n" and exit 0 if $opt_version; 
    print ", version $TL_version, revision $revision.\n\n";
push @getfont, '--all' if $opt_all;
push @getfont, @allpackages;
push @getfont, '--debug' if $opt_debug;
push @getfont, '--force' if $opt_force;
push @getfont, '--http' if $opt_http;
push @getfont, "--installroot=$INSTALLROOT";
push @getfont, '--lsfonts' if $opt_lsfonts;
push @getfont, '--sys' if $sys;
push @getfont, '--use_curl' unless ($has_wget);
push @getfont, '--verbose' if $opt_verbose;
	push @PATHEXT, '';  # if argument contains an extension
    push @updmap, '--quiet' unless $opt_verbose;
remove_tmpdir;
# Remove trailing exclamation marks and double slashes.
    @retlist=split $pathsep, $retstring;
    $retstring=(<KPSEWHICH>);
	return "$_";
    return 0;
	return 0;
	return 1;
		return "$dir/$prog";
		    return "$dir/$prog$ext";
    return "$retlist[0]";
    rmdir "$tmpdir" or die "! ERROR: Can't remove directory '$tmpdir'.\n";
# Signal handlers.
    @signals=(@common_signals, @signals_UNIX);
    @signals=(@common_signals, @signals_Win32);
    $SIG{"$signal"}=\&remove_tmpdir;
sub check_installroot {
sub check_tmpdir{
sub debug_msg {
sub expand_braces {
sub expand_var {
sub message {
sub remove_tmpdir {
sub usage {
sub which {
sub win32 {
    "sys";
$sys=1 if (defined $ENV{'TEX_SYS_PROG'});
$sys=1 if $opt_sys;
($sys)? debug_msg "sys=true.":debug_msg "sys=false.";
    system ('curl', '-O', "$getfont_url") == 0 
system @getfont;
    system 'texhash', "$INSTALLROOT";
    system @updmap;
    system ('wget', "$getfont_url") == 0 
    $SYSTMP="$ENV{'TEMP'}";
    $SYSTMP="$ENV{'TMP'}";
    $SYSTMP="$ENV{'TMPDIR'}";
    $SYSTMP=~s/\\/\//g;
    $SYSTMP="/tmp";
       temporary: '$SYSTMP/getfont-<PID>'
# The current maintainer is Reinhard Kotucha.
# The latest version of this license is in
	"this directory manually.\n" 
# This work may be distributed and/or modified under the
	unless (-d "$INSTALLROOT");
unless ($done) {
    unless (-d "$SYSTMP");
    unless ($has_wget);
	unless length ("$INSTALLROOT") > 0;
	unless (-w "$INSTALLROOT");
    unless (-w "$SYSTMP");
	unlink "$tmpdir/$file";
    $updmap_command=($sys)? 'updmap-sys':'updmap';
    @updmap=("$updmap_command");
    usage; 
use Getopt::Long;
#!/usr/bin/env perl
    "verbose|v",
    "version",
        --version     Print version number.
        -v|--verbose  Be more verbose.
$^W=1 if $opt_debug;
# We convert backslashes to forward slashes on Windows.
    while (<KPSEWHICH>) {
# Windows usually uses backslashes though forward slashes are probably
