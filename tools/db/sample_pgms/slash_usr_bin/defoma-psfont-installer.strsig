* 78-EUC-H, which means it is JIS-78 charset, EUC encoding, Horizontal
		 'Adobe-CNS1', 'Traditional Chinese charsets.',
		 'Adobe-GB1', 'Simplified Chinese charsets.');
		 'Adobe-Japan1', 'Japanese standard charsets.',
		 'Adobe-Japan2', 'Japanese extended charsets.',
		 'Adobe-Korea1', 'Korean charsets.',
* a font whose Family is GothicBBB and Weight is Medium. Its CMap is
# After modifying this file, run 
$CACHEFILE = "$ROOTDIR/psfontmgr.d/psprint.font-cache";
category psprint
$CEDATAFILE = "$CONFDIR/ps-cset-enc.data";
	$charset = $list[0];
		$charset = $list[4];
			     @CHARSET_LIST, '<None>', ' ');
@CHARSET_LIST = ('Standard', 'Standard Roman charset.',
Charset: $pcset
	$charset = $RETCHARSET;
    $charset =~ s/,/ /g;
	    chomp($_);
	chomp($_);
	    chomp($line);
	    chomp($psfontname);
    chomp($tempfile);
Choose the CMap of $font.
Choose the PostScript Charset of $font.
    clear_hints($hashptr);
    clear_hints(\%hints);
    close F;
	close F;
	    $cmaplist = `/bin/cat $cmapfile`;
	    $cmaplist = `$CUT -d ' ' -f 1 $cmapfile`;
* CMap represents the charsets, encoding and direction of a font, and
com_register();
$CONFDIR= "$DEFOMA_TEST_DIR/etc/defoma";
# Copyright (C) 2000 Yasuhiro Take <take@debian.org>
$CUT = '/usr/bin/cut';
$DATAFILE2 = "$LIBDIR/psprfonts.data2";
$DATAFILE = "$LIBDIR/psprfonts.data";
			     $defcset, '[^ ]', 0, '<None>', $text,
				     $defenc, '[^ ]', 0);
				    $defenc, '[^ ]', 0, '<None>', $text,
#defoma_common_init();
# Defoma - Debian Font Manager
defoma_font_init();
#   defoma-font reregister-all $file
defoma-psfont-installer is a tool to register PostScript fonts
		delete($list{$'});
$DIALOGTITLE = 'PostScript Font Manager';
* direction.
Done. The hintfile for PostScript Printer fonts is created as:
$DWIDTH = 70;
    $e = 0 if ($e =~ /[^0-9]/);
    } else {
	    } else {
	} else {
		} else {
	} elsif (-f ($cmapfile = "$LIBDIR/$pscharset.default-cmap")) {
    } elsif ($ret == 1) {
	$encoding = $list[1] if (@list > 1);
		$encoding = $list[2];
Encoding: $penc
	$encoding = $RETENCODING;
exit 0 if (USERSPACE);
    exit $e;
exitfunc(0);
    exitfunc 1;
	    exitfunc(1);
	exitfunc(1);
	exitfunc(1) if ($ret);
@EXITREMOVE = ();
Ex.\) JISX0208,JISX0201 EUC (JISX0208 & 0201 are Charset, EUC is encoding.)
%FAMILY2GFAMILY_LIST = ();
    $FAMILY2GFAMILY_LIST{$family} = $ret;
	    $FAMILY2GFAMILY_LIST{$hints{'Family'}} = $hints{'GeneralFamily'};
	    $font = $_;
$font is not registered anyway.
		$font = $list[1];
	    $font = $ret;
		$font =~ s/:$//;
    foreach (@DATAFILE2_DATA) {
    foreach (@DATAFILE_DATA) {
    foreach (@HINTFILE_DATA) {
	foreach (@list) {
    foreach my $i (@HINTTYPE) {
    foreach my $key (keys(%{$hintsptr})) {
    foreach (@STANDARD_LINES) {
    for my $i (@HINTFILE_DATA, @DATAFILE_DATA, @DATAFILE2_DATA) {
	get_charset_encoding($font, $pcset, $penc);
	$$hashptr{$i} = '';
		    $$hashptr{$i} .= ' ' if ($$hashptr{$i} ne '');
		    $$hashptr{$i} = $j;
		    $$hashptr{$i} .= $j;
	    $$hashptr{'PSCharset'} = $pscharset;
		$$hashptr{'PSCharset'} = $pscharset;
	    $$hashptr{'PSEncoding'} = $psencoding;
		$$hashptr{'PSEncoding'} = $psencoding;
hint_beginlib($DIALOGTITLE, $DWIDTH, $MODE);
@HINTFILE = ();
$HINTFILE = "$ROOTDIR/psfontmgr.d/ps-hints.private-cache";
	$hintflag = '--AssumedHints';
	$hintflag = '--RegisteredHints';
    $hints = "begin $PREFIX/$font\n";
	    $hints{'Direction'} = 'Horizontal';
	$hints{'Direction'} = 'Horizontal';
	    $hints{'Direction'} = 'Vertical' if ($font =~ /^.*-V$/);
	$hints{'Direction'} = 'Vertical' if ($font =~ /^.*-V$/);
    $hints .= "end\n";
	$hints{'Family'} = $font;
	$hints{'Family'} =~ s/^([^-]+).*$/$1/;
	$hints{'GeneralFamily'} = $gfamily;
	    $hints .= "  $key = $$hintsptr{$key}\n";
	    $hints = new_font($verbose, $font, 0, 0);
		$hints = new_font($verbose, $font, $charset, $encoding);
	    $hints = new_font($verbose, $font, $PSCHARSET, $PSENCODING);
	    $hints{'PSCharset'} = $hints{'PSEncoding'} = 'Special';
	$hints{'PSCharset'} = $pscharset;
	$hints{'PSEncoding'} = $psencoding;
	$$hintsptr{'Charset'} = $S_CHARSET;
	$$hintsptr{'Encoding'} = $S_ENCODING;
	    $hints{'Shape'} = '';
	$hints{'Shape'} = "$slant $serif";
	$hints{'Shape'} .= " $swidth" if ($swidth ne '');
	    $hints{'Weight'} = '';
	$hints{'Weight'} = 'Bold' if ($font =~ /Bold/);
	$hints{'Weight'} = 'Light' if ($font =~ /Light/);
	$hints{'Weight'} = 'Medium';
	$hints{'Weight'} = 'Semibold' if ($font =~ /Demi/);
	$hints{'Weight'} = 'Semibold' if ($font =~ /Semibold/);
	    $hints{'Width'} = '';
	$hints{'Width'} = 'Fixed' if ($gfamily eq 'Typewriter');
	$hints{'Width'} = 'Variable';
	    $i = $1;
	if (! $acharset || $acharset =~ /^($lcharset)$/) {
	if ($acharset =~ /^($lcharset)$/ && $aencoding =~ /^($lencoding)$/) {
	if ($cmaplist ne '') {
    if (exists($FAMILY2GFAMILY_LIST{$family})) {
	if (-f $cmapfile) {
	if ($font =~ /^($list[0])$/) {
    if (get_hints($font, $pscharset, $psencoding, \%hints)) {
    if (get_standard($pscharset, $psencoding) == 0) {
	if ($gfamily eq 'Symbol') {
    if (@HINTFILE > 0) {
	if ($hints{'Direction'} eq '') {
	if ($hints{'Family'} ne '' && $hints{'GeneralFamily'} ne '') {
	    if ($hints ne '') {
		if ($hints ne '') {
	if ($$hintsptr{$key} ne '') {
	if ($i =~ /^--($pattern)$/) {
		if ($i =~ /^(Shape|Weight)$/) {
		if ($j =~ /^--/) {
	    if ($line =~ /^\*Font /) {
    if (@list > 0) {
	if ($list[0] eq $font) {
	if (@list > 3) {
If multiple charsets corresponds, separate them by comma. Encoding is not 
	if ($NOOUTPUT) {
    if (open(F, $CACHEFILE)) {
    if (open(F, $DATAFILE)) {
    if (open(F, $DATAFILE2)) {
    if (open(F, $HINTFILE)) {
    if (open(F, $tempfile)) {
    if ($pscharset =~ /^(Standard|Special)$/) {
	    if ($psfontname =~ /^$PREFIX\//) {
    if ($ret == 0) {
	if ($S_CHARSET eq 'ignore') {
	    if ($verbose != 0) {
    if (yesnobox($text) == 0) {
If you have the PPD (Postscript Printer Description) file for your 
If your PS Printer has other fonts that did not appear in the
import Debian::Defoma::Common qw($DEFOMA_TEST_DIR USERSPACE $ROOTDIR);
import Debian::Defoma::Font;
	    infobox("Registering fonts...");
In processing $font:
	    input_ps_charset_encoding($font, '', '');
Input the Standard Charset and Encoding manually separating by space. 
installed in a PostScript printer to Defoma. It is strongly
	$i = shift;
is marked as 'ignore' according to /etc/defoma/ps-cset-enc.data.
* it is often equivalent to the FontName which the Family and some
		    last;
	    last if ($result == 1);
	    last if (yesnobox("Do you want to continue registering?") != 0);
	$lcharset =~ s/\?/\./g;
	$lcharset =~ s/\*/\.\*/g;
	$lencoding =~ s/\?/\./g;
	$lencoding =~ s/\*/\.\*/g;
$LIBDIR= "$DEFOMA_TEST_DIR/usr/share/defoma";
	$line = $_;
	$list[0] =~ s/\?/\./g;
	$list[0] =~ s/\*/\.\*/g;
    @list = get_not_registered_font();
# List of PostScript Fonts Installed in the PS Printer with Hints.
	$list{$psfontname} = 1;
	@list = split(' ', $line);
		@list = split(' ', $line);
	@list = split(/\n/, $ret);
	@list = split(' ', $ret);
	    $lscharset .= ' ';
	    $lscharset .= $list[3];
Mark fonts you want to register as installed in you PS Printer.
    $MODE = 'c' if ($s eq '-c');
$MODE = 'g';
	    msgbox("No font gets registered. ");
    msgbox($text);
	    msgbox($text);
		msgbox($text);
    my $acharset = shift;
    my $aencoding = shift;
    my $charset = '';
    my $charset;
	my $cmapfile = "$ROOTDIR/psfontmgr.d/$pscharset.cmaps.private-cache";
	my $cmaplist = '';
	my $command = "/usr/bin/defoma-font reregister-all $file";
my @DATAFILE2_DATA;
my @DATAFILE_DATA;
    my $defcset = shift;
    my $defenc = shift;
    my $e = (@_ > 0) ? shift(@_) : 0;
    my $encoding = '';
    my $encoding;
    my $family = shift;
	my $file = "$DEFOMA_TEST_DIR/etc/defoma/hints/defoma-ps.hints";
    my $font;
    my $font = shift;
	my $gfamily = get_generalfamily($font, '');
    my $hashptr = shift;
my @HINTFILE_DATA;
    my $hintflag = '';
    my $hints;
    my %hints = ();
    my %hints;
	my %hints = ();
    my $hintsptr = shift;
my @HINTTYPE = qw(Family GeneralFamily Weight Width Shape PSCharset
    my $i;
		my $j = shift;
    my $lcharset;
	my $lcharset = $list[0];
    my $lencoding;
	my $lencoding = $list[1];
    my $line;
	    my $line = $_;
    my @list;
    my %list = ();
	my @list = get_standard_list($pscharset);
	my @list = split(' ', $i);
	my @list = split(/[ \t]+/, $_);
	my @list = split(/[ \t]+/, $line);
    my $lscharset;
	my $lscharset = $list[2];
    my $lsencoding;
	my $lsencoding = (@list > 3) ? $list[3] : '';
    my $msg = shift;
    my $pattern = join('|', @HINTTYPE);
    my $pcset = $$hintsptr{'PSCharset'};
    my $penc = $$hintsptr{'PSEncoding'};
    my $ppdfile;
    my $ppdfile = fileselector($text);
    my $ppdfileptr = shift;
    my $ppdfile = shift;
    my $pscharset;
my $PSCHARSET;
    my $pscharset = shift;
    my $psencoding = '';
my $PSENCODING;
    my $psencoding = shift;
    my $psfontname;
    my @ret = ();
    my $ret;
my $RETCHARSET;
    my $ret = com_register_1($verbose, \$ppdfile);
my $RETENCODING;
	my $ret = input_menu($text2, '', '.', 0, '<None>', $text, @list);
my $S_CHARSET;
my $S_ENCODING;
	my $serif = 'Serif';
	my $slant = 'Upright';
    my $s = shift(@ARGV);
my @STANDARD_LINES;
	my $swidth = '';
    my $tempfile = `/bin/tempfile`;
    my $text;
	my $text2 = <<EOF
    my $text = <<EOF
	my $text = <<EOF
    my $tmp;
    my $verbose = 0;
    my $verbose = shift;
	next if ($_ eq '' || $_ =~ /^\#/);
		next if ($font =~ /[^a-zA-Z0-9.-]/);
	next if ($list[0] eq '');
	next if ($list[2] eq 'ignore');
	next if (@list < 3);
	    next if ($result != 0);
$NOOUTPUT = 0;
    $NOOUTPUT = 1 if ($s eq '--no-output');
No Standard Charset/Encoding is found that matches the pair of 
of them, answer Yes. Otherwise answer No.
    open(F, $CEDATAFILE) || return 0;
	    parse_hints($hashptr, @list);
	parse_hints(\%hints, @list);
Please become root and run defoma-psfont-installer again.
* PostScript Charset is just temporarilly used for deciding (National)
    $$ppdfileptr = $ppdfile;
$PREFIX = 'pspr1';
previous list, and you can input the name, charset and encoding
    print 'defoma-psfont-installer: ', $msg, "\n";
	print F @HINTFILE;
	print F $text;
	    print("No font gets registered. ");
	    print "Registering fonts...\n";
	    print $text;
    $PSCHARSET = '';
    $pscharset = input_menu2("Input the PostScript Charset of $font.",
    $PSCHARSET = $pscharset;
$pscharset/$psencoding in /etc/defoma/ps-cmap-enc.data. 
$pscharset/$psencoding in /etc/defoma/ps-cmap-enc.data. Choose the 
	    $pscharset = shift(@list);
    $PSENCODING = '';
		  PSEncoding Direction);
	    $psencoding =input_menu("Input the CMap of $font.",
	    $psencoding = input_menu("Input the Encoding of $font.",
	$psencoding = $pscharset;
    $PSENCODING = $psencoding;
	    $psencoding = shift(@list);
	    $psfontname = $_;
	$psfontname = $_;
	    $psfontname =~ s/^([^ ]+).*/$1/;
	$psfontname =~ s/^([^ ]+).*/$1/;
PS Printer, select the file. Otherwise choose Cancel.
	    push(@DATAFILE2_DATA, $_);
	    push(@DATAFILE_DATA, $_);
    push(@EXITREMOVE, $tempfile);
	    push(@HINTFILE_DATA, $_);
		    push(@HINTFILE, $hints);
		push(@HINTFILE, $hints);
	push (@list, '<None>') if (@list > 0);
	    push(@ret, $lscharset);
		    push(@SKIPPED, $font);
		push(@SKIPPED, $font);
	push(@STANDARD_LINES, join(' ', @list));
read_hints();
read_standard();
recommended for you to have the PPD file ready, but not required.
# redistribute it under the terms of the GNU General Public License, Version 2.
### ----------- register --------------
required to input. 
require("$LIBDIR/libperl-hint.pl");
	$result = 0;
	    $RETCHARSET = $lscharset;
    $RETCHARSET = $RETENCODING = '';
	$ret = checklist_single_onargs($text, 10, '', @list);
	$ret = com_register_2a($verbose, $ppdfile);
	$ret = com_register_2b($verbose);
	$ret = com_register_3b($verbose);
	    $RETENCODING = $lsencoding;
    $ret = input_generalfamily($font, '');
	    $ret = input_menu($text, '', '[a-zA-Z0-9.-]', 0, '');
    @ret = sort (keys(%list));
    return;
	    return '';
    return 0;
	return 0 if ($result != 0);
    return 1;
	    return 1;
    return create_hintslines($font, \%hints, $verbose);
	return $FAMILY2GFAMILY_LIST{$family};
    return $hints;
    return if ($result != 0);
	return if ($result != 0);
    return $result;
	    return $result if ($result != 0);
		return $result if ($result != 0);
	return $result if ($result != 0);
    return @ret;
    $S_CHARSET = '';
    $S_CHARSET = $charset;
    $S_ENCODING = '';
    $S_ENCODING = $encoding;
	$serif = 'NoSerif' if ($gfamily eq 'SansSerif');
$SIG{'__DIE__'} = \&emes;
$SIG{'HUP'} = \&exitfunc;
$SIG{'INT'} = \&exitfunc;
$SIG{'QUIT'} = \&exitfunc;
$SIG{'TERM'} = \&exitfunc;
@SKIPPED = ();
	$slant = 'Oblique' if ($font =~ /Obli/);
	$slant = 'Oblique Italic' if ($font =~ /Italic/);
		 'Special', 'font-specific charset.',
Specified PostScript Charset/Encoding ($pcset/$penc) of this font
				    split(/\n/, $cmaplist), '<None>');
* Standard Charset and Encoding according /etc/defoma/ps-cmap-enc.data.
Standard Charset/Encoding from the following list of ones that matches
sub clear_hints {
sub com_register {
sub com_register_1 {
sub com_register_2a {
sub com_register_2b {
sub com_register_3b {
sub create_hintslines {
sub emes {
sub exitfunc {
* Subfamilies removed from. For example, GothicBBB-Medium-78-EUC-H is
sub get_charset_encoding {
sub get_generalfamily {
sub get_hints {
sub get_not_registered_font {
sub get_standard {
sub get_standard_list {
sub input_ps_charset_encoding {
sub new_font {
sub note {
sub parse_hints {
sub read_hints {
sub read_standard {
	$swidth = 'Condensed' if ($font =~ /Narrow|Condensed/);
	$swidth = 'Expanded' if ($font =~ /Expanded/);
    system("/bin/cat '$ppdfile' | /usr/bin/tr '\\r' '\\n' > $tempfile");
	    system($command);
	    system("$command > /dev/null 2>&1");
    $tempfile = pop(@EXITREMOVE);
    $text = <<EOF
	    $text = <<EOF
	$text = <<EOF
	    $text = 'Input the name of the font manually. (Courier-Bold)';
the PostScript Charset.
# This program is free software. You can freely use, copy, modify, and
	    $tmp = shift(@list);
	    unless ($$hashptr{'Charset'}) {
    unless ($$hintsptr{'Charset'}) {
	unless (open(F, ">$file")) {
    unlink @EXITREMOVE if (@EXITREMOVE);
    unlink($tempfile);
		    unshift(@_, $j);
use Debian::Defoma::Common;
use Debian::Defoma::Font;
Use SPACE key to toggle the mark on/off.
#! /usr/bin/perl -w
    while (@_ > 0) {
	    while (@_ > 0) {
	while (1) {
while (@ARGV > 0) {
    while (<F>) {
	while (<F>) {
You can change the hints of the fonts by editting the file.
You don\'t have a write permission in /etc/defoma/hints.
