0123456789;
1A:aB:CcdEeFfGgIiLlnpqR:rs:TtUuVv:w:x
  -1    print single-column
	/* %3u: %-8s */	%s,
	/* %3u: bool */	"%s",
	/* %3u: num */	"%s",
	/* %3u: str */	"%s",
%-40.40s%s
ABSENT_BOOLEAN
ABSENT_NUMERIC
ABSENT_STRING
# (acsc removed to fit entry within %d bytes)
ALT-FONT-1
ALT-FONT-2
ALT-FONT-3
ALT-FONT-4
ALT-FONT-5
ALT-FONT-6
ALT-FONT-7
  -a    with -F, list commented-out caps
boolcodes
boolfnames
boolnames
__bss_start
CANCELLED_BOOLEAN
CANCELLED_NUMERIC
CANCELLED_STRING
Can't open %s
(char **)0
		(char *)0,	/* pointer to extended string table */
		(char *)0,	/* pointer to string table */
  -c    list common capabilities
    comparing booleans.
    comparing numbers.
comparing %s to %s.
    comparing strings.
__ctype_b_loc
curses_version
  -C    use termcap-names
%%%c without %%?
		%d,		/* count extensions to Booleans */
		%d,		/* count extensions to Numbers */
		%d,		/* count extensions to Strings */
		%d,		/* count total Booleans */
		%d,		/* count total Numbers */
		%d,		/* count total Strings */
-DELETED
+DELETED
Differing entries:
  -d    list different capabilities
DOUBLEUNDER
  -E    format output as C tables
  -e    format output for C initializer
#endif /* NCURSES_XNAMES */
Entries are now in core...
Expected a number, not "%s"
-FASTBLINK
+FASTBLINK
  -F    compare terminfo-files
File comparison needs exactly two file arguments.
__fprintf_chk
freopen64
  -f    with -1, format complex strings
  -g    format %'char' to %{number}
  -G    format %{number} to %'char'
GLIBC_2.0
GLIBC_2.1
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.4
__gmon_start__
  -i    analyze initialization/reset
#if NCURSES_XNAMES
In file 1 (%s) only:
In file 2 (%s) only:
-INVISIBLE
+INVISIBLE
_IO_putc
_IO_stdin_used
ISO DEC G0
ISO DEC G1
ISO UK G0
ISO UK G1
ISO US G0
ISO US G1
  -I    use terminfo-names
_Jv_RegisterClasses
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
libtic.so.5
libtinfo.so.5
lmkjtuvwqxn
  -l    output terminfo names
lqkxjmwuvtn
  -L    use long names
MAIN-FONT
Name matches are done...
_nc_align_termtype
_nc_capcmp
_nc_disable_period
_nc_doalloc
_nc_entry_match
_nc_err_abort
_nc_find_entry
_nc_first_name
_nc_get_hash_table
_nc_head
_nc_infotocap
_nc_progname
_nc_read_entry
_nc_read_entry_source
_nc_read_file_entry
_nc_resolve_uses2
_nc_rootname
_nc_set_source
_nc_tail
_nc_tic_expand
_nc_tracing
_nc_trim_sgr0
_nc_user_definable
_nc_warning
  -n    list capabilities in neither
numcodes
numfnames
numnames
older termcap
Options:
  -p    ignore padding specifiers
__printf_chk
  -q    brief listing, removes headers
#	Reconstructed via infocmp from file: %s
Resolving file %d...
-REVERSE
+REVERSE
# (rmacs/smacs removed for consistency)
  -R subset (see manpage)
  -r    with -C, output in termcap form
  -r    with -F, resolve use-references
%s: about to dump %s
		%s,	/* ...corresponding names */
%s: couldn't open terminfo file %s.
%s/%c/%s
_%s_data
  -s [d|i|l|c] sort fields
%s: dumping common capabilities
%s: dumping differences
%s: dumping use entry
%s: environment variable TERM not set
# (sgr removed to fit entry within %d bytes)
%s in file 1 (%s) has %d matches in file 2 (%s):
%s in file 2 (%s) has %d matches in file 1 (%s):
%s: length %d
%s: not enough memory
# (some function-key capabilities suppressed to fit entry within %d bytes)
# (some labels capabilities suppressed to fit entry within %d bytes)
Sorry, -u doesn't work with -F
__sprintf_chk
%s: reading entry %s from database
%s: reading entry %s from file %s
# (%s removed to fit entry within %d bytes)
	%s= '%s'.
	%s= %s.
%s: sorting by C variable order
%s: sorting by termcap name order
%s: sorting by terminfo name order
%s: sorting by term structure order
	%s: %s, %s.
	%s: %s%s%s.
%s=!!! %s WILL NOT CONVERT !!!
__stack_chk_fail
static char %-20s[] = %s;
static char * %s[] = %s
static char %s[] = "%s";
static char %s[] = %s
static short %s[] = %s
__strcat_chk
strcodes
__strcpy_chk
strfnames
string_ext
strnames
__strncpy_chk
%s: unknown sort mode
%s: width = %d, tversion = %d, outform = %d
  -T    eliminate size limits (test)
terminfo
# (terminfo-only capabilities suppressed to fit entry within %d bytes)
The following entries are equivalent:
There are unresolved use entries in %s:
  -t    suppress commented-out capabilities
  -U    eliminate post-processing of entries
-UNDERLINE
+UNDERLINE
# (untranslatable capabilities removed to fit entry within %d bytes)
  -u    produce source with 'use='
Usage: infocmp [options] [-A directory] [-B directory] [termname...]
use_extended_names
Use `tic -[CI] <file>' for this.
  -v number  (verbose)
  -V    print version
warning: %s entry is %d bytes long
# WARNING: this entry, %d bytes long, may core-dump %s libraries!
%%; without %%?
  -w number  (width)
  -x    treat unknown capabilities as user-defined
