[ $? != 0 ] && exit 2
	-A)  opts="$opts -A"; shift ;;
		*A*)  opts="$opts -O ack" ;;
#!/bin/sh
#                                   <buc@citadel.stu.neva.ru>
    case "$1" in
	     case $2 in
	-c)  cont=100000; shift ;;
    cont=$(($cont - 1))
		*C*)  opts="$opts -O cwr" ;;
#   Copyright (c)  2007             Dmitry K. Butskoy
	-d)  opts="$opts -p $2"; shift 2 ;;
	-[DSaki])  warning $1; shift 2 ;;
	*)  echo "$prgname: Internal parsing error" >&2; exit 2 ;;
    echo "$prgname: Option '$1' is not implemented in this wrapper" >&2
	echo "$prgname: warning: only classic output style supported" >&2
    echo "Usage: $prgname [-cCTfAhvR] [-p protocol] [-d dst_port] [-D max_dst_port]
		*E*)  opts="$opts -O ece" ;;
[ $# -eq 0 ] && {
    esac
	     esac
eval set -- "$PARSED"
	     exit 0 ;;
    exit 2
	-F)  iface=$2; shift 2 ;;
	[-F interface] [-k skips] [-I consecutive_trace_count]
	-f)  opts="$opts -F"; shift ;;
		*F*)  opts="$opts -O fin" ;;
#  from http://traceproto.sourceforge.net/
	-H)  opts="$opts -q $2"; shift 2 ;;
	[-H packets_per_hop] [-i incr_pattern] [-o output_style] [-t tcp_flags]
	-h)  usage; exit 0 ;;
	-I)  cont=$2; shift 2 ;;
iface=$TP_DEFAULT_IF
length=""
#   License:  GPL v2 or any later
method="tcp"
	-m)  opts="$opts -f $2"; shift 2 ;;
	-M)  opts="$opts -m $2"; shift 2 ;;
[ -n "$iface" ] && opts="$opts -i $iface"
[ -n "$TP_OUTPUT_STYLE" -a "$TP_OUTPUT_STYLE" != "classic" ] && {
[ -n "$TP_RA_SERVER" -a -z "$RA_SERVER" ] && RA_SERVER=$TP_RA_SERVER
	-o)  [ $2 != "c" ] && warning $1; shift 2 ;;
opts="-M $method $opts"
opts="$opts -z $sendwait"
PARSED=`getopt 'cCTfAhvRp:d:D:s:S:m:M:w:W:a:P:F:k:I:H:i:o:t:' "$@"`
	-P)  length=$2; shift 2 ;;
	-p)  method=$2; shift 2 ;;
		*P*)  opts="$opts -O psh" ;;
prgname=$0
		*R*)  opts="$opts -O rst" ;;
#   See COPYING for the status of this software.
sendwait=100
#  Shell wrapper providing traceproto(8) command line interface.
	     shift 2 ;;
	--)  shift; break ;;
		*S*)  opts="$opts -O syn" ;;
	-s)  opts="$opts --sport=$2"; shift 2 ;;
	[-s src_port] [-S max_src_port] [-m min_ttl] [-M max_ttl] [-w response_timeout]
	target" >&2
	-t)  case $2 in
	-[TCR])  warning $1; shift ;;
#  The original implementation of traceproto(8) can be obtained
		*U*)  opts="$opts -O urg" ;;
    usage
usage () {
    /usr/bin/traceroute.db $opts $host $length
	-v)  echo "\"traceproto\"-compatible wrapper for new Linux Traceroute" >&2;
warning () {
while [ "$cont" -gt 0 ]
while [ $# -gt 0 ]
	-w)  opts="$opts -w $2"; shift 2 ;;
	[-W send_delay] [-a account_level] [-P payload_size]
	-W)  sendwait=$2; shift 2 ;;
[ -z "$cont" ] && exec traceroute $opts $host $length
