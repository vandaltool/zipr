$0 =~ s!.*/!!g;
\\addtolength\\textheight{-2in}
\\addtolength\\textwidth{-2in}
\\addtolength\\topmargin{-\\headheight}
\\addtolength\\topmargin{-\\headsep}
A few bugfixes; B<showglyphs> now works with glyphnames containing underscores
A few updates to the documentation
    $_ = <AFM>;
Another bugfix
$ARGV[0] =~ /([\w-]+)\./ and $fontname = $1;
\\begin{document}
B<showglyphs> needs a working, TDS-compliant Tex installation
B<showglyphs> only works on Unix/Linux systems.
    	      " by $0 from `${fontname}.afm'\n";
chdir "../";
chdir "./showglyphs";
    close ENC;
close TEX;
    	 . ">/dev/null";
    	    die "Error: can't create `$filename.enc' - $!\n";
    	die "Error: can't open `${fontname}.afm' - $!\n";
die "Usage: $0 fontfile\n" if @ARGV != 1;
\\documentclass[a4paper]{article}
F<afm2afm>, F<autoinst>, F<cmap2enc>, F<pfm2kpx>, F<enc2etx>, 
F<etx2enc>, F<ot2kpx>.
    $filename = sprintf "%s%03d", $fontname, $i + 1;
First version
    	   "'${fontname}.afm' >>./pdftex.map";
for ($i = 0; $i < $num_glyphs / 256 + 1; $i++) {
    for $j (0 .. 31) {
    for ($j = 0; $j < 256; $j += 16) {
    	for $k (0 .. 7) {
	for ($k = 0; $k < 16; $k += 4) {
	    for ($l = 0; $l < 4; $l++) {
    for (@vec[256 * $i..256*($i+1)]) {s/(?<!\\)_/\\_/g}
for (/(WX.*?$)/gm)  {/N\s+([\w.]+)/ and $vec[$i++] = $1}
    \\frame{%
=head1 AUTHOR
=head1 DESCRIPTION
=head1 FILES
=head1 HISTORY
=head1 NAME
=head1 RESTRICTIONS
=head1 SEE ALSO
=head1 SYNOPSIS
=item B<->
=item I<2005-04-28>
=item I<2005-04-29>
=item I<2005-05-24>
=item I<2005-07-29>
=item I<font>
	last if 256 * $i + 8 * ($j + 1) >= $num_glyphs;
    local $/;
\\makeatletter
\\makeatother
	    \\makebox[0pt][l]{%
	    	\\makebox[2em][c]{\\linethickness{0pt}\\frame{#1}}}}}}
      	\\makebox[2em][l]{%
Marc Penninga <marc@penninga.info>
\\newcommand*{\\printglyph}[2]{%
\\newlength\\tempdima
open AFM, "<${fontname}.afm" or 
    open  ENC, ">$filename.enc" or 
open TEX, ">tmp.tex" or die "Error: can't create `tmp.tex' - $!\n";
=over 12
    print ENC "] def\n";
	    print ENC "\n";
    print ENC "%\n% Created ", scalar localtime, 
    print ENC "%\n/", $filename, " [\n";
	    print ENC "\t";
	    	print ENC "/$vec[$i * 256 + $j + $k + $l] ";
    	printf ENC "%% 0x%04x\n", $j;
print TEX <<EOF;
    print TEX "\\font\\test=${filename} at 24pt\\test\n";
print TEX "\n\\end{document}\n";
	print TEX "\\par\n";
    	    print TEX "\\printglyph{\\char", 8 * $j + $k, 
\\raggedbottom\\frenchspacing
	    	\\raisebox{-14pt}{\\makebox[2em][c]{\\tiny#2}}}%
	    \\raisebox{-\\tempdima}{%
	    \\rule[-18pt]{0pt}{48pt}%
\\setlength\\evensidemargin{0pt}
\\setlength\\oddsidemargin{0pt}
\\setlength\\parindent{0pt}
\\setlength\\parskip{0pt}
\\setlength\\textheight{\\paperheight}
\\setlength\\textwidth{\\paperwidth}
\\setlength\\topmargin{0pt}
    	\\settodepth{\\tempdima}{#1}%
showglyphs - create a F<pdf> file that shows all glyphs in a font
showglyphs I<fontfile>
(/StartCharMetrics (\d+)/m and $num_glyphs = $1) or $num_glyphs = 255;
supported.
    system "afm2afm -e '${filename}.enc' -o '${filename}.afm' " . 
    system "afm2tfm '${fontname}.afm' -T '${filename}.enc' '${filename}.tfm'" 
system "/bin/rm -r ./showglyphs/";
system "cp $ARGV[0] ./showglyphs/";
system "cp `locate pdftex.map` .";
system "font2afm $ARGV[0]";
system "mkdir -p ./showglyphs/";
system "mv showglyphs/tmp.pdf './${fontname}.pdf'";
system "pdflatex tmp >/dev/null";
This can be any Type 1 or TrueType font; OpenType fonts are not (yet?)
This program creates a F<pdf> file that shows all glyphs in a given font.
use integer;
use warnings; no warnings qw(uninitialized);
#!/usr/bin/perl
	    	      "}{$vec[$i * 256 + 8 * $j + $k]} ";
@vec = (".notdef") x (($num_glyphs / 256 + 1) * 256);
