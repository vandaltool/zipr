!%&*+-/<=>^|
&*+-/<=>|
 = _0 + 
0.0 ** negative number
0123456789
0123456789abcdef
1-dim subscript in EQUIVALENCE, %d-dim declared
20090411
"%.35s%s" over 6 characters long
%.52s cannot be a common block: it is a subprogram.
%.52s cannot be a subprogram: it is a common block.
%.64s declared EXTERNAL but never used.
%.80s cannot be called.
%.90s: inconsistent declarations:
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_+-.
addrlit failure!
addr of addr
adjtoklen: realloc(%d) failure!
adjustable array in common
adjustable automatic array
adjustable character function
adjustable dimension on non-argument
adjustable in equivalence
adjustable length
(a_%d)%s*
altenate return argument
alternate return in nonsubroutine
alternate returns
	arg %d: here %s, previously %s.
arg %d: here %s, prevously %s
	arg %d: %s%s%s %s.
argument count in entry %d:  '%d'
 () argument list
 as a parameter.
asg_addr
/* Assigned format variables */
?assigned goto variable must be integer
assignment to a non-variable
attempted division by zero
attempt to extend common %s backward
attempt to give DATA in type-declaration
attempt to initialize adjustable array
attempt to i/o array of unknown size
attempt to use internal unit array of unknown size
attempt to use undefined variable
attempt to use untyped function
attempt to use untyped statement function
automatic
AUTOMATIC statement
automatic variable of nonconstant length
backspace
bad alignment forced by equivalence
bad argument type to intrinsic %s
bad bit identifier
Bad character constant %.10s
BAD DECL '%d'
bad dimension type for %.70s
bad end= clause
bad err= clause
bad file in open
bad fork
bad format descriptor
bad format number
bad impldoblock #%lx
 /* bad init data */
Bad # line: "%s"
bad number of arguments to intrinsic %s
Bad parse, return code %d
bad REC= clause
bad recl
bad storage class in equivalence
bad type on DO parameter
bad type on do variable
Bad uname_tag %d in opconv_fudge
bad unit in close statement
bad unit in I/O motion statement
bad unit in open
bad unit specifier
Bad use of character*(*)
bad use of character*(*) variable %.60s
bad wait code
binary constant
?bit_bits
?bit_cshift
?bit_shift
bit_test(%l,%r)
blockdata
block_data
BLOCK DATA
Both are available from netlib, e.g.,
( ??bug?? )0
/* Builtin functions */
cannot be a namelist name
Cannot give data to "%.75s"
Cannot invoke common variable %.50s as a function.
cannot make into parameter
Cannot open file %s
cannot open intermediate file %s
cannot pass %s as actual
can only save static variables
Can't adjust %.38s correctly
Can't open %.84s
can't open %.86s
can't open %s
Can't use both long and short ints
case %d:  goto %s;
case %d: goto %s;
		cc *.o -lf2c -lm
c_functions
(char *)
(char *)&
(char (*)())0
(char *)0
character entry of noncharacter function
character*(*) in common
characters out of order in implicit:%c-%c
CHARACTER statement
character statement function with length (*)
Character-valued dummy procedure 
((char *)&equiv_%d)
 char fill2[%ld];
; char fill2[%ld]
(char *)&%l
(char *)%s%s
ci1_b%ld
ci1__%ld
ci1_n%ld
Code may be wrong for previous function calls having 
/* comlen %s %ld */
common alignment
/* Common Block Declarations */
common blocks
comparison of nonarithmetic data
compgoto_out:  bad label in label list
compgoto_out:  expected label list, got tag '%d'
compgoto_out:  null index for computed goto
Compiler error line %ld
(complex (*)())0
(complex *)0
complex division by zero
computed goto index must be integer
Computing %ld%s power
Computing M%s
concatenation of nonchar data
concatenation operator //
concat (%l, %r)
Confusion in saveargtypes
consnegop
conspower
Constant expression yields NaN.
continuation lines
continue
control stack empty
Couldn't open %.80s
Couldn't open sorted initialization data
c_output
%c rather than ( after FORMAT
-C suppresses -s
__ctype_b_loc
__ctype_tolower_loc
__cxa_atexit
%d_ *) &
dabs(%l)
data_value:  error reading from intermediate file
%d: %d %d
%d: %d %d %d
%d: %d %d %s
%d: %d %ld
%d: %d %llx
%d: %d %lx
%d: %d %s
%d: %d %s %s
declaration among executables
Declaration error for %s: %s
Declaration error %s
#define 
#define f2c_i2 1
#define %s
#define %s %s_st.val
/*<<</dev/null>>>*/
/*>>>'/dev/null'<<<*/
differing calling sequences
differing numbers of arguments
dimension %d of %s is not an integer.
direct internal I/O not allowed
direct list-directed I/O not allowed
direct namelist I/O not allowed
disagreement of argument types in statement function call
dmax(%l,%r)
dmin(%l,%r)
do_format:  Bad token type in intermediate file
do_format:  Unknown token type in intermediate file
do_init_data: expected NAME
DO loop or BLOCK IF not closed
do_p1_addr: bad tag in p1 file '%d'
do_p1_addr:  Missing Addrp at end of file
do_p1_addr:  Null addrp in p1 file
do_p1_comp_goto:  expected list, got tag '%d'
do_p1_comp_goto:  no expression for computed goto
do_p1_const:  Illegal constant type in p1 file: %ld
do_p1_const:  Illegal constant value in p1 file
do_p1_const:  Missing constant type at end of file
do_p1_const:  Missing constant value at end of file
do_p1_expr:  Illegal opcode %ld
do_p1_expr:  Missing expr opcode at end of file
do_p1_expr:  Missing expr opcode in p1 file
do_p1_expr:  Missing expr type at end of file
do_p1_expr:  Missing expr type in p1 file
do_p1_extern:  Missing memno at end of file
do_p1_extern:  Missing memno in intermediate file
do_p1_goto:  Missing goto label at end of file
do_p1_goto:  Missing goto label in p1 file
do_p1_head: got class %ld
do_p1_head:  missing header class at end of file
do_p1_head:  missing header class in p1 file
do_p1_ident:  Bad storage in intermediate file: %ld
do_p1_ident:  Bad type in intermediate file: %ld
do_p1_ident:  Missing charp ident string at end of file
do_p1_ident:  Missing charp ident string in intermediate file
do_p1_ident:  Missing identifier storage at end of file
do_p1_ident:  Missing identifier type at end of file
do_p1_ident:  Missing ident string at end of file
do_p1_ident:  Missing ident string in intermediate file
do_p1_label:  Missing label at end of file
do_p1_label:  Missing label in p1 file 
do_p1_list:  missing count at end of file
do_p1_list:  missing count in p1 file
do_p1_list:  missing list tag at end of file
do_p1_list:  missing list tag in p1 file
do_p1_list:  missing list type at end of file
do_p1_list:  missing list type in p1 file
do_p1_literal:  Missing memno at end of file
do_p1_literal:  Missing memno in p1 file
do_p1_name_pointer:  Illegal name pointer in p1 file: '#%lx'
do_p1_name_pointer:  Missing pointer at end of file
do_p1_set_line:  Illegal line number in intermediate file: %ld
do_p1_set_line:  Missing line number at end of file
DO range never executed
doublecomplex
double complex
(doublecomplex (*)())0
(doublecomplex *)0
DOUBLE COMPLEX statement
doubleprecision
double precision
doublereal
(doublereal (*)())0
(doublereal *)0
-(doublereal)%l
do while
DO without label
%d prototype%s updated while reading prototypes.
	due to dependencies among arguments.
Dummy argument %.50s appears in a parameter statement.
Dummy argument "%.60s" in data statement.
dummy arguments cannot be in common
duplicate argument %.80s
} else {
} else /* if(complicated condition) */ {
elseif out of place
else out of place
endif out of place
       entry 
entry %d
equivalences
eqvcommon
.EQV. operator
Error: expected %s, not "%s" (line %ld of %s)
Error on line %ld
Error processing %s before line %ld
escapes make %dH too big
exdo:  bad dostepsign '%d'
Execution error %s
expected "enddo %s"
-- expected letter range
expected unnamed ENDDO
expr_out: bad opcode '%d'
expr_out: bad tag '%d'
expr_out: got TIMPLDO
expr_out: got TPRIM
external
external %.60s used as a variable
external argument
external name already used
external symbols
extern "C" {
extern double _0;
extern %s %s
extern void _uninit_f2c(%s);
Extraneous text at end of FORMAT: ...%s
Extraneous text at end of FORMAT: %s
f2c extension used: %s
f2c (Fortran to C Translator) version %s.
f2c_out.c
failing to get %d bytes
file name must end in .f or .F
file= specifier omitted from open
findconst failure!
fixing wrong type inferred for %.65s
flags in entry %d:  '%x' (hex)
floating exception during constant evaluation; cannot recover
(float)%s
/* Format strings */
For technical details, see the f2c report.
Fortran 77 feature used: %s
@(#) FORTRAN 77 to C Translator, VERSION 20090411
Fortran 8x comparison operator
/* Fortran I/O blocks */
For usage details, see the man page, f2c.1.
for(;;) { /* while(complicated condition) */
__fprintf_chk
, (ftnint)0
(ftnlen)
, (ftnlen *)0
(ftnlen)%ld
(ftnlen)sizeof(%s)
/* Function Body */
function invocation of subroutine
generic function
GLIBC_2.0
GLIBC_2.1
GLIBC_2.1.3
GLIBC_2.2
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.4
__gmon_start__
here %d, previously %d
	here %d, previously %d args and string lengths.
here %s, previously %s
	here %s%s, previously %s%s.
hexadecimal
hex constant
	http://netlib.bell-labs.com/netlib/f2c/f2c.1.gz
	http://netlib.bell-labs.com/netlib/f2c/f2c.pdf
	http://www.netlib.org/f2c/f2c.1
	http://www.netlib.org/f2c/f2c.pdf
		http://www.netlib.org/f2c/libf2c.zip
(I1_fp)0
!i8const
ichar([first char. of] char. string) assumed for conversion to numeric
#ifdef __cplusplus
#ifdef Define_COMMONs
#ifdef P_R_O_T_O_T_Y_P_E_S
#ifndef F2C_proc_par_types
if (%s) {
ignoring arguments to main program
ignoring text after "end".
illegal branch to inner block, statement label %s
illegal comparison
illegal continuation card (starts "%.6s")
illegal * iocontrol
illegal label %s
Illegal mixture of -R and -!R 
illegal positional iocontrol
illegal use of %.60s (main program name)
illegal use of subroutine name
implicit item must be single letter
IMPLICIT statement
impossible conversion
impossible element in concatenation
impossible inquire parameter %s
impossible iostmt %d
impossible lexstate %d
Impossible %s %d in routine %s
improper use of builtin %s
inacclen
inappropriate operation on unsubscripted array %.50s
inblanklen
#include "f2c.h"
includes nested too deep
incompatible common declaration
incompatible lengths for common block %.60s
incompatible lengths for common block %s (line %ld of %s)
incompatible storage declarations
incompatible type declarations
incompatible type-length combination
incompatible types in initialization
incompatible use of intrinsic function
inconsistent calling sequences for 
inconsistent common usage
inconsistent equivalence
inconsistent types
indirlen
 in file %s
infmtlen
informlen
initfile
init_file
initialization of string of nonconstant length
/* Initialized data */
inline max of exected type
inline min of exected type
inline mod of noninteger
innamlen
inquire by unit or by file, not both
inseqlen
(int (*)())0
(integer (*)())0
(integer *)0
integer1
integer*1
(integer1 (*)())0
(integer1 *)0
integer*2
integer*8
integer constant %.*s truncated.
integer**negative
integer ** negative number
	-- in that order, at the end of the command line, as in
intraddr: impossible f1=%d
intraddr: %s is not intrinsic
intrcall: bad intrgroup %d
INTRINSIC statement
int %s () { MAIN__ ();%s }
inunflen
invalid base %d for constant, defaulting to hex
invalid complex constant
invalid control %s for statement
invalid external declaration
Invalid flag '%s'
invalid intrinsic declaration
invalid length
Invalid name in EQUIVALENCE.
invalid repetition count in DATA statement
invalid %s character
invalid type of arithmetic if expression
invalid use of statement function %.64s.
invalid value for character parameter %s
iocontrol %s repeated
I/O error on %s
_IO_getc
_IO_putc
ioseta/memoffset
iostat must be an integer variable
_IO_stdin_used
(L1_fp)0
(L2_fp)0
label already that of a format
labeled continuation line (starts "%.6s")
label %s already defined
labels in computed GOTO list
, %ld };
left side of assignment must be variable
length (*) in implicit
length must be a positive integer constant
length specification *(*)
length specification *n
lengtype
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
#line 1 "%s"
#line %ld "%s"
list_arg_types:  null output file
list_arg_types:  null procedure entry pointer
list_decls:  bad tag on new variable '%d'
list_decls:  can't handle class '%d' yet
list_decls:  can't handle storage class %d
list_decls:  null variable
list_decls:  unknown procedure class
literal constants
/* Local variables */
local variable %s never used
(logical (*)())0
(logical *)0
logical1
logical*1
(logical1 (*)())0
(logical1 *)0
logical*2
(longint (*)())0
(longint *)0
loops or if-then-elses
%l ^= %r
%l <<= %r
%l << %r
%l <= %r
%l == %r
%l = &%r
%l >= %r
%l >>= %r
%l >> %r
%l |= %r
%l || %r
%l -= %r
%l -> %r
%l != %r
%l /= %r
%l *= %r
%l &= %r
%l && %r
%l %%= %r
%l %% %r
%l += %r
main - couldn't reopen c_functions
/* Main program alias */ 
/* Main program */ int 
malloc(%d) failure!
may not appear in namelist
may not branch to a format
mem(%d) failure!
memno2info:  bad tag
memno2info:  couldn't find memno
memno2info:  null variable
mismatched character entry lengths
misplaced ENDDO
misplaced entry statement
missing end statement
missing final end statement
missing statement label %s
mkdtemp failed (for -T)
mkfunct: impossible recursion
mkfunct: impossible vprocclass %d
mktmpn: unexpected type %d
more than 19 continuation lines
more than %d subscripts
Multitype
Multitype ret_val;
must inquire by unit or by file
named BLOCKDATA
name declared as argument after use
Namelist
/* Namelist stuff */
name %.*s... too long, truncated to %.*s
name %s too long, truncated to %.*s
negate_const:  bad type '%d'
negate_const:  can't negate type '%d'
.NEQV. operator
nested loops with variable %s
new_endif bug
No (...) after FORMAT
no argument storage given for 
No ) at end of FORMAT statement
no backward DO loops
no I/O list allowed in NAMELIST read/write
nonarithmetic operand of arithmetic operator
nonarithmetic operand of negation
non-character control clause
non-character datum %.42s initialized with character string
noncharacter entry of character function
non-character variable as format or internal unit
nonconstant implied DO parameter
non-constant initializer
nonconstant subscript in equivalence 
nondigit in statement label field "%.5s"
noninteger assign variable
non-integer subscript
non-left side in READ list
non-logical expression in DO WHILE statement
non-logical expression in IF statement
nonlogical operand of logical operator
nonpositive dimension
non-variable argument in statement function definition
no qualifiers on parameter name %s
no substring of function call
Not a Fortran 66 keyword: %s
 not declared EXTERNAL.
NOT of nonlogical
Null nelt in n_elt
octal constant
-O%d: too many register variables
	on Linux or Unix systems, link with .../path/to/libf2c.a -lm
only last bound may be asterisk
only variables may be arrays
on Microsoft Windows system, link with libf2c.lib;
op_assign:  bad opcode '%d'
opconv_fudge
open with "name=" treated as "file="
"," or ")"
";" or ","
order comparison of complex data
	or, if you install libf2c.a in a standard place, with -lf2c -lm
out_args
out_asgoto:  bad expr
out_asgoto:  NULL variable expr
out_call:  unknown parameter
out_const:  bad type '%d'
out of memory
output_binary: format err: '%%%c' illegal
output_unary: bad opcode
Overflow evaluating constant expression.
overflow simplifying integer constants.
: overlapping initializations
overload
p1_addr:  unknown uname_tag '%d'
p1_const:  bad constant type '%d'
p1_const:  bad vleng
p1_expr:  bad opcode '%d'
p1_expr: bad tag '%d'
p1_expr:  got TPRIM
p1_file.BAK
p1get_const:  bad constant type '%d'
p1_unary: bad opcode '%d'
/* Parameter adjustments */
parameter in data statement
PARAMETER statement
pass1_file
pause/stop argument must be constant
pause/stop argument must be integer or string
Pfile: realloc failure!
power (%l, %r)
, previously
__printf_chk
protected
proto_file
putcall:  expected TEXPR, got '%d'
putcall:  NULL argument
putcall:  NULL call expression
putch1: bad character conversion
putconst
putcxcmp
put_one_arg:  bad type '%d'
putpower: bad call
qbit_clear(%l,%r)
qbit_set(%l,%r)
r8fix bug
raw_data
raw_data.b
rdname: oversize name
(real (*)())0
(real *)0
REAL return
recursive call
redeclaration of statement function
/*:ref: %s %d :*/
/*:ref: %s %d %d
register
/* Rerunning f2c -P may change prototypes or declarations. */
Rerunning "f2c -P ... %s %s" may change prototypes or declarations.
 return 0;
return ret_val.%s;
return %s(%d
RETURN statement in main or block data
, ret_val
(*ret_val).%s
rpllist empty
r_v->r = ret_val.c.r; r_v->i = ret_val.c.i;
r_v->r = ret_val.z.r; r_v->i = ret_val.z.i;
/*<<<%s>>>*/
/*< %s >*/
/*>>>'%s'<<<*/
/* %s: */
} /* %s */
} %s = { 
%s	%09ld	%d
%s%.90s,
%s%.90s:
%s argument
%s [arg_verify]:  
%s [arg_verify]:  bad 
%s [arg_verify]:  bad arg type in entry %d:  '%d'
%s [arg_verify]:  invalid 
%s [arg_verify]:  too many 
SAVE statement
%s_bad%d
%s cannot be both a procedure and a common block (line %ld of %s)
%schar **
%s constant '%.*s' truncated.
%sdetected on line %ld of %s
 %s_dim%d
, %s_dims
"%s" does not end in .f or .F
%s(%d, &ret_val
%s(%d, ret_val, ret_val_len
%s(%d,%s
%s e_%d%s;
sed "s/^\/\*>>>'\(.*\)'<<<\*\/\$/cat >'\1' <<'\/*<<<\1>>>*\/'/" | /bin/sh
sequential
((%s *)&equiv_%d)
(*(%s *)&equiv_%d)
%s/f2c%ld_blkd
%s/f2c%ld_func
%s/f2c%ld_p1f
%s/f2c%ld_p1fb
%s/f2c%ld_rd
%s/f2c%ld_sort
%s fill_%d[%ld];
%s for %s (line %ld of %s):
%sftnlen ret_val_len
%sftnlen %s
%s function
%s function %.90s invoked as subroutine
sgn(nonconstant)
shortint
(shortint (*)())0
(shortint *)0
shortlogical
(shortlogical (*)())0
(shortlogical *)0
'%s' ignored
%s#include "f2c.h"
%s is not in a COMMON block
%s_length
%s: Missing argument after '%s%s'
%sMultitype *ret_val
 %s_offset
Sorry, can't format OPCODE '%d'
Sorry, no OPCALL yet
Sorry, no substrings yet
sort failed, status %d
	Source for libf2c is in /netlib/f2c/libf2c.zip, e.g.,
/* Split this into several files by piping it through
__sprintf_chk
%s &%s_dv
%s%s parameter '%ld' is not a SHORT INT (truncating to %d)
(%s) %s.r
(%s) %s_%s(
%s%s *%s
%s%s*%s_fmt
(%s) %s%sr
%s%s%s%s
%s(%s *)%s%s + %ld%s
%s %s %s %s %s %s
%s%s%s%s%s%s%s
) %s[%s_subscr
; } %s_st;
; } %s_st = { 0,
%sstruct {
__stack_chk_fail
start_formatting:  couldn't open the intermediate file
start_formatting:  couldn't reopen the pass1 file
statement cannot be reached
statement function %.62s amid executables.
statement function %.66s calls itself.
statement function definition and argument list differ
statement labels
Statement order error: declaration after DATA
static char 
static char fmt_%ld[] = "
static ftnlen %s_dims[] = { %d, %ld, %ld
static Namelist %s = { "%s", %s_vl, %d };
static %s 
static %s %s = 
static %s %s = { 
STATIC statement
static struct { %s fill; char val
static struct { %s fill; char val[%ld+1];
static Vardesc %s_dv = { "%s", %s
static Vardesc *%s_vl[] = 
%s:  too many parameters: 
storage class
/* %s -- translated by f2c 
__strcpy_chk
__strncpy_chk
(*(struct 
struct %s%d_ {
struct { %s fill; char val
%s type from `f2c -%s` on line %ld of %s
subroutine
subscript on variable %s out of range
subscripts on scalar variable %.68s
subskept: uname_tag %d
	substituting "%s"
substring of %.65s is out of bounds.
substring of character array %.70s
substring of noncharacter %.73s
substring operator :
%sunion {
%s variable
switch (
switch ((int)
switch ((int)(
switch(n__) {
syntax error
/* System generated locals */
@t29T$<t
T$,9T$$~
T$,9T$4t
Table limit now %d.
/* Table of constant values */
table size in entry %d:  '%d'
tag %d in data statement
T$d;T$<t
template
text after column 72: %s
there is a branch to label %s from outside block
too few DO parameters
too few initializers
too many dimensions
too many DO parameters
too many initializers
Too many %s.
Try rerunning with the -N%c%d option.
??TYERROR??
typedef int /* Unknown procedure type */ (*%s)%s;
typedef %s %c_f; /* %s function */
typedef %s (*%s)%s;
/* Types for casting procedure arguments: */
??TYSUBR??
??TYUNKNOWN??
uinteger
ulongint
uname_tag
unbalanced parentheses, statement skipped
unbalanced quotes; closing quote supplied
unclassifiable statement (starts "%s")
undefined
#undef %s
unexpected character 0x%.2x = '%c' on line %ld of %s
unexpected character in cds.
unexpected end of file in %s
Unexpected nelt tag %d in n_elt
Unexpected tag %d in opconv_fudge
unexpected type %d in wr_equiv_init
unexpected type in sameconst
unexpected type "%s" on line %ld of %s
unexpected vstg in out_addr
Unexpected vtype %d in n_elt
unformatted
unformatted internal I/O not allowed
_uninit_f2c(&%s,%d,%ldL);
unit specifier not of type integer or character
<<unknown>>
Unknown Addrp
unknown intrinsic function
unknown iocontrol %s
unlabeled format statement
unsigned
*(unsigned char *)
*(unsigned char *)&
untyped function
Usage: %s [ option ... ] [file ...]
used as variable
variable length character initialization
-version
(version %s).
void*,int,long
volatile
__vsprintf_chk
Warning on line %ld of %s: %s
Warning on line %ld: %s
warning: %s does not end in _ (line %ld of %s)
	/* was 
wr_ardecls:  nonconstant array size
wr_array_init: bad type '%d'
wr_char_len:  nonconstant array size
wr_equiv_init: unexpected logical value %ld
write_char_values: nonconstant array size
Writing concatenation
wr_one_init -- couldn't get name pointer; tag is %d
wr_one_init -- unknown variable
wr_one_init:  unknown variable name '%s'
wrong number of subscripts on %.68s
wr_struct:  bad tag on variable '%d'
wr_struct:  null variable
X**-Y treated as X**(-Y)
X**+Y treated as X**(+Y)
yacc stack overflow
   You must link the resulting object file with libf2c:
zero DO increment
