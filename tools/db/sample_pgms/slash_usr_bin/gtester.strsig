                                                                                                    
__bss_start
/build/buildd/glib2.0-2.32.3/./glib/gtester.c
__errno_location
Failed to execute test binary: %s: %s
Failed to open log file '%s': %s
Failed to open pipe for test binary: %s: %s
*fix == 0
*fix == 0xdeadbeef
fixture_setup
fixture_teardown
fixture_test
g_assertion_message_cmpnum
g_child_watch_add_full
g_clear_error
--g-fatal-warnings
  --g-fatal-warnings          make warnings fatal (abort)
g_io_add_watch_full
g_io_channel_read_chars
g_io_channel_set_buffered
g_io_channel_set_encoding
g_io_channel_set_flags
g_io_channel_unix_new
g_io_channel_unref
GLIBC_2.0
GLIBC_2.4
g_log_set_always_fatal
g_main_context_iteration
g_main_context_pending
g_malloc
g_markup_vprintf_escaped
__gmon_start__
g_return_if_fail_warning
g_set_prgname
g_slist_foreach
g_slist_free
g_slist_prepend
g_source_remove
g_spawn_async_with_pipes
g_spawn_close_pid
g_strconcat
g_strdup
g_strdup_printf
g_strerror
g_strfreev
g_strsplit
g_test_add_vtable
g_test_bug
g_test_bug_base
/gtester/fixture-test
GTester: last random seed: %s
--gtester-selftest
gtester version %d.%d.%d
g_test_init
g_test_log_buffer_free
g_test_log_buffer_new
g_test_log_buffer_pop
g_test_log_buffer_push
--GTestLogFD=%u
g_test_log_msg_free
g_test_message
g_test_run
--GTestSkipCount=%u
g_timer_destroy
g_timer_elapsed
g_timer_new
g_timer_start
g_timer_stop
  -h, --help                  show this help message
http://www.example.com/bugtracker/
http://www.example.com/bugtracker?bugnum=%s;cmd=showbug
_IO_stdin_used
_Jv_RegisterClasses
--keep-going
  -k, --keep-going            continue running after tests failed
libc.so.6
__libc_start_main
libglib-2.0.so.0
/lib/ld-linux.so.2
  -l                          list paths of available test cases
-m=no-undefined
  -m=no-undefined             don't run test cases that provoke assertions
  -m=perf, -m=slow, -m=quick -m=thorough
-m=quick
  -o=LOGFILE                  write the test log to LOGFILE
Options:
(pid=%lu)
  -p=TESTPATH                 only start test cases matching TESTPATH
  -q, --quiet                 suppress per test binary output
                              run test cases in mode perf, slow/thorough or quick (default)
%s<binary file="%s"/>
%s<duration>%.6f</duration>
%s<duration>%.6Lf</duration>
--seed=%s
  --seed=SEEDSTRING           start all tests with random number seed SEEDSTRING
%s<error>%s</error>
%s</gtester>
%s<gtester>
%s</message>
%s<message>
%s</performance>
%s<performance minimize="%d" maximize="%d" value="%.16Lg">
%s<random-seed>%s</random-seed>
%s<status exit-status="%d" n-forks="%d" result="%s"/>
__stack_chk_fail
%s</testbinary>
%s<testbinary path="%s">
%s</testcase>
%s<testcase path="%s">
%s<testcase path="%s" skipped="1"/>
  -s=TESTPATH                 skip test cases matching TESTPATH
--test-arg
--test-arg=
testcase_close
testcase_open == 0
testcase_open > 0
test_log_msg
TEST: %s... 
This is a test message API test message.
thorough
unknown test mode: -m %s
Usage: gtester [OPTIONS] testprogram...
--verbose
  --verbose                   report success per testcase
--version
  -v, --version               print version informations
<?xml version="1.0"?>
