%50s %50s
                 allow COMMAND to read from the TTY and receive TTY signals.
                 also send a KILL signal if COMMAND is still running
__assert_fail
bindtextdomain
block or catch that signal.  For other processes, it may be necessary to
bug-coreutils@gnu.org
CHARSETALIASDIR
Copyright %s %d Free Software Foundation, Inc.
__ctype_b_loc
__ctype_get_mb_cur_max
__cxa_atexit
dcgettext
draig Brady
DURATION is a floating point number with an optional suffix:
__errno_location
error waiting for command
failed to run command %s
For complete documentation, run: info coreutils '%s invocation'
foreground
      --foreground
fork system call failed
__fpending
__fprintf_chk
fputs_unlocked
__freading
fseeko64
Gabcdefghijklmnopqrstuvwxyz
General help using GNU software: <http://www.gnu.org/gethelp/>
getopt_long
GLIBC_2.0
GLIBC_2.1
GLIBC_2.1.3
GLIBC_2.2
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.4
__gmon_start__
GNU coreutils
      --help     display this help and exit
http://www.gnu.org/software/coreutils/
iconv_close
iconv_open
If the command times out, then exit with status 124.  Otherwise, exit
                 In this mode, children of COMMAND will not be timed out.
invalid time interval %s
_IO_stdin_used
iswalnum
iswprint
iswspace
*iter->cur.ptr == '\0'
iter->cur.wc == 0
_Jv_RegisterClasses
kill-after
  -k, --kill-after=DURATION
__libc_current_sigrtmax
__libc_current_sigrtmin
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
librt.so.1
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
Mandatory arguments to long options are mandatory for short options too.
mbiter.h
mbiter_multi_next
mbsinit (&iter->state)
mbuiter.h
mbuiter_multi_next
memory exhausted
newlocale
nl_langinfo
O(knNA NULL argv[0] was passed through an exec system call.
  or:  %s [OPTION]
Padraig Brady
__printf_chk
__progname
__progname_full
program_invocation_name
program_invocation_short_name
Report bugs to: %s
Report %s bugs to %s
Report %s translation bugs to <http://translationproject.org/team/>
RTMAX-%d
RTMIN+%d
%s, and %s.
                 See `kill -l` for a list of signals
setlocale
`s' for seconds (the default), `m' for minutes, `h' for hours or `d' for days.
shell-always
%s home page: <%s>
sigaction
sigemptyset
                 SIGNAL may be a name like `HUP' or a number.
signal upon timeout.  The TERM signal kills any process that does not
%s: invalid signal
                 specify the signal to be sent on timeout.
__sprintf_chk
%s, %s, and others.
%s, %s, and %s.
  -s, --signal=SIGNAL
%s (%s) %s
%s, %s, %s, and %s.
%s, %s, %s, %s,
__stack_chk_fail
Start COMMAND, and kill it if still running after DURATION.
__strdup
strtod_l
There is NO WARRANTY, to the extent permitted by law.
This is free software: you are free to change and redistribute it.
                 this long after the initial signal was sent.
timer_create
timer_delete
timer_settime
Try `%s --help' for more information.
unknown status from command (0x%X)
Usage: %s [OPTION] DURATION COMMAND [ARG]...
use the KILL (9) signal, since this signal cannot be caught.
/usr/lib
/usr/share/locale
      --version  output version information and exit
warning: timer_create
warning: timer_settime
                 When not running timeout directly from a shell prompt,
with the status of COMMAND.  If no signal is specified, send the TERM
write error
Written by %s.
Written by %s and %s.
Written by %s, %s, and %s.
Written by %s, %s, %s,
