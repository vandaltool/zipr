 2005 Scott James Remnant (original implementation on www.dpkg.org)
 2007 Guillem Jover (modifications on wiki.debian.org)
 2008 Joey Hess <joeyh@debian.org>
 2010 Rapha
abort_mv_conffile() {
			abort_mv_conffile "$OLDCONFFILE"
abort_rm_conffile() {
			abort_rm_conffile "$CONFFILE"
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# (at your option) any later version.
badusage() {
#!/bin/sh
# but WITHOUT ANY WARRANTY; without even the implied warranty of
	case "$1" in
case "$command" in
	case "$DPKG_MAINTSCRIPT_NAME" in
	cat >&2 <<-END
	cat <<END
	cat <<-END
		code=0
		code=1
command="$1"
Commands:
# Common functions
			      "$CONFFILE.dpkg-backup"
# Copyright 
	Copyright (C) 2005 Scott James Remnant
	Copyright (C) 2007 Guillem Jover <guillem@debian.org>
	Copyright (C) 2008 Joey Hess <joeyh@debian.org>
	Copyright (C) 2010 Rapha
	Debian $PROGNAME version $version.
debug() {
		debug "$0 mv_conffile not required in $DPKG_MAINTSCRIPT_NAME"
		debug "$0 rm_conffile not required in $DPKG_MAINTSCRIPT_NAME"
	debug "CONFFILE=$CONFFILE PACKAGE=$PACKAGE "\
	debug "CONFFILE=$OLDCONFFILE -> $NEWCONFFILE PACKAGE=$PACKAGE "\
	debug "Executing $0 mv_conffile in $DPKG_MAINTSCRIPT_NAME "\
	debug "Executing $0 rm_conffile in $DPKG_MAINTSCRIPT_NAME "\
	Display this usage information.
		   dpkg --compare-versions "$2" le-nl "$LASTVERSION"; then
		echo "DEBUG: $PROGNAME: $1" >&2
		echo "Moving obsolete conffile $CONFFILE out of the way..."
		echo "Obsolete conffile $CONFFILE has been modified by you."
	echo "Preserving user changes to $NEWCONFFILE (renamed from $OLDCONFFILE)..."
	echo "$PROGNAME: error: $1" >&2
	echo "$PROGNAME: warning: $1" >&2
		echo "Reinstalling $CONFFILE that was backupped"
		echo "Reinstalling $CONFFILE that was moved away"
		echo "Removing obsolete conffile $CONFFILE ..."
		echo "Saving as $CONFFILE.dpkg-bak ..."
	[ -e "$CONFFILE" ] || return 0
	[ -e "$OLDCONFFILE" ] || return 0
error() {
		error "environment variable DPKG_MAINTSCRIPT_NAME is required"
	exit $code
finish_mv_conffile() {
			finish_mv_conffile "$OLDCONFFILE" "$NEWCONFFILE"
finish_rm_conffile() {
			finish_rm_conffile $CONFFILE
## Functions to remove an obsolete conffile during upgrade
## Functions to rename a conffile during upgrade
# GNU General Public License for more details.
[ $# -gt 0 ] || badusage
	[ $# -gt 0 ] || badusage
--help|help|-?|-h)
	Hint: upgrading dpkg to a newer version might help.
# http://wiki.debian.org/DpkgConffileHandling
		if [ "$1" = "abort-install" -o "$1" = "abort-upgrade" ] &&
		if [ "$1" = "configure" ] && [ -n "$2" ] &&
		if [ "$1" = "install" -o "$1" = "upgrade" ] && [ -n "$2" ] &&
		if [ "$1" = "purge" ]; then
	if [ -e "$CONFFILE.dpkg-backup" ]; then
	if [ -e "$CONFFILE.dpkg-remove" ]; then
	if [ "$LASTVERSION" = "--" ]; then
	if [ "$md5sum" = "$old_md5sum" ]; then
	if [ "$md5sum" != "$old_md5sum" ]; then
	if [ -n "$DPKG_DEBUG" ]; then
	if [ "$PACKAGE" = "--" -o -z "$PACKAGE" ]; then
	if [ -z "$DPKG_MAINTSCRIPT_NAME" ]; then
	if [ -z "$DPKG_MAINTSCRIPT_PACKAGE" ]; then
# it under the terms of the GNU General Public License as published by
		LASTVERSION=""
	      "LASTVERSION=$LASTVERSION ACTION=$1 PARAM=$2"
	later for copying conditions. There is NO warranty.
l Hertzog <hertzog@debian.org>
	local CONFFILE="$1"
	local LASTVERSION="$2"
	local LASTVERSION="$3"
	local md5sum="$(md5sum $CONFFILE | sed -e 's/ .*//')"
	local NEWCONFFILE="$2"
	local OLDCONFFILE="$1"
	local old_md5sum="$(dpkg-query -W -f='${Conffiles}' $PACKAGE | \
	local PACKAGE="$2"
	local PACKAGE="$3"
	local PACKAGE="$4"
# Main code
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	mv_conffile "$@"
mv_conffile() {
mv_conffile)
		mv "$CONFFILE.dpkg-backup" "$CONFFILE"
		mv "$CONFFILE.dpkg-remove" "$CONFFILE"
  mv_conffile <old-conf> <new-conf> [<last-version> [<package>]]
		mv -f "$CONFFILE" "$CONFFILE.dpkg-backup"
		mv -f "$CONFFILE" "$CONFFILE.dpkg-remove"
		mv -f "$CONFFILE.dpkg-backup" "$CONFFILE.dpkg-bak"
	mv -f "$NEWCONFFILE" "$NEWCONFFILE.dpkg-new"
	mv -f "$OLDCONFFILE" "$NEWCONFFILE"
	[ -n "$1" ] || error "maintainer script parameters are missing"
		   [ -n "$2" ] &&
	[ -n "$DPKG_MAINTSCRIPT_NAME" ] || \
	[ -n "$PACKAGE" ] || error "couldn't identify the package"
	      "of $DPKG_MAINTSCRIPT_PACKAGE"
		PACKAGE="$DPKG_MAINTSCRIPT_PACKAGE"
	postinst)
	postrm.
	postrm)
	preinst)
prepare_mv_conffile() {
			prepare_mv_conffile "$OLDCONFFILE" "$PACKAGE"
prepare_rm_conffile() {
			prepare_rm_conffile "$CONFFILE" "$PACKAGE"
PROGNAME=$(basename $0)
	$PROGNAME: error: command $command is unknown
	Remove obsolete conffile. Must be called in preinst, postinst and
	Rename a conffile. Must be called in preinst, postinst and postrm.
	Returns 0 (success) if the given command is supported, 1 otherwise.
	rm_conffile "$@"
rm_conffile() {
rm_conffile)
  rm_conffile <conffile> [<last-version> [<package>]]
	rm_conffile|mv_conffile)
			rm -f "$CONFFILE.dpkg-bak" "$CONFFILE.dpkg-remove" \
		rm -f "$CONFFILE.dpkg-remove"
	rm -f $OLDCONFFILE.dpkg-remove
		sed -n -e "\' $CONFFILE ' { s/ obsolete$//; s/.* //; p }")"
	# Skip remaining parameters up to --
supports)
  supports <command>
# The conffile related functions are inspired by
# the Free Software Foundation; either version 2 of the License, or
	This is free software; see the GNU General Public License version 2 or
# This program is distributed in the hope that it will be useful,
# This program is free software; you can redistribute it and/or modify
# This script is documented in dpkg-maintscript-helper(1)
usage() {
Usage: $PROGNAME <command> <parameter>... -- <maintainer-script-parameter>...
--version)
version="1.16.1.2"
warning() {
		warning "environment variable DPKG_MAINTSCRIPT_NAME missing"
		warning "environment variable DPKG_MAINTSCRIPT_PACKAGE missing"
	while [ "$1" != "--" -a $# -gt 0 ]; do shift; done
# You should have received a copy of the GNU General Public License
