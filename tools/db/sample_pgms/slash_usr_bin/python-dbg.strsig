|{{{{{{{{||||||||}}~~~~
           
                                                                                                                                
-----   ----   ---------   -------------  ------------
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
////////
/////////
//////////
////////////
/////////////
//////////////
///////////////
////////////////
/////////////////
//////////////////
///////////////////
//////////////////////
///////////////////////
////////////////////////
//////////////////////////
///////////////////////////
////////////////////////////
/////////////////////////////
//////////////////////////////
///////////////////////////////
/////////////////////////////////
//////////////////////////////////
///////////////////////////////////
////////////////////////////////////
/////////////////////////////////////
////////////////////////////////////////
/////////////////////////////////////////
//////////////////////////////////////////
///////////////////////////////////////////
////////////////////////////////////////////
/////////////////////////////////////////////
//////////////////////////////////////////////
///////////////////////////////////////////////
////////////////////////////////////////////////
/////////////////////////////////////////////////
//////////////////////////////////////////////////
///////////////////////////////////////////////////
////////////////////////////////////////////////////
/////////////////////////////////////////////////////
//////////////////////////////////////////////////////
/////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
""""""""
"""""""""""
""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
))))))))
{"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""|@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@}~
{{{{{{{{
{{{{{{{{||||||||{{{{{{
{{{{{{{{||||||||{{{{{{{{||||||||{{{{{{
}}}}}}}}}}~}}~}}}}}}}}}}}}}}}}}}}

+ +"+$+&+(+*+,+
										
00000000
00:00:00:00:00:00
00000000000000000000000000000000
0 0"0$0&0(0*0,0.00020406080:0<0>0
00:00:00:FF:FF:FF
]00^_0`abcdef
>>> (0.0).as_integer_ratio()
0.0 cannot be raised to a negative power
0.0 to a negative or complex power
%&'()*+,-./01
 !"#$%&'()*+,-./0123
0////123123123
 !"#$}%&'()*+},-./}}}}0123456}789:;<}}=>?}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}!"#$%&'()*+,-012345689@ABCDEFGHIJKLMNPQRSTUVXYZ[`abcdefhijklmpqr
0123456789abcdef
 !""#$%&'"""()*+,-./0123456789:;<=>?@@@ABC@@@DEF@@@@@@G
 !"#$%&'()))*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNNOPQRS
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUV
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
>>> (-0.1).hex()
.+0+2+4+
&*(***,*.*0*2*4*6*8*:*<*
( ("($(&(((*(,(.(0(2(4(6(8(:(<(>(@(B(D(F(H(J(L(N(P(R(T(V(X(Z(\(^(`(b(d(
- -"-$-&-(-*-,-.-0-2-4-6-8-:-<->-@-B-D-F-H-J-L-N-P-R-T-V-X-Z-\-^-`-b-d-f-h-j-l-n-p-r-t-v-x-z-|-~-
, ,",$,&,(,*,,,.,0,2,4,6,8,:,<,>,@,B,D,F,H,J,L,N,P,R,T,V,X,Z,\,^,`,b,d,f,h,j,l,n,p,r,t,v,x,z,|,~,
/ /"/$/&/(/*/,/./0/2/4/6/8/:/</>/@/B/D/F/H/J/L/N/P/R/T/V/X/Z/\/^/`/b/d/f/h/j/l/n/p/r/t/v/x/z/|/~/
. .".$.&.(.*.,...0.2.4.6.8.:.<.>.@.B.D.F.H.J.L.N.P.R.T.V.X.Z.\.^.`.b.d.f.h.j.l.n.p.r.t.v.x.z.|.~.
' '"'$'&'('*','.'0'2'4'6'8':'<'>'@'B'D'F'H'J'L'N'P'R'T'V'X'Z'\'^'`'b'd'f'h'j'l'n'p'r't'v'x'z'|'~'
) )")$)&)()*),).)0)2)4)6)8):)<)>)@)B)D)F)H)J)L)N)P)R)T)V)X)Z)\)^)`)b)d)f)h)j)l)n)p)r)t)v)x)z)|)~)
& &"&$&&&(&*&,&.&0&2&4&6&8&:&<&>&@&B&D&F&H&J&L&N&P&R&T&V&X&Z&\&^&`&b&d&f&h&j&l&n&p&r&t&v&x&z&|&~&
%02X:%02X:%02X:%02X:%02X:%02X
	!	$	'	*	-	0	3	6	9	<	?	B	E	
 ! $ ' * - 0 3 6 9 < ? B E H K N Q T W Z ] ` c f i m q u y } 
04:56:57
0. all function calls
@0B0D0F0H0J0L0N0P0R0T0V0X0Z0\0^0`0b0d0f0h0j0l0n0p0r0t0v0x0z0|0~0
'0b100101'
0 <= d && d < 15
0 <= from && from < d->d_nstates
0 <= mode && mode <= 2
0 <= n && n <= 4
0 <= n && n <= m
0 (offset from start of file, offset should be >= 0); other values are 1
0 <= op && op <= 5
0 <= (((PyVarObject*)(self))->ob_size)
    0 - relative to the start of the file (SEEK_SET)
0 <= result && result <= 2
0 < scale && scale <= 53 - 1
    (0, seq[0]), (1, seq[1]), (2, seq[2]), ...
0 < size
0 <= to && to < d->d_nstates
-0x0.0p+0
0x0.0p+0
'0x1.921f9f01b866ep+1'
'-0x1.999999999999ap-4'
0X for hexadecimal.  If base is 16, a preceding 0x or 0X is
0x or 0X is accepted.  A trailing L or l is not accepted,
-0x%sp%c%d
0x%sp%c%d
0 <= x && x < 16
>>> (10.0).as_integer_ratio()
'%100s' does not have the buffer interface
%.100s.__format__ must return string or unicode, not %.100s
'%.100s' object has no attribute '%.200s'
'%.100s' object has no attributes (%s .%.100s)
'%.100s' object has only read-only attributes (%s .%.100s)
10. Number of stack pops performed by call_function()
1!1%1)1-111315181
[1]1_1a1c1e1g1i1k1m1o1q1s1u1w1y1{1}1
((((1+2)+3)+4)+5).  If initial is present, it is placed before the items
%.150s%s takes %s %d argument%s (%ld given)
1. calls to PyFunction_Type objects
1 if summer time is in effect, 0 if not, and -1 if unknown
-1 <= lastofs && lastofs < ofs && ofs <= n
1 + nlen <= ((Py_ssize_t)(((size_t)-1)>>1)) - plen
1 <= ((Py_ssize_t)(((size_t)-1)>>1)) - nlen
    1 - relative to the current buffer position (SEEK_CUR)
1 <= x_size && x_size <= (Py_ssize_t)(sizeof(x_digits)/sizeof(digit))
%.200s() 
%.200s%.200s argument after ** must be a mapping, not %.200s
%.200s%.200s argument after * must be a sequence, not %200s
%.200s attribute must be str
%.200s attribute must be unicode
%.200s attribute not set
%.200s.__dict__ is not a dictionary
%.200s() got an unexpected keyword argument '%.400s'
%.200s() got multiple values for keyword argument '%.400s'
%.200s instance has no __call__ method
%.200s() keywords must be strings
'%.200s' object cannot be interpreted as an index
'%.200s' object can't be concatenated
'%.200s' object can't be repeated
'%.200s' object does not support indexing
'%.200s' object does not support item assignment
'%.200s' object does not support item deletion
'%.200s' object doesn't support item deletion
'%.200s' object doesn't support slice assignment
'%.200s' object doesn't support slice deletion
'%.200s' object has no attribute '__getitem__'
%.200s object is not an iterator
'%.200s' object is not callable
'%.200s' object is not iterable
'%.200s' object is unsliceable
%.200s%s got multiple values for keyword argument '%.200s'
%.200s%s takes at least one argument
%.200s%s takes no arguments
%.200s() takes exactly one argument (%d given)
%.200s() takes exactly one argument (%zd given)
%.200s() takes no arguments (%d given)
%.200s() takes no arguments (%zd given)
%.200s() takes no keyword arguments
%.200s() takes %s %d argument%s (%d given)
2047.984375
2!2#2%2'2)2+2-2/21232527292;2=2?2A2C2E2G2I2K2M2O2Q2S2U2W2Y2[2]2_2a2c2e2g2i2k2m2o2q2s2u2w2y2{2}2
./%-.255s
! !#!&!)!,!/!2!5!8!;!>!A!D!G!J!M!P!S!V!Y!\!_!b!e!h!k!n!q!t!w!z!}!
>>> (-.25).as_integer_ratio()
$"$&$*$.$2$6$:$>$B$F$J$N$R$V$Z$^$b$f$j$n$r$v$z$~$
#"#&#*#.#2#6#:#>#B#F#J#N#R#V#Z#^#b#f#j#n#r#v#z#~#
2 * asize <= bsize
-> %2d  %s
2nd arg must be a tuple
2. PyFunction calls that do not create an argument tuple
    2 - relative to the end of the file (SEEK_END)
2*shift + (((PyVarObject*)(t1))->ob_size) <= (((PyVarObject*)(ret))->ob_size)
2-tuple; but raise KeyError if D is empty.
>>> 3.14159.hex()
%.32s(%.32s)
3!3#3%3'3)3+3-3/31333537393;3=3?3A3C3E3G3I3K3M3O3Q3S3U3W3Y3[3]3_3a3c3e3g3i3k3m3o3q3s3u3w3y3{3}3
>>> (37).bit_length()
"""%"("+"/"3"7":"="@"C"F"I"L"O"R"U"X"["^"a"d"g"j"m"p"s"v"y"|"
>>> (37L).bit_length()
3A*-3Alq3A
3bBc:dEhiJm:OQ:RsStuUvVW:xX?
3. PyFunction calls that do not create an argument tuple
-3     : warn about Python 3.x incompatibilities that 2to3 cannot trivially fix
'%.400s' codec can't decode byte 0x%s in position %zd: %.400s
'%.400s' codec can't decode bytes in position %zd-%zd: %.400s
'%.400s' codec can't encode characters in position %zd-%zd: %.400s
'%.400s' codec can't encode character u'\%s' in position %zd: %.400s
%.400s constructor takes %s%zd positional argument%s
(4 * 1024) * arenaobj->nfreepools == (256 << 10)
4!4#4%4'4)4+4-4/41434547494;4=4?4A4C4E4G4I4K4M4O4Q4S4U4W4Y4[4]4_4a4c4e4g4i4k4m4o4q4s4u4w4y4{4}4
?456789:;<=
-4.9406564584124654e-324
, %.4fs elapsed
(4kB pages are common; using multiples of 4096 for the stack size is
4, or 8 bytes in size, RuntimeError is raised.
4. PyMethod calls
%.500s() takes a dict as second arg, if any
%.500s() takes an at least %zd-sequence (%zd-sequence given)
%.500s() takes an at most %zd-sequence (%zd-sequence given)
%.500s() takes a %zd-sequence (%zd-sequence given)
%.50s instance has no attribute '%.400s'
'%.50s' object attribute '%.400s' is read-only
'%.50s' object attribute '__dict__' is read-only
'%.50s' object has no attribute '%.400s'
5.2.0 which is publically available from ftp://ftp.unicode.org/.
5!5#5%5'5)5+5-5/51535557595;5=5?5A5C5E5G5I5K5M5O5Q5S5U5W5Y5[5]5_5a5c5e5g5i5k5m5o5q5s5u5w5y5{5}5
5. PyMethod calls on bound methods
%5u %6u %11zu %15zu %13zu
6+8+:+<+>+
6. PyType calls
777kkkkkkkkkkkkkkkk
7. PyCFunction calls
%.80s (%.80s) %.80s
8. generator calls
9. All other calls
a 11-tuple where the entries in the tuple are counts of:
a2b_base64
a2b_hex(hexstr) -> s; Binary data of hexadecimal representation.
aaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaa
\]]^_`aaabcd
  a=a and type(a[0]) or '(what)'
AABAAFILI
.Aarray.array
!a->asname
a __bases__ item causes an inheritance cycle
ABBREVIATIO
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
a binary format. The format is specific to Python, but independent of
ABKHASIA
able to handle UnicodeDecodeErrors.
able to handle ValueErrors.
ABMON_10
ABMON_11
ABMON_12
abort() -> does not return!
Abort the interpreter immediately.  This 'dumps core' or otherwise fails
about the peer certificate.
abs(a) -- Same as abs(a).
abs(number) -> number
absolute_import
absolute or relative imports.  -1 is the original strategy of attempting
absolute value too large
Abstract classes can override this to customize issubclass().
__abstractmethods__
ABUNDANCE
  - a bytes or a bytearray object
ACCENT-STACCATO
  ACCEPT.
accept2dyear
accept() -- accept a connection, returning new socket and client address
accepted.
 accepted by asctime(), mktime() and strftime().  May be considered as a
accept() -> (socket object, address info)
Accessing non-existent array segment
accessing non-existent buffer segment
accessing non-existent bytes segment
accessing non-existent string segment
accessing non-existent unicode segment
access(path, mode) -> True if granted, False otherwise
Access to the Unix group database.
according to the password database.  Check both databases to get
accumbits == 0
accumbits < 15
accumbits < 8
accumbits >= basebits
ACCUMULATION
ACKNOWLEDGE
A class method receives the class as implicit first argument,
a CodecInfo object.
a common type, using the same rules as used by arithmetic operations.
acosh(x)
acquire_lock
(acquire_lock() is an obsolete synonym)
acquire_lock() -> None
acquire() -- lock the lock, possibly blocking until it can be obtained
Acquires the interpreter's import lock for the current thread.
acquire([wait]) -> None or bool
ACROPHONI
ACUTE-GRAVE-ACUTE
ACUTE-MACRON
add(a, b) -- Same as a + b.
Add an element to a set.
Add an element to the left side of the deque.
Add an element to the right side of the deque.
Add a '+' to the mode to allow simultaneous reading and writing.
Add a 'U' to mode to open the file for input with universal newline
Adding FIRST sets ...
ADDRESSE
address family; it defaults to AF_INET.  The type argument specifies
address family mismatched
address : %p
add_subclass
a debugger from a checkpoint, to recursively debug some other code.
A defaultdict compares equal to a dict with the same items.
         a defense against denial-of-service attacks
adjust_tp_compare
adler32(string[, start]) -- Compute an Adler-32 checksum.
adler32(string[, start]) -- Compute an Adler-32 checksum of string.
AEDA-PILLA
AEEYANNA
AELA-PILLA
AESCULAPIUS
A failure in the SSL library occurred
AF_APPLETALK
AF_ATMPVC
AF_ATMSVC
AF_BLUETOOTH
AF_BRIDGE
AF_DECnet
AF_ECONET
A file descriptor is either a socket or file object, or a small integer
a file or socket object.
AF_INET6
a floating point number for subsecond precision.
a floating point number to specify fractions of seconds.  If it is absent
a float is required
AF_NETBEUI
AF_NETLINK
AF_NETROM
AFOREMENTIONED
AF_PACKET
AF_PPPOX
AF_ROUTE
AF_SECURITY
After calling this function, some of the input data may still
After calling this function, some of the input data may still be stored in
 after coercion
After, f=attrgetter('name'), the call f(r) returns r.name.
After, f=itemgetter(2), the call f(r) returns r[2].
After, f = methodcaller('name'), the call f(r) returns r.name().
_after_fork
After, g=attrgetter('name', 'date'), the call g(r) returns (r.name, r.date).
After, g=itemgetter(2,5,3), the call g(r) returns (r[2], r[5], r[3])
After, g = methodcaller('name', 'date', foo=1), the call g(r) returns
After, h=attrgetter('name.first', 'name.last'), the call h(r) returns
after minimizing
Afterwards, return every element until the iterable is exhausted.
AF_UNIX if defined on the platform; otherwise, the default is AF_INET.
AF_UNIX path too long
AF_UNSPEC
AF_WANPIPE
AGGRAVATE
AGGRAVATION
A hash represents the object used to calculate a checksum of a
a = iadd(a, b) -- Same as a += b.
AI_ADDRCONFIG
a = iand(a, b) -- Same as a &= b.
AI_CANONNAME
a = iconcat(a, b) -- Same as a += b, for a and b sequences.
a = idiv(a, b) -- Same as a /= b when __future__.division is not in effect.
a = ifloordiv(a, b) -- Same as a //= b.
a[i:] have e >= x.  So if x already appears in the list, i points just
a[i:] have e > x.  So if x already appears in the list, i points just
a = ilshift(a, b) -- Same as a <<= b.
a = imod(a, b) -- Same as a %= b.
a = imul(a, b) -- Same as a *= b.
AI_NUMERICHOST
AI_NUMERICSERV
a = ior(a, b) -- Same as a |= b.
AI_PASSIVE
a = ipow(a, b) -- Same as a **= b.
a = irepeat(a, b) -- Same as a *= b, where a is a sequence, and b is an integer.
AIRPLANE
a = irshift(a, b) -- Same as a >>= b.
a = isub(a, b) -- Same as a -= b.
a = itruediv(a, b) -- Same as a /= b when __future__.division is in effect.
AI_V4MAPPED
a = ixor(a, b) -- Same as a ^= b.
AKTIESELSKAB
alarm() -- cause SIGALRM after a specified time [Unix only]
alarm(seconds)
a lazy resolving of symbols when importing a module, if called as
algorithm name.
(aliases) && _asdl_i < (aliases)->size
Alias for bisect_right().
alias_for_import_name
Alias for insort_right().
'=' alignment flag is not allowed in complex format specifier
'=' alignment not allowed in string format specifier
AL-LAKUNA
ALLIANCE
All is well if assertions don't fail.
all(iterable) -> bool
__alloc__
allocate
allocated consecutive numbers starting at 1, this behavior should not
(allocate() is an obsolete synonym)
allocate_lock
allocate_lock() -> lock object
allowing individual elements to have successive repeats.
All Rights Reserved.
A load persistent id instruction was encountered,
A lock is not owned by the thread that locked it; another thread may
A lock object is a synchronization primitive.  To create a lock,
ALPAPRAAN
ALPAPRANA
'alpha', 'beta', 'candidate', or 'release'
         also PYTHONWARNINGS=arg
ALT_DIGITS
ALTERNAT
Alternate chain() contructor taking a single iterable argument
Alternate form (#) not allowed in complex format specifier
Alternate form (#) not allowed in float format specifier
Alternate form (#) not allowed in string format specifier
ALTERNATIO
ALTERNATIV
altzone -- difference in  seconds between UTC and local DST time
Always return None
Always use "import string" rather than referencing
AMALGAMATIO
a "mirrored" character in bidirectional text, 0 otherwise.
amongst other threads that exist simultaneously.
AMPEREQUAL
AMPERSAND
analyze_block
analyze_cells
an array of basic values: characters, integers, floating point
an array of some other type.
ANATRICHISMA
and_(a, b) -- Same as a & b.
   and bypass PyEval_EvalCodeEx()
               and delivers SIGVTALRM upon expiration
and_expr
and keyword arguments taken from the optional dictionary kwargs.
and return.  See the profiler chapter in the library manual.
and returns the part before it, the separator itself, and the
and_test
and there is at least one character in B, False otherwise.
and there is at least one character in S, False otherwise.
and the rest lower-cased.
and the return value reflects whether the lock is acquired.
and vice versa.
an empty dictionary.  Otherwise returns a dict containing information
An entry whose name starts with '+' or '-' represents an instruction
a new string.  Receive up to buffersize bytes from the socket.  If buffersize 
a new-style class can't have only classic bases
a new value when a key is not present, in __getitem__ only.
An exception is raised if the entry asked for cannot be found.
ANGKHANKHU
  an_input_stream.seek(0)           # OK, start over
  an_input_stream=StringIO(a_string)
an integer corresponding to the return value of the ioctl call in the C
an integer is required
an integer or string of size 1 is required
an int variable for demonstration purposes
  - an iterable yielding integers in range(256)
an iterator instead of a list and that it stops when the shortest
ANNOTATIO
An optional starting value can be specified.  The returned checksum is
An optional string argument may be provided and will be
another exception is being handled.
  an_output_stream=StringIO()
  an_output_stream.write(some_stuff)
ANTARGOMUKHA
ANTICLOCKWIS
ANTICLOCKWISE-ROTATE
ANTIFONIA
ANTIKENOKYLISMA
ANTIKENOMA
ANTIRESTRICTION
ANUDATTA
a number is required
ANUSVARA
ANUSVARAYA
any descriptors that have events or errors to report.
any(iterable) -> bool
any modules.
  - any object implementing the buffer API.
any objects or importing any modules.  It can also be used to find all
anything else -- the callable Python object used as a handler
ao->nextarena->prevarena == ao
ao ->nextarena == ((void *)0) || ao->nextarena->address != 0
ao->nextarena == ((void *)0) || ao->nextarena->prevarena == ao
ao->nextarena == ((void *)0) || ao->prevarena == ao->nextarena->prevarena
ao->nextarena == ((void *)0) || nf <= ao->nextarena->nfreepools
ao->prevarena->nextarena == ao
ao->prevarena->nextarena == ao->nextarena
ao->prevarena == ((void *)0) || ao->prevarena->address != 0
ao->prevarena == ((void *)0) || nf > ao->prevarena->nfreepools
a partial object's dictionary may not be deleted
 API '%c'
api_version
APODEXIA
APOSTROFO
APOSTROFOS
APOSTROPHE
APOTHEMA
Append all the elements from the iterator or sequence to the
append() -- append a new item to the end of the array
Append a single item to the end of B.
Append items to array from list.
 Append items to the end of the array.
appendleft
Append new value x to the end of the array.
Appends items from the string, interpreting it as an array of machine
append Unicode data to an array of some other type.
append(x)
APPLICATION
applications and is especially useful in conjunction with the
Apply a function of two arguments cumulatively to the items of a sequence,
apply() arg 2 expected sequence, found %s
apply() arg 3 expected dictionary, found %s
apply() not supported in 3.x; use func(*args, **kwargs)
apply(object[, args[, kwargs]]) -> value
APPROACH
APPROACHE
APPROXIMATE
APPROXIMATEL
APYTHONMALLOCSTATS
AQUARIUS
ARABIC-INDI
ARAEA-EO
ARCHAION
archive.
archive path is empty
archive path too long
  Arc to state %d, label %s
ARDHAVISARGA
'__' are also provided for convenience.
are deleted.
are exhausted, the fillvalue is substituted in their place.  The fillvalue
arenaobj->address == 0
# arenas allocated current
# arenas allocated total
# arenas highwater mark
&arenas[pool->arenaindex] == usable_arenas
# arenas reclaimed
arg1 must be open file
arg 3 (name) must be None or string
arg 4 (defaults) must be None or tuple
arg 5 (closure) expected cell, found %s
arg 5 (closure) must be None or tuple
arg 5 (closure) must be tuple
arg ...: arguments passed to program in sys.argv[1:]
arg function
arglen >= 0
arg < len_consts
arg must be list
arg must be open file
ARGOSYNTHETON
ARGOTERI
args[0] from __newobj__ args has no __new__
args[0] from __newobj__ args has the wrong class
(args) && _asdl_i < (args)->size
args may not be deleted
    args: tuple or list of arguments
    args: tuple or list of strings
args != ((void *)0) && ((((((PyObject*)(args))->ob_type))->tp_flags & ((1L<<26))) != 0)
argument
argument %d
argument %d to map() must support iteration
Argument expected for the -%c option
argument for 'p' must be a string
argument for 's' must be a string
Argument given by name ('%s') and position (%d)
argument is given, will pop the last value.
argument list must be a tuple
argument must be an int, or have a fileno() method.
argument must be callable
argument must be iterable
argument must have 'read' and 'readline' attributes
argument must have 'write' attribute
Argument offset is a byte count.  Optional argument whence defaults to
argument of type '%.200s' is not iterable
arguments
arguments 1-3 must be sequences
arguments; each contains the subset of the corresponding file descriptors
argument, see the Unix manual.  Return the number of bytes
argument, see the Unix manual.  This calls send() repeatedly
argument, see the Unix manual.  When no data is available, block until
arguments field "args" must be a list, not a %.200s
arguments field "defaults" must be a list, not a %.200s
arguments start and end are interpreted as in slice notation.
argument to __format__ must be unicode or str
argument to reversed() must be a sequence
argument will be truncated towards zero (this does not include a string
argv -- command line arguments; argv[0] is the script pathname if known
arg->v.Name.ctx == Param || (arg->v.Name.ctx == Store && !toplevel)
arg != ((void *)0)
arg->v.Tuple.ctx == Store
ARISTERA
arith_expr
ArithmeticError
AROUND-PROFILE
ARPEGGIAT
AR-RAHEEM
AR-RAHMA
Arrange for SIGALRM to arrive after the given number of seconds.
array.  Also called as read.
array.array()
array assignment index out of range
array('%c', 
array('%c')
array index out of range
array.index(x): x not in list
array indices must be integer
array indices must be integers
array item must be unicode character
arrayiterator
arrayiter_next
array.read() not supported in 3.x; use array.fromfile()
array.remove(x): x not in list
array_reverse
Arrays represent basic values and behave very much like lists, except
array.tostring().decode() to obtain a unicode string from
ArrayType
array(typecode [, initializer]) -> array
array(typecode [, initializer]) -- create a new array
array.write() not supported in 3.x; use array.tofile()
ARROWHEA
ARROWHEAD
ARROW-TAIL
ASCENDIN
(ascii) -> bin. Decode a line of base64 data
(ascii) -> bin. Decode a line of uuencoded data
ascii -> bin, done. Decode .hqx coding
ascii_decode
ascii_encode
ascii_len >= 0
asctime() -- convert time tuple to string
asctime([tuple]) -> string
asdl_int_seq_new
asdl_seq_new
  a=self.args
as float. If no such value is defined, default is returned, or, if
A signal handler function is called with two arguments:
a signed integer.
A simple fast partial StringIO replacement.
asinh(x)
as in slice notation.
as integer. If no such value is defined, default is returned, or, if
as_integer_ratio
asize > 70
a_size >= shift_digits
ASN1_INTEGER_get
ASN1_item_d2i
ASN1_STRING_to_UTF8
ASN1_TIME_print
A socket object represents one endpoint of a network connection.
ASPIRATE
as Python strings. It uses format strings (explained below) as compact
assemble_emit
assemble_lnotab
__assert_fail
ASSERTION
AssertionError
Assertion failed.
assertion is always true, perhaps remove parentheses?
assert_stmt
Assign field "targets" must be a list, not a %.200s
  Assigning to sys.exitfunc is deprecated; use the atexit module instead.
assignment to True or False is forbidden in 3.x
assignment to yield expression not possible
assign to
assign_version_tag
   as specifying the -R option: a random value is used to seed the hashes of
Assumes IEEE-754 floating point arithmetic.
Assuming a sequence of length len, calculate the start and stop
_ast.AST
A static method does not receive an implicit first argument.
ASTERISCUS
ASTERISK
ASTERISM
ast_error_finish
ast_for_arguments
ast_for_assert_stmt
ast_for_atom
ast_for_augassign
ast_for_call
ast_for_class_bases
ast_for_classdef
ast_for_comp_op
ast_for_comprehension
ast_for_decorated
ast_for_decorator
ast_for_decorators
ast_for_del_stmt
ast_for_dictcomp
ast_for_dotted_name
ast_for_except_clause
ast_for_exec_stmt
ast_for_expr
ast_for_exprlist
ast_for_expr_stmt
ast_for_flow_stmt
ast_for_for_stmt
ast_for_funcdef
ast_for_genexp
ast_for_global_stmt
ast_for_ifexpr
ast_for_if_stmt
ast_for_import_stmt
ast_for_itercomp
ast_for_listcomp
ast_for_power
ast_for_print_stmt
ast_for_setcomp
ast_for_slice
ast_for_stmt
ast_for_suite
ast_for_testlist
ast_for_testlist_comp
ast_for_trailer
ast_for_try_stmt
ast_for_while_stmt
ast_for_with_item
ast_for_with_stmt
AST identifier must be of type str
ASTROLOGICA
A structseq holding information about the float type. It contains low level
A struct sequence that holds information about Python's
AST string must be of type str or unicode
A subthread can use this function to interrupt the main thread.
as well as any other name registered with codecs.register_error that is
ASYMPTOTICALL
atan2(y, x)
atanh(x)
\ at end of string
  - a text string encoded using the specified encoding
ATHAPASCA
ATHARVAVEDI
A thread's identity may be reused for another thread after it exits.
at least
at least 
at least one byte is available or until the remote end is closed.  When
at least one cased character in B, False otherwise.
at least one cased character in S, False otherwise.
at most 
At most 45 bytes at once
atof(s) -> float
atoi() literal too large: %.200s
atoi(s [,base]) -> int
atol(s [,base]) -> long
        at p-%d: 0x%02x
        at tail+%d: 0x%02x
Attempted relative import beyond toplevel package
Attempted relative import in non-package
attempt to assign array of size %zd to extended slice of size %zd
attempt to assign bytes of size %zd to extended slice of size %zd
attempt to assign sequence of size %zd to extended slice of size %zd
Attempt to getvalue() a non-list-based pickler
ATTENTION
ATTHACAN
attrgetter
attrgetter()
attrgetter(attr, ...) --> attrgetter object
attrgetter_call
Attribute
attribute '%.300s' of '%.100s' objects is not readable
attribute '%.300s' of '%.100s' objects is not writable
attribute deletion is not supported
AttributeError
attribute name must be a string
attribute name must be string, not '%.200s'
Attribute not found.
attribute of type '%.200s' is not callable
_attributes
Attributes:
<attribute '%s' of '%s' objects>
attribute.  Typical use is to define a managed attribute x:
attribute value type must be bool
attrname
a tuple of classes, and the third a dictionary.
a tuple of functions (encoder, decoder, stream_reader, stream_writer)
a type 'u' array; otherwise a ValueError is raised.  Use
Aug  1 2012
augassign
AUGMENTATIO
AugStore
a UnicodeDecodeError.  Other possible values are 'ignore' and 'replace'
a UnicodeDecodeError. Other possible values are 'ignore' and 'replace'
a UnicodeEncodeError. Other possible values are 'ignore', 'replace' and
AURAMAZDAA
AURAMAZDAA-2
AURAMAZDAAHA
autoInterpreterState
automatically hashed.
auto-releasing thread-state, but no thread-state for this thread
AVAGRAHA
available
available from the fcntl module.  The argument arg is optional, and
AVAKRAHASANYA
a ValueError. Other possible values are 'ignore' and 'replace'
a ValueError. Other possible values are 'ignore', 'replace' and
A value of None indicates that new socket objects have no timeout.
A version of recv() that stores its data into a buffer rather than creating 
a zipfile, or to a specific path inside a zipfile. For example, it can be
b == 0 && f == 0
b2a_base64
-b2a_hex(data) -> s; Hexadecimal representation of binary data.
b2a_qp(data, quotetabs=0, istext=1, header=0) -> s; 
B7"4<"4H"4D"4I"4J"4
!b->ab_next
b->ab_offset + size <= b->ab_size
BACKQUOTE
backquote not supported in 3.x; use repr()
BACKSLAS
BACKSLASH
backslashreplace
backslashreplace_errors
BACKSPACE
BACK-TILTE
bad argument to internal function
bad argument type for built-in operation
bad bluetooth address
bad char in struct format
bad/closed file object
Bad code object in .pyc file
Bad compression level
bad format char passed to Py_BuildValue
bad format string: %.200s
bad ID: Allocated using API '%c', verified using API '%c'
bad leading pad byte
bad local file header in %s
Bad magic number in %.200s
Bad magic number in .pyc file
bad marshal data (digit out of range in long)
bad marshal data (list size out of range)
bad marshal data (long size out of range)
bad marshal data (set size out of range)
bad marshal data (string ref out of range)
bad marshal data (string size out of range)
bad marshal data (tuple size out of range)
bad marshal data (unicode size out of range)
bad marshal data (unknown type code)
bad marshal data (unnormalized long data)
bad memberdescr type
bad memberdescr type for %s
bad operand type for abs(): '%.200s'
bad operand type for unary ~: '%.200s'
bad operand type for unary -: '%.200s'
bad operand type for unary +: '%.200s'
bad pickle data
BadPickleGet
bad pyc data
bad RAISE_VARARGS oparg
bad trailing pad byte
bad typecode (must be c, b, B, u, h, H, i, I, l, L, f or d)
BAHIRGOMUKHA
B.__alloc__() -> int
BALLOON-SPOKE
B.append(int) -> None
BARIYOOSAN
b;array item must be integer
__base__
base >= 2 && base <= 32 && (base & (base - 1)) == 0
base >= 2 && base <= 36
BASEBALL
base == b->tp_base
Base class for all standard Python exceptions that do not represent
Base class for arithmetic errors.
Base class for I/O related errors.
Base class for lookup errors.
Base class for warning categories.
Base class for warnings about bytes and buffer related problems, mostly
Base class for warnings about constructs that will change semantically
Base class for warnings about deprecated features.
Base class for warnings about dubious runtime behavior.
Base class for warnings about dubious syntax.
Base class for warnings about features which will be deprecated
Base class for warnings about probable mistakes in module imports
Base class for warnings about Unicode related problems, mostly
Base class for warnings generated by user code.
basedealloc
BaseException
BaseException_dealloc
BaseException.message has been deprecated as of Python 2.6
base <= (Py_uintptr_t) arenas[i].pool_address
__bases__
(bases) && _asdl_i < (bases)->size
__bases__ items must be classes
__bases__ must be a tuple object
bases must be types
bases && ((((((PyObject*)(bases))->ob_type))->tp_flags & ((1L<<26))) != 0)
basestring
bases != ((void *)0)
!base->tp_itemsize
base, which defaults to 10.  The string s must consist of one
__basicsize__
batch_dict
batch_dict_exact
batch_list
BATHAMASAT
bBhHiIlLqQ
B.capitalize() -> copy of B
B.center(width[, fillchar]) -> copy of B
B.count(sub [,start [,end]]) -> int
b;%c requires int or char
BDADDR_ANY
BDADDR_LOCAL
B.decode([encoding[, errors]]) -> unicode object.
:%<%>%@%B%D%F%H%J%L%
@*B*D*F*H*J*L*
B+D+F+H+J+L+N+
-B     : don't write .py[co] files on import; also PYTHONDONTWRITEBYTECODE=x
  because it is thread-safe.
    Because memory is corrupted at the start, the count of bytes requested
before minimizing
before the leftmost x already there.
BEGINNING
behavior will change in future releases of Python.
B.endswith(suffix [,start [,end]]) -> bool
be relied upon, and the number should be seen purely as a magic cookie.
best_base
be stored in internal buffers for later processing.
be used in a suid/sgid environment to test if the invoking user has the
BEVERAGE
B.expandtabs([tabsize]) -> copy of B
B.extend(iterable int) -> None
beyond the rightmost x already there
B.find(sub [,start [,end]]) -> int
BIBLE-CRE
bidirectional
bidirectional(unichr)
  >: big-endian, std. size & alignment
b.imag != 0.0
>>> bin(37)
>>> bin(37L)
binary format used in low-level network functions.
binary op %d should not be possible
binarysort
binascii
binascii_a2b_base64
binascii_a2b_hqx
binascii_a2b_uu
binascii_b2a_base64
binascii_b2a_hqx
(bin) -> ascii. Base64-code line of data
binascii.Error
binascii_hexlify
binascii.Incomplete
binascii_rlecode_hqx
binascii_rledecode_hqx
binascii_unhexlify
(bin) -> ascii. Uuencode line of data
bind(addr) -- bind the socket to a local address
bind(address)
B.index(sub [,start [,end]]) -> int
bindtextdomain
bind_textdomain_codeset
bind_textdomain_codeset(domain, codeset) -> string
bindtextdomain(domain, dir) -> string
Bind the C library's domain to codeset.
Bind the C library's domain to dir.
Bind the socket to a local address.  For IP sockets, the address is a
Binhex RLE-code binary data
bin_len >= 0
bin(number) -> string
BINOCULA
B.insert(index, int) -> None
BINSTRING pickle has negative byte count
BINUNICODE pickle has negative byte count
BIO_ctrl
BIO_free
BIO_gets
BIOHAZAR
BIO_s_file
BIO_s_mem
B.isalnum() -> bool
B.isalpha() -> bool
B.isdigit() -> bool
BISECTIN
Bisection algorithms.
bisect_left
bisect_left(a, x[, lo[, hi]]) -> index
bisect_right
bisect_right(a, x[, lo[, hi]]) -> index
B.islower() -> bool
BISMILLA
B.isspace() -> bool
B.istitle() -> bool
B.isupper() -> bool
bit_length
bits_in_accum <= 15
bits_in_accum < 15
bits_per_digit
B.join(iterable_of_bytes) -> bytes
BLACK-FEATHERE
BLACKFOO
BLACK-LETTE
B.ljust(width[, fillchar]) -> copy of B
block_alloc
block->b_ialloc == 0
block->b_ialloc > 0
block->b_ialloc >= block->b_iused
block->b_iused == 0
block->b_iused > 0
(block*)pool <= (block*)usable_arenas->address + (256 << 10) - (4 * 1024)
block_size
blocksize for filesystem I/O
blockstack_top == 0
blockstack_top > 0
block != ((void *)0)
B.lower() -> copy of B
B.lstrip([bytes]) -> bytearray
(body) && _asdl_i < (body)->size
((body)->n_type) == (300)
boolean == ((PyObject *) &_Py_TrueStruct) || boolean == ((PyObject *) &_Py_ZeroStruct)
BoolOp field "values" must be a list, not a %.200s
  ?: _Bool (requires C99; if not available, char is used instead)
bool(x) -> bool
BOOMERANG
borrow == 0
both absolute and relative imports, 0 is absolute, a positive number
both destination and source must have the buffer interface
both encoded.  When quotetabs is set, space and tabs are encoded.
BOTTOM-LIGHTE
<bound method %s.%s of %s>
bound on the entropy contained in string.  See RFC 1750.
B.partition(sep) -> (head, sep, tail)
B.pop([index]) -> int
bp != ((void *)0)
BRACKETE
BRANCHIN
'break' outside loop
break_stmt
BREAKTHROUGH
B.remove(int) -> None
B.replace(old, new[, count]) -> bytes
BREVE-MACRON
B.reverse() -> None
B.rfind(sub [,start [,end]]) -> int
B.rindex(sub [,start [,end]]) -> int
B.rjust(width[, fillchar]) -> copy of B
<broadcast>
B.rpartition(sep) -> (head, sep, tail)
B.rsplit(sep[, maxsplit]) -> list of bytearray
B.rstrip([bytes]) -> bytearray
    'b'         signed integer     1 
  (bsize, frsize, blocks, bfree, bavail, files, ffree, favail, flag, namemax),
B.__sizeof__() -> int
B.splitlines([keepends]) -> list of lines
B.split([sep[, maxsplit]]) -> list of bytearray
__bss_start
B.startswith(prefix [,start [,end]]) -> bool
B.strip([bytes]) -> bytearray
B.swapcase() -> copy of B
B.title() -> copy of B
BTPROTO_HCI
BTPROTO_L2CAP
BTPROTO_RFCOMM
BTPROTO_SCO
B.translate(table[, deletechars]) -> bytearray
buf.buf != 0 && buflen > 0
buf[buflen-1] == '5'
buffer()
buffer assignment index out of range
buffer_concat
buffer containing character data (most likely a string or an array). 
buffered, and larger numbers specify the buffer size.  The preferred way
Buffer error.
BufferError
buffer has negative size
buffer index out of range
buffer indices must be integers
buffer_info
buffer_info() -> (address, length)
buffer_info() -- return information giving the current memory info
buffering
buffer is (in effect) passed to the operating system and changes made by
(buffer is NULL)
buffer is read-only
buffer_len >= 0
(buffer_len is NULL)
buffer() not supported in 3.x
buffer object expected
buffer(object [, offset[, size]])
(buffer overflow)
buffer overflow in getpath.c's joinpath()
buffer size mismatch
buffer too small for requested bytes
buflen - decpt == ndigits+1
buf[sign] == '0'
buf[sign + 1] == 'x'
bufsize > 0 && (size_t)bufsize > strlen("nothing")
bufsize > 1
buf_ungetc
buf != ((void *)0)
Build an immutable unordered collection of unique elements.
Build an ordered collection with optimized access from its endpoints.
Build an unordered collection of unique elements.
__builtin__
built-in, frozen or special module and continue search in sys.path.
builtin_function_or_method
builtin_function_or_method order comparisons not supported in 3.x
<built-in function %s>
Built-in functions, exceptions, and other objects.
builtin_map
<built-in method %s of %s object at %p>
builtin_module_names
builtin_module_names -- tuple of module names built into this interpreter
built-in namespace.  It is recommended that user-defined exceptions
builtin_ord
__builtins__
!builtins || ((((((PyObject*)(builtins))->ob_type))->tp_flags & ((1L<<29))) != 0)
builtins != ((void *)0) && ((((((PyObject*)(builtins))->ob_type))->tp_flags & ((1L<<29))) != 0)
builtin_zip
BULLSEYE
bu_longlong
    'B'         unsigned integer   1 
B.upper() -> copy of B
BUSSYERU
 but garbage data will also be written
but it needn't be locked by the same thread that unlocks it.
but no persistent_load function was specified.
but returns an iterator.
bu_ulonglong
b != ((void *)0)
b->x[0] == 0
b->x[0] << (32 - scale) == 0
  By assigning other file objects (or objects that behave like files)
BYELORUSSIAN-UKRAINIA
bytearray
bytearray_ass_subscript
bytearray(b
bytearray_buffer_getcharbuf
bytearray_buffer_getreadbuf
bytearray_buffer_getwritebuf
bytearray(bytes_or_bytearray) -> mutable copy of bytes_or_bytearray.
bytearray_contains
bytearray_count
bytearray_extend
bytearray_find_internal
bytearray_fromhex
bytearray.fromhex(string) -> bytearray
bytearray_getbuffer
bytearray index out of range
bytearray indices must be integer
bytearray indices must be integers
bytearray_init
bytearray(int) -> bytearray.
bytearray(iterable_of_ints) -> bytearray.
bytearray_iterator
bytearrayiter_dealloc
bytearrayiter_next
bytearray_join
bytearray(memory_view) -> bytearray.
bytearray object is too large to make repr
bytearray objects and B.
bytearray_partition
bytearray_repr
bytearray_rpartition
bytearray_rsplit
bytearray_split
bytearray_splitlines
bytearray(string, encoding[, errors]) -> bytearray.
bytearray_subscript
_bytearray_tailmatch
byte array too long to convert to int
bytearray_translate
byte format requires -128 <= number <= 127
byte must be in range(0, 256)
byteorder
bytesarrayiter_length_hint
bytes B[start:end].  Optional arguments start and end are interpreted
# bytes in allocated blocks
# bytes in available blocks
# bytes lost to arena alignment
# bytes lost to pool headers
# bytes lost to quantization
byteswap
byteswap()
Byteswap all items of the array.  If the items in the array are not 1, 2,
byteswap() -- byteswap all the items of the array
bytes_warning
BytesWarning
BYZANTIN
B.zfill(width) -> copy of B
c >= -1 && c <= 1
                              cacertsfile, ciphers]) -> sslobject
CADUCEUS
calc_number_widths
calc_padding
calcsize
Calculate FIRST set for '%s'
__call__
:__call__
callable
callable-iterator
callable(object) -> bool
CallableProxyType
Call a callable object with positional arguments taken from the tuple args,
callback != ((void *)0)
Call field "args" must be a list, not a %.200s
Call field "keywords" must be a list, not a %.200s
Call func(*args), while tracing is enabled.  The tracing state is
calling %s() should have returned an instance of BaseException, not '%s'
calling the flush() method.  Otherwise, more data can still be compressed.
calliter_dealloc
call_maybe
call_method
Call readline() repeatedly and return a list of the lines so read.
call stack is not deep enough
callstats
callstats() -> tuple of integers
Call the flush() method to clear these buffers.
call the PyThread_allocate_lock() function.  Methods are:
Call the system call getpgid().
Call the system call getsid().
Call the system call setpgid().
Call the system call setsid().
Call the system initgroups() to initialize the group access list with all of
call_tracing
call_tracing(func, args) -> object
can be either found in the ctypes module, or in the DLFCN module. If DLFCN
         can be supplied multiple times to increase verbosity
CANCELLATIO
CANDRABIND
CANDRABINDU
<cannot add more blocks to the deque
cannot add more objects to bytearray
cannot add more objects to list
cannot allocate argument for RuntimeError pre-allocation
cannot allocate tuple for RuntimeError pre-allocation
cannot assign to __debug__
cannot assign to None
cannot compare sets using cmp()
cannot concatenate 'str' and '%.200s' objects
cannot convert argument to integer
cannot convert dictionary update sequence element #%zd to a sequence
cannot convert float infinity to integer
cannot convert float NaN to integer
cannot convert raw buffers
cannot copy this match object
cannot copy this pattern object
cannot create '%.100s' instances
Cannot create a consistent method resolution
cannot create weak reference to '%s' object
cannot deepcopy this match object
cannot deepcopy this pattern object
cannot delete memory
can not delete variable '%s' referenced in nested scope
cannot fit '%.200s' into an index-sized integer
cannot import name %.230s
cannot index memory using "%.200s"
cannot make memory view because object does not have the buffer interface
cannot modify read-only memory
cannot modify size of memoryview object
Cannot pass infinity to float.as_integer_ratio.
Cannot pass NaN to float.as_integer_ratio.
Cannot pre-allocate MemoryError instance
Cannot pre-allocate RuntimeError instance for recursion errors
Cannot re-init internal module %.200s
Cannot set codeset of stderr
Cannot set codeset of stdin
Cannot set codeset of stdout
Cannot specify ',' with '%c'.
Cannot specify ',' with '\x%x'.
cannot switch from automatic field numbering to manual field specification
cannot switch from manual field specification to automatic field numbering
cannot unmarshal code objects in restricted execution mode
Cannot use string as modifiable buffer
cannot use unicode as modifiable buffer
can only append array (not "%.200s") to array
can only assign an iterable
can only assign array (not "%.200s") to array slice
can only assign non-empty tuple to %s.__bases__, not ()
can only assign string to %s.__name__, not '%s'
can only assign tuple to %s.__bases__, not %s
can only compare to a set
can only concatenate list (not "%.200s") to list
can only concatenate tuple (not "%.200s") to tuple
can only extend array with array (not "%.200s")
can only extend with array of same kind
can only join an iterable
can only join an iterable of bytes (item %ld has type '%.100s')
can only set %s format to 'unknown' or the detected platform value
can't add __builtins__ to __main__
can't allocate lock
Can't allocate memory for compression object
Can't allocate memory for decompression object
Can't allocate memory to compress data
Can't alloc dest '%s'
can't apply this %s to %s object
can't assign sys.argv
can't assign sys.path
can't concat %.100s to %.100s
can't convert complex to float
can't convert complex to int
can't convert complex to long
can't convert negative long to unsigned
can't convert negative number to unsigned long
can't convert negative value to unsigned long
can't create __main__ module
# can't create %s
can't create sys.path
can't decompress data; zlib not available
can't delete attribute
can't delete __class__ attribute
can't delete numeric/char attribute
can't delete %s.__bases__
can't delete %s.__module__
can't delete %s.__name__
can't delete softspace attribute
can't filter str to str: __getitem__ returned different type
can't filter unicode to unicode: __getitem__ returned different type
can't find module '%.200s'
CANTILLATIO
# can't import zipimport
# can't import zipimport.zipimporter
Can't initialize bool type
Can't initialize buffer type
Can't initialize builtin function type
Can't initialize bytearray type
Can't initialize callable weakref proxy type
Can't initialize class type
can't initialize codec error registry
can't initialize codec registry
Can't initialize code type
Can't initialize complex type
Can't initialize dict proxy type
Can't initialize dict type
Can't initialize ellipsis type
Can't initialize enumerate type
Can't initialize file type
Can't initialize float type
Can't initialize frame type
Can't initialize frozenset type
Can't initialize function type
Can't initialize generator type
Can't initialize get-set descriptor type
Can't initialize import file table.
Can't initialize instance type
Can't initialize int type
Can't initialize list type
Can't initialize long type
Can't initialize member descriptor type
Can't initialize memoryview type
Can't initialize method type
Can't initialize None type
Can't initialize NotImplemented type
Can't initialize object type
Can't initialize property type
Can't initialize reversed type
Can't initialize set type
Can't initialize slice type
Can't initialize static method type
Can't initialize str type
Can't initialize super type
Can't initialize threads for interpreter
Can't initialize traceback type
Can't initialize tuple type
Can't initialize type type
Can't initialize 'unicode'
Can't initialize unicode type
Can't initialize weakref proxy type
Can't initialize weakref type
Can't initialize wrapper type
Can't initialize xrange type
Can't instantiate abstract class %s with abstract methods %s
can't intern subclass of string
can't jump into or out of a 'finally' block
can't jump into the middle of a block
can't jump to 'except' line as there's no exception
Can't malloc memory to read file
can't multiply sequence by non-int of type '%.200s'
Can't open file
can't open Zip file: '%.200s'
Can't pickle %s: attribute lookup %s.%s failed
Can't pickle %s: extension code %ld is out of range
Can't pickle %s: extension code %s isn't an integer
Can't pickle %s: import of module %s failed
Can't pickle %s: it's not the same object as %s.%s
can't read Zip file: '%.200s'
can't re-enter readline
can't resize shared unicode objects
can't send non-None value to a just-started generator
can't set attribute
can't set attributes of built-in/extension type '%s'
can't set bytearray slice from %.100s
can't set %s.__bases__
can't set %s.__module__
can't set %s.__name__
can't %s %s
can't start new thread
can't translate characters in position %zd-%zd: %.400s
can't translate character u'\%s' in position %zd: %.400s
Can't translate label '%s'
Can't translate NAME label '%s'
Can't translate STRING label %s
can't unpack IEEE 754 special value on non-IEEE platform
# can't write %s
capitalize
capitalized.
capitalize(s) -> string
CAPRICORN
Capsule objects let you wrap a C "void *" pointer in a Python
<capsule object %s%s%s at %p>
Capsules are used for communication between extension modules.
%c arg not in range(0x110000) (wide Python build)
CARPENTR
c;array item must be char
carry==0
carry == 0
(carry >> 15) == 0
(carry & 1) == carry
carry <= ((digit)(((digit)1 << 15) - 1))
carry <= (((digit)(((digit)1 << 15) - 1)) << 1)
Cartesian product of input iterables.  Equivalent to nested for-loops.
CARYSTIA
catching classes that don't inherit from BaseException is not allowed in 3.x
catching of string exceptions is deprecated
category
category is not a subclass of Warning
category(unichr)
CAULDRON
C_BUILTIN
    'c'         character          1 
-c cmd : program passed in as string (terminates option list)
c;%c requires int or char
c < ((digit)1 << 15)
<cell at %p: %.80s object at %p>
<cell at %p: empty>
cell comparisons not supported in 3.x
cell_contents
cell_dealloc
Cell is empty
CENTRELIN
CENTURIA
CEONGCHIEUMCHIEUCH
CEONGCHIEUMCIEUC
CEONGCHIEUMSIOS
CEONGCHIEUMSSANGCIEUC
CEONGCHIEUMSSANGSIOS
CERT_NONE
CERT_OPTIONAL
CERT_REQUIRED
ceval: orphan tstate
ceval: tstate mix-up
c_exception
C_EXTENSION
%%%c format: a number is required, not %.200s
'%c' format requires 0 <= number <= %zu
'%c' format requires %zd <= number <= %zd
(ch > 0x007F) && (ch <= 0x07FF)
(ch > 0x07FF) && (ch <= 0xFFFF)
(ch > 0xFFFF) && (ch <= 0x10ffff)
chain.from_iterable(iterable) --> chain object
chain(*iterables) --> chain object
chain(p, q, ...) --> p0, p1, ... plast, q0, q1, ... 
CHAMILON
Change or add an environment variable.
Change root directory to path.
change system call restart behaviour: if flag is False, system calls
Change the access permissions of a file.
Change the access permissions of the file given by file
Change the current working directory to the specified path.
Change the owner and group id of path to the numeric uid and gid.
Change the owner and group id of the file given by file descriptor
Change to the directory of the given file descriptor.  fildes must be
Changing the TZ environment variable without calling tzset *may* change
CHARACTE
CHARACTER
character.  If not found, KeyError is raised.
character in B, i.e. uppercase characters may only follow uncased
character in S, i.e. upper- and titlecase characters may only
character in S, i.e. uppercase characters may only follow uncased
characterize
character mapping must be in range(0x%lx)
character mapping must be in range(256)
character mapping must be in range(65536)
character mapping must return integer, None or str
character mapping must return integer, None or unicode
character maps to <undefined>
CHARACTERS
characters, all remaining cased characters have lower case.
characters, all remaining cased characters have lowercase.
characters and lowercase characters only cased ones. Return False
characters have been mapped through the given translation
character unichr as integer. Returns 0 if no combining class is
character unichr as string. An empty string is returned in case no
charbuffer_encode
char format require string of length 1
char_from_hex
charmap_build
charmap_decode
charmap_encode
CHAR_MAX
CHATTAWA
CHAVIYANI
chdir(path)
check_coding_spec
check if a class is a subclass
check if an object is an instance
Check if float x is infinite (positive or negative).
Check if float x is not a number (NaN).
Checks if the real or imaginary part of z is infinite.
Checks if the real or imaginary part of z not a number (NaN)
CHEIKHEI
CHIEUCH-HIEUH
CHIEUCH-KHIEUKH
((child)->n_type) == 266
children
CHITUEUMCHIEUCH
CHITUEUMCIEUC
CHITUEUMSIOS
CHITUEUMSSANGCIEUC
CHITUEUMSSANGSIOS
chmod(path, mode)
((ch)->n_type) == 265
((ch)->n_type) == (267)
((ch)->n_type) == (268)
((ch)->n_type) == (319)
((ch)->n_type) == (332)
((ch)->n_type) == (333)
((ch)->n_type) == (334)
chown(path, uid, gid)
chr() arg not in range(256)
chr(i) -> character
chroot(path)
CHRYSANTHEMUM
CIEUC-IEUNG
CIEUC-PIEUP
CIEUC-SSANGPIEUP
C implementation and optimization of the Python pickle module.
<circle>
CIRCULATIO
CIRCUMFLE
CIRCUMFLEX
CIRCUMFLEXEQUAL
CIVILIAN
CJK UNIFIED IDEOGRAPH-
CJK UNIFIED IDEOGRAPH-%X
__class__
class %.50s has no attribute '%.400s'
__class__ assignment: only for heap types
     class C:
  class C:
class C(B):
class C(object):
class_dealloc
classdef
ClassDef field "bases" must be a list, not a %.200s
ClassDef field "body" must be a list, not a %.200s
ClassDef field "decorator_list" must be a list, not a %.200s
class.__dict__ not accessible in restricted mode
classes are read-only in restricted mode
class has no name
classic complex division
classic float division
classic int division
classic long division
classic_mro
classmeth
classmeth(*args, **kw)
classmethod
classmethod_descriptor
classmethod(function) -> method
Class methods are different than C++ or Java static methods.
__class__ must be set to a class
__class__ must be set to new-style class, not '%s' object
__class__ not accessible in restricted mode
classobj
classobj(name, bases, dict)
<class ?.%s at %p>
class   size   num pools   blocks in use  avail blocks
<class %s.%s at %p>
clause in the current stack frame or in an older stack frame.
# cleanup[1] %s
# cleanup[2] %s
# cleanup __builtin__
# cleanup floats
# cleanup ints
# cleanup __main__
(cleanup problem)
# cleanup sys
#   clear[1] %s
#   clear[2] %s
# clear __builtin__._
_clearcache
clearerr
Clear global information on the current exception.  Subsequent calls to
clear_memo
clear_memo() -- Clear the picklers memo
# clear sys.%s
Clear the internal cache.
Clear the internal type lookup cache.
_clear_type_cache
_clear_type_cache() -> None
CLIMACUS
clock() -> floating point number
clock() -- return CPU time since process start as a float
CLOCKWIS
Close a file descriptor (for low level IO).
close(arg) -> raise GeneratorExit inside generator.
close() called during concurrent operation on the same file object.
close() -- close the socket
closedir
close(): explicitly release resources held.
close failed in file object destructor:
close(fd)
closelog
CLOSENESS
close() -> None
close() -> None or (perhaps) an integer.  Close the file.
closerange
closerange(fd_low, fd_high)
Closes all file descriptors in [fd_low, fd_high), ignoring errors.
Close the epoll control file descriptor. Further operations on the epoll
Close the socket.  It cannot be used after this call.
__closure__
((cls)->ob_type == &PyClass_Type)
CLUB-SPOKE
cm_dealloc
cmp called with a->x[a->wds-1] == 0
cmp called with b->x[b->wds-1] == 0
(cmps) && _asdl_i < (cmps)->size
cmpwrapper
cmp() wrapper for sort with custom keys.
cmp(x, y) -> -1, 0, 1
cmp(x, y) -> integer
(cnt != ((Py_ssize_t)(((size_t)-1)>>1)) && long_cnt == ((void *)0) && !slow_mode) || (cnt == ((Py_ssize_t)(((size_t)-1)>>1)) && long_cnt != ((void *)0) && slow_mode)
co_argcount
c|O:array
C objects are used for communication between extension modules.  They
C objects to be exported from one extension module to another
CObject type is not supported in 3.x. Please use capsule objects instead.
co_cellvars
co_consts
__code__
code: argcount must not be negative
code(argcount, nlocals, stacksize, flags, codestring, constants, names,
codec must pass exception instance
codec search functions must return 4-tuples
codecs.register_error that can handle UnicodeEncodeErrors.
codecs.register_error that can handle ValueErrors.
codecs.register_error that is able to handle UnicodeEncodeErrors.
code inequality comparisons not supported in 3.x
__code__ must be set to a code object
code: nlocals must not be negative
<code object %.100s at %p, file "%.300s", line %d>
code object passed to eval() may not contain free variables
code object passed to exec may not contain free variables
codepoint not in range(0x110000)
CODESIZE
codestr[0] == 100
codestr[3] == 100
codestr[i] == 100
codestr[i*3] == 100
codestr[n*3] == 102 || codestr[n*3] == 103
__coerce__
__coerce__ didn't return a 2-tuple
coerce() not supported in 3.x
coerce(x, y) -> (x1, y1)
coercing to Unicode: need string or buffer, %.80s found
coercion should return None or 2-tuple
co_filename
co_firstlineno
co_flags
co_freevars
collectable
collect() -- Do a full collection right now.
collect([generation]) -> n
collection.
_collections
collections.defaultdict
collections.deque
co_lnotab
col_offset
combinations(iterable, r) --> combinations object
combinations_next
combinations(p, r)
combinations(range(4), 3) --> (0,1,2), (0,1,3), (0,2,3), (1,2,3)
combinations_with_replacement('ABC', 2) --> AA AB AC BB BC CC
combinations_with_replacement(iterable, r) --> combinations_with_replacement object
combinations_with_replacement(p, r)
Combinatoric generators:
COMBININ
combining
combining(unichr)
comes in.  A library can use this to wakeup select or poll.
COMMERCIA
common approach.
Common base class for all exceptions
Common base class for all non-exit exceptions.
Common string manipulations, optimized for speed.
comparators
(comparators) && _asdl_i < (comparators)->size
Compare field "comparators" must be a list, not a %.200s
Compare field "ops" must be a list, not a %.200s
compare != ((void *)0)
comparing unequal types not supported in 3.x
comparison
Comparison between bytearray and string
comparison did not return an int
comparison function must return int, not %.200s
<compat>
compat || (args != (PyObject*)((void *)0))
COMPATIBILIT
compatible_formats
comp_for
compile_alt
compile() arg 3 must be 'exec', 'eval' or 'single'
compile_atom
compile.c compiler unit
compiled module %.200s is not a code object
Compiled regular expression objects
Compiled struct object
compile() expected string without null bytes
compile; if absent or zero these statements do influence the compilation,
compile_item
compiler_addop_j
compiler_augassign
compiler_boolop
compiler_compare
compiler_complex_args
compiler_dictcomp
compiler_exit_scope
compiler_exit_scope()
compiler_from_import
compiler_function
compiler_genexp
compile_rhs
compiler_if
compiler_ifexp
compiler_lambda
compiler_listcomp
compiler_make_closure()
compiler_nameop
compiler_next_instr
compiler_pop_fblock
compiler_print
compiler_setcomp
compiler_simple_slice
compiler_slice
compile_rule
compiler_unit_check
compiler_use_next_block
compiler_with
compile(source, filename, mode[, flags[, dont_inherit]]) -> code object
Compile the source string (a Python module, statement or expression)
compile(): unrecognised flags
Compiling (meta-) parse tree into NFA grammar
comp_iter
COMPLEMENT
Complementary error function at x.
COMPLETED
complete membership information.)
COMPLETION
__complex__
complex_abs
complex_add
complex() arg is a malformed string
complex() arg is not a string
complex() argument must be a string or a number
complex() can't take second arg if first is a string
complex_classic_div
complex.conjugate() -> complex
complex<D>
complex_div
complex division by zero
complex divmod()
complex divmod(), // and % are deprecated
complex exponentiation
complex.__format__() -> str
complex function
complex modulo
complex_mul
complex_pow
complex(real[, imag]) -> complex number
complex remainder
complex_richcompare
complex() second arg can't be a string
__complex__ should return a complex object
complex_sub
COMPLIANCE
Composes a raw device number from the major and minor device numbers.
COMPOSITIO
COMPOSITION
compound_stmt
comprehension
comprehension field "ifs" must be a list, not a %.200s
compress
compress(data) -- Return a string containing data compressed.
compress(data, selectors) --> (d[0] if s[0]), (d[1] if s[1]), ...
compress(data, selectors) --> iterator over selected data
compressobj
compressobj([level]) -- Return a compressor object.
Compressor objects support compress() and flush() methods; decompressor
compress(string[, level]) -- Compress string, with compression level in 1-9.
compress(string[, level]) -- Returned compressed string.
(comps) && _asdl_i < (comps)->size
co_names
__concat__
concat(a, b) -- Same as a + b, for a and b sequences.
Concatenates any number of bytearray objects, with B in between each pair.
CONCAVE-POINTE
CONCAVE-SIDE
conditional expression
configuration names must be strings or integers
configured default) or a positive integer value of at least 32,768 (32k).
CONFLICT
confstr_names
confstr(name) -> string
CONGRATULATION
CONGRUEN
CONJOININ
CONJUGAT
conjugate
CONJUNCTION
co_nlocals
connect(addr) -- connect the socket to a remote address
connect(address)
connected to the slave end of a terminal.
connect_ex
connect_ex(addr) -- connect, return an error code instead of an exception
connect_ex(address) -> errno
connection, and the address of the client.  For IP sockets, the address
connections.
Connect the socket to a remote address.  For IP sockets, the address
CONSECUTIV
Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]
CONSONAN
CONSTANCY
CONSTANT
Construct an mutable bytearray object from:
Construct a zero-initialized bytearray of the given length.
 constructor
constructor requires a sequence
CONTAININ
containing the following items from the password database (see `<shadow.h>'):
contains
__contains__
contains(a, b) -- Same as b in a (note reversed operands).
contains a nested function with free variables
contain the module, but has no source for it.
CONTEMPLATION
CONTENTION
context_expr
contiguous buffer
continue
'continue' not properly in loop
'continue' not supported inside 'finally' clause
continue_stmt
CONTOURE
CONTRACTION
CONTRARIETY
CONVERGIN
Conversion between binary data and ASCII
Convert a 16-bit integer from host to network byte order.
Convert a 16-bit integer from network to host byte order.
Convert a 32-bit integer from host to network byte order.
Convert a 32-bit integer from network to host byte order.
Convert a complex from rectangular coordinates to polar coordinates. r is
Convert a function to be a class method.
Convert a function to be a static method.
Convert angle x from degrees to radians.
Convert angle x from radians to degrees.
Convert an IP address from 32-bit packed binary format to string format
Convert an IP address from string format to a packed string suitable
Convert an IP address in string format (123.45.67.89) to the 32-bit packed
Convert a packed IP address of the given family to string format.
Convert array to an ordinary list with the same items.
Convert a string or number to a floating point number, if possible.
Convert a string or number to a long integer, if possible.  A floating
Convert a string or number to an integer, if possible.  A floating point
Convert a time in seconds since the Epoch to a string in local time.
Convert a time tuple in local time to seconds since the Epoch.
Convert a time tuple to a string according to a format specification.
Convert a time tuple to a string, e.g. 'Sat Jun 06 16:26:11 1998'.
converted to lowercase and vice versa.
converterr
Convert from polar coordinates to rectangular coordinates.
convertible to a buffer
converting a non-string.
Convert seconds since the Epoch to a time tuple expressing local time.
Convert seconds since the Epoch to a time tuple expressing UTC (a.k.a.
convertsimple
Converts to a string according to format_spec.
Convert the array to an array of machine values and return the string
Convert the array to a unicode string.  The array must be
Convert the string to a value. If no valid value is found, raise
COPRODUCT
__copy__
copy(array)
co || PyErr_Occurred()
copy_reg
copy_reg._slotnames didn't return a list or None
copy() -- Return a copy of the compression object.
copy() -- return a copy of the current hash object
copy() -- Return a copy of the decompression object.
COPYRIGH
copyright
Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
Copyright (c) 1995-2001 Corporation for National Research Initiatives.
Copyright (c) 2000 BeOpen.com.
Copyright (c) 2001-2012 Python Software Foundation.
copyright -- copyright notice pertaining to this interpreter
copysign
copysign(x, y)
CORPORATION
CORRESPOND
corresponding to the return value of the fcntl call in the C code.
corresponding Unix manual entries for more information on calls.
co_stacksize
Could not access runpy._run_module_as_main
could not convert string to float
could not convert string to float: %.200s
could not convert string to int
Could not create arguments for runpy._run_module_as_main
could not find MARK
Could not find platform dependent libraries <exec_prefix>
Could not find platform independent libraries <prefix>
Could not import runpy module
Could not open PYTHONSTARTUP
Could not set __package__
Couldn't create autoTLSkey mapping
Couldn't create thread-state for new thread
Couldn't get thread-state dictionary
count == 3
count <= (4294967295U) - size
count_comp_fors
count_comp_ifs
COUNTERBORE
COUNTERSINK
count exceeds C integer size
_count() -> integer
count_list_fors
count_list_ifs
count_new
count_nextlong
count([n]) --> n, n+1, n+2, ...
countOf(a, b) -- Return the number of times b occurs in a.
count() -- return number of occurrences of an object
count_run
count(%s)
count(%s, %s)
count(s, sub[, start[, end]]) -> int
count(start=0, step=1) --> count object
count(x)
count(%zd)
               Coupled with ITIMER_VIRTUAL, this timer is usually
co_varnames
cPickle.BadPickleGet
cPickle.Pdata
cPickle.PickleError
cPickle.Pickler
cPickle.PicklingError
cPickle.UnpickleableError
cPickle.Unpickler
cPickle.UnpicklingError
c && ((((PyObject*)(c))->ob_type) == &PySTEntry_Type)
crc32(string[, start]) -- Compute a CRC-32 checksum.
crc32(string[, start]) -- Compute a CRC-32 checksum of string.
Create a bytearray object from a string of hexadecimal numbers.
Create a class object.  The name must be a string; the second argument
Create a code object.  Not for the faint of heart.
Create a complex number from a real part and an optional imaginary part.
Create a directory.
Create a FIFO (a POSIX named pipe).
Create a filesystem node (file, device special file or named pipe)
Create a floating-point number from a hexadecimal string.
Create a function object from a code object and a dictionary.
Create a hard link to a file.
Create a module object.
Create an epoll object from a given control fd.
Create a new buffer object which references the given object.
Create a new lock object.  See help(LockType) for information about locks.
Create a new memoryview object which references the given object.
Create a new module.  Do not enter it in sys.modules.
Create a new Unicode object from the given encoded string.
Create a new zipimporter instance. 'archivepath' must be a path to
Create an instance method object.
Create an instance without calling its __init__() method.
Create a pair of socket objects from the sockets returned by the platform
Create a pipe.
Create a slice object.  This is used for extended slicing (e.g. a[0:10:2]).
Create a socket object from a duplicate of the given
Create a symbolic link pointing to src named dst.
Create a temporary file with no directory entries.
%c requires int or char
CRESCENT
c_return
CRNCYSTR
CROSSBONES
CROSSED-TAIL
CROSSHATC
CRYPTO_free
CRYPTOGRAMMI
CRYPTO_num_locks
CRYPTO_set_id_callback
CRYPTO_set_locking_callback
C-SIMPLIFIE
cskipped < 20
CS_LFS64_CFLAGS
CS_LFS64_LDFLAGS
CS_LFS64_LIBS
CS_LFS64_LINTFLAGS
CS_LFS_CFLAGS
CS_LFS_LDFLAGS
CS_LFS_LIBS
CS_LFS_LINTFLAGS
cStringIO
cStringIO_CAPI
cStringIO.cStringIO_CAPI
cStringIO.c,v 1.29 1999/06/15 14:10:27 jim Exp
cStringIO.StringI
cStringIO.StringO
CS_XBS5_ILP32_OFF32_CFLAGS
CS_XBS5_ILP32_OFF32_LDFLAGS
CS_XBS5_ILP32_OFF32_LIBS
CS_XBS5_ILP32_OFF32_LINTFLAGS
CS_XBS5_ILP32_OFFBIG_CFLAGS
CS_XBS5_ILP32_OFFBIG_LDFLAGS
CS_XBS5_ILP32_OFFBIG_LIBS
CS_XBS5_ILP32_OFFBIG_LINTFLAGS
CS_XBS5_LP64_OFF64_CFLAGS
CS_XBS5_LP64_OFF64_LDFLAGS
CS_XBS5_LP64_OFF64_LIBS
CS_XBS5_LP64_OFF64_LINTFLAGS
CS_XBS5_LPBIG_OFFBIG_CFLAGS
CS_XBS5_LPBIG_OFFBIG_LDFLAGS
CS_XBS5_LPBIG_OFFBIG_LIBS
CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
ctermid() -> string
ctime() -- convert time in seconds to string
ctime(seconds) -> string
ctx != AugStore && ctx != AugLoad
__ctype_b_loc
__ctype_tolower_loc
__ctype_toupper_loc
CUATRILL
CUATRILLO
CUNEIFOR
currency_symbol
_current_frames
_current_frames() -> dictionary
 currently the minimum supported stack size value to guarantee
current stack frame.
cwr_next
cycle in a manner similar to an odometer (with the rightmost element changing
cycle(iterable) --> cycle object
cycle(p) --> p0, p1, ... plast, p0, p1, ...
CYLINDRICITY
    d = {}
DAGBASINNA
DAHYAAUSH
DAHYAAUSH-2
DAMMATAN
DARKENIN
DARKENING
d;array item must be float
    Data at p:
Data container common to multiple tee objects.
(data, oldcrc = 0) -> newcrc. Compute CRC-32 incrementally
(data, oldcrc) -> newcrc. Compute hqx CRC incrementally
__data_start
_DATE_FMT
date of last change
DAVIYANI
  day (1-31)
daylight
daylight -- whether local time should reflect DST
day of month out of range
day of month, range [1, 31]
day of week out of range
day of week, range [0, 6], Monday is 0
day of year out of range
day of year, range [1, 366]
#days after pw expires until account is blocked
#days before pw expires to warn user about it
#days since 1970-01-01 until account is disabled
DBL_DIG -- digits
DBL_EPSILON -- Difference between 1 and the next representable float
DBL_MANT_DIG -- mantissa digits
DBL_MAX_10_EXP -- maximum int e such that 10**e is representable
DBL_MAX_EXP -- maximum int e such that radix**(e-1) is representable
DBL_MAX -- maximum representable finite float
DBL_MIN_10_EXP -- minimum int e such that 10**e is a normalized
DBL_MIN_EXP -- minimum int e such that radix**(e-1) is a normalized float
DBL_MIN -- Minimum positive normalizer float
d_bytecode >= 0
d_bytecode <= 255
dcgettext
dcgettext(domain, msg, category) -> string
D.clear() -> None.  Remove all items from D.
D.__contains__(k) -> True if D has a key k, else False
D.copy() -> a shallow copy of D
D.copy() -> a shallow copy of D.
D.count(value) -> integer -- return number of occurrences of value
DDAYANNA
%d: %d, %d
%d.%d.%d.%d%c
dddddddddddddddddddddddddddddddd
ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
-d     : debug output from parser; also PYTHONDEBUG=x
d->d_type == type
deallocated bytearray object has exported buffers
deallocating None
__debug__
DEBUG_COLLECTABLE
  DEBUG_COLLECTABLE - Print collectable objects found.
DEBUG_INSTANCES
  DEBUG_INSTANCES - Print instance objects.
DEBUG_LEAK
  DEBUG_LEAK - Debug leaking programs (everything but STATS).
Debug memory block at address p=%p:
DEBUG_OBJECTS
  DEBUG_OBJECTS - Print objects other than instances.
DEBUG_SAVEALL
  DEBUG_SAVEALL - Save objects to gc.garbage rather than freeing them.
DEBUG_STATS
  DEBUG_STATS - Print statistics during collection.
DEBUG_UNCOLLECTABLE
  DEBUG_UNCOLLECTABLE - Print unreachable but uncollectable objects found.
DECEMBER
decimal_point
decimal(unichr[, default])
DECISIVENESS
Decode a string of qp-encoded data
Decode hexbin RLE-coded string
decode(obj, [encoding[,errors]]) -> object
decoder did not return an unicode object (type=%.400s)
decoder did not return a string object (type=%.400s)
decoder did not return a string/unicode object (type=%.400s)
decoder must return a tuple (object,integer)
Decodes B using the codec registered for encoding. encoding defaults
Decodes obj using the codec registered for encoding. encoding defaults
Decodes S using the codec registered for encoding. encoding defaults
decode_str
decode_unicode
decoding bytearray is not supported
decoding error; unknown error handling code: %.400s
decoding_fgets
decoding Unicode is not supported
decomposition
decomposition(unichr)
decompress
decompress(data, max_length) -- Return a string containing the decompressed
decompressed data. length, if given, is the initial size of the
decompressobj
decompressobj([wbits]) -- Return a decompressor object.
decompress(string,[wbits],[bufsize]) -- Decompresses a compressed string.
decompress(string[, wbits[, bufsize]]) -- Return decompressed string.
decorated
decorator
decorator_list
(decorator_list) && _asdl_i < (decorator_list)->size
decorators
(decorator_seq) && _asdl_i < (decorator_seq)->size
Decorators make defining new properties or modifying existing ones easy:
DECREASE
Decrease the priority of process by inc and return the new priority.
DECRESCENDO
__deepcopy__
defaultaction
default_action
defaultdict
defaultdict(
defaultdict(default_factory) --> dict with default factory
- defaultdict:  dict subclass with a default value factory
defaultdict(%s, %s)
default 'except:' must be last
default_factory
defaulting to the current globals and locals.
default_int_handler
default_int_handler(...)
default_int_handler() -- default SIGINT handler
               default module search path.  The result is sys.path.
default object formatter
defaults
__defaults__
(defaults) && _asdl_i < (defaults)->size
__defaults__ must be set to a tuple object
defaults to 0; it may be an int or a string.  If arg is given as a string,
defaults to None or can be specified by a keyword argument.
defaults != ((void *)0)
default value used when mode is not specified is Z_FINISH.
DEF_BOUND
    def count(firstval=0, step=1):
    def delx(self): del self._x
DEFECTIVENES
     def f(arg1, arg2, ...): ...
      def f(cls, arg1, arg2, ...): ...
DEF_FREE
DEF_FREE_CLASS
    def getx(self): return self._x
DEF_GLOBAL
DEF_IMPORT
defined.
defined by opt and is operating system dependent.  Typically these codes are
defines character properties for all Unicode characters. The data in
DEFINITION
deflateCopy
DEFLATED
deflateEnd
deflateInit_
deflateInit2_
DEF_LOCAL
DEF_MEM_LEVEL
    def meth(self, arg):
DEF_PARAM
    def setx(self, value): self._x = value
def __str__(self):
    def x(self): del self._x
    def x(self): return self._x
    def x(self, value): self._x = value
degrees(x)
__delattr__
delattr(object, name)
Delay execution for a given number of seconds.  The argument may be
__delete__
Delete a named attribute on an object; delattr(x, 'y') is equivalent to
Delete an environment variable.
Delete field "targets" must be a list, not a %.200s
delete_garbage
deletion of interned string failed
deletions are implemented differently for unicode
DELIMITE
DELIMITER
delimiter string.  If maxsplit is given, at most maxsplit
delimiter string.  If maxsplit is nonzero, splits into at most
delimiter string, starting at the end of the string and
delimiter string, starting at the end of the string and working
__delitem__
delitem(a, b) -- Same as del a[b].
DELIVERANCE
delslice
__delslice__
delslice(a, b, c) -- Same as del a[b:c].
del_stmt
delstr != ((void *)0)
``del x.y''.
DENOMINATO
denominator
DENTISTR
DEPARTIN
DEPARTURE
dependent.
depending on the current column and the given tab size (default 8).
Deprecated since release 2.3. Instead, use the extended call syntax:
DeprecationWarning
depth >= 0
deque_append
deque_appendleft
deque_clear
deque_clearmethod
deque_dealloc
deque_del_item
deque_extend
deque_extendleft
deque index out of range
deque(iterable[, maxlen]) --> deque object
deque_iterator
dequeiter_next
deque->leftblock == deque->rightblock
deque->leftblock != deque->rightblock
deque->leftblock == deque->rightblock && deque->leftindex - 1 == deque->rightindex && deque->len == 0
deque->leftblock->leftlink == ((void *)0)
deque->leftblock != ((void *)0)
deque->leftindex == deque->rightindex+1
deque mutated during iteration
deque mutated during remove().
- deque:        ordered collection accessible from endpoints only
deque_pop
deque_popleft
deque(%r)
deque_remove
deque.remove(x): x not in deque
deque_reverse
deque_reverse_iterator
dequereviter_next
deque->rightblock->rightlink == ((void *)0)
deque(%%r, maxlen=%zd)
_deque_rotate
DERET-HIDET
DESCENDER
DESCENDIN
descr_dealloc
descr.__delete__(obj)
descr.__get__(obj[, type]) -> value
DESCRIPTIO
descriptions of the lay-out of the C structs and the intended conversion
descriptor '%.200s' for '%.100s' objects doesn't apply to '%.100s' object
descriptor '%.200s' requires a '%.100s' object but received a '%.100s'
descriptor '%.300s' of '%.100s' object needs an argument
descriptor fd.
descriptors can be used.
descriptor '%s' for '%s' objects doesn't apply to '%s' object
descriptor '%s' for type '%s' doesn't apply to type '%s'
descriptor '%s' for type '%s' needs a type, not a '%s' as arg 2
descriptor '%s' for type '%s' needs either an object or a type
descriptors.  It is an interface to the fcntl() and ioctl() Unix
Descriptor to change the deleter on a property.
Descriptor to change the getter on a property.
Descriptor to change the setter on a property.
descr_setcheck
descr.__set__(obj, value)
destination is too small to receive data from source
details about the number of function calls executed. The return value is
Determine whether os.[lf]stat represents time stamps as float objects.
DEVANAGAR
DEVELOPMENT
device defines the newly created device special file (probably using
device type (if inode device)
/dev/urandom
dev_urandom_noraise
 DFA '%s', state %d:
  DFA '%s', state %d: Direct pop.
    'd'         floating point     8 
D.get(k[,d]) -> D[k] if D.has_key(k), else d.  d defaults to None.
D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
dgettext
dgettext(domain, msg) -> string
D.has_key(k) -> True if D has a key k, else False
DIAERESI
DIAERESIS
DIAERESIZE
DIAGONAL
DIALECT-
DIALYTIK
DIALYTIKA
DIATONIK
__dict__
dictbytype
dictcomp
<dictcomp>
DictComp
dict_compare
DictComp field "generators" must be a list, not a %.200s
dict comprehension
Dict field "keys" must be a list, not a %.200s
Dict field "values" must be a list, not a %.200s
dict.fromkeys(S[,v]) -> New dict with keys from S and values equal to v.
dict.has_key() not supported in 3.x; use the in operator
dict inequality comparisons not supported in 3.x
dictionary changed size during iteration
dictionary for instance variables (if defined)
dictionary-itemiterator
dictionary-keyiterator
dictionary of keyword arguments to future partial calls
dictionary update sequence element #%zd has length %zd; 2 is required
dictionary-valueiterator
dict_items
dict items iterator must return 2-tuples
dict(iterable) -> new dictionary initialized as if via:
dictiter_iternextitem
dictiter_iternextkey
dictiter_iternextvalue
dict_keys
dict_keys_inorder
dict(**kwargs) -> new dictionary initialized with the name=value pairs
dict(mapping) -> new dictionary initialized from a mapping object's
__dict__ may not be deleted
__dict__ must be a dictionary
__dict__ must be a dictionary object
__dict__ must be set to a dictionary
__dict__ must be set to a dictionary, not a '%.200s'
dict_new
dict() -> new empty dictionary
__dict__ not accessible in restricted mode
__dictoffset__
dictoffset > 0
dictoffset % 4 == 0
dictorsetmaker
dict_popitem
dictproxy
dict_proxy(%s)
dict && ((((((PyObject*)(dict))->ob_type))->tp_flags & ((1L<<29))) != 0)
dict_repr
dictresize
() -> dict. Returns numeric and monetary locale-specific parameters.
__dict__ slot disallowed: we already got one
dict_subscript
dict_to_map
dict_values
dictview_richcompare
dict != ((void *)0)
didn't expect a NULL pointer
DIFFERENC
difference
difference_update
DIFFERENTIAL
DIFFICULT
DIFFICULTIES
DIFONIAS
DIFTOGGO
digest() -- return the current digest value
digestsize
digest_size
digest_size -- number of bytes in this hashes output
digit_count >= 1
digits_end != ((void *)0) && digits_end >= digits
digit(unichr[, default])
DIGORGON
DIGRAMMO
DIMENSIO
DIMENSIONA
DIMINISHMENT
DIMINUTION-1
DIMINUTION-2
DIMINUTION-3
(dims) && _asdl_i < (dims)->size
|di:poll
DIRECTIONA
dir(): expected keys() of locals to be a list, not '%.200s'
__dir__() must return a list, not %.200s
_dir_object
dir([object]) -> list of strings
Disable automatic garbage collection.
disable() -- Disable automatic garbage collection.
disable() -> None
DISCONTINUOU
disguised Unix interface).  Refer to the library manual and
dispatch_table
DISPERSION
displayhook
__displayhook__
displayhook -- called to show results in an interactive session
displayhook(object) -> None
displayhook() -- print an object to the screen, and save it in __builtin__._
__displayhook__ -- the original displayhook; don't touch!
DISTINGUISH
DISTORTION
D.items() -> list of D's (key, value) pairs, as 2-tuples
D.iteritems() -> an iterator over the (key, value) items of D
D.iterkeys() -> an iterator over the keys of D
D.itervalues() -> an iterator over the values of D
div(a, b) -- Same as a / b when __future__.division is not in effect.
DIVERGENCE
DIVINATION
division
division by zero
division_new
division_warning
__divmod__
divmod()
divmod(x, y) -> (quotient, remainder)
D.keys() -> list of D's keys
        d[k] = v
d_lineno >= 0
dlopen("%s", %x);
d->ma_table == ((void *)0) && d->ma_fill == 0 && d->ma_used == 0
DN_ACCESS
DN_ATTRIB
DN_CREATE
DN_DELETE
DN_MODIFY
DN_MULTISHOT
DN_RENAME
DOACHASHME
DOACHASHMEE
DODEKATA
 does not force update of metadata.
Does the SSL shutdown handshake with the remote end, and returns
do_handshake
dO:ldexp
domain must be a non-empty string
done. If sep is not specified or is None, any whitespace string
done using the specified fill character (default is a space)
done using the specified fill character (default is a space).
dont_inherit
don't know how to byteswap this array type
don't know how to handle %.400s in error callback
Don't know how to import %.200s (type code %d)
dont_write_bytecode
do_raise
d|O:round
DOTS-123
DOTS-1234
DOTS-12345
DOTS-123456
DOTS-1234567
DOTS-12345678
DOTS-1234568
DOTS-123457
DOTS-1234578
DOTS-123458
DOTS-12346
DOTS-123467
DOTS-1234678
DOTS-123468
DOTS-12347
DOTS-123478
DOTS-12348
DOTS-1235
DOTS-12356
DOTS-123567
DOTS-1235678
DOTS-123568
DOTS-12357
DOTS-123578
DOTS-12358
DOTS-1236
DOTS-12367
DOTS-123678
DOTS-12368
DOTS-1237
DOTS-12378
DOTS-1238
DOTS-124
DOTS-1245
DOTS-12456
DOTS-124567
DOTS-1245678
DOTS-124568
DOTS-12457
DOTS-124578
DOTS-12458
DOTS-1246
DOTS-12467
DOTS-124678
DOTS-12468
DOTS-1247
DOTS-12478
DOTS-1248
DOTS-125
DOTS-1256
DOTS-12567
DOTS-125678
DOTS-12568
DOTS-1257
DOTS-12578
DOTS-1258
DOTS-126
DOTS-1267
DOTS-12678
DOTS-1268
DOTS-127
DOTS-1278
DOTS-128
DOTS-134
DOTS-1345
DOTS-13456
DOTS-134567
DOTS-1345678
DOTS-134568
DOTS-13457
DOTS-134578
DOTS-13458
DOTS-1346
DOTS-13467
DOTS-134678
DOTS-13468
DOTS-1347
DOTS-13478
DOTS-1348
DOTS-135
DOTS-1356
DOTS-13567
DOTS-135678
DOTS-13568
DOTS-1357
DOTS-13578
DOTS-1358
DOTS-136
DOTS-1367
DOTS-13678
DOTS-1368
DOTS-137
DOTS-1378
DOTS-138
DOTS-145
DOTS-1456
DOTS-14567
DOTS-145678
DOTS-14568
DOTS-1457
DOTS-14578
DOTS-1458
DOTS-146
DOTS-1467
DOTS-14678
DOTS-1468
DOTS-147
DOTS-1478
DOTS-148
DOTS-156
DOTS-1567
DOTS-15678
DOTS-1568
DOTS-157
DOTS-1578
DOTS-158
DOTS-167
DOTS-1678
DOTS-168
DOTS-178
DOTS-234
DOTS-2345
DOTS-23456
DOTS-234567
DOTS-2345678
DOTS-234568
DOTS-23457
DOTS-234578
DOTS-23458
DOTS-2346
DOTS-23467
DOTS-234678
DOTS-23468
DOTS-2347
DOTS-23478
DOTS-2348
DOTS-235
DOTS-2356
DOTS-23567
DOTS-235678
DOTS-23568
DOTS-2357
DOTS-23578
DOTS-2358
DOTS-236
DOTS-2367
DOTS-23678
DOTS-2368
DOTS-237
DOTS-2378
DOTS-238
DOTS-245
DOTS-2456
DOTS-24567
DOTS-245678
DOTS-24568
DOTS-2457
DOTS-24578
DOTS-2458
DOTS-246
DOTS-2467
DOTS-24678
DOTS-2468
DOTS-247
DOTS-2478
DOTS-248
DOTS-256
DOTS-2567
DOTS-25678
DOTS-2568
DOTS-257
DOTS-2578
DOTS-258
DOTS-267
DOTS-2678
DOTS-268
DOTS-278
DOTS-345
DOTS-3456
DOTS-34567
DOTS-345678
DOTS-34568
DOTS-3457
DOTS-34578
DOTS-3458
DOTS-346
DOTS-3467
DOTS-34678
DOTS-3468
DOTS-347
DOTS-3478
DOTS-348
DOTS-356
DOTS-3567
DOTS-35678
DOTS-3568
DOTS-357
DOTS-3578
DOTS-358
DOTS-367
DOTS-3678
DOTS-368
DOTS-378
DOTS-456
DOTS-4567
DOTS-45678
DOTS-4568
DOTS-457
DOTS-4578
DOTS-458
DOTS-467
DOTS-4678
DOTS-468
DOTS-478
DOTS-567
DOTS-5678
DOTS-568
DOTS-578
DOTS-678
dotted_as_name
dotted_as_names
DOTTED-L
DOTTED-N
dotted_name
DOTTED-P
DOUBLE-ENDE
DOUBLE-LIN
DOUBLESLASH
DOUBLESLASHEQUAL
DOUBLESTAR
DOUBLESTAREQUAL
DOUBLE-STRUC
DOWN-POINTIN
DOWNWARD
DOWNWARDS
D.popitem() -> (k, v), remove and return some (key, value) pair as a
D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
DRACHMAS
D.remove(value) -- remove first occurrence of value.
D.__reversed__() -- return a reverse iterator over the deque
D.reverse() -- reverse *IN PLACE*
Drop items from the iterable while predicate(item) is true.
DROP-SHADOWE
dropwhile
dropwhile()
dropwhile(predicate, iterable) --> dropwhile object
dropwhile(pred, seq) --> seq[n], seq[n+1], starting when pred fails
D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
D.__sizeof__() -> size of D in memory, in bytes
  DST (Daylight Savings Time) flag (-1, 0 or 1)
<dummy key>
dump(), load() will substitute None for the unmarshallable type.
dump(object) -- Write an object in pickle format to the object's pickle stream
dump(obj, file, protocol=0) -- Write an object in pickle format to the given file.
Dump of NFA for '%s' ...
dump should use.
dumps(obj, protocol=0) -- Return a string containing an object in pickle format.
dumps should use.
dumps(value[, version])
dumps() -- write value to a string
dump(value, file[, version])
dump() -- write value to a file
: %d unfreed float%s
: %d unfreed int%s
dup2(old_fd, new_fd)
D.update([E, ]**F) -> None.  Update D from dict/iterable E and F.
dup(fd) -> fd2
duplicate argument '%s' in function definition
duplicate base class %s
Duplicate file descriptor.
DUPONDIU
dup() -- return a new socket object identical to the current one [*]
dup() -> socket object
DURATION
D.values() -> list of D's values
D.viewitems() -> a set-like object providing a view on D's items
D.viewkeys() -> a set-like object providing a view on D's keys
D.viewvalues() -> an object providing a view on D's values
DVISVARA
d != ((void *)0)
dynamic module does not define init function (init%.200s)
dynamic module not initialized properly
Dynamic objects:
E1H1K1N1Q1
each of the iterables.  Like map() except that it returns
EADDRINUSE
EADDRNOTAVAIL
EAFNOSUPPORT
EAI_ADDRFAMILY
EAI_AGAIN
EAI_BADFLAGS
EAI_FAIL
EAI_FAMILY
EAI_MEMORY
EAI_NODATA
EAI_NONAME
EAI_OVERFLOW
EAI_SERVICE
EAI_SOCKTYPE
EAI_SYSTEM
EALREADY
EAMHANCHOLL
east_asian_width
east_asian_width(unichr)
ECONNABORTED
ECONNREFUSED
ECONNRESET
EDEADLOCK
EDESTADDRREQ
EDITORIA
EEBEEFILI
(e.g. C().f()).  The instance is ignored except for its class.
EGD connection failed or EGD did not return enough data to seed the PRNG
e.g., errno.errorcode[2] could be the string 'ENOENT'.
e.g., on most systems, errno.ENOENT equals the integer 2.
e.g. os.strerror(2) could return 'No such file or directory'.
(eg. 'US/Eastern', 'Europe/Amsterdam'). Unknown timezones will silently
EGYPTOLOGICA
EHOSTDOWN
EHOSTUNREACH
EIGHTEEN
-E     : ignore PYTHON* environment variables (such as PYTHONPATH)
EINPROGRESS
either 0 or 
EKFONITIKON
e->kind == BoolOp_kind
e->kind == DictComp_kind
e->kind == GeneratorExp_kind
e->kind == IfExp_kind
e->kind == Lambda_kind
e->kind == ListComp_kind
e->kind == SetComp_kind
EKSTREPTON
EL2NSYNC
ELECTRICA
ELIBEXEC
ellipsis
Else, return an alphabetized list of names comprising (some of) the attributes
(elts) && _asdl_i < (elts)->size
EMBEDDING
EMBELLISHMENT
EMBROIDERY
Empty attribute in format string
empty list to emulate ``import name''.
empty mode string
Empty module name
empty pathname
empty pattern string
empty, returns start.
empty separator
empty string for atof()
empty string for atol()
EMSGSIZE
emulated using fcntl().)
EMULTIHOP
Enable a server to accept connections.  The backlog argument must be at
Enable automatic garbage collection.
enable() -- Enable automatic garbage collection.
enable() -> None
ENAMETOOLONG
ENARMONIO
ENCLOSIN
ENCLOSURE
 Encode a string using quoted-printable encoding. 
encoded string without NULL bytes
Encode .hqx data
encode(obj, [encoding[,errors]]) -> object
encoder did not return a string object (type=%.400s)
encoder did not return a string/unicode object (type=%.400s)
(encoder failed to return a string)
encoder must return a tuple (object,integer)
Encodes obj using the codec registered for encoding. encoding defaults
Encodes S using the codec registered for encoding. encoding defaults
encoding
encoding_decl
encoding declaration in Unicode string
encoding defaults to the current default string encoding.
(encoding failed)
EncodingMap
encoding or errors without a string argument
encoding or errors without sequence argument
encoding problem: %s
encodings
ENCOUNTERS
encrypted password
ENDEAVOUR
endgrent
endlessly.
ENDMARKER
end must be None, str or unicode, not %.200s
end of B.
end of format while looking for conversion specifier
end-of-line convention used in this file
ENDOFONON
end of string in escape sequence
endpwent
endspent
end:  string appended after the last value, default a newline.
endswith
endswith first arg must be str, unicode, or tuple, not %s
ENETDOWN
ENETRESET
ENETUNREACH
ENLARGEMENT
ENOPROTOOPT
ENOTCONN
ENOTEMPTY
ENOTSOCK
ENOTUNIQ
ensure_decimal_point
ensure_minimum_exponent_length
__enter__
ENTERPRISE
__enter__() -> self.
ENTHUSIASM
entries '.' and '..' even if they are present in the directory.
entry->key == dummy
entry->key == ((void *)0)
enumerate
enumerate is useful for obtaining an indexed list:
enumerate(iterable[, start]) -> iterator for index, value of iterable
ENUMERATIO
enum_new
enum_next_long
    env: dictionary of strings mapping to strings
ENVELOPE
__environ
EnvironmentError
EnvironmentError_dealloc
EOFError
EOFError, ValueError or TypeError. Extra characters in the string are
EOF occurred in violation of protocol
EOF read where object expected
EOF.  start is the byte offset, relative to whence, to that the lock
EOF when reading a line
EOF while scanning triple-quoted string literal
EOL while scanning string literal
EOPNOTSUPP
EOVERFLOW
EPEGERMA
EPENTHETI
EPFNOSUPPORT
EPIDAUREA
EPIGRAPHI
ep->me_key == dummy
ep->me_value == ((void *)0)
epoll_create
epoll_ctl
EPOLLERR
EPOLLHUP
EPOLLMSG
EPOLLONESHOT
EPOLLOUT
EPOLLPRI
EPOLLRDBAND
EPOLLRDNORM
epoll_wait
EPOLLWRBAND
EPOLLWRNORM
EPROTONOSUPPORT
EPROTOTYPE
eq(a, b) -- Same as a==b.
EQUIANGULA
EQUIVALEN
Equivalent to:
Equivalent to eval(raw_input(prompt)).
equivalent to (x**y) % z, but may be more efficient (e.g. for longs).
ERA_D_FMT
ERA_D_T_FMT
ERA_T_FMT
EREMOTEIO
ERESTART
ERR_clear_error
ERR_error_string
ERR_get_error
ERR_get_state
__errno_location
(*__errno_location ())
[Errno %s] %s
[Errno %s] %s: %s
error and must return a (replacement, new position) tuple.
ERROR-BARRE
 Error: bottom of stack.
errorcode
error=%d
Error decoding PEM-encoded file
Error %d %s
Error %d %s: %.200s
Error function at x.
Error in sys.excepthook:
Error in sys.exitfunc:
Error: nonterminal '%s' may produce empty.
error return without exception set
errors can be 'strict', 'replace' or 'ignore' and defaults to 'strict'.
errors. handler must be a callable object, that
error.  Some kinds of file objects (for example, opened by popen())
<ERRORTOKEN>
Error when calling the metaclass bases
ERR_peek_last_error
escape_decode
escape_encode
ESHUTDOWN
ESOCKTNOSUPPORT
ESTIMATE
ESTIMATES
ESTRPIPE
ESUKUUDO
et:chdir
et:chroot
ETERNITY
etet:link
etet:rename
etet:symlink
et;execve() arg 2 must contain only strings
eti:access
eti:chmod
eti:getsockaddrarg
ETIMEDOUT
et|i:mkdir
et:listdir
etll:chown
etll:lchown
et:lstat
etO:execv
etOO:execve
ETOOMANYREFS
etO:utime
et:readlink
et:remove
et:rmdir
et|si:file
EURO-CURRENC
eval() arg 1 must be a string or code object
eval_input
eval must be given globals and locals when called without a frame
eval(source[, globals[, locals]]) -> value
Evaluate the source in the context of globals and locals.
Even though on some platforms threads identities may appear to be
eventmask
events -- an optional bitmask describing the type of events to check for
events is a bit set composed of the various EPOLL constants
events is a bit set composed of the various EPOLL constants; the default
EVP_DigestFinal
EVP_DigestInit
EVP_DigestUpdate
EVP_get_digestbyname
EVP_MD_block_size
EVP_MD_CTX_cleanup
EVP_MD_CTX_copy
EVP_MD_CTX_md
EVP_MD_size
EWOULDBLOCK
Example: bytearray.fromhex('B9 01EF') -> bytearray(b'\xb9\x01\xef').
EX_CANTCREAT
exc_clear
exc_clear() -- clear the exception state for the current thread
exc_clear() -> None
exceed 1024 bytes.
EXCELLENT
except_clause
excepthandler
ExceptHandler field "body" must be a list, not a %.200s
excepthook
__excepthook__
excepthook -- called to handle any uncaught exception other than SystemExit
excepthook(exctype, value, traceback) -> None
excepthook() -- print an exception and its traceback to sys.stderr
__excepthook__ -- the original excepthook; don't touch!
exception
Exception 
exception code
exception encoding
exception end
exception errno
exception filename
exception is raised, and the stack size is unmodified.  32k bytes
exception is raised if the entry asked for cannot be found.
exception is raised.  If the specified size is invalid, a ValueError
exception lineno
exception msg
exception object
exception offset
exception print_file_and_line
exception reason
exceptions
exceptions.ArithmeticError
exceptions.AssertionError
exceptions.AttributeError
exceptions.BaseException
exceptions bootstrapping error.
exceptions.BufferError
exceptions.BytesWarning
exceptions.DeprecationWarning
exceptions.EnvironmentError
exceptions.EOFError
exceptions.Exception
exceptions.FloatingPointError
Exceptions found here are defined both in the exceptions module and the
exceptions.FutureWarning
exceptions.GeneratorExit
exceptions.ImportError
exceptions.ImportWarning
exceptions.IndentationError
exceptions.IndexError
exceptions.IOError
exceptions.KeyboardInterrupt
exceptions.KeyError
exceptions.LookupError
exceptions.MemoryError
exceptions must be classes, or instances, not %s
exceptions must be old-style classes or derived from BaseException, not %s
exceptions must derive from BaseException in 3.x
exceptions.NameError
exceptions.NotImplementedError
exceptions.OSError
exceptions.OverflowError
exceptions.PendingDeprecationWarning
exceptions.ReferenceError
exceptions.RuntimeError
exceptions.RuntimeWarning
exceptions.StandardError
exceptions.StopIteration
exceptions.SyntaxError
exceptions.SyntaxWarning
exceptions.SystemError
exceptions.SystemExit
exceptions.TabError
exception start
exception strerror
exceptions.TypeError
exceptions.UnboundLocalError
exceptions.UnicodeDecodeError
exceptions.UnicodeEncodeError
exceptions.UnicodeError
exceptions.UnicodeTranslateError
exceptions.UnicodeWarning
exceptions.UserWarning
exceptions.ValueError
exceptions.Warning
exceptions.ZeroDivisionError
exception text
except that the type of objects stored in them is constrained.  The
excess ')' in getargs format
exc_info
exc_info() -- return thread-safe information about the current exception
exc_info() -> (type, value, traceback)
exc_info() will return (None,None,None) until another exception is raised
EXCLAMATIO
EXCLAMATION
Excluded frozen object named %.200s
((exc)->n_type) == (299)
EX_CONFIG
exc_traceback
exc_traceback -- traceback of exception currently being handled
exc_type
exc_type -- type of exception currently being handled
exc_value
exc_value -- value of exception currently being handled
EX_DATAERR
exec: arg 1 must be a string, file, or code object
exec: arg 2 must be a dictionary or None
exec: arg 3 must be a mapping or None
execfile
execfile(filename[, globals[, locals]])
execfile() not supported in 3.x; use exec()
exec_prefix
exec_prefix -- prefix used to find the machine-specific Python library
exec_stmt
executable
executable -- absolute path of the executable binary of the Python interpreter
Execute an executable path with arguments, replacing current process.
Execute a path with arguments and environment, replacing current process.
Execute the command (a string) in a subshell.
execv() arg 2 must be a tuple or list
execv() arg 2 must contain only strings
execv() arg 2 must not be empty
execve() arg 2 must be a tuple or list
execve() arg 3 must be a mapping object
execve(): env.keys() or env.values() is not a list
execve(path, args, env)
execv(path, args)
Exercises C API.  Returns True.
EXHAUSTION
EX_IOERR
existence, or the inclusive-OR of R_OK, W_OK, and X_OK.
existing directory
Existing exports of data: object cannot be re-sized
exist; without it, an exception is raised in that case.
__exit__
__exit__(*excinfo) -> None.  Closes the file.
exit() -- exit the interpreter by raising SystemExit
exitfunc
exitfunc -- if sys.exitfunc exists, this routine is called when Python exits
_exit(status)
exit([status])
exit status will be one (i.e., failure).
Exit the interpreter by raising SystemExit(status).
exit_thread
(exit_thread() is an obsolete synonym)
Exit to the system with specified status, without normal exit processing.
EX_NOHOST
EX_NOINPUT
EX_NOPERM
EX_NOUSER
EX_OSERR
EX_OSFILE
expandtabs
Expand tabs in a string, i.e. replace them by one or more spaces,
expandtabs(string, [tabsize]) -> string
expected a character buffer object
expected ':' after format specifier
expected an indented block
Expected an int or long as second argument to ldexp.
expected a readable buffer object
expected a single-segment buffer object
expected a sortwrapperobject
expected a writeable buffer object
expected %d arguments, got %zd
expected %d arguments, not %.50s
expected %d arguments, not %d
expected int/long, %s found
expected read buffer, %.200s found
expected %s node, got %.400s
expected some sort of boolop, but got %.400s
expected some sort of cmpop, but got %.400s
expected some sort of excepthandler, but got %.400s
expected some sort of expr, but got %.400s
expected some sort of expr_context, but got %.400s
expected some sort of mod, but got %.400s
expected some sort of operator, but got %.400s
expected some sort of slice, but got %.400s
expected some sort of stmt, but got %.400s
expected some sort of unaryop, but got %.400s
expected string or buffer
expected string or Unicode object, %.200s found
expected string without null bytes
expected tuple for closure, got '%.100s'
expected != ((void *)0)
expensive comparison operations, this can be an improvement over the more
               expiration
               expiration.
expm1(x)
exported buffer does not have any shape information associated to it
expr_context
Expression
expression too long
exprlist
EX_PROTOCOL
expr_stmt
EX_SOFTWARE
EX_TEMPFAIL
extend(array or iterable)
extended slice
extended slice invalid in nested slice
extend() -- extend array by appending multiple elements from an iterable
extendleft
Extends this array with data from the unicode string ustr.
Extend the left side of the deque with elements from the iterable
Extend the right side of the deque with elements from the iterable
extend to the end of the target object (or with the specified size).
EXTENSION
_extension_cache
extension modules, so that extension modules can use the Python import
_extension_registry
extra_bits == 2 || extra_bits == 3
Extracts a device major number from a raw device number.
Extracts a device minor number from a raw device number.
EXTRA-HIG
extra_ivars
EXTRA-LO
extra_zeros_cnt >= 0
ExtSlice
ExtSlice field "dims" must be a list, not a %.200s
EXT specifies code <= 0
EX_UNAVAILABLE
EX_USAGE
EYBEYFILI
fabs(y) < fabs(x)
facility
FACSIMIL
factorial
factorial() not defined for negative values
factorial() only accepts integral values
factorial(x) -> Integral
Factory for default value called by __missing__().
FAHRENHEIT
Failed to import %.200s because the import lockis held by another thread.
Failed to open /dev/urandom
Failed to read bytes from /dev/urandom
Failed to read %zi bytes from /dev/urandom
fails or if it does provide enough data to seed PRNG.
fall back to UTC. If the TZ environment variable is not set, the local
False otherwise.
fancy_roundup
FANEROSI
f;array item must be float
fast_function
fast mode: can't pickle cyclic objects including object type %s at %p
fast_save_leave
Fatal Python error: %s
FATHATAN
f_bavail
fbits <= 8388608
f_blocks
f_builtins
fchdir(fildes)
fchmod(fd, mode)
fchown(fd, uid, gid)
      f = classmethod(f)
fcntl(fd, opt, [arg])
fcntl string arg too long
fdatasync
fdatasync(fildes)
FD_CLOEXEC
fd -- either an integer, or an object with a fileno() method returning an
fd is the target file descriptor of the operation
fd is the target file descriptor of the operation.
<fdopen>
fdopen(fd [, mode='r' [, bufsize]]) -> file_object
fd to the numeric uid and gid.
FEBRUARY
FELLOWSHIP
FESTIVAL
f_exc_traceback
f_exc_traceback has been removed in 3.x
f_exc_type
f_exc_type has been removed in 3.x
f_exc_value
f_exc_value has been removed in 3.x
f_favail
f->f_back == tstate->frame
f->f_back == ((void *)0)
f->f_code == code
ffffffffffffffff
f->f_fp == ((void *)0)
    'f'         floating point     4 
f_frsize
fget is a function to be used for getting an attribute value, and likewise
F_GETLEASE
F_GETLK64
F_GETOWN
F_GETSIG
FGHIJKLMN
f_globals
fhi < 268435456
f(h(j(l(n(p(
field arg is required for keyword
field args is required for FunctionDef
field args is required for Lambda
field attr is required for Attribute
field body is required for Exec
field body is required for Expression
field body is required for IfExp
field body is required for Lambda
field context_expr is required for With
field ctx is required for Attribute
field ctx is required for List
field ctx is required for Name
field ctx is required for Subscript
field ctx is required for Tuple
field elt is required for GeneratorExp
field elt is required for ListComp
field elt is required for SetComp
field func is required for Call
field id is required for Name
field iter is required for comprehension
field iter is required for For
field key is required for DictComp
field left is required for BinOp
field left is required for Compare
field name is required for alias
field name is required for ClassDef
field name is required for FunctionDef
fieldnameiterator
field n is required for Num
field operand is required for UnaryOp
field op is required for AugAssign
field op is required for BinOp
field op is required for BoolOp
field op is required for UnaryOp
field orelse is required for IfExp
field right is required for BinOp
 fields' descriptions for details.
field s is required for Str
field slice is required for Subscript
field target is required for AugAssign
field target is required for comprehension
field target is required for For
field test is required for Assert
field test is required for If
field test is required for IfExp
field test is required for While
 field tm_year is the actual year, not year - 1900.  See individual
field value is required for Assign
field value is required for Attribute
field value is required for AugAssign
field value is required for DictComp
field value is required for Expr
field value is required for Index
field value is required for keyword
field value is required for Repr
field value is required for Subscript
Fifth element of tuple returned by %s must be an iterator, not %s
FIGURE-1
FIGURE-2
FIGURE-3
__file__
  File "
  File "%.500s", line %d, in %.500s
file: a file-like object (stream); defaults to the current sys.stdout.
file() constructor not accessible in restricted mode
file descriptor.
file descriptor cannot be a negative integer (%i)
file descriptor of the file to lock or unlock, and operation is one of the
filedescriptor out of range in select()
file encoding
file_flush
file_init
file_input
file_isatty
file mode ('r', 'U', 'w', 'a', possibly with 'b' or '+' added)
filename
file name
file(name[, mode[, buffering]]) -> file object
file_new
fileno() -> int
fileno() -> integer
fileno() -> integer "file descriptor".
fileno() returned a non-integer
fileno() -- return underlying file descriptor
File not open for %s
file object required for import (type code %d)
file   : program read from script file
file_read
file_readinto
file_readlines
file_seek
file.softspace not supported in 3.x
file_tell
file_truncate
file_write
file_writelines
fill_classic_mro
fill_file_fields
fill_number
fillvalue
filter(function or None, sequence) -> list, tuple, or string
filterstring
filterunicode
filter(): unsubscriptable tuple
finalbody
(finalbody) && _asdl_i < (finalbody)->size
'finally' pops bad exception
finally != ((void *)0)
FINANCIAL
findall(string[, pos[, endpos]]) --> list.
find_global
finditer
finditer(string[, pos[, endpos]]) --> iterator.
find_key
find_module
find_module(fullname, path=None) -> self or None.
find_module(name, [path]) -> (file, filename, (suffix, mode, type))
find/rfind/index/rindex
find(s, sub [,start [,end]]) -> in
Find x!. Raise a ValueError if x is negative or non-integral.
FINGERNAILS
 (finish)
__finite
first arg must be callable
first argument must be a sequence
first argument must be callable
first argument must be sequence of strings
first iterable until it is exhausted, then elements from the next
FIRST set for '%s': {
FISHHOOK
FIVE-LIN
FIXED-FOR
flag indicating that a space needs to be printed; used by print
__flags__
flags is an integer and can have the following bits turned on:
Flags provided through command line arguments or environment vars.
FLATNESS
FLATTENE
FLEUR-DE-LIS
f_lineno
f_lineno can only be set by a line trace function
flo <= 16777216
__float__
float and with a positive denominator.
float() argument must be a string or a number
float argument required, not %.200s
float.as_integer_ratio() -> (int, int)
#   <float at %p, refcnt=%ld, val=%s>
float<d>
float division by zero
float divmod()
float<f>
float_floor_div
float.__format__(format_spec) -> string
>>> float.fromhex('0x1.ffffp10')
>>> float.fromhex('-0x1p-1074')
float.fromhex(string) -> float
float.__getformat__(typestr) -> string
float.hex() -> string
float_info
float_info -- a dict with information about the float inplementation.
FloatingPointError
    floating point numbers. (New in version 2.4)
Floating point operation failed.
float modulo
float(r) didn't return a float
float_repr_style
float_repr_style -- string indicating the style of repr() output for floats
__float__ returned non-float (type %.200s)
float_richcompare
float.__setformat__(typestr, fmt) -> None
float_subtype_new
               float time and the timer may restart then [Unix only]
float too large to pack with d format
float too large to pack with f format
float(x) -> floating point number
f_locals
flock(fd, operation)
flockfile
floordiv
__floordiv__
FloorDiv
floordiv(a, b) -- Same as a // b.
floor(x)
FLORETTE
FLOURISH
flow_stmt
FLT_RADIX -- radix of exponent
FLT_ROUNDS -- addition rounds
flush(): does nothing.
flush( [length] ) -- Return a string containing any remaining
flush( [mode] ) -- Return a string containing any remaining compressed data.
flush() -> None.  Flush the internal I/O buffer.
fmod(x, y)
fmt, starting at offset. Requires len(buffer[offset:]) >= calcsize(fmt).
f_namemax
F_NOTIFY
fobj->unlocked_count >= 0
fold_binops_on_constants
fold_unaryops_on_constants
FOLLOWING
following values:
follow uncased characters and lowercase characters only cased ones.
FOOTSTOOL
  for a class object:  its attributes, and recursively the attributes
for a host.  The host argument is a string giving a host name or IP number.
  for a module object: the module's attributes.
For a more advanced concept, see the classmethod builtin.
  for any other object: its attributes, its class's attributes, and
For backward compatibility. File objects now include the performance
FORBIDDENBYTE, as expected.
force write of file with filedescriptor to disk.
for depth is zero, returning the frame at the top of the call stack.
for documentation.
For example, product(A, B) returns the same as:  ((x,y) for x in A for y in B).
For example, range(4) returns [0, 1, 2, 3].  The end point is omitted!
For example, reduce(lambda x, y: x+y, [1, 2, 3, 4, 5]) calculates
For field "body" must be a list, not a %.200s
For field "orelse" must be a list, not a %.200s
For IP sockets, the address is a pair (hostaddr, port).
Fork a child process.
Fork a new process with a new pseudo-terminal as controlling tty.
fork() -> pid
forkpty() -> (pid, master_fd)
    for k, v in iterable:
__format__
__format__ arg must be str or unicode, not %s
format expects arg 2 to be string or unicode, not %.100s
format_float_short
format of floating point numbers used by the C type named by typestr.
format requires a mapping
__format__ requires str or unicode
format_spec defaults to ""
Format specifier missing precision
Formats the float according to format_spec.
formatted integer is too long (precision too large?)
_formatter_field_name_split
formatteriterator
formatteriter_next
_formatter_parser
FORMATTING
format(value[, format_spec]) -> string
format_version
format != ((void *)0)
For most object types, eval(repr(object)) == object.
Forms a shorter iterator from selected data elements using the
for_stmt
for subsequently created threads, and must be 0 (use platform or
for the specified number of times.  If not specified, returns the object
for use with low-level network functions.
FOSTERING
found, return S and two empty strings.
found, returns B and two empty bytearray objects.
FOUNTAIN
FOUR-LIN
FOUR-PER-E
FOUR-STRIN
FOURTEEN
Fourth element of tuple returned by %s must be an iterator, not %s
fpathconf
fpathconf(fd, name) -> integer
((fpdef_node)->n_type) == 265
fp_readl
frac_digits
<fraction>
Fractions of a second may be present if the system clock provides them.
FRAGMENT
FRAGRANT
frame does not exist
frame->f_exc_traceback == ((void *)0)
frame->f_exc_type != ((void *)0)
frame->f_exc_value == ((void *)0)
frame_setlineno
frame != ((void *)0)
freeaddrinfo
free variable '%.200s' referenced before assignment in enclosing scope
freevars of %s: %s
f_restricted
FRETBOARD
frexp() result out of range
frexp(x)
FRICATIVE
  from cStringIO import StringIO
from deflateEnd()
from each of the argument sequences.  The returned list is truncated
fromfd(fd) -> epoll
fromfd(fd, family, type[, proto]) -> socket object
fromfile
fromfile(f, n)
fromfile() -- read items from a file object
from __future__ imports must occur at the beginning of the file
from-import-* object has no __dict__ and no __all__
from inflateEnd()
from_iterable
fromkeys
from left to right, so as to reduce the sequence to a single value.
fromlist
fromlist() -- append items from the list
fromlist is not empty.  Level is used to determine whether to perform 
fromlist(list)
fromstring
fromstring() -- append items from the string
fromstring(string)
from the group database, in order:
from the result.
from != to
fromunicode
fromunicode() may only be called on type 'u' arrays
fromunicode(ustr)
FRONT-TILTE
<frozen>
frozen object %.200s is not a code object
frozenset
frozenset()
frozenset() -> empty frozenset object
frozenset(iterable) -> frozenset object
fseeko64
fset is a function for setting, and fdel a function for del'ing, an
F_SETLEASE
F_SETLK64
F_SETLKW
F_SETLKW64
F_SETOWN
F_SETSIG
f->size >= 1 && f->size <= 4
F.__sizeof__() -> size of F in memory, in bytes
fstat(fd) -> stat result
     f = staticmethod(f)
fstatvfs
fstatvfs64
fstatvfs(fd) -> statvfs result
fsum(iterable)
fsync(fildes)
ftello64
ftruncate
ftruncate64
ftruncate(fd, length)
full frozen module name too long
full generality of StringIO, but it provides enough for most
FULLNESS
FULLWIDT
fully qualified (dotted) module name. It returns the imported
fully qualified (dotted) module name. It returns the zipimporter
__func__
func_closure
func_code
func_dealloc
func_defaults
func_dict
func_doc
func_globals
func_name
function
function '%.100s' uses import * and bare exec, which are illegal because it %s
FUNCTIONA
Functional tools for creating and using iterators.
    function(*args, **keywords).
function attributes not accessible in restricted mode
function but consumes less memory by returning an iterator instead of
function call
function call.  See the debugger chapter in the library manual.
function(code, globals[, name[, argdefs[, closure]]])
FunctionDef
FunctionDef field "body" must be a list, not a %.200s
FunctionDef field "decorator_list" must be a list, not a %.200s
function is called with an argument list consisting of the corresponding
function is None, return the items that are true.  If sequence is a tuple
function object to use in future partial calls
function returns; the return value is ignored.  The thread will also exit
Functions:
<function %s at %p>
function's dictionary may not be deleted
functions for complex numbers.
Functions to convert between Python values and C structs represented
function with positional arguments from the tuple args and keyword arguments
functools
_functools
functools.partial
f->unlocked_count >= 0
funlockfile
further I/O operations.  close() may be called more than once without
__future__
future calls return ints. 
future_check_features
future feature %.100s is not defined
FutureWarning
f != ((void *)0)
f.xreadlines() not supported in 3.x, try 'for line in f' instead
__fxstat64
GAETTA-PILLA
gaierror
gai_strerror
gallop_left
gallop_right
Gamma function at x.
gamma(x)
garbage collection
GARSHUNI
GATHERIN
GATHERING
GAUNTLET
GAYANUKITTA
GBAKURUNEN
gbo->currkey == ((void *)0)
gbo->currkey != ((void *)0)
gc: %.100s <%.100s instance at %p>
gc: %.100s <%.100s %p>
[GCC 4.6.3]
gc: collecting generation %d...
gc couldn't allocate "__del__"
gc couldn't create gc.garbage list
gc: done
gc: done, %zd unreachable, %zd uncollectable
gc->gc.gc_refs > 0
gc->gc.gc_refs != 0
gc->gc.gc_refs == (-3)
gc_list_merge
GC object already tracked
gc: objects in each generation:
gc_refs > 0 || gc_refs == (-3) || gc_refs == (-2)
ge(a, b) -- Same as a>=b.
GEMINATIO
gen_dealloc
GENERAL_NAME_free
GENERAL_NAME_print
generates the numbers in the range on demand.  For looping, this is 
generation
generator
generator already executing
GeneratorExit
GeneratorExp
GeneratorExp field "generators" must be a list, not a %.200s
generator expression
Generator expression must be parenthesized if not sole argument
generator ignored GeneratorExit
<generator object %.200s at %p>
generators
(generators) && _asdl_i < (generators)->size
<genexpr>
GENITIVE
gen_send_ex
GEOMETRI
GEOMETRICALL
GERSHAYIM
getaddrinfo
getaddrinfo() argument 1 must be string or None
getaddrinfo(host, port [, family, socktype, proto, flags])
Get a named attribute from an object; getattr(x, 'y') is equivalent to x.y.
Get an iterator from an object.  In the first form, the argument must
getargs.cleanup_buffer
getargs.cleanup_ptr
getarrayitem
Get a socket option.  See the Unix manual for level and option.
__getattr__
getattr(): attribute name must be string
__getattribute__
getattr(object, name[, default]) -> value
getcheckinterval
getcheckinterval() -> current check interval; see setcheckinterval().
getclassname
get_code
get_code(fullname) -> code object.
getcodesize
get_count
get_count() -> (count0, count1, count2)
get_count() -- Return the current collection counts.
getc_unlocked
getcwd() -> path
getcwdu() -> path
get_data
get_data(pathname) -> string with file data.
get_debug
get_debug() -> flags
get_debug() -- Get debugging flags.
getdefaultencoding
getdefaultencoding() -> string
getdefaulttimeout
getdefaulttimeout() -> timeout
getdlopenflags
getdlopenflags() -> int
getdlopenflags() -- returns flags to be used for dlopen() calls
getegid() -> egid
geteuid() -> euid
get_filename
get_filename(fullname) -> filename string.
getfilesystemencoding
getfilesystemencoding() -> string
__getformat__
__getformat__() argument 1 must be 'double' or 'float'
__getformat__() argument must be string, not %.500s
_getframe
_getframe([depth]) -> frameobject
get_frozen_object
getgid() -> gid
getgrall
getgrall() -> list of tuples
getgrent
getgrgid
getgrgid(): gid not found: %d
getgrgid(id) -> tuple
getgrnam
getgrnam(): name not found: %s
getgrnam(name) -> tuple
getgroups
getgroups() -> list of group IDs
Get host and port for a sockaddr.
gethostbyaddr
gethostbyaddr(host) -> (name, aliaslist, addresslist)
gethostbyaddr_r
gethostbyname
gethostbyname_ex
gethostbyname_ex(host) -> (name, aliaslist, addresslist)
gethostbyname(host) -> address
gethostbyname_r
gethostname
gethostname() -> string
get_ident
get_ident() -> integer
__getinitargs__
getinstclassname
__getitem__
getitem(a, b) -- Same as a[b].
__getitem__ not supported for exception classes in 3.x; use args attribute
getitimer
getitimer() -- get current value of timer [Unix only]
getitimer(which)
get_len_of_range
get_line
getloadavg
getloadavg() -> (float, float, float)
get_locale_info
getlogin
getlogin() -> string
get_long
get_longlong
getlower
get_magic
get_magic() -> string
getnameinfo
getnameinfo() argument 1 must be a tuple
getnameinfo(sockaddr, flags) --> (host, port)
__getnewargs__
__getnewargs__ should return a tuple, not '%.200s'
__get__(None, None) is invalid
getobjects
get_objects
get_objects() -> [...]
get_objects() -- Return a list of all objects tracked by the collector.
get_path_importer
getpeername
getpeername() -> address info
getpeername() -- return remote address [*]
getpgid(pid) -> pgid
getpgrp() -> pgrp
getpid() -> pid
getppid() -> ppid
getprofile
getprofile()
getprofile() -- get the global profiling function
getprotobyname
getprotobyname(name) -> integer
getpwall
getpwall() -> list_of_entries
getpwent
getpwnam
getpwnam(): name not found: %s
getpwnam(name) -> (pw_name,pw_passwd,pw_uid,
getpwuid
getpwuid(): uid not found: %d
getpwuid(uid) -> (pw_name,pw_passwd,pw_uid,
get_pylong
getrandbits
getrandbits(k) -> x.  Generates a long int with k random bits.
getrecursionlimit
getrecursionlimit()
getrecursionlimit() -- return the max recursion depth for the interpreter
getrefcount
getrefcount(object) -> integer
getrefcount() -- return the reference count for an object (plus one :-)
get_referents
get_referents(*objs) -> list
get_referents() -- Return the list of objects that an object refers to.
get_referrers
get_referrers(*objs) -> list
get_referrers() -- Return the list of objects that refer to an object.
getresgid
getresgid() -> (rgid, egid, sgid)
getresuid
getresuid() -> (ruid, euid, suid)
getservbyname
getservbyname(servicename[, protocolname]) -> integer
getservbyport
getservbyport: port must be 0-65535.
getservbyport(port[, protocolname]) -> string
getset_descriptor
getsid(pid) -> sid
getsignal
getsignal() -- get the signal action for a given signal
getsignal(sig) -> action
getsizeof
getsizeof(object, default) -> int
getsizeof() -- return the size of an object in bytes
getslice
__getslice__
getslice(a, b, c) -- Same as a[b:c].
__getslice__ not supported for exception classes in 3.x; use args attribute
getsockaddrarg: AF_INET6 address must be tuple, not %.500s
getsockaddrarg: AF_INET address must be tuple, not %.500s
getsockaddrarg: AF_NETLINK address must be tuple, not %.500s
getsockaddrarg: AF_PACKET address must be tuple, not %.500s
getsockaddrarg: AF_TIPC address must be tuple, not %.500s
getsockaddrarg: bad family
getsockaddrarg: flowinfo must be 0-1048575.
getsockaddrarg: port must be 0-65535.
getsockaddrarg: protoNumber must be 0-65535.
getsockaddrarg: unknown Bluetooth protocol
getsockaddrarg: wrong format
getsockaddrlen: bad family
getsockaddrlen: unknown BT protocol
getsockname
getsockname() -> address info
getsockname() -- return local address
getsockopt
getsockopt buflen out of range
getsockopt(level, option[, buffersize]) -> value
getsockopt(level, optname[, buflen]) -- get socket options
get_source
get_source(fullname) -> source string.
getspall
getspall() -> list_of_entries
getspent
getspnam
getspnam(): name not found
getspnam(name) -> (sp_namp, sp_pwdp, sp_lstchg, sp_min, sp_max,
getstate
__getstate__
:getstate
getstate() -> state
getstate() -> tuple containing the current state.
get_suffixes
get_suffixes() -> [(suffix, mode, type), ...]
gettext(msg) -> string
Get the garbage collection debugging flags.
get_threshold
get_threshold() -- Return the current the collection thresholds.
get_threshold() -> (threshold0, threshold1, threshold2)
gettimeofday
gettimeout
gettimeout() -- return timeout or None
gettimeout() -> timeout
gettotalrefcount
gettrace
gettrace()
gettrace() -- get the global debug tracing function
Get tuple of the current process's real, effective, and saved group ids.
Get tuple of the current process's real, effective, and saved user ids.
getuid() -> uid
get_ulong
get_ulonglong
getvalue
getvalue() -- Finish picking a list-based pickle
getvalue([use_pos]) -- Get the string value.
getweakrefcount
getweakrefcount(object) -- return the number of weak references
getweakrefs
getweakrefs(object) -- return a list of all weak reference objects
g->gc.gc_refs != (-2)
  gid    - numeric ID of the group
gi_frame
gi_running
given base, which defaults to 10.  The string s must consist
given name is found, return the corresponding Unicode
given, only the first count occurrences are replaced.
given, only the first maxsplit occurrences are replaced.
given, return the frame object that many calls below the top of the stack.
given, ValueError is raised.
giving in seconds, or None.  Setting a timeout of None disables
GLAGOLITI
GLIBC_2.0
GLIBC_2.1
GLIBC_2.1.2
GLIBC_2.2
GLIBC_2.3
GLIBC_2.3.2
GLIBC_2.3.3
GLIBC_2.4
GLISSAND
Global and instance pickles are not supported.
GLOBAL_EXPLICIT
Global field "names" must be a list, not a %.200s
GLOBAL_IMPLICIT
global name '%.200s' is not defined
__globals__
globals and locals cannot be NULL
globals and locals.  If only globals is given, locals defaults to it.
globals() -> dictionary
globals must be a dict
globals must be a real dict; try eval(expr, {}, mapping)
globals: %s
global_stmt
globals != ((void *)0)
__gmon_start__
gmtime() -- convert seconds since Epoch to UTC tuple
gmtime([seconds]) -> (tm_year, tm_mon, tm_mday, tm_hour, tm_min,
GMT).  When 'seconds' is not passed in, convert the current time instead.
GNAVIYANI
gnu_dev_major
gnu_dev_makedev
gnu_dev_minor
go for it. :-)  
GORGOSYNTHETON
GORGOTERI
GORTHMIKO
gotten from a fileno() method call on one of those.
grammar.c:findlabel()
GRAVE-ACUTE-GRAVE
GRAVE-MACRON
GRAVEYAR
GREATEREQUAL
GREATER-THA
GREATER-THAN
GREATNESS
GREGORIA
  (gr_name,gr_passwd,gr_gid,gr_mem)
GRONTHISMATA
groupby(iterable[, keyfunc]) -> create an iterator which returns
groupby(iterable[, keyfunc]) --> sub-iterators grouped by value of keyfunc(v)
groupdict
Group entries are reported as 4-tuples containing the following fields
_grouper_next
group id
group id.
group ID of owner
group id too big
groupindex
grouping
group memebers
group name
groups must be integers
gr_passwd
grp.struct_group
grp.struct_group: Results from getgr*() routines.
gt(a, b) -- Same as a>b.
GUARDEDNESS
GURAMUTON
h2py script.
half_cmp
half_richcompare
HALFWIDT
HAN-AKAT
Handle an exception by displaying it with a traceback on sys.stderr.
handle_range_longs
handler must be callable
handlers
(handlers) && _asdl_i < (handlers)->size
handle_weakrefs
handling of normal slices.
handling scheme.  Default is 'strict' meaning that encoding errors raise
handling scheme. Default is 'strict' meaning that encoding errors raise
HANGUL SYLLABLE 
HARDNESS
Hardware address must be 8 bytes or less
HARMONIC
h;array item must be integer
hasattr(): attribute name must be string
hasattr(object, name) -> bool
has_finalizer
__hash__
_hashlib
?_hashlib.HASH
hash(object) -> integer
hash_randomization
__hash__() should return an int
has_ipv6
HAUPTSTIMME
have an errno attribute set to EACCES or EAGAIN (depending on the operating
have upper case and the rest lower case.
having to sort the list after each insertion. For long lists of items with
HBASA-ESAS
HCI_DATA_DIR
HCI_FILTER
HCI_TIME_STAMP
hCZA"jCZA
HEADSTON
HEADSTROKE
HEKUTAARU
__hello__
hello.pys
Hello world...N(
helper for pickle
HERMIONIA
HERMITIA
__h_errno_location
hexadecimal string too long to convert
hexadecimal value too large to represent as a float
hex() argument can't be converted to hex
hexdigest
hexdigest() -- return the current digest as a string of hexadecimal digits
hex(number) -> string
__hex__ returned non-string (type %.200s)
hexstr must contain an even number of hex digits (upper or lower case).
hexversion
hexversion -- version information encoded as a single integer
HIEROGLYP
HIEUH-MIEUM
HIEUH-NIEUN
HIEUH-PIEUP
HIEUH-RIEUL
HIEUH-SIOS
HIGHEST_PROTOCOL
High performance data structures.
HIGH-REVERSED-
hijklmnopqrstuvwxyz{|}
HIJKLM@NOPQRST@@UV""""""W"""""X""""""""""""""""""""""""""""""""""""YZ[\"""]"""^_"""""`"""a""""""""""bcd""""""ef""""""""g""""""""""""""h""""""""i""""e""""""""""""""""""""h""""""j""""""""""""""""kl"""""""""""""""""mn"""""""""""""""""o"""""""""p""qrstuvwxyz
    historical format, version 1 (added in Python 2.4) shares interned
H	K	N	Q	T	W	Z	]	`	c	f	i	l	o	r	u	x	{	~	
h + nops == codelen
home directory
HOMOTHETI
HOMOTHETIC
HORIZONTA
HORIZONTAL
HORIZONTAL-00-00
HORIZONTAL-00-01
HORIZONTAL-00-02
HORIZONTAL-00-03
HORIZONTAL-00-04
HORIZONTAL-00-05
HORIZONTAL-00-06
HORIZONTAL-01-00
HORIZONTAL-01-01
HORIZONTAL-01-02
HORIZONTAL-01-03
HORIZONTAL-01-04
HORIZONTAL-01-05
HORIZONTAL-01-06
HORIZONTAL-02-00
HORIZONTAL-02-01
HORIZONTAL-02-02
HORIZONTAL-02-03
HORIZONTAL-02-04
HORIZONTAL-02-05
HORIZONTAL-02-06
HORIZONTAL-03-00
HORIZONTAL-03-01
HORIZONTAL-03-02
HORIZONTAL-03-03
HORIZONTAL-03-04
HORIZONTAL-03-05
HORIZONTAL-03-06
HORIZONTAL-04-00
HORIZONTAL-04-01
HORIZONTAL-04-02
HORIZONTAL-04-03
HORIZONTAL-04-04
HORIZONTAL-04-05
HORIZONTAL-04-06
HORIZONTAL-05-00
HORIZONTAL-05-01
HORIZONTAL-05-02
HORIZONTAL-05-03
HORIZONTAL-05-04
HORIZONTAL-05-05
HORIZONTAL-05-06
HORIZONTAL-06-00
HORIZONTAL-06-01
HORIZONTAL-06-02
HORIZONTAL-06-03
HORIZONTAL-06-04
HORIZONTAL-06-05
HORIZONTAL-06-06
HORIZONTALL
HOURGLASS
hour out of range
  hours (0-23)
hours, range [0, 23]
-h     : print this help message and exit (also --help)
  h:short; H:unsigned short; i:int; I:unsigned int;
    'h'         signed integer     2 
hstrerror
htonl(integer) -> integer
htons(integer) -> integer
http://www.unicode.org/reports/tr44/tr44-4.html).
HUARADDO
huge integer: number of bits overflows a Py_ssize_t
    'H'         unsigned integer   2 
HYPHENATIO
HYPHEN-MINUS
HYPODIASTOLE
hypot(x, y)
HYSTERESI
i >= 0 && i < deque->len
i>=0 && i<(((PyVarObject*)(ap))->ob_size)
i2a_ASN1_INTEGER
i2d_X509
i / 2 < seq->size
|i:acquire
__iadd__
__iand__
i;array item must be integer
I_ATMARK
I_CANPUT
ICELANDIC-YR
ICHIMATOS
I_CKBAND
__iconcat__
id|d:setitimer
|i:decompressobj
IDENTICA
IDENTIFICATION
IDEOGRAP
IDEOGRAPH-2F800
IDEOGRAPH-2F801
IDEOGRAPH-2F802
IDEOGRAPH-2F803
IDEOGRAPH-2F804
IDEOGRAPH-2F805
IDEOGRAPH-2F806
IDEOGRAPH-2F807
IDEOGRAPH-2F808
IDEOGRAPH-2F809
IDEOGRAPH-2F80A
IDEOGRAPH-2F80B
IDEOGRAPH-2F80C
IDEOGRAPH-2F80D
IDEOGRAPH-2F80E
IDEOGRAPH-2F80F
IDEOGRAPH-2F810
IDEOGRAPH-2F811
IDEOGRAPH-2F812
IDEOGRAPH-2F813
IDEOGRAPH-2F814
IDEOGRAPH-2F815
IDEOGRAPH-2F816
IDEOGRAPH-2F817
IDEOGRAPH-2F818
IDEOGRAPH-2F819
IDEOGRAPH-2F81A
IDEOGRAPH-2F81B
IDEOGRAPH-2F81C
IDEOGRAPH-2F81D
IDEOGRAPH-2F81E
IDEOGRAPH-2F81F
IDEOGRAPH-2F820
IDEOGRAPH-2F821
IDEOGRAPH-2F822
IDEOGRAPH-2F823
IDEOGRAPH-2F824
IDEOGRAPH-2F825
IDEOGRAPH-2F826
IDEOGRAPH-2F827
IDEOGRAPH-2F828
IDEOGRAPH-2F829
IDEOGRAPH-2F82A
IDEOGRAPH-2F82B
IDEOGRAPH-2F82C
IDEOGRAPH-2F82D
IDEOGRAPH-2F82E
IDEOGRAPH-2F82F
IDEOGRAPH-2F830
IDEOGRAPH-2F831
IDEOGRAPH-2F832
IDEOGRAPH-2F833
IDEOGRAPH-2F834
IDEOGRAPH-2F835
IDEOGRAPH-2F836
IDEOGRAPH-2F837
IDEOGRAPH-2F838
IDEOGRAPH-2F839
IDEOGRAPH-2F83A
IDEOGRAPH-2F83B
IDEOGRAPH-2F83C
IDEOGRAPH-2F83D
IDEOGRAPH-2F83E
IDEOGRAPH-2F83F
IDEOGRAPH-2F840
IDEOGRAPH-2F841
IDEOGRAPH-2F842
IDEOGRAPH-2F843
IDEOGRAPH-2F844
IDEOGRAPH-2F845
IDEOGRAPH-2F846
IDEOGRAPH-2F847
IDEOGRAPH-2F848
IDEOGRAPH-2F849
IDEOGRAPH-2F84A
IDEOGRAPH-2F84B
IDEOGRAPH-2F84C
IDEOGRAPH-2F84D
IDEOGRAPH-2F84E
IDEOGRAPH-2F84F
IDEOGRAPH-2F850
IDEOGRAPH-2F851
IDEOGRAPH-2F852
IDEOGRAPH-2F853
IDEOGRAPH-2F854
IDEOGRAPH-2F855
IDEOGRAPH-2F856
IDEOGRAPH-2F857
IDEOGRAPH-2F858
IDEOGRAPH-2F859
IDEOGRAPH-2F85A
IDEOGRAPH-2F85B
IDEOGRAPH-2F85C
IDEOGRAPH-2F85D
IDEOGRAPH-2F85E
IDEOGRAPH-2F85F
IDEOGRAPH-2F860
IDEOGRAPH-2F861
IDEOGRAPH-2F862
IDEOGRAPH-2F863
IDEOGRAPH-2F864
IDEOGRAPH-2F865
IDEOGRAPH-2F866
IDEOGRAPH-2F867
IDEOGRAPH-2F868
IDEOGRAPH-2F869
IDEOGRAPH-2F86A
IDEOGRAPH-2F86B
IDEOGRAPH-2F86C
IDEOGRAPH-2F86D
IDEOGRAPH-2F86E
IDEOGRAPH-2F86F
IDEOGRAPH-2F870
IDEOGRAPH-2F871
IDEOGRAPH-2F872
IDEOGRAPH-2F873
IDEOGRAPH-2F874
IDEOGRAPH-2F875
IDEOGRAPH-2F876
IDEOGRAPH-2F877
IDEOGRAPH-2F878
IDEOGRAPH-2F879
IDEOGRAPH-2F87A
IDEOGRAPH-2F87B
IDEOGRAPH-2F87C
IDEOGRAPH-2F87D
IDEOGRAPH-2F87E
IDEOGRAPH-2F87F
IDEOGRAPH-2F880
IDEOGRAPH-2F881
IDEOGRAPH-2F882
IDEOGRAPH-2F883
IDEOGRAPH-2F884
IDEOGRAPH-2F885
IDEOGRAPH-2F886
IDEOGRAPH-2F887
IDEOGRAPH-2F888
IDEOGRAPH-2F889
IDEOGRAPH-2F88A
IDEOGRAPH-2F88B
IDEOGRAPH-2F88C
IDEOGRAPH-2F88D
IDEOGRAPH-2F88E
IDEOGRAPH-2F88F
IDEOGRAPH-2F890
IDEOGRAPH-2F891
IDEOGRAPH-2F892
IDEOGRAPH-2F893
IDEOGRAPH-2F894
IDEOGRAPH-2F895
IDEOGRAPH-2F896
IDEOGRAPH-2F897
IDEOGRAPH-2F898
IDEOGRAPH-2F899
IDEOGRAPH-2F89A
IDEOGRAPH-2F89B
IDEOGRAPH-2F89C
IDEOGRAPH-2F89D
IDEOGRAPH-2F89E
IDEOGRAPH-2F89F
IDEOGRAPH-2F8A0
IDEOGRAPH-2F8A1
IDEOGRAPH-2F8A2
IDEOGRAPH-2F8A3
IDEOGRAPH-2F8A4
IDEOGRAPH-2F8A5
IDEOGRAPH-2F8A6
IDEOGRAPH-2F8A7
IDEOGRAPH-2F8A8
IDEOGRAPH-2F8A9
IDEOGRAPH-2F8AA
IDEOGRAPH-2F8AB
IDEOGRAPH-2F8AC
IDEOGRAPH-2F8AD
IDEOGRAPH-2F8AE
IDEOGRAPH-2F8AF
IDEOGRAPH-2F8B0
IDEOGRAPH-2F8B1
IDEOGRAPH-2F8B2
IDEOGRAPH-2F8B3
IDEOGRAPH-2F8B4
IDEOGRAPH-2F8B5
IDEOGRAPH-2F8B6
IDEOGRAPH-2F8B7
IDEOGRAPH-2F8B8
IDEOGRAPH-2F8B9
IDEOGRAPH-2F8BA
IDEOGRAPH-2F8BB
IDEOGRAPH-2F8BC
IDEOGRAPH-2F8BD
IDEOGRAPH-2F8BE
IDEOGRAPH-2F8BF
IDEOGRAPH-2F8C0
IDEOGRAPH-2F8C1
IDEOGRAPH-2F8C2
IDEOGRAPH-2F8C3
IDEOGRAPH-2F8C4
IDEOGRAPH-2F8C5
IDEOGRAPH-2F8C6
IDEOGRAPH-2F8C7
IDEOGRAPH-2F8C8
IDEOGRAPH-2F8C9
IDEOGRAPH-2F8CA
IDEOGRAPH-2F8CB
IDEOGRAPH-2F8CC
IDEOGRAPH-2F8CD
IDEOGRAPH-2F8CE
IDEOGRAPH-2F8CF
IDEOGRAPH-2F8D0
IDEOGRAPH-2F8D1
IDEOGRAPH-2F8D2
IDEOGRAPH-2F8D3
IDEOGRAPH-2F8D4
IDEOGRAPH-2F8D5
IDEOGRAPH-2F8D6
IDEOGRAPH-2F8D7
IDEOGRAPH-2F8D8
IDEOGRAPH-2F8D9
IDEOGRAPH-2F8DA
IDEOGRAPH-2F8DB
IDEOGRAPH-2F8DC
IDEOGRAPH-2F8DD
IDEOGRAPH-2F8DE
IDEOGRAPH-2F8DF
IDEOGRAPH-2F8E0
IDEOGRAPH-2F8E1
IDEOGRAPH-2F8E2
IDEOGRAPH-2F8E3
IDEOGRAPH-2F8E4
IDEOGRAPH-2F8E5
IDEOGRAPH-2F8E6
IDEOGRAPH-2F8E7
IDEOGRAPH-2F8E8
IDEOGRAPH-2F8E9
IDEOGRAPH-2F8EA
IDEOGRAPH-2F8EB
IDEOGRAPH-2F8EC
IDEOGRAPH-2F8ED
IDEOGRAPH-2F8EE
IDEOGRAPH-2F8EF
IDEOGRAPH-2F8F0
IDEOGRAPH-2F8F1
IDEOGRAPH-2F8F2
IDEOGRAPH-2F8F3
IDEOGRAPH-2F8F4
IDEOGRAPH-2F8F5
IDEOGRAPH-2F8F6
IDEOGRAPH-2F8F7
IDEOGRAPH-2F8F8
IDEOGRAPH-2F8F9
IDEOGRAPH-2F8FA
IDEOGRAPH-2F8FB
IDEOGRAPH-2F8FC
IDEOGRAPH-2F8FD
IDEOGRAPH-2F8FE
IDEOGRAPH-2F8FF
IDEOGRAPH-2F900
IDEOGRAPH-2F901
IDEOGRAPH-2F902
IDEOGRAPH-2F903
IDEOGRAPH-2F904
IDEOGRAPH-2F905
IDEOGRAPH-2F906
IDEOGRAPH-2F907
IDEOGRAPH-2F908
IDEOGRAPH-2F909
IDEOGRAPH-2F90A
IDEOGRAPH-2F90B
IDEOGRAPH-2F90C
IDEOGRAPH-2F90D
IDEOGRAPH-2F90E
IDEOGRAPH-2F90F
IDEOGRAPH-2F910
IDEOGRAPH-2F911
IDEOGRAPH-2F912
IDEOGRAPH-2F913
IDEOGRAPH-2F914
IDEOGRAPH-2F915
IDEOGRAPH-2F916
IDEOGRAPH-2F917
IDEOGRAPH-2F918
IDEOGRAPH-2F919
IDEOGRAPH-2F91A
IDEOGRAPH-2F91B
IDEOGRAPH-2F91C
IDEOGRAPH-2F91D
IDEOGRAPH-2F91E
IDEOGRAPH-2F91F
IDEOGRAPH-2F920
IDEOGRAPH-2F921
IDEOGRAPH-2F922
IDEOGRAPH-2F923
IDEOGRAPH-2F924
IDEOGRAPH-2F925
IDEOGRAPH-2F926
IDEOGRAPH-2F927
IDEOGRAPH-2F928
IDEOGRAPH-2F929
IDEOGRAPH-2F92A
IDEOGRAPH-2F92B
IDEOGRAPH-2F92C
IDEOGRAPH-2F92D
IDEOGRAPH-2F92E
IDEOGRAPH-2F92F
IDEOGRAPH-2F930
IDEOGRAPH-2F931
IDEOGRAPH-2F932
IDEOGRAPH-2F933
IDEOGRAPH-2F934
IDEOGRAPH-2F935
IDEOGRAPH-2F936
IDEOGRAPH-2F937
IDEOGRAPH-2F938
IDEOGRAPH-2F939
IDEOGRAPH-2F93A
IDEOGRAPH-2F93B
IDEOGRAPH-2F93C
IDEOGRAPH-2F93D
IDEOGRAPH-2F93E
IDEOGRAPH-2F93F
IDEOGRAPH-2F940
IDEOGRAPH-2F941
IDEOGRAPH-2F942
IDEOGRAPH-2F943
IDEOGRAPH-2F944
IDEOGRAPH-2F945
IDEOGRAPH-2F946
IDEOGRAPH-2F947
IDEOGRAPH-2F948
IDEOGRAPH-2F949
IDEOGRAPH-2F94A
IDEOGRAPH-2F94B
IDEOGRAPH-2F94C
IDEOGRAPH-2F94D
IDEOGRAPH-2F94E
IDEOGRAPH-2F94F
IDEOGRAPH-2F950
IDEOGRAPH-2F951
IDEOGRAPH-2F952
IDEOGRAPH-2F953
IDEOGRAPH-2F954
IDEOGRAPH-2F955
IDEOGRAPH-2F956
IDEOGRAPH-2F957
IDEOGRAPH-2F958
IDEOGRAPH-2F959
IDEOGRAPH-2F95A
IDEOGRAPH-2F95B
IDEOGRAPH-2F95C
IDEOGRAPH-2F95D
IDEOGRAPH-2F95E
IDEOGRAPH-2F95F
IDEOGRAPH-2F960
IDEOGRAPH-2F961
IDEOGRAPH-2F962
IDEOGRAPH-2F963
IDEOGRAPH-2F964
IDEOGRAPH-2F965
IDEOGRAPH-2F966
IDEOGRAPH-2F967
IDEOGRAPH-2F968
IDEOGRAPH-2F969
IDEOGRAPH-2F96A
IDEOGRAPH-2F96B
IDEOGRAPH-2F96C
IDEOGRAPH-2F96D
IDEOGRAPH-2F96E
IDEOGRAPH-2F96F
IDEOGRAPH-2F970
IDEOGRAPH-2F971
IDEOGRAPH-2F972
IDEOGRAPH-2F973
IDEOGRAPH-2F974
IDEOGRAPH-2F975
IDEOGRAPH-2F976
IDEOGRAPH-2F977
IDEOGRAPH-2F978
IDEOGRAPH-2F979
IDEOGRAPH-2F97A
IDEOGRAPH-2F97B
IDEOGRAPH-2F97C
IDEOGRAPH-2F97D
IDEOGRAPH-2F97E
IDEOGRAPH-2F97F
IDEOGRAPH-2F980
IDEOGRAPH-2F981
IDEOGRAPH-2F982
IDEOGRAPH-2F983
IDEOGRAPH-2F984
IDEOGRAPH-2F985
IDEOGRAPH-2F986
IDEOGRAPH-2F987
IDEOGRAPH-2F988
IDEOGRAPH-2F989
IDEOGRAPH-2F98A
IDEOGRAPH-2F98B
IDEOGRAPH-2F98C
IDEOGRAPH-2F98D
IDEOGRAPH-2F98E
IDEOGRAPH-2F98F
IDEOGRAPH-2F990
IDEOGRAPH-2F991
IDEOGRAPH-2F992
IDEOGRAPH-2F993
IDEOGRAPH-2F994
IDEOGRAPH-2F995
IDEOGRAPH-2F996
IDEOGRAPH-2F997
IDEOGRAPH-2F998
IDEOGRAPH-2F999
IDEOGRAPH-2F99A
IDEOGRAPH-2F99B
IDEOGRAPH-2F99C
IDEOGRAPH-2F99D
IDEOGRAPH-2F99E
IDEOGRAPH-2F99F
IDEOGRAPH-2F9A0
IDEOGRAPH-2F9A1
IDEOGRAPH-2F9A2
IDEOGRAPH-2F9A3
IDEOGRAPH-2F9A4
IDEOGRAPH-2F9A5
IDEOGRAPH-2F9A6
IDEOGRAPH-2F9A7
IDEOGRAPH-2F9A8
IDEOGRAPH-2F9A9
IDEOGRAPH-2F9AA
IDEOGRAPH-2F9AB
IDEOGRAPH-2F9AC
IDEOGRAPH-2F9AD
IDEOGRAPH-2F9AE
IDEOGRAPH-2F9AF
IDEOGRAPH-2F9B0
IDEOGRAPH-2F9B1
IDEOGRAPH-2F9B2
IDEOGRAPH-2F9B3
IDEOGRAPH-2F9B4
IDEOGRAPH-2F9B5
IDEOGRAPH-2F9B6
IDEOGRAPH-2F9B7
IDEOGRAPH-2F9B8
IDEOGRAPH-2F9B9
IDEOGRAPH-2F9BA
IDEOGRAPH-2F9BB
IDEOGRAPH-2F9BC
IDEOGRAPH-2F9BD
IDEOGRAPH-2F9BE
IDEOGRAPH-2F9BF
IDEOGRAPH-2F9C0
IDEOGRAPH-2F9C1
IDEOGRAPH-2F9C2
IDEOGRAPH-2F9C3
IDEOGRAPH-2F9C4
IDEOGRAPH-2F9C5
IDEOGRAPH-2F9C6
IDEOGRAPH-2F9C7
IDEOGRAPH-2F9C8
IDEOGRAPH-2F9C9
IDEOGRAPH-2F9CA
IDEOGRAPH-2F9CB
IDEOGRAPH-2F9CC
IDEOGRAPH-2F9CD
IDEOGRAPH-2F9CE
IDEOGRAPH-2F9CF
IDEOGRAPH-2F9D0
IDEOGRAPH-2F9D1
IDEOGRAPH-2F9D2
IDEOGRAPH-2F9D3
IDEOGRAPH-2F9D4
IDEOGRAPH-2F9D5
IDEOGRAPH-2F9D6
IDEOGRAPH-2F9D7
IDEOGRAPH-2F9D8
IDEOGRAPH-2F9D9
IDEOGRAPH-2F9DA
IDEOGRAPH-2F9DB
IDEOGRAPH-2F9DC
IDEOGRAPH-2F9DD
IDEOGRAPH-2F9DE
IDEOGRAPH-2F9DF
IDEOGRAPH-2F9E0
IDEOGRAPH-2F9E1
IDEOGRAPH-2F9E2
IDEOGRAPH-2F9E3
IDEOGRAPH-2F9E4
IDEOGRAPH-2F9E5
IDEOGRAPH-2F9E6
IDEOGRAPH-2F9E7
IDEOGRAPH-2F9E8
IDEOGRAPH-2F9E9
IDEOGRAPH-2F9EA
IDEOGRAPH-2F9EB
IDEOGRAPH-2F9EC
IDEOGRAPH-2F9ED
IDEOGRAPH-2F9EE
IDEOGRAPH-2F9EF
IDEOGRAPH-2F9F0
IDEOGRAPH-2F9F1
IDEOGRAPH-2F9F2
IDEOGRAPH-2F9F3
IDEOGRAPH-2F9F4
IDEOGRAPH-2F9F5
IDEOGRAPH-2F9F6
IDEOGRAPH-2F9F7
IDEOGRAPH-2F9F8
IDEOGRAPH-2F9F9
IDEOGRAPH-2F9FA
IDEOGRAPH-2F9FB
IDEOGRAPH-2F9FC
IDEOGRAPH-2F9FD
IDEOGRAPH-2F9FE
IDEOGRAPH-2F9FF
IDEOGRAPH-2FA00
IDEOGRAPH-2FA01
IDEOGRAPH-2FA02
IDEOGRAPH-2FA03
IDEOGRAPH-2FA04
IDEOGRAPH-2FA05
IDEOGRAPH-2FA06
IDEOGRAPH-2FA07
IDEOGRAPH-2FA08
IDEOGRAPH-2FA09
IDEOGRAPH-2FA0A
IDEOGRAPH-2FA0B
IDEOGRAPH-2FA0C
IDEOGRAPH-2FA0D
IDEOGRAPH-2FA0E
IDEOGRAPH-2FA0F
IDEOGRAPH-2FA10
IDEOGRAPH-2FA11
IDEOGRAPH-2FA12
IDEOGRAPH-2FA13
IDEOGRAPH-2FA14
IDEOGRAPH-2FA15
IDEOGRAPH-2FA16
IDEOGRAPH-2FA17
IDEOGRAPH-2FA18
IDEOGRAPH-2FA19
IDEOGRAPH-2FA1A
IDEOGRAPH-2FA1B
IDEOGRAPH-2FA1C
IDEOGRAPH-2FA1D
IDEOGRAPH-4E00
IDEOGRAPH-4E09
IDEOGRAPH-4E2D
IDEOGRAPH-4E8C
IDEOGRAPH-4EA4
IDEOGRAPH-518D
IDEOGRAPH-521D
IDEOGRAPH-524D
IDEOGRAPH-52DD
IDEOGRAPH-53CC
IDEOGRAPH-53F3
IDEOGRAPH-5439
IDEOGRAPH-58F0
IDEOGRAPH-591A
IDEOGRAPH-5929
IDEOGRAPH-5B57
IDEOGRAPH-5B89
IDEOGRAPH-5DE6
IDEOGRAPH-5F8C
IDEOGRAPH-624B
IDEOGRAPH-6253
IDEOGRAPH-6295
IDEOGRAPH-6307
IDEOGRAPH-6355
IDEOGRAPH-6557
IDEOGRAPH-6599
IDEOGRAPH-65B0
IDEOGRAPH-6620
IDEOGRAPH-672C
IDEOGRAPH-6F14
IDEOGRAPH-70B9
IDEOGRAPH-7121
IDEOGRAPH-751F
IDEOGRAPH-76D7
IDEOGRAPH-7D42
IDEOGRAPH-89E3
IDEOGRAPH-8CA9
IDEOGRAPH-8D70
IDEOGRAPH-904A
IDEOGRAPH-F900
IDEOGRAPH-F901
IDEOGRAPH-F902
IDEOGRAPH-F903
IDEOGRAPH-F904
IDEOGRAPH-F905
IDEOGRAPH-F906
IDEOGRAPH-F907
IDEOGRAPH-F908
IDEOGRAPH-F909
IDEOGRAPH-F90A
IDEOGRAPH-F90B
IDEOGRAPH-F90C
IDEOGRAPH-F90D
IDEOGRAPH-F90E
IDEOGRAPH-F90F
IDEOGRAPH-F910
IDEOGRAPH-F911
IDEOGRAPH-F912
IDEOGRAPH-F913
IDEOGRAPH-F914
IDEOGRAPH-F915
IDEOGRAPH-F916
IDEOGRAPH-F917
IDEOGRAPH-F918
IDEOGRAPH-F919
IDEOGRAPH-F91A
IDEOGRAPH-F91B
IDEOGRAPH-F91C
IDEOGRAPH-F91D
IDEOGRAPH-F91E
IDEOGRAPH-F91F
IDEOGRAPH-F920
IDEOGRAPH-F921
IDEOGRAPH-F922
IDEOGRAPH-F923
IDEOGRAPH-F924
IDEOGRAPH-F925
IDEOGRAPH-F926
IDEOGRAPH-F927
IDEOGRAPH-F928
IDEOGRAPH-F929
IDEOGRAPH-F92A
IDEOGRAPH-F92B
IDEOGRAPH-F92C
IDEOGRAPH-F92D
IDEOGRAPH-F92E
IDEOGRAPH-F92F
IDEOGRAPH-F930
IDEOGRAPH-F931
IDEOGRAPH-F932
IDEOGRAPH-F933
IDEOGRAPH-F934
IDEOGRAPH-F935
IDEOGRAPH-F936
IDEOGRAPH-F937
IDEOGRAPH-F938
IDEOGRAPH-F939
IDEOGRAPH-F93A
IDEOGRAPH-F93B
IDEOGRAPH-F93C
IDEOGRAPH-F93D
IDEOGRAPH-F93E
IDEOGRAPH-F93F
IDEOGRAPH-F940
IDEOGRAPH-F941
IDEOGRAPH-F942
IDEOGRAPH-F943
IDEOGRAPH-F944
IDEOGRAPH-F945
IDEOGRAPH-F946
IDEOGRAPH-F947
IDEOGRAPH-F948
IDEOGRAPH-F949
IDEOGRAPH-F94A
IDEOGRAPH-F94B
IDEOGRAPH-F94C
IDEOGRAPH-F94D
IDEOGRAPH-F94E
IDEOGRAPH-F94F
IDEOGRAPH-F950
IDEOGRAPH-F951
IDEOGRAPH-F952
IDEOGRAPH-F953
IDEOGRAPH-F954
IDEOGRAPH-F955
IDEOGRAPH-F956
IDEOGRAPH-F957
IDEOGRAPH-F958
IDEOGRAPH-F959
IDEOGRAPH-F95A
IDEOGRAPH-F95B
IDEOGRAPH-F95C
IDEOGRAPH-F95D
IDEOGRAPH-F95E
IDEOGRAPH-F95F
IDEOGRAPH-F960
IDEOGRAPH-F961
IDEOGRAPH-F962
IDEOGRAPH-F963
IDEOGRAPH-F964
IDEOGRAPH-F965
IDEOGRAPH-F966
IDEOGRAPH-F967
IDEOGRAPH-F968
IDEOGRAPH-F969
IDEOGRAPH-F96A
IDEOGRAPH-F96B
IDEOGRAPH-F96C
IDEOGRAPH-F96D
IDEOGRAPH-F96E
IDEOGRAPH-F96F
IDEOGRAPH-F970
IDEOGRAPH-F971
IDEOGRAPH-F972
IDEOGRAPH-F973
IDEOGRAPH-F974
IDEOGRAPH-F975
IDEOGRAPH-F976
IDEOGRAPH-F977
IDEOGRAPH-F978
IDEOGRAPH-F979
IDEOGRAPH-F97A
IDEOGRAPH-F97B
IDEOGRAPH-F97C
IDEOGRAPH-F97D
IDEOGRAPH-F97E
IDEOGRAPH-F97F
IDEOGRAPH-F980
IDEOGRAPH-F981
IDEOGRAPH-F982
IDEOGRAPH-F983
IDEOGRAPH-F984
IDEOGRAPH-F985
IDEOGRAPH-F986
IDEOGRAPH-F987
IDEOGRAPH-F988
IDEOGRAPH-F989
IDEOGRAPH-F98A
IDEOGRAPH-F98B
IDEOGRAPH-F98C
IDEOGRAPH-F98D
IDEOGRAPH-F98E
IDEOGRAPH-F98F
IDEOGRAPH-F990
IDEOGRAPH-F991
IDEOGRAPH-F992
IDEOGRAPH-F993
IDEOGRAPH-F994
IDEOGRAPH-F995
IDEOGRAPH-F996
IDEOGRAPH-F997
IDEOGRAPH-F998
IDEOGRAPH-F999
IDEOGRAPH-F99A
IDEOGRAPH-F99B
IDEOGRAPH-F99C
IDEOGRAPH-F99D
IDEOGRAPH-F99E
IDEOGRAPH-F99F
IDEOGRAPH-F9A0
IDEOGRAPH-F9A1
IDEOGRAPH-F9A2
IDEOGRAPH-F9A3
IDEOGRAPH-F9A4
IDEOGRAPH-F9A5
IDEOGRAPH-F9A6
IDEOGRAPH-F9A7
IDEOGRAPH-F9A8
IDEOGRAPH-F9A9
IDEOGRAPH-F9AA
IDEOGRAPH-F9AB
IDEOGRAPH-F9AC
IDEOGRAPH-F9AD
IDEOGRAPH-F9AE
IDEOGRAPH-F9AF
IDEOGRAPH-F9B0
IDEOGRAPH-F9B1
IDEOGRAPH-F9B2
IDEOGRAPH-F9B3
IDEOGRAPH-F9B4
IDEOGRAPH-F9B5
IDEOGRAPH-F9B6
IDEOGRAPH-F9B7
IDEOGRAPH-F9B8
IDEOGRAPH-F9B9
IDEOGRAPH-F9BA
IDEOGRAPH-F9BB
IDEOGRAPH-F9BC
IDEOGRAPH-F9BD
IDEOGRAPH-F9BE
IDEOGRAPH-F9BF
IDEOGRAPH-F9C0
IDEOGRAPH-F9C1
IDEOGRAPH-F9C2
IDEOGRAPH-F9C3
IDEOGRAPH-F9C4
IDEOGRAPH-F9C5
IDEOGRAPH-F9C6
IDEOGRAPH-F9C7
IDEOGRAPH-F9C8
IDEOGRAPH-F9C9
IDEOGRAPH-F9CA
IDEOGRAPH-F9CB
IDEOGRAPH-F9CC
IDEOGRAPH-F9CD
IDEOGRAPH-F9CE
IDEOGRAPH-F9CF
IDEOGRAPH-F9D0
IDEOGRAPH-F9D1
IDEOGRAPH-F9D2
IDEOGRAPH-F9D3
IDEOGRAPH-F9D4
IDEOGRAPH-F9D5
IDEOGRAPH-F9D6
IDEOGRAPH-F9D7
IDEOGRAPH-F9D8
IDEOGRAPH-F9D9
IDEOGRAPH-F9DA
IDEOGRAPH-F9DB
IDEOGRAPH-F9DC
IDEOGRAPH-F9DD
IDEOGRAPH-F9DE
IDEOGRAPH-F9DF
IDEOGRAPH-F9E0
IDEOGRAPH-F9E1
IDEOGRAPH-F9E2
IDEOGRAPH-F9E3
IDEOGRAPH-F9E4
IDEOGRAPH-F9E5
IDEOGRAPH-F9E6
IDEOGRAPH-F9E7
IDEOGRAPH-F9E8
IDEOGRAPH-F9E9
IDEOGRAPH-F9EA
IDEOGRAPH-F9EB
IDEOGRAPH-F9EC
IDEOGRAPH-F9ED
IDEOGRAPH-F9EE
IDEOGRAPH-F9EF
IDEOGRAPH-F9F0
IDEOGRAPH-F9F1
IDEOGRAPH-F9F2
IDEOGRAPH-F9F3
IDEOGRAPH-F9F4
IDEOGRAPH-F9F5
IDEOGRAPH-F9F6
IDEOGRAPH-F9F7
IDEOGRAPH-F9F8
IDEOGRAPH-F9F9
IDEOGRAPH-F9FA
IDEOGRAPH-F9FB
IDEOGRAPH-F9FC
IDEOGRAPH-F9FD
IDEOGRAPH-F9FE
IDEOGRAPH-F9FF
IDEOGRAPH-FA00
IDEOGRAPH-FA01
IDEOGRAPH-FA02
IDEOGRAPH-FA03
IDEOGRAPH-FA04
IDEOGRAPH-FA05
IDEOGRAPH-FA06
IDEOGRAPH-FA07
IDEOGRAPH-FA08
IDEOGRAPH-FA09
IDEOGRAPH-FA0A
IDEOGRAPH-FA0B
IDEOGRAPH-FA0C
IDEOGRAPH-FA0D
IDEOGRAPH-FA0E
IDEOGRAPH-FA0F
IDEOGRAPH-FA10
IDEOGRAPH-FA11
IDEOGRAPH-FA12
IDEOGRAPH-FA13
IDEOGRAPH-FA14
IDEOGRAPH-FA15
IDEOGRAPH-FA16
IDEOGRAPH-FA17
IDEOGRAPH-FA18
IDEOGRAPH-FA19
IDEOGRAPH-FA1A
IDEOGRAPH-FA1B
IDEOGRAPH-FA1C
IDEOGRAPH-FA1D
IDEOGRAPH-FA1E
IDEOGRAPH-FA1F
IDEOGRAPH-FA20
IDEOGRAPH-FA21
IDEOGRAPH-FA22
IDEOGRAPH-FA23
IDEOGRAPH-FA24
IDEOGRAPH-FA25
IDEOGRAPH-FA26
IDEOGRAPH-FA27
IDEOGRAPH-FA28
IDEOGRAPH-FA29
IDEOGRAPH-FA2A
IDEOGRAPH-FA2B
IDEOGRAPH-FA2C
IDEOGRAPH-FA2D
IDEOGRAPH-FA30
IDEOGRAPH-FA31
IDEOGRAPH-FA32
IDEOGRAPH-FA33
IDEOGRAPH-FA34
IDEOGRAPH-FA35
IDEOGRAPH-FA36
IDEOGRAPH-FA37
IDEOGRAPH-FA38
IDEOGRAPH-FA39
IDEOGRAPH-FA3A
IDEOGRAPH-FA3B
IDEOGRAPH-FA3C
IDEOGRAPH-FA3D
IDEOGRAPH-FA3E
IDEOGRAPH-FA3F
IDEOGRAPH-FA40
IDEOGRAPH-FA41
IDEOGRAPH-FA42
IDEOGRAPH-FA43
IDEOGRAPH-FA44
IDEOGRAPH-FA45
IDEOGRAPH-FA46
IDEOGRAPH-FA47
IDEOGRAPH-FA48
IDEOGRAPH-FA49
IDEOGRAPH-FA4A
IDEOGRAPH-FA4B
IDEOGRAPH-FA4C
IDEOGRAPH-FA4D
IDEOGRAPH-FA4E
IDEOGRAPH-FA4F
IDEOGRAPH-FA50
IDEOGRAPH-FA51
IDEOGRAPH-FA52
IDEOGRAPH-FA53
IDEOGRAPH-FA54
IDEOGRAPH-FA55
IDEOGRAPH-FA56
IDEOGRAPH-FA57
IDEOGRAPH-FA58
IDEOGRAPH-FA59
IDEOGRAPH-FA5A
IDEOGRAPH-FA5B
IDEOGRAPH-FA5C
IDEOGRAPH-FA5D
IDEOGRAPH-FA5E
IDEOGRAPH-FA5F
IDEOGRAPH-FA60
IDEOGRAPH-FA61
IDEOGRAPH-FA62
IDEOGRAPH-FA63
IDEOGRAPH-FA64
IDEOGRAPH-FA65
IDEOGRAPH-FA66
IDEOGRAPH-FA67
IDEOGRAPH-FA68
IDEOGRAPH-FA69
IDEOGRAPH-FA6A
IDEOGRAPH-FA6B
IDEOGRAPH-FA6C
IDEOGRAPH-FA6D
IDEOGRAPH-FA70
IDEOGRAPH-FA71
IDEOGRAPH-FA72
IDEOGRAPH-FA73
IDEOGRAPH-FA74
IDEOGRAPH-FA75
IDEOGRAPH-FA76
IDEOGRAPH-FA77
IDEOGRAPH-FA78
IDEOGRAPH-FA79
IDEOGRAPH-FA7A
IDEOGRAPH-FA7B
IDEOGRAPH-FA7C
IDEOGRAPH-FA7D
IDEOGRAPH-FA7E
IDEOGRAPH-FA7F
IDEOGRAPH-FA80
IDEOGRAPH-FA81
IDEOGRAPH-FA82
IDEOGRAPH-FA83
IDEOGRAPH-FA84
IDEOGRAPH-FA85
IDEOGRAPH-FA86
IDEOGRAPH-FA87
IDEOGRAPH-FA88
IDEOGRAPH-FA89
IDEOGRAPH-FA8A
IDEOGRAPH-FA8B
IDEOGRAPH-FA8C
IDEOGRAPH-FA8D
IDEOGRAPH-FA8E
IDEOGRAPH-FA8F
IDEOGRAPH-FA90
IDEOGRAPH-FA91
IDEOGRAPH-FA92
IDEOGRAPH-FA93
IDEOGRAPH-FA94
IDEOGRAPH-FA95
IDEOGRAPH-FA96
IDEOGRAPH-FA97
IDEOGRAPH-FA98
IDEOGRAPH-FA99
IDEOGRAPH-FA9A
IDEOGRAPH-FA9B
IDEOGRAPH-FA9C
IDEOGRAPH-FA9D
IDEOGRAPH-FA9E
IDEOGRAPH-FA9F
IDEOGRAPH-FAA0
IDEOGRAPH-FAA1
IDEOGRAPH-FAA2
IDEOGRAPH-FAA3
IDEOGRAPH-FAA4
IDEOGRAPH-FAA5
IDEOGRAPH-FAA6
IDEOGRAPH-FAA7
IDEOGRAPH-FAA8
IDEOGRAPH-FAA9
IDEOGRAPH-FAAA
IDEOGRAPH-FAAB
IDEOGRAPH-FAAC
IDEOGRAPH-FAAD
IDEOGRAPH-FAAE
IDEOGRAPH-FAAF
IDEOGRAPH-FAB0
IDEOGRAPH-FAB1
IDEOGRAPH-FAB2
IDEOGRAPH-FAB3
IDEOGRAPH-FAB4
IDEOGRAPH-FAB5
IDEOGRAPH-FAB6
IDEOGRAPH-FAB7
IDEOGRAPH-FAB8
IDEOGRAPH-FAB9
IDEOGRAPH-FABA
IDEOGRAPH-FABB
IDEOGRAPH-FABC
IDEOGRAPH-FABD
IDEOGRAPH-FABE
IDEOGRAPH-FABF
IDEOGRAPH-FAC0
IDEOGRAPH-FAC1
IDEOGRAPH-FAC2
IDEOGRAPH-FAC3
IDEOGRAPH-FAC4
IDEOGRAPH-FAC5
IDEOGRAPH-FAC6
IDEOGRAPH-FAC7
IDEOGRAPH-FAC8
IDEOGRAPH-FAC9
IDEOGRAPH-FACA
IDEOGRAPH-FACB
IDEOGRAPH-FACC
IDEOGRAPH-FACD
IDEOGRAPH-FACE
IDEOGRAPH-FACF
IDEOGRAPH-FAD0
IDEOGRAPH-FAD1
IDEOGRAPH-FAD2
IDEOGRAPH-FAD3
IDEOGRAPH-FAD4
IDEOGRAPH-FAD5
IDEOGRAPH-FAD6
IDEOGRAPH-FAD7
IDEOGRAPH-FAD8
IDEOGRAPH-FAD9
IDEOGRAPHI
idigit < ndigits
id is not valid, raise KeyError.
__idiv__
i_divmod
id(object) -> integer
(i.e. all elements that are in either set.)
(i.e. all elements that are in exactly one of the sets.)
(i.e. all elements that are in this set but not the others.)
IEEE, big-endian
'IEEE, big-endian' or 'IEEE, little-endian', and in addition can only be
IEEE, little-endian
(i.e. elements that are common to all of the sets.)
|i:epoll
IEUNG-CHIEUCH
IEUNG-CIEUC
IEUNG-KHIEUKH
IEUNG-KIYEOK
IEUNG-PHIEUPH
IEUNG-PIEUP
IEUNG-RIEUL
IEUNG-SSANGKIYEOK
IEUNG-THIEUTH
IEUNG-TIKEUT
|i:expandtabs
If a class method is called for a derived class, the derived class
If a nonzero buffersize argument is given, the return value is a
If called without an argument, return the names in the current scope.
If changing the thread stack size is unsupported, a ThreadError
If chars is a str, it will be converted to unicode before stripping
If chars is given and not None, remove characters in chars instead.
If chars is unicode, S will be converted to unicode before stripping
If coercion is not possible, raise TypeError.
I_FDINSERT
If E present and has a .keys() method, does:     for k in E: D[k] = E[k]
If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
If field "body" must be a list, not a %.200s
If field "orelse" must be a list, not a %.200s
If function is None, return the items that are false.
If function is None, return the items that are true.
ifilter()
ifilterfalse
ifilterfalse()
ifilterfalse(function or None, sequence) --> ifilterfalse object
ifilterfalse(pred, seq) --> elements of seq where pred(elem) is False
ifilter(function or None, sequence) --> ifilter object
ifilter(pred, seq) --> elements of seq where pred(elem) is True
if it is -1, mktime() should guess based on the date and time.
if it is 1, the time is given in the DST time zone;
If it is another kind of object, it will be printed and the system
If key is not found, d is returned if given, otherwise KeyError is raised
ifloordiv
__ifloordiv__
|i:flush
I_FLUSHBAND
If maxsplit is given, at most maxsplit splits are done.
If mode == Z_FINISH, the compressor object can no longer be used after
If newval is omitted, return the current setting.
If newval is True, future calls to stat() return floats, if it is False,
If only globals is given, locals defaults to it.
If only one kind of condition is required, pass [] for the other lists.
If present, dict must be a dictionary or None.
i:fromfd
(ifs) && _asdl_i < (ifs)->size
  if self.default_factory is None: raise KeyError((key,))
If sep is not given, B is split on ASCII whitespace characters
If someone else wants to provide a more complete implementation,
i:fstatvfs
         if stdin does not appear to be a terminal; also PYTHONINSPECT=x
If tabsize is not given, a tab size of 8 characters is assumed.
If that is deeper than the call stack, ValueError is raised.  The default
If the arg given is an integer or if none is specified, the result value is
If the argument is a mutable buffer and the mutable_flag argument is not
If the argument is a mutable buffer (such as an array) and if the
If the argument is an immutable buffer (most likely a string) then a copy
If the argument is a string, the return value is the same object.
If the argument is a tuple, the return value is the same object.
If the argument is omitted, strip ASCII whitespace.
If the argument is omitted, strip leading ASCII whitespace.
If the argument is omitted, strip trailing ASCII whitespace.
If the base not specified, returns the natural logarithm (base e) of x.
If the buffering argument is given, 0 means unbuffered, 1 means line
If the DST flag is 0, the time is given in the regular time zone;
If the element is not a member, do nothing.
If the element is not a member, raise a KeyError.
If the max_length parameter is specified then the return value will be
if the module couldn't be found.
if the module couldn't be found, return None if the archive does
If the object supplies a method named __dir__, it will be used; otherwise
If the optional argument is True, returns a DER-encoded copy of the
If there is no limit, return -1.
If the size argument is negative or omitted, read until EOF is reached.
If the status is numeric, it will be used as the system exit status.
If the status is omitted or None, it defaults to zero (i.e., success).
If the table argument is None, no translation is applied and
If the user hits EOF (Unix: Ctl-D, Windows: Ctl-Z+Return), raise EOFError.
If the value has (or contains an object that has) an unsupported type, a
If use_pos is specified and is a true value, then the string returned
If x is 0, m and e are both 0.  Else 0.5 <= abs(m) < 1.0.
If x is already in a, insert it to the left of the leftmost x.
If x is already in a, insert it to the right of the rightmost x.
If you don't care about the examples, and don't intend to run the Python
If you want those, see the staticmethod builtin.
I_GETBAND
I_GETCLTIME
|i:_getframe
i:getitimer
i:getpgid
I:getpwuid
i:getrandbits
i:getsid
I_GETSIG
i:getsignal
|i:getvalue
 ignored
ignored.
ignore_environment
ignore_errors
I_GRDOPT
I_GWROPT
ihigh != ((void *)0)
ii:closerange
ii:fchmod
II:getsockaddrarg
i->i_hasarg
ii|i:getsockopt
iii|i:fromfd
|iiiii:compressobj
(iiiiiiiii)
IIII|I;Invalid TIPC address format
iiiiSO!O!O!SSiS|O!O!:code
iii:setsockopt
i|ii:set_threshold
|iii:socket
|iii:socketpair
ii:killpg
ii:makedev
-i     : inspect interactively after running script; forces a prompt even
i|i:recv
i|i:recvfrom
i:isatty
ii:setpgid
ii:siginterrupt
iis#:setsockopt
ii:tcsetpgrp
ii:wait4
ii:waitpid
ill:chown
Illegal char
illegal code point (> 0x10FFFF)
illegal encoding
illegal expression for augmented assignment
illegal IP address string passed to inet_aton
illegal IP address string passed to inet_pton
Illegal token
illegal Unicode character
illegal UTF-16 surrogate
ilow != ((void *)0)
__ilshift__
ILUUYANNA
ILUYANNA
imap(func, *iterables) --> imap object
imap(fun, p, q, ...) --> fun(p0, q0), fun(p1, q1), ...
imap() must have at least two arguments.
im_class
IMIDIARGON
IMIFONON
IMIFTHORA
IMIFTHORON
Immortal interned string died.
__imod__
IMPERFECT
IMPERFECTA
IMPERFECTU
IMP_HOOK
implementation.
Implementation module for socket operations.
Implementation module for SSL socket operations.  See the socket module
Implements the 'backslashreplace' error handling, which replaces an unencodable character with a backslashed escape sequence.
Implements the 'ignore' error handling, which ignores malformed data and continues.
Implements the 'replace' error handling, which replaces malformed data with a replacement marker.
Implements the 'strict' error handling, which raises a UnicodeError on coding errors.
Implements the 'xmlcharrefreplace' error handling, which replaces an unencodable character with the appropriate XML character reference.
imp.NullImporter
__import__
Import a module.  The globals are only used to determine the context;
*** IMPORTANT NOTICE ***
import_as_name
import_as_names
Import by filename is not supported.
Import can't find module, or can't find name in module.
import:  deleting existing key insys.modules failed
ImportError
Import field "names" must be a list, not a %.200s
import_from
ImportFrom
ImportFrom field "names" must be a list, not a %.200s
__import__ function.  Undocumented functions are obsolete.
import hook without loader
import * is not allowed in function '%.100s' because it %s
import_name
__import__(name, globals={}, locals={}, fromlist=[], level=-1) -> module
__import__ not found
import * only allowed at module level
import %s # builtin
import %s # directory %s
import %s # dynamically loaded from %s
import %s # from %s
import %s # frozen%s
import %s # loaded from Zip %s
import %s # precompiled from %s
import %s # previously loaded (%s)
import_stmt
ImportWarning
impossible<bad format char>
Improper indentation.
Improper mixture of spaces and tabs.
improper number of parts to 'assert' statement: %d
i == ms->n - 2 || i == ms->n - 3
__imul__
in 3.x, __delslice__ has been removed; use __delitem__
in 3.x, __getslice__ has been removed; use __getitem__
In 3.x, reload() is renamed to imp.reload()
in 3.x, __setslice__ has been removed; use __setitem__
in addition to any features explicitly specified.
INADDR_ALLHOSTS_GROUP
INADDR_ANY
INADDR_BROADCAST
INADDR_LOOPBACK
INADDR_MAX_LOCAL_GROUP
INADDR_NONE
INADDR_UNSPEC_GROUP
Inappropriate argument type.
Inappropriate argument value (of correct type).
 in __call__
INCLUDIN
incompatible marshal format), raise EOFError, ValueError or TypeError.
INCOMPLET
Incomplete
incomplete format
incomplete format key
incomplete or truncated stream
Inconsistent interned string state.
inconsistent stream state
inconsistent use of tabs and spaces in indentation
Incorrect padding
INCREASE
INCREMENT
incrementaldecoder
incrementalencoder
IndentationError
INDEPENDEN
__index__
index(a) -- Same as a.__index__()
IndexError
index exceeds C integer size
indexOf(a, b) -- Return the first index of b in a.
index out of bounds
__index__ returned non-(int,long) (type %.200s)
index() -- return index of first occurrence of an object
index(x)
INDICATOR
indices, and the stride length of the extended slice described by
Indices for islice() must be None or an integer: 0 <= x <= maxint.
INDUSTRIA
In either case, this is followed by: for k in F: D[k] = F[k]
inet_aton
inet_aton(string) -> packed 32-bit IP representation
inet_ntoa
inet_ntoa(packed_ip) -> ip_address_string
inet_ntop
inet_ntop(af, packed_ip) -> string formatted IP address
inet_pton
inet_pton(af, ip) -> packed IP address string
-inf + inf in fsum
Infinite iterators:
Infinity
inflateCopy
inflateEnd
inflateInit2_
INFLUENCE
  info dicts, as used in zipimporter._files.
info is a pair (hostaddr, port).
INFORMATIO
information about the location of the encoding/decoding
information about the precision and internal representation. Please study
inheritance hierarchy.
inherit from Exception.  See the documentation for the exception
 in __instancecheck__
__init__
init%.200s
initarray
init_ast
initbinascii
init_bisect
init_builtin
initcmath
init_codecs
init_collections
initcPickle
initcStringIO
initerrno
initfcntl
init_frozen
init_functools
initgroups
initgroups(username, gid) -> None
init_hashlib
<initial>
Initialization arguments are not supported
initialized from the optional initializer value, which must be a list,
Initialize, or reinitialize, the local timezone to the value stored in
initializing sys.meta_path, sys.path_hooks, path_importer_cache, or NullImporter failed
inititertools
init_locale
initmath
init of pre-allocated RuntimeError failed
initoperator
initposix
__init__.py
/__init__.py
/__init__.pyc
/__init__.pyo
init_random
initselect
__init__() should return None
__init__() should return None, not '%.200s'
initsignal
init_socket
init_sockobject
initspwd
init_sre
init_ssl
initstrop
init_struct
init_symtable
initsyslog
initthread
inittime
initunicodedata
init_weakref
initxxsubtype
initzipimport
initzlib
in_len >= 0
in length to the length of the shortest argument sequence.
i:nl_langinfo
in math_1
in math_1a
in math_2
in math_fmod
in math_frexp
in math_hypot
in math_ldexp
in math_modf
in math_pow
In most applications `threading.enumerate()` should be used instead.
(inner) && _asdl_i < (inner)->size
INNOCENCE
inplace binary op %d should not be possible
inplace_divrem1
input line too long
input([prompt]) -> value
input too long
InputType
in Python.  Also, a file so opened gains the attribute 'newlines';
insane float_format or double_format
INSCRIPTIONA
in seconds (as float). -1 makes poll wait indefinitely.
insecure string pickle
Insert a new item x into the array before position i.
Insert a single item into the bytearray before the given index.
insertdict
insertdict_clean
insert() -- insert a new item into the array at a provided position
INSERTIO
Insert item x in list a, and keep it sorted assuming a is sorted.
insert(i,x)
insort_left
insort_left(a, x[, lo[, hi]])
insort_right
insort_right(a, x[, lo[, hi]])
# installed zipimport hook
# installing zipimport hook
instance
 instance
__instancecheck__
__instancecheck__() -> bool
instance(class[, dict])
instance_dealloc
instance.__dict__ not accessible in restricted mode
instance exception may not have a separate value
instance has no next() method
instance itself if the module was found, or None if it wasn't.
instancemethod
instancemethod_dealloc
instancemethod(function, instance, class)
instance() second arg must be dictionary or None
instead of raising an exception when an error occurs.
inst->ob_refcnt == 0
inst->ob_refcnt > 0
inst->ob_type == &PyInstance_Type
inst_persistent_id
'in <string>' requires string as left operand, not %.200s
INSTRUMENTA
 in __subclasscheck__
      int.
int() argument must be a string or a number, not '%.200s'
int argument required, not %.200s
#   <int at %p, refcnt=%ld, val=%ld>
int() base must be >= 2 and <= 36
int.bit_length() -> int
int() can't convert non-string with explicit base
(int)(char)(c) == (c)
((int)((codestr[(n*3)+2]<<8) + codestr[(n*3)+1])) == n
int_curr_symbol
integer argument expected, got float
integer argument expected, got non-integer (implicit conversion using __int__ is deprecated)
integer<b>
integer conversion failed
integer division or modulo by zero
integer division result too large for a float
integer<h>
integer<i>
integer. If no such value is defined, default is returned, or, if
integer<k>
integer<l>
integer out of range for '%c' format code
(integer,string=None) -> string. Activates/queries locale processing.
integer time of last access
integer time of last change
integer time of last modification
INTEGRAL
INTEGRATIO
INTEGRATION
interactive
Interactive field "body" must be a list, not a %.200s
INTERCALATE
INTERLINEA
INTERLOCKE
intermediate overflow during division
intermediate overflow in fsum
internal buffers for later processing.
internal error
internal error in regular expression engine
Internal error in the Python interpreter.
internal representation of integers.  The attributes are read only.
intern(string) -> string
``Intern'' the given string.  This enters the string in the (global)
INTERPOLATIO
interpreted as in slice notation.
interpreter and to functions that interact strongly with the interpreter.
interpreter exiting.
interpreter loads extension modules.  Among other things, this will enable
interpreter_lock
INTERROBANG
interrupt_main
interrupt_main()
INTERSECTIN
INTERSECTIO
intersection
intersection_update
INTERSYLLABI
intervening occurrences of sep.  Sep defaults to a single
int_format
int_frac_digits
in the current thread or the execution stack returns to a frame where
in the future.
in the hardest way possible on the hosting operating system.
    in the keyword argument list.  For example:  dict(one=1, two=2)
in the optional argument deletechars are removed, and the
   in the range [0,4294967295] to get hash values with a predictable seed.
In the second form, the callable is called until it returns the sentinel.
__int__ method returned non-integer
__int__ method should return an integer
into a code object that can be executed by the exec statement or eval().
Int or String expected
__int__ returned non-int (type %.200s)
__int__ should return int object
((int)(stack_pointer - f->f_valuestack)) <= co->co_stacksize
int_subtype_new
int(x[, base]) -> integer
               in user and kernel space. SIGPROF is delivered upon
Invalid address type
invalid argument to DUP_TOPX (bytecode corruption?)
invalid augassign: %s
invalid base for atoi()
invalid base for atol()
invalid boolean value: %.400s
Invalid call to PyCObject_SetVoidPtr
invalid comp_op: has %d children
invalid comp_op: %s
invalid comp_op: %s %s
invalid continuation byte
Invalid conversion specification
invalid decimal Unicode string
Invalid error code
invalid expression in parameter list
invalid fd
invalid file open mode %.200s
invalid generation
Invalid get data
invalid hexadecimal floating-point string
invalid indexing of 0-dim memory
Invalid initialization option
invalid input data
invalid integer value: %.400s
invalid length of packed IP address string
invalid literal for atof(): %.200s
invalid literal for atoi(): %.200s
invalid literal for atol(): %.200s
invalid literal for float(): %.200s
invalid literal for int() with base %d: %s
invalid literal for long() with base %d: %s
invalid load key, '%s'.
invalid mode ('%.50s') or filename
invalid node %d for PyAST_FromNode
invalid node type (%d) for augmented assignment
invalid normalization form
invalid %s kind %d in subscript
invalid SRE code
invalid start byte
invalid subscript kind %d
invalid syntax
Invalid syntax.
Invalid thread state for this thread
invalid time
invalid token
invalid use of 't' format character
invalid \x escape
inv(a) -- Same as ~a.
__invert__
invert(a) -- Same as ~a.
INVERTED
_inverted_registry
_inverted_registry[%ld] isn't a 2-tuple of strings
INVISIBL
IO_cgetval
IO_cread
IO_creadline
ioctl(fd, opt[, arg[, mutate_flag]])
ioctl string arg too long
(i - offset) >= 0
(i - offset) < size
iO&:fpathconf
iO:ftruncate
_IO_getc
IO_getval
iOi:lseek
((IOobject*)(self))->pos >= 0
((IOobject*)(self))->pos <= ((Py_ssize_t)(((size_t)-1)>>1)) - l
((IOobject*)(self))->string_size >= 0
I/O operation failed.
I/O operation on closed epoll fd
I/O operation on closed file
_IO_putc
IO_readline
iO:signal
_IO_stdin_used
IP_ADD_MEMBERSHIP
IP_DEFAULT_MULTICAST_LOOP
IP_DEFAULT_MULTICAST_TTL
IP_DROP_MEMBERSHIP
IP_HDRINCL
|i:Pickler
IP_MAX_MEMBERSHIPS
IP_MULTICAST_IF
IP_MULTICAST_LOOP
IP_MULTICAST_TTL
IP_OPTIONS
__ipow__
IPPORT_RESERVED
IPPORT_USERRESERVED
IPPROTO_AH
IPPROTO_DSTOPTS
IPPROTO_EGP
IPPROTO_ESP
IPPROTO_FRAGMENT
IPPROTO_GRE
IPPROTO_HOPOPTS
IPPROTO_ICMP
IPPROTO_ICMPV6
IPPROTO_IDP
IPPROTO_IGMP
IPPROTO_IP
IPPROTO_IPIP
IPPROTO_IPV6
IPPROTO_NONE
IPPROTO_PIM
IPPROTO_PUP
IPPROTO_RAW
IPPROTO_ROUTING
IPPROTO_RSVP
IPPROTO_TCP
IPPROTO_TP
IPPROTO_UDP
IP_RECVOPTS
IP_RECVRETOPTS
IP_RETOPTS
I_PUNLINK
IPv4 sockaddr must be 2 tuple
IPV6_CHECKSUM
IPV6_DSTOPTS
IPV6_HOPLIMIT
IPV6_HOPOPTS
IPV6_JOIN_GROUP
IPV6_LEAVE_GROUP
IPV6_MULTICAST_HOPS
IPV6_MULTICAST_IF
IPV6_MULTICAST_LOOP
IPV6_NEXTHOP
IPV6_PKTINFO
IPV6_RECVDSTOPTS
IPV6_RECVHOPLIMIT
IPV6_RECVHOPOPTS
IPV6_RECVPKTINFO
IPV6_RECVRTHDR
IPV6_RECVTCLASS
IPV6_RTHDR
IPV6_RTHDRDSTOPTS
IPV6_RTHDR_TYPE_0
IPV6_TCLASS
IPV6_UNICAST_HOPS
IPV6_V6ONLY
|i:readline
|i:readlines
I_RECVFD
|i:__reduce__
|i:__reduce_ex__
__irepeat__
__irshift__
IRUUYANNA
IRUYANNA
is 0, it is chosen from the leading characters of s, 0 for
is_(a, b) -- Same as a is b.
is a nested function
is an integer or if none is specified, the result value is an integer
is a pair (host, port).
is a separator.
is a separator.  Maxsplit defaults to 0.
is a shortcut for issubclass(X, A) or issubclass(X, B) or ... (etc.).
is a single character.  The following type codes are defined:
isatty(): always returns 0
isatty(fd) -> bool
isatty() -> true or false.  True if the file is connected to a tty device.
is_builtin
isCallable
isCallable(a) -- Same as callable(a).
is chosen from the leading characters of s, 0 for octal, 0x or
isdecimal
is defined by op and is operating system dependent.  These constants are
isdisjoint
isenabled
isenabled() -- Returns true if automatic collection is enabled.
isenabled() -> status
I_SENDFD
ISEN-ISEN
is EPOLL_IN | EPOLL_OUT | EPOLL_PRI.
is equivalent to the expression x+y.  The function names are those
is_error
i:setcheckinterval
I_SETCLTIME
i:set_debug
i:setdlopenflags
i:setrecursionlimit
I_SETSIG
i:setstate
i:set_wakeup_fd
is exhausted and then it raises StopIteration.  When the shorter iterables
is exhausted and then it raises StopIteration.  Works like the zip()
is exhausted, it is returned instead of raising StopIteration.
is_frozen
i|s:getservbyport
is given and true.
    'i'         signed integer     2 
is#:inet_ntop
is:inet_pton
__isinff
isinf(x) -> bool
isinf(z) -> bool
isinstance
isinstance() arg 2 must be a class, type, or tuple of classes and types
isinstance(object, class-or-type-or-tuple) -> bool
isinstance(x, A) or isinstance(x, B) or ... (etc.).
is_integer
islice()
islice(iterable, [start,] stop [, step]) --> islice object
islice(seq, [start,] stop [, step]) --> elements from
isMappingType
isMappingType(a) -- Return True if a has a mapping type, False otherwise.
isnan(x) -> bool
isnan(z) -> bool
is_not(a, b) -- Same as a is not b.
is not available, it can be generated from /usr/include/dlfcn.h using the
is not present, current time as returned by localtime() is used.
is not retrievable
is not specified (or 0), receive up to the size available in the given buffer.
isNumberType
isNumberType(a) -- Return True if a has a numeric type, False otherwise.
isnumeric
iso-8859-1
iso-8859-1-
<isolated>
iso-latin-1
iso-latin-1-
is_package
is_package(fullname) -> bool.
IS-PILLA
|i:splitlines
is printed without a trailing newline before reading.
is;[priority,] message string
is raised if the generation number is invalid.
is raised.  Use array.fromstring(ustr.decode(...)) to
I_SRDOPT
isSequenceType
isSequenceType(a) -- Return True if a has a sequence type, False otherwise.
issubclass
issubclass() arg 1 must be a class
issubclass() arg 2 must be a class or tuple of classes
issubclass(C, B) -> bool
issubset
Issue a warning, or maybe ignore it or raise an exception.
issuperset
|i:stat_float_times
is the number of parent directories to search relative to the current module.
is_tracked
is_tracked(obj) -> bool
is_tracked() -- Returns true if a given object is tracked.
i:strerror
__isub__
is used.
is*:write
I_SWROPT
!(it->b == it->deque->leftblock && it->index < it->deque->leftindex)
!(it->b == it->deque->rightblock && it->index > it->deque->rightindex)
it->b->leftlink != ((void *)0)
it->b->rightlink != ((void *)0)
It can be called either on the class (e.g. C.f()) or on an instance
i:tcgetpgrp
i == tdo->numread
, item %d
itemgetter
itemgetter()
itemgetter_call
itemgetter(item, ...) --> itemgetter object
Item in ``from list'' not a string
item of each sequence, substituting None for missing values when not all
items from the password database (see `<pwd.h>'), in order:
itemsize
__itemsize__
itemsize -- the length in bytes of one array item
item != ((void *)0)
__iter__
iterable
iterable.  If start is specified, will skip all preceding elements;
iterable is exhausted instead of filling in None for shorter
iterables.
iterable.  The separator between elements is S.
iterable, until all of the iterables are exhausted.
ITERATIO
iteration over non-sequence
iteration.  The enumerate object yields pairs containing a count (from
iterator
Iterators terminating on the shortest input sequence:
Iterator wrapped to make it copyable
iter(callable, sentinel) -> iterator
iter(collection) -> iterator
iter_dealloc
iteritems
iter_iternext
iterkeys
__iter__ returned non-iterator of type '%.100s'
iter() returned non-iterator of type '%.100s'
itertools
itertools.chain
itertools.combinations
itertools.combinations_with_replacement
itertools.compress
itertools.count
itertools.cycle
itertools.dropwhile
itertools.groupby
itertools._grouper
itertools.ifilter
itertools.ifilterfalse
itertools.imap
itertools.islice
itertools.izip
itertools.izip_longest
itertools.permutations
itertools.product
itertools.repeat
itertools.starmap
itertools.takewhile
itertools.tee
itertools.tee_dataobject
itervalues
iter != ((void *)0)
iter(v, w): v must be callable
itimer constants:
ItimerError
ITIMER_PROF
ITIMER_PROF -- decrements both when the process is executing and
ITIMER_REAL
ITIMER_REAL -- decrements in real time, and delivers SIGALRM upon
ITIMER_VIRTUAL
ITIMER_VIRTUAL -- decrements only when the process is executing,
It is a helper module to speed up interpreter start-up.
It is available on all Unix versions.
It is available on various Unix versions.
It is necessary to seed the PRNG with RAND_add() on some platforms before
It is usually not needed to use the zipimport module explicitly; it is
It raises KeyboardInterrupt.
itruediv
__itruediv__
It's a keyword
It's a token we know
It should return True, False or NotImplemented.  If it returns
i:ttyname
it != ((void *)0)
i:unichr
I_UNLINK
    'I'         unsigned integer   2 
i:WCONTINUED
i:WCOREDUMP
i:WEXITSTATUS
i:WIFEXITED
i:WIFSIGNALED
i:WIFSTOPPED
i:WSTOPSIG
i:WTERMSIG
__ixor__
izip argument #%zd must support iteration
izip(iter1 [,iter2 [...]]) --> izip object
izip_longest argument #%zd must support iteration
izip_longest() got an unexpected keyword argument
izip_longest(iter1 [,iter2 [...]], [fillvalue=None]) --> izip_longest object
izip_longest_new
izip_longest(p, q, ...) --> (p[0], q[0]), (p[1], q[1]), ... 
izip_new
izip(p, q, ...) --> (p[0], q[0]), (p[1], q[1]), ... 
i|z:setlocale
j != -1.0 || ! PyErr_Occurred()
(j + 1) == ((ch)->n_nchildren)
JALLAJALALOUHOU
JAVIYANI
JERUSALEM
JIHVAMULIYA
-J is reserved for Jython
j == nslots - add_dict - add_weak
job control stop.
(join and joinfields are synonymous)
joinfields
joinfields(list [,sep]) -> string
join(list [,sep]) -> string
join() result is too long for a Python string
JONGSEON
J-SIMPLIFIE
JUDEO-SPANIS
  Julian day (day in the year, 1-366)
jumpahead
jumpahead(int) -> None.  Create new state from existing state and integer.
jumpahead requires an integer, not '%s'
JUNGSEON
just like an instance method receives the instance.
_Jv_RegisterClasses
k >= 0 && k < base
KAPYEOUNMIEUM
KAPYEOUNPHIEUPH
KAPYEOUNRIEUL
KAPYEOUNSSANGPIEUP
KARSHANA
KASRATAN
KATAKANA-HIRAGAN
KATAVASMA
KATHISTI
KEMPHRENG
KENTIMAT
KENTIMATA
key && a && n > 0 && hint >= 0 && hint < n
KEYBOARD
KeyboardInterrupt
KeyError
(keys) && _asdl_i < (keys)->size
(key, sub-iterator) grouped by each value of key(value).
keyused < keymax
    (key, value) pairs
keyword argument repeated
keyword can't be an expression
keyword list must be a dictionary
keywords
(keywords) && _asdl_i < (keywords)->size
keywords must be strings
keywords == ((void *)0) || ((((((PyObject*)(keywords))->ob_type))->tp_flags & ((1L<<29))) != 0)
KHAKASSIA
KHAROSHTH
KHUEN-LU
Kill a process group with a signal.
Kill a process with a signal.
killpg(pgid, sig)
kill(pid, sig)
KINDERGARTEN
KIROGURAMU
KIROMEETORU
KIROWATTO
KIYEOK-CHIEUCH
KIYEOK-KHIEUKH
KIYEOK-NIEUN
KIYEOK-PIEUP
KIYEOK-RIEUL
KIYEOK-SIOS-KIYEOK
KIYEOK-TIKEUT
k_lopsided_mul
KONTEVMA
KRATIMATA
KRATIMOKOUFISMA
KRATIMOYPORROON
KREMASTI
KUNDDALIYA
KURUZEIRO
kwds == ((void *)0) || ((((((PyObject*)(kwds))->ob_type))->tp_flags & ((1L<<29))) != 0)
kwlist != ((void *)0)
L2$*L2$-L2$
$*L8$-L8$
Label @ %8p, %d: %s
Label %d/'%s' not found
Label %s is a keyword
Label %s is non-terminal %d.
Label %s is terminal %d.
LABIALIZATIO
LABOURING
LAJANYALAN
LAKKHANGYAO
<lambda>
lambda cannot contain assignment
lanczos_sum
L.append(object) -- append object to end
l;array item must be integer
LARYNGEA
lastgroup
lastindex
lastofs == ofs
last_traceback
last_traceback -- traceback of last uncaught exception
last_type
last_type -- type of last uncaught exception
last_value
last_value -- value of last uncaught exception
latin-1-
latin_1_decode
latin_1_encode
LC_COLLATE
LC_CTYPE
lchown(path, uid, gid)
LC_MESSAGES
LC_MONETARY
LC_NUMERIC
L.count(value) -> integer -- return number of occurrences of value
ldexp(x, i)
le(a, b) -- Same as a<=b.
least 0 (if it is lower, it is set to 0); it specifies the number of
leftblock != rightblock || leftindex < rightindex
LEFT-FACIN
LEFT-HAN
LEFT-POINTIN
Left-recursion below '%s'
Left-recursion for '%s'
LEFT-SHADE
LEFTSHIFT
LEFTSHIFTEQUAL
LEFT-SID
LEFT-STE
LEFT-TO-RIGH
LEFTWARD
LEFTWARDS
len >= 0
len < 2147483647
LENGTHENER
__length_hint__
length is the number of bytes to lock, with the default meaning to lock to
length must be greater than zero
len == numnondigits + numdigits
len(object) -> integer
len() of unsized object
__len__() should return >= 0
__len__() should return an int
LENTICULA
LESSEQUAL
LESS-THA
LESS-THAN
L.extend(iterable) -- extend list by appending elements from the iterable
lgamma(x)
LHAVIYANI
LIABILIT
__libc_csu_fini
__libc_csu_init
__libc_current_sigrtmax
__libc_current_sigrtmin
libcrypto.so.1.0.0
libc.so.6
__libc_start_main
libdl.so.2
lib-dynload
/lib/ld-linux.so.2
lib/lib-dynload
libm.so.6
libpthread.so.0
lib/python2.7
library version mismatch
libssl.so.1.0.0
libutil.so.1
libz.so.1
LIGHTHOUSE
LIGHTNING
Like B.find() but raise ValueError when the subsection is not found.
Like B.rfind() but raise ValueError when the subsection is not found.
Like fork(), return 0 as pid to child process, and PID of child to parent.
Like range(), but instead of returning a list, returns an object that
Like recv(buffersize, flags) but also return the sender's address info.
Like recv_into(buffer[, nbytes[, flags]]) but also return the sender's address info.
Like send(data, flags) but allows specifying the destination address.
Like S.find() but raise ValueError when the substring is not found.
Like S.rfind() but raise ValueError when the substring is not found.
Like stat(), but for an open file descriptor.
Like stat(path), but do not follow symbolic links.
LIMITATION
limit prevents infinite recursion from causing an overflow of the C
L.index(value, [start, [stop]]) -> integer -- return first index of value.
", line 
line > 0
Line breaks are not included in the resulting list unless keepends
line %d comes after the current code block
line %d comes before the current code block
line is longer than a Python string can hold
lineno < 2
lineno must be an integer
link(src, dst)
L.insert(index, object) -- insert object before index
list assignment index out of range
list_ass_slice
list_ass_subscript
ListComp
ListComp field "generators" must be a list, not a %.200s
list comprehension
(listcomps) && _asdl_i < (listcomps)->size
listdir(path) -> list_of_strings
listen(backlog)
listen(n) -- start listening for incoming connections
List field "elts" must be a list, not a %.200s
list_for
list index out of range
list indices must be integers, not %.200s
Listing:
list_init
list_iter
list(iterable) -> new list initialized from iterable's items
listiterator
listiter_dealloc
listiter_next
listmaker
list modified during sort
list() -> new empty list
    -> list of (family, socktype, proto, canonname, sockaddr)
list of weak references to the object (if defined)
list.remove(x): x not in list
list_repr
list_resize
list_reversed
listreverseiterator
listsort
  <: little-endian, std. size & alignment
ll|l;range() requires 1-3 int arguments
ll|l;xrange() requires 1-3 int arguments
l:LOG_MASK
l:LOG_UPTO
  l:long; L:unsigned long; f:float; d:double.
__lltrace__
l;mask for priority
Load a module, given information returned by find_module().
Load averages are unobtainable
load_bool
load_compiled
load_counted_long
load_dynamic
Loaded module %.200s not found in sys.modules
__loader__
load_extension
load(file)
load(file) -- Load a pickle from the given file
load() -- Load a pickle
load_module
load_module arg#2 should be a file or None
load_module(fullname) -> module.
load_module(name, file, filename, (suffix, mode, type)) -> module
load_package
load_proto
load() -- read value from a file
load_source
loads() -- read value from a string
loads(string)
loads(string) -- Load a pickle from the given string
Load the module specified by 'fullname'. 'fullname' must be the
_localdummy_destroyed
localeconv
locale.Error
locale query failed
Local name referenced but not bound to a value.
locals() -> dictionary
locals must be a mapping
locals: %s
localtime
localtime() -- convert seconds since Epoch to local time tuple
localtime([seconds]) -> (tm_year,tm_mon,tm_mday,tm_hour,tm_min,
local variable '%.200s' referenced before assignment
LOCATIVE
lock cannot be acquired, an IOError will be raised and the exception will
locked() -> bool
locked (even by the same thread), waiting for another thread to release
locked_lock
(locked_lock() is an obsolete synonym)
locked() -- test whether the lock is currently locked
    LOCK_EX - acquire an exclusive lock
lockf (fd, operation, length=0, start=0, whence=0)
lock_held
lock_held() -> boolean
LOCK_MAND
LOCK_NB to avoid blocking on lock acquisition.  If LOCK_NB is used and the
LOCK_READ
    LOCK_SH - acquire a shared lock
Lock the lock.  Without argument, this blocks if the lock is already
LockType
    LOCK_UN - unlock
LOCK_WRITE
log10(x)
log1p(x)
LOG_ALERT
LOG_AUTH
LOG_CONS
LOG_CRIT
LOG_CRON
LOG_DAEMON
LOG_DEBUG
LOG_EMERG
logic error in count_comp_fors
logic error in count_list_fors
LOG_INFO
login name
LOG_KERN
LOG_LOCAL0
LOG_LOCAL1
LOG_LOCAL2
LOG_LOCAL3
LOG_LOCAL4
LOG_LOCAL5
LOG_LOCAL6
LOG_LOCAL7
LOG_MAIL
LOG_MASK
LOG_NDELAY
LOG_NEWS
LOG_NOTICE
LOG_NOWAIT
logoption
LOG_PERROR
LOG_SYSLOG
LOG_UPTO
LOG_USER
LOG_UUCP
LOG_WARNING
log(x[, base])
log(x[, base]) -> the logarithm of x to the given base.
lo == hi
lo && hi
lo must be non-negative
__long__
long() arg 2 must be >= 2 and <= 36
long() argument must be a string or a number, not '%.200s'
long_bit_length
long.bit_length() -> int or long
LONG-BRANCH-A
LONG-BRANCH-HAGAL
LONG-BRANCH-MAD
LONG-BRANCH-OS
LONG-BRANCH-SO
LONG-BRANCH-YR
long() can't convert non-string with explicit base
long_cnt != ((void *)0) && long_step != ((void *)0)
long division or modulo by zero
long_format
long_from_binary_base
long has too many bits to express in a platform size_t
long_info
long_info -- a struct sequence with information about the long implementation.
long int too large to convert
long int too large to convert to float
long int too large to convert to int
long is too large to format
(long)j == jj
(long long)(long)(x) == (x)
long_lshift
long object will be returned instead.
LONG pickle has negative byte count
__long__ returned non-long (type %.200s)
long string too large to convert
long_subtype_new
long_to_decimal_string
long too big to convert
long too large to pickle
long_true_divide
long(x[, base]) -> integer
Looks up a codec tuple in the Python codec registry and returns
Look up character by name.  If a character with the
lookup(encoding) -> CodecInfo
lookup_error
LookupError
lookup_error(errors) -> handler
lookup(name)
lookup %s in %s %d %d
LORRAINE
lo <= start && start <= hi
lost __builtin__
lost sys.displayhook
lost sys.stderr
lost sys.stdout
lowercase
lower(s) -> string
Low-level inferface to warnings functionality.
L.pop([index]) -> item -- remove and return item at index (default last).
l;range() requires 1-3 int arguments
|l:readlines
L.remove(value) -- remove first occurrence of value.
L.__reversed__() -- return a reverse iterator over the list
L.reverse() -- reverse *IN PLACE*
lseek(fd, pos, how) -> newpos
l:setgid
l:setuid
__lshift__
lshift(a, b) -- Same as a << b.
    'l'         signed integer     4 
L.__sizeof__() -- size of L in memory, in bytes
L.sort(cmp=None, key=None, reverse=False) -- stable sort *IN PLACE*;
lstat(path) -> stat result
lstrip(s) -> string
lt(a, b) -- Same as a<b.
lu_longlong
    'L'         unsigned integer   4 
lu_ulonglong
l;xrange() requires 1-3 int arguments
__lxstat64
lz->cnt == ((Py_ssize_t)(((size_t)-1)>>1)) && long_cnt != ((void *)0)
(m == 32 && p == ps) || (m > 32 && p != ((void *)0))
machine architecture issues.
MACRON-ACUTE
MACRON-BREVE
MACRON-GRAVE
MAHAAPRAAN
MAHAPAKH
MAHAPRANA
MAIMALAI
__main__
__main__ not frozen
MAITAIKHU
MAIYAMOK
major(device) -> major number
Major release number
Make an iterator that computes the function using arguments from
makedev(major, minor) -> device number
makefile
makefile([mode[, buffersize]]) -> file object
makefile([mode, [bufsize]]) -- return a file object for the socket [*]
make_filename
make_new_set
Make this process the process group leader.
maketrans
maketrans arguments must have same length
maketrans(frm, to) -> string
Making DFA for '%s' ...
MALAYALA
malformed \N character escape
malformed 'try' statement
MANACLES
MANGALAM
mant_dig
manual page for flock(3) for details.  (On some systems, this function is
map(function, sequence[, sequence, ...]) -> list
map(None, ...) not supported in 3.x; use list(...)
Mapping key not found.
map() requires at least two args
map_to_dict
MARCATO-STACCATO
marshal.dump() 2nd arg must be file
marshal.load() arg must be file
MASCULIN
MASHFAAT
    Matches zero or more characters at the beginning of the string
    match object.
    MatchObject instance. Return None if no position in the string matches.
match(string[, pos[, endpos]]) --> match object or None.
MATERIALS
math domain error
MATHEMATICA
mathematical functions defined by the C standard.
math_fsum
math.fsum partials
math range error
max_10_exp
max(a, b, c, ...[, key=func]) -> value
max #days between changes
maxevents
maxevents must be greater than 0, got %d
maximum recursion depth exceeded
maximum recursion depth exceeded%s
maximum recursion limit exceeded
maximum size of a deque or None if unbounded
maxint -- the largest supported integer (the smallest is -maxint-1)
maxitem == ((void *)0)
max(iterable[, key=func]) -> value
max_length must be greater than zero
maxlen must be non-negative
], maxlen=%zd)
maxsize -- the largest supported length of containers.
maxsplit
maxsplit words.  If sep is not specified, any whitespace string
Max string recursion exceeded
maxunicode
maxunicode -- the largest supported character
MAX_WBITS
may be an integer specifying which generation to collect.  A ValueError
       may be bogus, and checking the trailing pad bytes may segfault.
may be returned, even if no size parameter was given.
may return an exit status upon closing.
MbP?operator.isCallable() is not supported in 3.x. Use hasattr(obj, '__call__').
mechanism to link to one another.
<medial>
MEDICINE
member_descriptor
__members__
__members__ and __methods__ not supported in 3.x
MEMBERSHIP
<member '%s' of '%s' objects>
 MemError: push
 MemError: shift.
  mem    - list of members
memo must be a dictionary
<memory at %p>
memory_dealloc
(memory error)
MemoryError
memoryview
memoryview(object)
MEM-QOPH
_mercurial
merge_at
merge_class_dict
merge_collapse
merge_compute_minrun
merge_force_collapse
merge_freemem
merge_getmem
merge_hi
merge_init
merge_list_attr
merge_lo
message attribute was deleted
MESSENIA
__metaclass__
metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases
metacompile
metacompile: less than %d children
meta_path
meth_dealloc
methodcaller
methodcaller(name, ...) --> methodcaller object
methodcaller needs at least one argument, the method name
method cannot be both class and static
method continues until the longest iterable in the argument sequence
method continues until the shortest iterable in the argument sequence
methoddescr_call
method_descriptor
Method or function hasn't been implemented yet.
__methods__
Methods:
method.__self__ not accessible in restricted mode
__methods__ not supported in 3.x
<method '%s' of '%s' objects>
Methods of socket objects (keyword arguments not allowed):
method-wrapper
<method-wrapper '%s' of %s object at %p>
METOBELUS
MIDDLE-WELS
MIEUM-CHIEUCH
MIEUM-CIEUC
MIEUM-NIEUN
MIEUM-PANSIOS
MIEUM-PIEUP
MIEUM-PIEUP-SIOS
MIEUM-RIEUL
MIEUM-SSANGNIEUN
MIEUM-SSANGSIOS
MIEUM-TIKEUT
min >= 0
min_10_exp
min(a, b, c, ...[, key=func]) -> value
min #days between changes
MINEQUAL
MINISTER
min(iterable[, key=func]) -> value
min <= max
minor(device) -> minor number
Minor release number
minused >= 0
MINUS-OR-PLU
minute out of range
  minutes (0-59)
minutes, range [0, 59]
MIRIBAARU
mirrored
mirrored(unichr)
m is a float and e is an int, such that x = m * 2.**e.
mismatching item sizes for "%.200s" and "%.200s"
__missing__
missing format argument
Missing ']' in format string
missing ')' in getargs format
__missing__(key) # Called by __getitem__ for missing key; pseudo-code:
Mixing iteration and read methods would lose data
Mix string into the OpenSSL PRNG state.  entropy (a float) is a lower
mkdir(path [, mode=0777])
mkfifo(filename [, mode=0666])
mknod(filename [, mode=0600, device])
mktime argument out of range
mktime() -- convert local time tuple to seconds since Epoch
mktime(tuple) -> floating point number
-m mod : run library module as a script (terminates option list)
mod(a, b) -- Same as a % b.
mode and read back successfully.  When using a protocol higher
mode can be one of the constants Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH; the
  (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime)
mode string must begin with one of 'r', 'w', 'a' or 'U', not '%.200s'
mode != ((void *)0)
Modify an already registered file descriptor.
modify(fd, eventmask) -> None
<module>
__module__
Module dictionary insertion problem.
module_d.so
Module field "body" must be a list, not a %.200s
module filename missing
module functions cannot set METH_CLASS or METH_STATIC
module_globals
Module implements the Mersenne Twister random number generator.
module kind %d should not be possible
module(name[, doc])
module name is too long
Module name too long
module, or raises ZipImportError if it wasn't found.
../Modules/arraymodule.c
../Modules/binascii.c
../Modules/_bisectmodule.c
<module '%s' (built-in)>
../Modules/_codecsmodule.c
../Modules/_collectionsmodule.c
../Modules/cPickle.c
../Modules/cStringIO.c
modules -- dictionary of loaded modules
>../Modules/errnomodule.c
../Modules/fcntlmodule.c
<module '%s' from '%s'>
../Modules/_functoolsmodule.c
../Modules/gcmodule.c
../Modules/grpmodule.c
../Modules/_hashopenssl.c
module '%s' has no __dict__
../Modules/itertoolsmodule.c
../Modules/_localemodule.c
../Modules/main.c
?../Modules/mathmodule.c
module.so
../Modules/operator.c
../Modules/posixmodule.c
../Modules/pwdmodule.c
../Modules/_randommodule.c
../Modules/selectmodule.c
Modules/Setup
../Modules/signalmodule.c
../Modules/socketmodule.c
../Modules/spwdmodule.c
../Modules/_sre.c
../Modules/_ssl.c
../Modules/stropmodule.c
../Modules/_struct.c
../Modules/syslogmodule.c
../Modules/threadmodule.c
../Modules/timemodule.c
../Modules/unicodedata.c
../Modules/xxsubtype.c
../Modules/zipimport.c
../Modules/zlibmodule.c
mon_decimal_point
MONGOLIA
mon_grouping
MONOCULA
MONOFONIAS
MONOGRAMMO
MONOGRAP
MONOSPAC
MONOSTABL
  month (1-12)
month of year, range [1, 12]
mon_thousands_sep
month out of range
MOOSE-CRE
more argument specifiers than keyword list entries (remaining format:'%s')
more efficient than protocol 1.
More keyword list entries (%d) than format specifiers (%d)
more on format strings.
more recent the version of Python needed to read the pickle
more than 255 arguments
MORPHOLOGICA
MOUNTAIN
move_finalizers
(move relative to current position, positive or negative), and 2 (move
move_unreachable
mp->ma_fill <= mp->ma_mask
mp->ma_fill > mp->ma_used
mp->ma_lookup != ((void *)0)
mp->ma_mask == 8 - 1
mp->ma_table[0].me_value == ((void *)0)
mp->ma_table == mp->ma_smalltable
mp->ma_table != ((void *)0)
mp->ma_used == 0
mp != ((void *)0)
mro() -> list
mro() returned a non-class ('%.500s')
mro() returned base with unsuitable layout ('%.500s')
mro_subclasses
MSG_CTRUNC
MSG_DONTROUTE
MSG_DONTWAIT
MSG_PEEK
MSG_TRUNC
MSG_WAITALL
ms.n == 1
ms->n >= 2
ms.n < 85
ms && pa && pb && na > 0 && nb > 0 && pa + na == pb
ms.pending[0].base == saved_ob_item
ms.pending[0].len == saved_ob_size
ms != ((void *)0)
MU-GAAHLA
MUKPHRENG
mul(a, b) -- Same as a * b.
MULTIMAP
MULTIOCULA
multiple bases have instance lay-out conflict
MULTIPLICATIO
MULTIPLICATION
multiply
MULTISET
must assign iterable to extended slice
must be %.50s, not %.50s
must be %d-item sequence, not %.50s
must be of the same length.
must be sequence of length %d, not %d
mutate_flag argument (which is only allowed in this case) is true then the
MUURDHAJ
MUUSIKATOAN
mymemreplace
n > 0 && n <= ((digit)(((digit)1 << 15) - 1))
na > 0 && nb > 0
na > 0 && nb > 1
na == 1 && nb > 0
na > 1 && nb > 0
NAAKSIKYAYA
NAASIKYAYA
__name__
name '%.200s' is not defined
name '%.400s' is assigned to before global declaration
name '%.400s' is used prior to global declaration
named filename. mode specifies both the permissions to use and the
NameError
name is not valid, raise KeyError.
nameless module
name must be a string
__name__ must be a string object
__name__ must be set to a string object
__name__ must not contain null bytes
  name   - name of the group
Name not found globally.
(names) && _asdl_i < (names)->size
name '%s' is local and global
name -- the hash algorithm being used by this object
name tuples must contain only strings, not '%.500s'
name(unichr[, default])
name != ((void *)0)
NANGMONTHO
narenas == narenas_currently_allocated
<narrow>
NASALIZATIO
  @: native order, size & alignment (default)
  =: native order, std. size & alignment
Natural logarithm of absolute value of Gamma function at x.
nb == 1 && na > 0
nb_float should return float object
nb_int should return int object
nbytes == 1 || nbytes == 2 || nbytes == 4
n|c:center
n|c:ljust
n|c:rjust
n_cs_precedes
ndigits == 0 || v->ob_digit[ndigits - 1] != 0
ne(a, b) -- Same as a!=b.
NEBENSTIMME
need >= 0
need a single Unicode character as parameter
need more than %d value%s to unpack
neg(a) -- Same as -a.
negative argument not allowed
negative buffersize in recv
negative buffersize in recvfrom
negative buffersize in recvfrom_into
negative buffersize in recv_into
negative count
negative number cannot be raised to a fractional power
negative shift count
negative_sign
Negative size passed to PyByteArray_FromStringAndSize
Negative size passed to PyString_FromStringAndSize
Negative size passed to PyUnicode_FromStringAndSize
\N escapes not supported (can't load unicodedata module)
nested_scopes
NETLINK_DNRTMSG
NETLINK_FIREWALL
NETLINK_IP6_FW
NETLINK_NFLOG
NETLINK_ROUTE
NETLINK_USERSOCK
NETLINK_XFRM
new_arena
__new__() called with non-type 'self'
New in version 2.4: The version argument indicates the data format that
newl + 1 < 2147483647
new_len > 0
new_line - last_line < 255
newlines
new_module
new_module(name) -> module
__newobj__
__newobj__ arglist is empty
(newobj) && _asdl_i < (newobj)->size
NEWOBJ class argument has NULL tp_new
NEWOBJ class argument isn't a type object
NEWOBJ expected an arg tuple.
newPyEpoll_Object
newsize - (p - (((PyStringObject *)(v))->ob_sval)) >= 1
newsize - (p - (((PyStringObject *)(v))->ob_sval)) >= 5
new string is too long
new style getargs format but argument is not a tuple
newtable != oldtable
next_index != ((void *)0)
next(iterator[, default])
NFA '%s' has %d states; start %d, finish %d
nfc_nfkc
n_fields
NGROUPS_MAX
nice(inc) -> new_priority
NI_DGRAM
NIEUN-CHIEUCH
NIEUN-CIEUC
NIEUN-HIEUH
NIEUN-KIYEOK
NIEUN-PANSIOS
NIEUN-PIEUP
NIEUN-RIEUL
NIEUN-SIOS
NIEUN-THIEUTH
NIEUN-TIKEUT
NIGGAHITA
NIGIDAESH
NIGIDAMIN
NIHSHVASA
NIKHAHIT
NI_MAXHOST
NI_MAXSERV
NI_NAMEREQD
NINETEEN
NI_NOFQDN
n instructions.  This also affects how often thread switches occur.
NI_NUMERICHOST
NI_NUMERICSERV
n|i:seek
nl_langinfo
nl_langinfo(key) -> string
n must be >= 0
(((&(n)->n_child[0]))->n_type) == (3)
(((&(n)->n_child[0]))->n_type) == (50)
(((&(n)->n_child[0]))->n_type) == (9)
(((&(n)->n_child[1]))->n_type) == (11)
(((&(n)->n_child[1]))->n_type) == (22)
(((&(n)->n_child[1]))->n_type) == 262 || (((&(n)->n_child[1]))->n_type) == 329
(((&(n)->n_child[1]))->n_type) != 336
(((&(n)->n_child[2]))->n_type) == (10)
(((&(n)->n_child[i]))->n_type) == 304 || (((&(n)->n_child[i]))->n_type) == 302
((((&(n)->n_child[((n)->n_nchildren) + -1])))->n_type) == (4)
nneeded <= nallocated
((n)->n_nchildren) > 0
((n)->n_nchildren) == 1
((n)->n_nchildren) > 1
((n)->n_nchildren) > 3
((n)->n_nchildren) == 5
nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn
((n)->n_type) == (1)
((n)->n_type) == (10)
((n)->n_type) == (11)
((n)->n_type) == (14)
((n)->n_type) == (18)
((n)->n_type) == (256)
((n)->n_type) == (257)
((n)->n_type) == (258)
((n)->n_type) == (259)
((n)->n_type) == (260)
((n)->n_type) == (261)
((n)->n_type) == (262)
((n)->n_type) == (264)
((n)->n_type) == (266)
((n)->n_type) == (268)
((n)->n_type) == (270)
((n)->n_type) == (271)
((n)->n_type) == (272)
((n)->n_type) == (273)
((n)->n_type) == (275)
((n)->n_type) == (281)
((n)->n_type) == (287)
((n)->n_type) == (288)
((n)->n_type) == (289)
((n)->n_type) == (290)
((n)->n_type) == (291)
((n)->n_type) == (292)
((n)->n_type) == (293)
((n)->n_type) == (294)
((n)->n_type) == (295)
((n)->n_type) == (296)
((n)->n_type) == (297)
((n)->n_type) == (298)
((n)->n_type) == (300)
((n)->n_type) == (309)
((n)->n_type) == (317)
((n)->n_type) == (319)
((n)->n_type) == (320) || ((n)->n_type) == (331)
((n)->n_type) == 320 || ((n)->n_type) == 331
((n)->n_type) == (322)
((n)->n_type) == (324)
((n)->n_type) == (326)
((n)->n_type) == (327)
((n)->n_type) == 327 || ((n)->n_type) == 301 || ((n)->n_type) == 338
((n)->n_type) == 327 || ((n)->n_type) == 319 || ((n)->n_type) == 320 || ((n)->n_type) == 301 || ((n)->n_type) == 338
((n)->n_type) == (328)
((n)->n_type) == (329)
((n)->n_type) == (330)
((n)->n_type) == (332)
((n)->n_type) == (334)
((n)->n_type) == (335)
((n)->n_type) == (336)
((n)->n_type) == (337)
((n)->n_type) == (4)
((n)->n_type) == (8)
<noBreak>
n|O&:center
no codec search functions registered: can't find encoding
no current thread ident
No frozen submodule named %.200s
nO:insert
no int where int expected in memo
n|O&:ljust
noload_extension
noload() -- not load a pickle, but go through most of the motions
no locals
no locals found during 'import *'
no locals found when storing %s
no locals when deleting %s
no locals when loading %s
no longer than max_length.  Unconsumed input data will be stored in
no mem for bitset
no mem for new grammar
no mem for new nfa
no mem for new nfa grammar
no mem for new parser
no mem for new sym in calcfirstset
no mem for next token
no mem for sys.argv
no mem for sys.path insertion
no mem for xx_state in makedfa
no mem to add parser accelerators
no mem to build parser accelerators
no mem to resize arc list in addarc
no mem to resize dfa in adddfa
no mem to resize labellist in addlabel
no mem to resize state in addstate
no mem to resize sym in calcfirstset
No module named %.200s
Non-ASCII character '\x%.2x' in file %.200s on line %i, but no encoding declared; see http://www.python.org/peps/pep-0263.html for details
NON-BREAKIN
Non-code object in %.200s
non-default argument follows default argument
None -- if an unknown handler is in effect
None, integers, long integers, floating point numbers, strings, Unicode
nonempty __slots__ not supported for subtype of '%s'
NoneType
NONFORKING
Non-hexadecimal digit found
non-hexadecimal number found in fromhex() arg at position %zd
NON-JOINER
non-keyword arg after keyword arg
nonlocal
nonlocal is a keyword in 3.x
Non-statement found: %d %d
non-string found in code slot
non-string.  If base is zero, the proper base is guessed based on the
non-tuple default args
__nonzero__
non-zero padding bits in shift sequence
__nonzero__ should return >= 0
__nonzero__ should return an int
no ordering relation is defined for complex numbers
norig >= 0
n|O&:rjust
normalize
normalize(form, unistr)
NORTHWES
No such frozen object named %.200s
no such group
no such name
no symtable
not a chance
not a decimal
not a digit
notAfter
not all arguments converted during string formatting
not all FORBIDDENBYTE (0x%02x):
Not all Python object types are supported; in general, only objects
not a numeric character
not_(a) -- Same as not a.
 [*] not available on all platforms!
not a Zip file
not a Zip file: '%.200s'
notBefore
Note (hack:) writing None resets the buffer
NOTEHEAD
Note: If an object containing an unsupported type was marshalled with
not enough arguments for format string
not enough items in file
Not enough memory for dynamic PYTHONPATH.
not enough memory to copy -c argument
not enough memory to copy -m argument
not enough memory to copy PYTHONWARNINGS
NOTEQUAL
Note that classes are callable, as are instances with a __call__() method.
Note that due to buffering, flush() or close() may be needed before
Note that newlines are not added.  The sequence can be any iterable object
Note that not all file objects are seekable.
 Note that several fields' values are not the same as those defined by
Note that some platforms may have particular restrictions on values for
Noteworthy: None is the `nil' object; Ellipsis represents `...' in slices.
not given, ValueError is raised.
not holding the import lock
Notice that when in non-blocking mode, less data than what was requested
NotImplemented
NotImplementedError
NotImplemented, the normal algorithm is used.  Otherwise, it
NotImplementedType
Not importing directory '%.*s': missing __init__.py
not present, current time as returned by localtime() is used.
<> not supported in 3.x; use !=
not_test
no_user_site
NOVEMBER
npools==0 || (((PyObject*)(result))->ob_refcnt) == 1
|n:product
N%P%R%T%V%X%Z%\%^%`%b%d%f%h%j%l%n%p%r%t%v%
N*P*R*T*V*X*Z*\*^*`*b*d*f*h*j*l*n*p*r*t*v*x*z*|*~*
nptr != ((void *)0)
np_void_p
nread <= n
|n:rotate
n_sep_by_space
n_sequence_fields
n_sign_posn
NSIG -- number of defined signals
|n:stack_size
ntohl(integer) -> integer
ntohs(integer) -> integer
<N_TOKENS>
ntostore > 0
|n:truncate
null argument to internal routine
null byte in argument for int()
null byte in argument for long()
null file for PyFile_WriteString
NullImporter
NullImporter()
Null importer object
NULL object in marshal data for list
NULL object in marshal data for object
NULL object in marshal data for set
NULL object in marshal data for tuple
NULL object passed to Py_BuildValue
NULL result without error in PyObject_Call
nu_longlong
number coercion failed
number of bits must be greater than zero
Number of bits necessary to represent self in binary.
number of blocks allocated
number of bytes to return (an incomplete line may be returned then).
number of hard links
numbers.  Arrays are sequence types and behave very much like lists,
numdigits > 0
NUMERATO
numerator
numeric(unichr[, default])
numfree == 0
numfree > 0
num_stmts
num_stmts(n) == 1
n_unnamed_fields
n:urandom
nu_ulonglong
OABOAFILI
O_APPEND
O!:bidirectional
obj2ast_arguments
obj2ast_comprehension
obj2ast_excepthandler
obj2ast_expr
obj2ast_mod
obj2ast_slice
obj2ast_stmt
__objclass__
object  : 
object cannot be interpreted as an index
object does not have the buffer interface
object.__format__ with a non-empty format string is deprecated
object.__init__() takes no parameters
Object is not writable.
object is passed as the implied first argument.
object.__new__() takes no parameters
object of type '%.200s' has no len()
object, or any other custom object that meets this interface.
object.readline() returned non-string
../Objects/abstract.c
../Objects/bufferobject.c
../Objects/bytearrayobject.c
../Objects/capsule.c
../Objects/cellobject.c
../Objects/classobject.c
../Objects/cobject.c
../Objects/codeobject.c
../Objects/complexobject.c
../Objects/descrobject.c
?../Objects/dictobject.c
../Objects/enumobject.c
../Objects/exceptions.c
../Objects/fileobject.c
../Objects/floatobject.c
../Objects/frameobject.c
../Objects/funcobject.c
../Objects/genobject.c
../Objects/intobject.c
@@../Objects/iterobject.c
../Objects/listobject.c
../Objects/longobject.c
../Objects/memoryobject.c
../Objects/methodobject.c
../Objects/moduleobject.c
../Objects/object.c
../Objects/obmalloc.c
../Objects/rangeobject.c
../Objects/setobject.c
../Objects/sliceobject.c
../Objects/stringlib/ctype.h
../Objects/stringlib/partition.h
../Objects/stringlib/split.h
../Objects/stringlib/string_format.h
../Objects/stringlib/transmogrify.h
../Objects/stringobject.c
../Objects/structseq.c
objects support decompress() and flush().
Objects that know how to pickle objects
Objects that know how to unpickle
../Objects/tupleobject.c
objects, tuples, lists, sets, dictionaries, and code objects, where it
../Objects/typeobject.c
../Objects/unicodeobject.c
../Objects/weakrefobject.c
object.  They're a way of passing data through the Python interpreter
object too deeply nested to marshal
object will raise an exception.
Object wrapper with a custom sort key.
OBJ_obj2txt
!obj || ((((((PyObject*)(obj))->ob_type))->tp_flags & ((1L<<28))) != 0)
obj && ((((((PyObject*)(obj))->ob_type))->tp_flags & ((1L<<28))) != 0)
obj || str
obj != ((void *)0)
OBSTRUCTION
O!:category
OCCLUSION
    occurrences of pattern in string by the replacement repl.
O!:combining
O&:confstr
octal, 0x or 0X for hexadecimal.  If base is 16, a preceding
oct() argument can't be converted to oct
oct(number) -> string
__oct__ returned non-string (type %.200s)
O_cwrite
Odd-length string
O!:decomposition
O_DIRECT
O_DIRECTORY
O!:east_asian_width
of bytes written.
offset >= 0
offset must be zero or positive
    of its bases.
|O:float
of one or more digits, possibly preceded by a sign.  If base
O:__format__
of parameter 'start' (which defaults to 0).  When the sequence is
of repetitions with the optional repeat keyword argument. For example,
of seconds since the Epoch, in UTC (a.k.a. GMT).  It may be an integer
of the arg string is not allowed to exceed 1024 bytes.  If the arg given
of the buffer is passed to the operating system and the return value is a
    of the given arguments and keywords.
of the given object, and of attributes reachable from it.
of the Python interpreter stack.  This limit prevents infinite
of the sequence in the calculation, and serves as a default when the
of the socket (flag == SHUT_WR), or both ends (flag == SHUT_RDWR).
of the specified width.  B is never truncated.
of the specified width.  The string S is never truncated.
of the specified width. The string S is never truncated.
of x and are floats.
|O:gmtime
|O:groupdict
|O:groups
O|i:dump
O|i:dumps
O&i:flock
Oi:getnameinfo
(O(iii))
O&I|i;ioctl requires a file or file descriptor, an integer and optionally an integer or buffer argument
O&i|l;fcntl requires a file or file descriptor, an integer and optionally a third integer or a string
|Oi:long
Oi:modify
OiO!|nOO
O&i|OOi:lockf
Oi:op_irepeat
Oi:op_repeat
O|i:Pickler
O|i:register
O|i:seek
O&is#:fcntl
O&Is#:ioctl
O&Iw#|i:ioctl
O!i|zziizz:sslwrap
O_LARGEFILE
oldflag < 2147483647
old_lambdef
old replaced by new.  If the optional argument count is
old replaced by new. If the optional argument maxsplit is
oldstate == PyGILState_UNLOCKED
old style getargs format uses new features
oldtable != ((void *)0)
old_test
|O:localtime
|O:lstrip
O:memoryview
O!:mirrored
onceregistry
once_registry
On:combinations
On:combinations_with_replacement
O!n;decoding error handler must return (unicode, int) tuple
O_NDELAY
one argument, the encoding name in all lower case letters, and return
one higher than you might expect, because it includes the (temporary)
O!n;encoding error handler must return (unicode, int) tuple
On encoding, when istext is set, newlines are not encoded, and white 
one of the latter two if it appears to match the underlying C reality.
on every iteration).
On:fromfile
only named arguments may follow *expression
only offsets returned by tell() are legal.  Use of other offsets causes
Only '.' or '[' may follow ']' in format field specifier
only protocol that can be written to a file opened in text
O|nn:buffer
Onn:delslice
O|nn:findall
Onn:getslice
O|nn:match
OnnO:setslice
O|nn:scanner
O|nn:search
O_NOATIME
O_NOCTTY
O_NOFOLLOW
O_NONBLOCK
On platforms without threads, return False.
On platforms without threads, this function does nothing.
O|n:repeat
|On:rsplit
(O(Ns)N)
|On:split
O|n:split
O!n;translating error handler must return (unicode, int) tuple
On Unix, GNU readline is used if enabled.  The prompt string, if given,
On Windows and OpenVMS, only sockets are supported; on Unix, all file
On Windows and OpenVMS, only sockets are supported; on Unix, all file descriptors.
OOBOOFILI
OO!:call_tracing
|OO:complex
OO:compress
|OO:count
O!|O:decimal
|OO:deque
O!|O:digit
O|O:enumerate
O|O:format
O|O:getsizeof
O|O:groupby
OO|i:dump
OO|iiii:getaddrinfo
O!|O:instance
|OOi:sort
O!|O:name
OO|nn:bisect_left
OO|nn:bisect_right
OO|nn:insort_left
OO|nn:insort_right
O!O!nnO!
OO|n:replace
OO|n:sub
OO|n:subn
O!|O:numeric
O|On:warn
O|O&O&:index
OOOi|OOO:warn_explicit
O|OOi:sorted
O!O!|OOO:function
O(O)(OOOO)
oooooooooooooooooooooooooooooooooooooo
ooooooooooooooooooooooooooooooooooooooooooooooo
|OOOO:property
(OOOO):__setstate__
|OOO:print
O|O:permutations
-O     : optimize generated bytecode slightly; also PYTHONOPTIMIZE=x
-OO    : remove doc-strings in addition to the -O optimizations
-O or -OO
O|O:structseq
O!|O:super
opcode = %d
opcode_stack_effect()
op_concat
op_contains
op_delitem
|O:peer_certificate
Open a file (for low level IO).
Open a file.  The mode can be 'r', 'w' or 'a' for reading (default),
Open a file using the file() type, returns a file object.  This is the
Open a pipe to/from a command returning a file object.
Open a pseudo-terminal, returning open fd's for both master and slave end.
Open a socket of the given type.  The family argument specifies the
OPEN-CIRCUIT-OUTPU
opened for writing.  Add a 'b' to the mode for binary files.
opened on a directory, not a file.
open(filename, flag [, mode=0777]) -> fd
OPEN-HEADE
open(name[, mode[, buffering]]) -> file object
open() or os.popen(). It must be opened in binary mode ('wb' or 'w+b').
OPEN-OUTLINE
openpty() -> (master_fd, slave_fd)
OPENSSL_1.0.0
OPENSSL_add_all_algorithms_noconf
OpenSSL_add_all_digests
openssl_md5
openssl_sha1
openssl_sha224
openssl_sha256
openssl_sha384
openssl_sha512
OPENSSL_VERSION
OPENSSL_VERSION_INFO
OPENSSL_VERSION_NUMBER
open_the_file
operating system filenames.
operations are disabled.
operations. A timeout of None indicates that timeouts on socket 
operations will use the effective uid/gid, therefore this routine can
operator
operator.attrgetter
Operator interface.
operator.itemgetter
operator.methodcaller
operator.sequenceIncludes() is not supported in 3.x. Use operator.contains().
op_floordiv
op_getitem
op_iconcat
op_ifloordiv
op_ilshift
op_irshift
op_itruediv
op_lshift
(op->_ob_prev == ((void *)0)) == (op->_ob_next == ((void *)0))
op->ob_refcnt == 0
OPPOSITION
OPPRESSION
op_rshift
(ops) && _asdl_i < (ops)->size
op_setitem
OPT_BARE_EXEC
OPT_EXEC
optimizations previously implemented in the xreadlines module.
optimize
optimized
OPT_IMPORT_STAR
optional 3rd arg must be a dictionary
Optional arg level is the compression level, in 1-9.
Optional args lo (default 0) and hi (default len(a)) bound the
optional argument deletechars are removed, and the remaining
Optional arg wbits is the window buffer size.
Optional arg wbits is the window buffer size.  Optional arg bufsize is
Optional keyword arguments:
optional size argument specifies the stack size (in bytes) to be used
optional_vars
Options and arguments (and corresponding environment variables):
op_truediv
op != ((void *)0)
or_(a, b) -- Same as a | b.
(or a CodecInfo object).
or a code object as returned by compile().
or a floating point number (to represent fractions of seconds).
or datagram (SOCK_DGRAM) socket.  The protocol argument defaults to 0,
ord(c) -> integer
order (MRO) for bases
ord() expected a character, but string of length %zd found
ord() expected string of length 1, but %.200s found
ordinal not in range(128)
ordinal not in range(256)
O_RDONLY
(orelse) && _asdl_i < (orelse)->size
Original exception was:
or ITIMER_PROF) to fire after value seconds and after
or more digits, possibly preceded by a sign.  If base is 0, it
ORNAMENT
or None if not needed.
or None, the call will never time out.
Orphaned RLE code at start
** or pow()
or raise a LookupError, if no handler exists under this name.
or st_flags, they are available as attributes only.
or string, return the same type, else return a list.
|O:rstrip
ORTHOGONA
or via the attributes f_bsize, f_frsize, f_blocks, f_bfree, and so on.
or via the attributes st_mode, st_ino, st_dev, st_nlink, st_uid, and so on.
or via the object attributes as named in the above tuple.
oself->pos + l < 2147483647
os.environ['TZ']. The TZ environment variable should be specified in
O|si:file
os.makedev()), otherwise it is ignored.
O|s*:new
|Oss:bytearray
O|ss:decode
O|ss:encode
Oss|ii:compile
|Oss:unicode
OS system call failed.
|O:strip
O&:sysconf
Other environment variables:
other != ((void *)0)
otherwise.
otherwise any protocol will match.
otherwise, start defaults to zero.  Step defaults to one.  If
O|t#:join
|O:tuple
 *** OUCH
O:unregister
outlen >= 0
out of mem
out of memory
Out of memory.
Out of memory interning slotdef names
Out of memory while compressing data
Out of memory while decompressing data
output buffer.
OutputType
OverflowError
OVERLAID
OVERLAPPIN
OVERLINE
OVERRIDE
overrides_name
Overrides the automatic determination of C-level floating point type.
overrides the normal algorithm (and the outcome is cached).
Overriding __eq__ blocks inheritance of __hash__ in 3.x
oversize b in quorem
oversized quotient in quorem
O_WRONLY
OYRANISM
O|z:ascii_encode
O|zi:utf_16_encode
O|zi:utf_32_encode
O|z:latin_1_encode
O|zO:charmap_encode
O|z:raw_unicode_escape_encode
O|z:unicode_escape_encode
O|z:unicode_internal_decode
O|z:unicode_internal_encode
O|z:utf_16_be_encode
O|z:utf_16_le_encode
O|z:utf_32_be_encode
O|z:utf_32_le_encode
O|z:utf_7_encode
O|z:utf_8_encode
*p == '\0'
PAA-PILLA
PAASENTO
 package
__package__
Package name too long
package, pass the submodule name and the package's __path__.
__package__ set to non-string
packed IP wrong length for inet_ntoa
PACKET_BROADCAST
PACKET_FASTROUTE
PACKET_HOST
PACKET_LOOPBACK
PACKET_MULTICAST
PACKET_OTHERHOST
PACKET_OUTGOING
pack_into
pack_into requires a buffer of at least %zd bytes
pack_into requires exactly %zd arguments
pack requires exactly %zd arguments
Pack the values v1, v2, ... according to fmt.
Pack the values v1, v2, ... according to this Struct's format, write 
Pad a numeric string B with zeros on the left, to fill a field
Pad a numeric string S with zeros on the left, to fill a field
padded string is too long
pAf_back
pair (host, port); the host must refer to the local host. For raw packet
PAIRTHRA
PAIYANNOI
PALATALIZATION
PALATALIZE
PALOCHKA
PAMENENG
PAMINGKAL
PAMPHYLIA
PAMUDPOD
PAMUNGKAH
PANAELAENG
pa + na == pb
PANEULEUNG
PANGHULU
PANGLAYAR
PANGRANGKEP
PANGWISAD
  P:an integer type that is wide enough to hold a pointer.
PANOLONG
PANSIOS-KAPYEOUNPIEUP
PANSIOS-PIEUP
PANYAKRA
PANYANGGA
PANYECEK
PARAGRAP
PARAGRAPH
PARAGRAPHOS
PARAKALESM
PARAKLITIK
PARAKLITIKI
PARALLEL
PARALLELOGRAM
parameters
param invalid for deref variable
param invalid for global variable
param invalid for local variable
param invalid for name variable
param invalid in attribute expression
param invalid in simple slice
param invalid in subscript expression
PARAPHRAS
PARENTHESI
PARENTHESIS
PARENTHESIZE
parenthesized argument names are invalid in 3.x
parenthesized arg with default
Parent module '%.200s' not found while handling absolute import
Parent module '%.200s' not loaded, cannot perform relative import
PARESTIGMENO
PARICHON
Parse a string to a time tuple according to a format specification.
parsenumber
../Parser/grammar1.c
../Parser/grammar.c
../Parser/node.c
../Parser/parser.c
../Parser/parsetok.c
../Parser/pgen.c
../Parser/tokenizer.c
parsestrplus
parsetok
Parse tree:
part after it.  If the separator is not found, returns two empty
partial_call
partial character in shift sequence
partial(func, *args, **keywords) - new function with partial application
PARTIALLY-RECYCLE
partial_reduce
partial_setstate
partition
PARTNERSHI
passed or is false, the behavior is as if a string had been passed.  This
PASSIVE-PULL-DOWN-OUTPU
PASSIVE-PULL-UP-OUTPU
pass_stmt
  passwd - group password (encrypted); often empty
password
Password database entries are reported as 7-tuples containing the following
Patch release number
__path__
PATHAMASAT
pathconf
pathconf_names
pathconf(path, name) -> integer
path_hooks
path_importer_cache
path -- module search path; path[0] is the script directory, else ''
    path: path of directory to list
    path: path of executable file
path too long
pause() -- wait until a signal arrives [Unix only]
PAVIYANI
pbuf[0] == '0'
pbuf[1] == c
p-buf < bufsize
p <= buf_size+buffer
PC_ASYNC_IO
PC_CHOWN_RESTRICTED
PC_FILESIZEBITS
PC_LINK_MAX
PC_MAX_CANON
PC_MAX_INPUT
PC_NAME_MAX
PC_NO_TRUNC
PC_PATH_MAX
PC_PIPE_BUF
PC_PRIO_IO
PC_SOCK_MAXBUF
p_cs_precedes
PC_SYNC_IO
PC_VDISABLE
pdigit - z->ob_digit <= n
PEDESTAL
PEDESTRIAN
peer_certificate
peer_certificate([der=False]) -> certificate
peer certificate, or None if no certificate was provided.  This will
PELASTON
PEM_read_bio_X509_AUX
pending() -> count
PendingDeprecationWarning
pending on the connection.
PENETRATION
PENTAGON
PENTASEME
PERCENTEQUAL
PERCUSSIVE
PERFECTA
PERFECTU
Perform an fstatvfs system call on the given fd.
Perform a stat system call on the given path.
Perform a statvfs system call on the given path.
Perform the lock operation op on file descriptor fd.  See the Unix 
Perform the requested operation on file descriptor fd.  The operation
Perform the requested operation on file descriptor fd.  The operation is
PERISPOMEN
PERISPOMENI
PERMANEN
permutations(iterable[, r]) --> permutations object
permutations_next
permutations(p[, r])
permutations(range(3), 2) --> (0,1), (0,2), (1,0), (1,2), (2,0), (2,1)
PERPENDICULA
PERPENDICULAR
persistent_id
persistent id must be string
persistent_load
persistent references without instantiating any objects or importing
PERSPECTIVE
PETASTOKOUFISMA
PF_PACKET
PHAARKAA
PHARYNGEA
phase(z) -> float
__phello__
__phello__.spam
PHIEUPH-HIEUH
PHIEUPH-PIEUP
PHIEUPH-SIOS
PHIEUPH-THIEUTH
PHILIPPIN
PHOENICIA
PIASUTORU
pickle data was truncated
PickleError
pickle module.
pickle protocol %d asked for; the highest available protocol is %d
Pickler(file, protocol=0) -- Create a pickler.
pickling and unpickling.)
PicklingError
PIEUP-CHIEUCH
PIEUP-CIEUC
PIEUP-KHIEUKH
PIEUP-MIEUM
PIEUP-NIEUN
PIEUP-RIEUL
PIEUP-RIEUL-PHIEUPH
PIEUP-SIOS-CIEUC
PIEUP-SIOS-KIYEOK
PIEUP-SIOS-PIEUP
PIEUP-SIOS-THIEUTH
PIEUP-SIOS-TIKEUT
PIEUP-SSANGSIOS
PIEUP-THIEUTH
pinned buffer
((pinst)->ob_type == &PyInstance_Type)
PIPE_BUF
pipe() -> (read_end, write_end)
PITCHFOR
PITCHFORK
PIZZICATO
PKG_DIRECTORY
PLACEHOLDE
PLASTICS
platform
- platform documentation should be referred to for more information
platform -- platform identifier
:plat-linux2:lib-tk:lib-old
Please report this to the Python maintainer, along with the traceback,
PLETHRON
PLUSEQUAL
PLUS-MINU
PNEUMATA
point argument will be truncated towards zero (this does not include a
POKRYTIE
polar function
polar(z) -> r: float, phi: float
POLLNVAL
POLLRDBAND
POLLRDNORM
Polls the set of registered file descriptors, returning a list containing 
poll([timeout=-1[, maxevents=-1]]) -> [(fd, events), (...)]
poll( [timeout] ) -> list of (fd, event) 2-tuples
POLLWRBAND
POLLWRNORM
pool_is_in_list
pool_is_in_list(p, arenas[i].freepools)
pool_is_in_list(p, usedpools[sz + sz])
pool->ref.count > 0
poorly formed 'exec' statement: %d parts to statement
 Pop ...
popen(command [, mode='r' [, bufsize]]) -> pipe
pop from an empty deque
pop from an empty set
pop from empty array
pop from empty bytearray
pop from empty list
pop([i])
pop index out of range
popitem(): dictionary is empty
pop() -- remove and return item (default last)
PORRECTU
PORRECTUS
port/proto not found
pos(a) -- Same as +a.
position %zd from error handler out of bounds
positive_sign
posix.stat_result
posix.statvfs_result
Posix/windows: If your platform supports st_blksize, st_blocks, st_rdev,
pos == seq->size
POSSESSION
POSTPOSITIO
pow() 2nd argument cannot be negative when 3rd argument specified
pow() 3rd argument cannot be 0
pow() 3rd argument not allowed unless all arguments are integers
pow(a, b) -- Same as a ** b.
pow(x, y)
pow(x, y[, z]) -> number
pppppppppppppppppppppppppppppppppppppp
p == (((PyStringObject *)(str))->ob_sval)
p > (((PyStringObject *)(str))->ob_sval)
PRAM-BEI
PRAM-BUO
PRAM-BUON
PRAM-MUO
PRAM-MUOY
PRAM-PII
PRECEDES
PRECEDIN
precision == -1
precision == -1 || digit_count < precision
Precision not allowed in integer format specifier
prec too big
predicate evaluates to true for each entry.
preferred way to open a file.  See file.__doc__ for further information.
prefix can also be a tuple of strings to try.
prefix_index < (sizeof(decomp_prefix)/sizeof(*decomp_prefix))
prefix -- prefix used to find the Python library
<prefix>/pythonX.X
PREPONDERANCE
PRESCRIPTIO
PRESENTATIO
prevblock != ((void *)0)
Print an object to sys.stdout and also save it in __builtin__._
printed unless the exception is SystemExit.
Print field "values" must be a list, not a %.200s
print_file_and_line
print_function
print recursion
Prints the values to a stream, or to sys.stdout by default.
print_stmt
print(value, ..., sep=' ', end='\n', file=sys.stdout)
PRISHTHAMATR
Private method returning an estimate of len(list(it)).
produced.
producing strings. This is equivalent to calling write() for each string.
product((0,1), (0,1), (0,1)) --> (0,0,0) (0,0,1) (0,1,0) (0,1,1) (1,0,0) ...
product('ab', range(3)) --> ('a',0) ('a',1) ('a',2) ('b',0) ('b',1) ('b',2)
product(A, repeat=4) means the same as product(A, A, A, A).
product(*iterables) --> product object
product_new
product_next
product(p, q, ... [repeat=1]) --> cartesian product
PROFOUND
Program interrupted by user.
-      : program read from stdin (default; interactive mode if a tty)
PROGRESS
PROJECTION
PROJECTIVE
PROLATION
PROLONGE
PROPELLE
property
    @property
property_dealloc
property(fget=None, fset=None, fdel=None, doc=None) -> property attribute
PROPORTION
PROPORTIONA
PROSGEGRAMMENI
protection bits
protocol
Protocol 1 is more efficient than protocol 0; protocol 2 is
protocol is 0, to be backwards compatible.  (Protocol 0 is the
protocol not found
PROTOCOL_SSLv23
PROTOCOL_SSLv3
protocol; supported protocols are 0, 1, 2.  The default
PROTOCOL_TLSv1
protocol version supported.  The higher the protocol used, the
PROTOVARY
provide a way for an extension module to export a C interface to other
proxy_dealloc
proxy(object[, callback]) -- create a proxy object that weakly
ProxyType
P+R+T+V+X+Z+\+^+`+b+d+f+h+j+l+n+p+r+t+v+x+z+|+~+
p_sep_by_space
PSIFISTO
PSIFISTOLYGISMA
PSIFISTOPARAKALESMA
PSIFISTOSYNAGMA
p_sign_posn
pthread_attr_destroy
pthread_attr_init
pthread_attr_setscope
pthread_attr_setstacksize
pthread_create
pthread_detach
pthread_self
pto->kw == (&_Py_NoneStruct) || ((((((PyObject*)(pto->kw))->ob_type))->tp_flags & ((1L<<29))) != 0)
ptr != ((void *)0)
PUNCTUATIO
PUNCTUATION
Purported %s module %.200s not found
purposes only.
 Push ...
PUSHPIKA
putenv(key, value)
p_va != ((void *)0)
p == ((void *)0)
pwd.struct_passwd
pwd.struct_passwd: Results from getpw*() routines.
pw_gecos
                    pw_gid,pw_gecos,pw_dir,pw_shell)
                  pw_gid,pw_gecos,pw_dir,pw_shell)
  (pw_name,pw_passwd,pw_uid,pw_gid,pw_gecos,pw_dir,pw_shell)
pw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell.
pw_passwd
pw_shell
py3kwarning
py3k_warning
_Py_abstract_hack
_Py_acosh
_Py_addarc
_Py_addbit
_Py_adddfa
_Py_addfirstsets
_Py_addlabel
_Py_add_one_to_index_C
_Py_add_one_to_index_F
Py_AddPendingCall
_Py_addstate
_Py_AddToAllObjects
_Py_alias
PyArena_AddPyObject
PyArena_Free
PyArena_Malloc
PyArena_New
_PyArg_NoKeywords
PyArg_Parse
_PyArg_Parse_SizeT
PyArg_ParseTuple
PyArg_ParseTupleAndKeywords
_PyArg_ParseTupleAndKeywords_SizeT
_PyArg_ParseTuple_SizeT
_Py_arguments
PyArg_UnpackTuple
PyArg_UnpackTuple() argument list is not a tuple
PyArg_VaParse
_PyArg_VaParse_SizeT
PyArg_VaParseTupleAndKeywords
_PyArg_VaParseTupleAndKeywords_SizeT
_Py_ascii_whitespace
_Py_asinh
_Py_Assert
_Py_Assign
PyAST_Check
PyAST_Compile
PyAST_FromNode
PyAST_mod2obj
PyAST_obj2mod
_Py_atanh
Py_AtExit
_Py_Attribute
_Py_AugAssign
PyBaseObject_Type
PyBaseString_Type
_Py_BinOp
PyBool_FromLong
_Py_BoolOp
PyBool_Type
_Py_Break
PyBuffer_FillContiguousStrides
PyBuffer_FillInfo
PyBuffer_FromContiguous
PyBuffer_FromMemory
PyBuffer_FromObject
PyBuffer_FromReadWriteMemory
PyBuffer_FromReadWriteObject
PyBuffer_GetPointer
PyBuffer_IsContiguous
PyBuffer_New
PyBuffer_Release
PyBuffer_ToContiguous
PyBuffer_Type
Py_BuildValue
_Py_BuildValue_SizeT
_PyBuiltin_Init
PyByteArray_AsString
PyByteArray_Concat
_PyByteArray_empty_string
PyByteArray_Fini
PyByteArray_FromObject
PyByteArray_FromStringAndSize
PyByteArray_Init
PyByteArrayIter_Type
PyByteArray_Resize
PyByteArray_Size
PyByteArray_Type
_Py_bytes_capitalize
_PyBytes_FormatAdvanced
_Py_bytes_isalnum
_Py_bytes_isalpha
_Py_bytes_isdigit
_Py_bytes_islower
_Py_bytes_isspace
_Py_bytes_istitle
_Py_bytes_isupper
_Py_bytes_lower
_Py_bytes_swapcase
_Py_bytes_title
_Py_bytes_upper
Py_BytesWarningFlag
_Py_c_abs
_Py_Call
PyCallable_Check
PyCallable_Check(pto->fn)
PyCallIter_New
PyCallIter_Type
_Py_capitalize__doc__
PyCapsule
PyCapsule_GetContext
PyCapsule_GetContext called with invalid PyCapsule object
PyCapsule_GetDestructor
PyCapsule_GetDestructor called with invalid PyCapsule object
PyCapsule_GetName
PyCapsule_GetName called with invalid PyCapsule object
PyCapsule_GetPointer
PyCapsule_GetPointer called with incorrect name
PyCapsule_GetPointer called with invalid PyCapsule object
_Py_capsule_hack
PyCapsule_Import
PyCapsule_Import could not import module "%s"
PyCapsule_Import "%s" is not valid
PyCapsule_IsValid
PyCapsule_New
?PyCapsule_New called with null pointer
PyCapsule_SetContext
PyCapsule_SetContext called with invalid PyCapsule object
PyCapsule_SetDestructor
PyCapsule_SetDestructor called with invalid PyCapsule object
PyCapsule_SetName
PyCapsule_SetName called with invalid PyCapsule object
PyCapsule_SetPointer
PyCapsule_SetPointer called with invalid PyCapsule object
PyCapsule_SetPointer called with null pointer
PyCapsule_Type
_Py_c_diff
PyCell_Get
PyCell_New
PyCell_Set
PyCell_Type
PyCF_ONLY_AST
PyCFunction_Call
PyCFunction_ClearFreeList
PyCFunction_Fini
PyCFunction_GetFlags
PyCFunction_GetFunction
PyCFunction_GetSelf
PyCFunction_New
PyCFunction_NewEx
PyCFunction_Type
_Py_CheckInterval
_Py_CheckRecursionLimit
_Py_CheckRecursiveCall
_Py_ClassDef
PyClass_IsSubclass
PyClassMethod_New
PyClassMethod_Type
PyClass_New
PyClass_New: base must be a class
PyClass_New: bases must be a tuple
PyClass_New: dict must be a dictionary
PyClass_New: name must be a string
PyClass_Type
_Py_c_neg
PyCObject
PyCObject_AsVoidPtr
PyCObject_AsVoidPtr called with null pointer
PyCObject_AsVoidPtr with non-C-object
PyCObject_FromVoidPtr
PyCObject_FromVoidPtrAndDesc
PyCObject_FromVoidPtrAndDesc called with null description
PyCObject_GetDesc
PyCObject_GetDesc called with null pointer
PyCObject_GetDesc with non-C-object
_Py_cobject_hack
PyCObject_Import
PyCObject_SetVoidPtr
PyCObject_Type
PyCode_Addr2Line
PyCodec_BackslashReplaceErrors
PyCodec_Decode
PyCodec_Decoder
PyCodec_Encode
PyCodec_Encoder
_PyCode_CheckLineNumber
PyCodec_IgnoreErrors
PyCodec_IncrementalDecoder
PyCodec_IncrementalEncoder
_PyCodec_Lookup
PyCodec_LookupError
PyCodec_Register
PyCodec_RegisterError
PyCodec_ReplaceErrors
PyCodec_StreamReader
PyCodec_StreamWriter
PyCodec_StrictErrors
PyCodec_XMLCharRefReplaceErrors
PyCode_New
PyCode_NewEmpty
PyCode_Optimize
PY_CODERESOURCE
PyCode_Type
_Py_Compare
PY_COMPILED
Py_CompileString
Py_CompileStringFlags
PyComplex_AsCComplex
_PyComplex_FormatAdvanced
PyComplex_FromCComplex
PyComplex_FromDoubles
PyComplex_ImagAsDouble
PyComplex_RealAsDouble
PyComplex_Type
_Py_comprehension
_Py_Continue
_Py_c_pow
_Py_c_prod
_Py_c_quot
_Py_c_sum
_Py_ctype_table
_Py_ctype_tolower
_Py_ctype_toupper
_Py_Dealloc
Py_DebugFlag
Py_DecRef
_Py_delbitset
_Py_Delete
PyDescr_NewClassMethod
PyDescr_NewGetSet
PyDescr_NewMember
PyDescr_NewMethod
PyDescr_NewWrapper
_Py_dg_dtoa
_Py_dg_freedtoa
_Py_dg_strtod
_Py_Dict
PyDict_Clear
_Py_DictComp
_PyDict_Contains
PyDict_Copy
PyDict_DelItem
PyDict_DelItemString
_PyDict_Dummy
PyDict_Fini
PyDict_GetItem
PyDict_GetItemString
PyDict_Items
PyDictItems_Type
PyDictIterItem_Type
PyDictIterKey_Type
PyDictIterValue_Type
PyDict_Keys
PyDictKeys_Type
_PyDict_MaybeUntrack
PyDict_Merge
PyDict_MergeFromSeq2
PyDict_New
_PyDict_NewPresized
_PyDict_Next
PyDictProxy_New
PyDictProxy_Type
PyDict_SetItem
PyDict_SetItemString
PyDict_Size
PyDict_Type
PyDict_Update
PyDict_Values
PyDictValues_Type
_Py_DisplaySourceLine
Py_DivisionWarningFlag
Py_DontWriteBytecodeFlag
_Py_double_round
_Py_dumptree
_Py_Ellipsis
_Py_EllipsisObject
PyEllipsis_Type
Py_EndInterpreter
Py_EndInterpreter: not the last thread
Py_EndInterpreter: thread is not current
Py_EndInterpreter: thread still has a frame
PyEnum_Type
PyErr_BadArgument
_PyErr_BadInternalCall
PyErr_CheckSignals
PyErr_Clear
PyErr_Display
PyErr_ExceptionMatches
PyErr_ExceptionMatches(PyExc_KeyError)
PyErr_ExceptionMatches(PyExc_SystemError)
PyErr_ExceptionMatches(PyExc_TypeError)
PyErr_Fetch
PyErr_Format
PyErr_GivenExceptionMatches
PyErr_NewException
PyErr_NewException: name must be module.class
PyErr_NewExceptionWithDoc
PyErr_NoMemory
PyErr_NormalizeException
PyErr_Occurred
PyErr_Occurred()
PyErr_Print
PyErr_PrintEx
PyErr_ProgramText
PyErr_Restore
PyErr_SetFromErrno
PyErr_SetFromErrnoWithFilename
PyErr_SetFromErrnoWithFilenameObject
PyErr_SetInterrupt
PyErr_SetNone
PyErr_SetObject
PyErr_SetString
PyErr_SyntaxLocation
PyErr_Warn
PyErr_WarnEx
PyErr_WarnExplicit
PyErr_WriteUnraisable
PyEval_AcquireLock
PyEval_AcquireThread
PyEval_AcquireThread: non-NULL old thread state
PyEval_AcquireThread: NULL new thread state
PyEval_CallFunction
PyEval_CallMethod
PyEval_CallObjectWithKeywords
_PyEval_CallTracing
PyEval_EvalCode
PyEval_EvalCodeEx
PyEval_EvalCodeEx: NULL globals
PyEval_EvalFrame
PyEval_EvalFrameEx
PyEval_GetBuiltins
PyEval_GetCallStats
PyEval_GetFrame
PyEval_GetFuncDesc
PyEval_GetFuncName
PyEval_GetGlobals
PyEval_GetLocals
PyEval_GetRestricted
PyEval_InitThreads
PyEval_MergeCompilerFlags
PyEval_ReInitThreads
PyEval_ReleaseLock
PyEval_ReleaseThread
PyEval_ReleaseThread: NULL thread state
PyEval_ReleaseThread: wrong thread state
PyEval_RestoreThread
PyEval_RestoreThread: NULL tstate
PyEval_SaveThread
PyEval_SaveThread: NULL tstate
PyEval_SetProfile
PyEval_SetTrace
_PyEval_SliceIndex
PyEval_ThreadsInitialized
PyExc_ArithmeticError
PyExc_AssertionError
PyExc_AttributeError
PyExc_BaseException
PyExc_BufferError
PyExc_BytesWarning
PyExc_DeprecationWarning
PyExc_EnvironmentError
PyExc_EOFError
_Py_ExceptHandler
PyExc_Exception
_PyExc_Fini
PyExc_FloatingPointError
PyExc_FutureWarning
PyExc_GeneratorExit
PyExc_ImportError
PyExc_ImportWarning
PyExc_IndentationError
PyExc_IndexError
_PyExc_Init
PyExc_IOError
PyExc_KeyboardInterrupt
PyExc_KeyError
PyExc_LookupError
PyExc_MemoryError
PyExc_MemoryErrorInst
PyExc_NameError
PyExc_NotImplementedError
PyExc_OSError
PyExc_OverflowError
PyExc_PendingDeprecationWarning
PyExc_RecursionErrorInst
PyExc_ReferenceError
PyExc_RuntimeError
PyExc_RuntimeWarning
PyExc_StandardError
PyExc_StopIteration
PyExc_SyntaxError
PyExc_SyntaxWarning
PyExc_SystemError
PyExc_SystemExit
PyExc_TabError
PyExc_TypeError
PyExc_UnboundLocalError
PyExc_UnicodeDecodeError
PyExc_UnicodeEncodeError
PyExc_UnicodeError
PyExc_UnicodeTranslateError
PyExc_UnicodeWarning
PyExc_UserWarning
PyExc_ValueError
PyExc_Warning
PyExc_ZeroDivisionError
_Py_Exec
_Py_expm1
_Py_Expr
_Py_Expression
_Py_ExtSlice
Py_FatalError
Py_FdIsInteractive
PyFile_AsFile
PyFile_DecUseCount
PyFile_FromFile
PyFile_FromString
PyFile_GetLine
PyFile_IncUseCount
PyFile_Name
PyFileObject locking error in destructor (refcnt <= 0 at close).
_PyFile_SanitizeMode
PyFile_SetBufSize
PyFile_SetEncoding
PyFile_SetEncodingAndErrors
PyFile_SoftSpace
Py_FileSystemDefaultEncoding
PyFile_Type
PyFile_WriteObject
PyFile_WriteString
Py_Finalize
_Py_findlabel
Py_FindMethod
Py_FindMethodInChain
PyFloat_AsDouble
PyFloat_AsReprString
PyFloat_AsString
PyFloat_ClearFreeList
PyFloat_Fini
_PyFloat_FormatAdvanced
PyFloat_FromDouble
PyFloat_FromString
PyFloat_GetInfo
PyFloat_GetMax
PyFloat_GetMin
_PyFloat_Init
_PyFloat_Pack4
_PyFloat_Pack8
PyFloat_Type
_PyFloat_Unpack4
_PyFloat_Unpack8
Py_FlushLine
_Py_force_double
_Py_ForgetReference
PyFPE_counter
PyFPE_dummy
PyFPE_jbuf
PyFrame_BlockPop
PyFrame_BlockSetup
PyFrame_ClearFreeList
PyFrame_FastToLocals
PyFrame_Fini
PyFrame_GetLineNumber
_PyFrame_Init
PyFrame_LocalsToFast
PyFrame_New
PyFrame_Type
PY_FROZEN
Py_FrozenFlag
Py_FrozenMain
PyFrozenSet_New
PyFrozenSet_New((&_Py_NoneStruct)) == ((void *)0)
PyFrozenSet_Type
_Py_FunctionDef
PyFunction_GetClosure
PyFunction_GetCode
PyFunction_GetDefaults
PyFunction_GetGlobals
PyFunction_GetModule
PyFunction_New
PyFunction_SetClosure
PyFunction_SetDefaults
PyFunction_Type
PyFuture_FromAST
PyGC_Collect
_PyGC_Dump
_PyGC_generation0
((PyGC_Head *)(op)-1)->gc.gc_refs == (-2)
((((PyGC_Head *)(op)-1))->gc.gc_refs == (-3))
( (((PyGC_Head *)(op)-1))->gc.gc_refs == (-4))
((((PyGC_Head *)(wr)-1))->gc.gc_refs == (-3))
_Py_GeneratorExp
PyGen_NeedsFinalizing
PyGen_New
PyGen_Type
_Py_get_387controlword
Py_GetArgcArgv
Py_GetBuildInfo
Py_GetCompiler
Py_GetCopyright
Py_GetExecPrefix
_Py_GetObjects
Py_GetPath
Py_GetPlatform
Py_GetPrefix
Py_GetProgramFullPath
Py_GetProgramName
Py_GetPythonHome
Py_GetRecursionLimit
_Py_GetRefTotal
PyGetSetDescr_Type
Py_GetVersion
PyGILState_Ensure
_PyGILState_Fini
PyGILState_GetThisThreadState
PyGILState_GetThisThreadState()==tstate
_PyGILState_Init
PyGILState_Release
_Py_Global
PyGrammar_AddAccelerators
PyGrammar_FindDFA
PyGrammar_LabelRepr
PyGrammar_RemoveAccelerators
_Py_HashDouble
_Py_HashPointer
Py_HashRandomizationFlag
_Py_HashSecret
_Py_HashSecret_Initialized
_Py_hgidentifier
_Py_hgversion
_Py_IfExp
Py_IgnoreEnvironmentFlag
_Py_Import
_PyImport_AcquireLock
PyImport_AddModule
PyImport_AppendInittab
PyImport_Cleanup
_PyImport_DynLoadFiletab
PyImport_ExecCodeModule
PyImport_ExecCodeModuleEx
PyImport_ExtendInittab
_PyImport_Filetab
_PyImport_FindExtension
_PyImport_FindModule
_PyImport_Fini
_PyImport_FixupExtension
_PyImport_FixupExtension: module %.200s not loaded
_Py_ImportFrom
PyImport_FrozenModules
_PyImport_GetDynLoadFunc
PyImport_GetImporter
PyImport_GetMagicNumber
PyImport_GetModuleDict
PyImport_GetModuleDict: no module dictionary!
_PyImportHooks_Init
PyImport_Import
PyImport_ImportFrozenModule
PyImport_ImportModule
PyImport_ImportModuleLevel
PyImport_ImportModuleNoBlock
_PyImport_Init
_PyImport_Inittab
_PyImport_IsScript
_PyImport_LoadDynamicModule
_PyImport_ReInitLock
_PyImport_ReleaseLock
PyImport_ReloadModule
PyImport_ReloadModule: no modules_reloading dictionary!
Py_IncRef
_Py_Index
Py_Initialize
Py_Initialize: can't init bytearray
Py_Initialize: can't init frames
Py_Initialize: can't initialize __builtin__
Py_Initialize: can't initialize builtins dict
Py_Initialize: can't initialize sys
Py_Initialize: can't initialize sys dict
Py_Initialize: can't init ints
Py_Initialize: can't init longs
Py_Initialize: can't make first interpreter
Py_Initialize: can't make first thread
Py_Initialize: can't make modules dictionary
Py_Initialize: can't make modules_reloading dictionary
Py_InitializeEx
Py_InitModule4TraceRefs
_Py_InsertThousandsGroupingLocale
Py_InspectFlag
_PyInstance_Lookup
PyInstance_New
PyInstance_NewRaw
PyInstance_Type
PyInt_AsLong
PyInt_AsSsize_t
PyInt_AsUnsignedLongLongMask
PyInt_AsUnsignedLongMask
PyInt_ClearFreeList
_Py_Interactive
Py_InteractiveFlag
PyInterpreterState_Clear
PyInterpreterState_Delete
PyInterpreterState_Delete: invalid interp
PyInterpreterState_Delete: remaining threads
PyInterpreterState_Head
PyInterpreterState_New
PyInterpreterState_Next
PyInterpreterState_ThreadHead
PyInt_Fini
_PyInt_Format
_PyInt_FormatAdvanced
PyInt_FromLong
PyInt_FromSize_t
PyInt_FromSsize_t
PyInt_FromString
PyInt_FromUnicode
PyInt_GetMax
_PyInt_Init
PyInt_Type
_Py_isalnum__doc__
_Py_isalpha__doc__
_Py_isdigit__doc__
Py_IsInitialized
_Py_islower__doc__
_Py_isspace__doc__
_Py_istitle__doc__
_Py_isupper__doc__
PyIter_Next
_Py_keyword
_Py_Lambda
_Py_List
PyList_Append
PyList_AsTuple
_Py_ListComp
_PyList_Extend
PyList_Fini
PyList_GetItem
PyList_GetSlice
PyList_Insert
PyListIter_Type
PyList_New
(((PyListObject *)(consts))->ob_item[j]) == (&_Py_NoneStruct)
PyList_Reverse
PyListRevIter_Type
PyList_SetItem
PyList_SetSlice
PyList_Size
PyList_Sort
PyList_Type
_Py_log1p
_PyLong_AsByteArray
PyLong_AsDouble
PyLong_AsLong
PyLong_AsLongAndOverflow
PyLong_AsLongLong
PyLong_AsLongLongAndOverflow
PyLong_AsSsize_t
PyLong_AsUnsignedLong
PyLong_AsUnsignedLongLong
PyLong_AsUnsignedLongLongMask
PyLong_AsUnsignedLongMask
PyLong_AsVoidPtr
_PyLong_Copy
_PyLong_DigitValue
_PyLong_Format
_PyLong_FormatAdvanced
_PyLong_Frexp
_PyLong_FromByteArray
PyLong_FromDouble
PyLong_FromLong
PyLong_FromLongLong
PyLong_FromSize_t
PyLong_FromSsize_t
PyLong_FromString
PyLong_FromUnicode
PyLong_FromUnsignedLong
PyLong_FromUnsignedLongLong
PyLong_FromVoidPtr
PyLong_GetInfo
_PyLong_Init
_PyLong_New
_PyLong_NumBits
_PyLong_Sign
PyLong_Type
_Py_lower__doc__
Py_MakePendingCalls
_Py_Mangle
PyMapping_Check
PyMapping_GetItemString
PyMapping_HasKey
PyMapping_HasKeyString
PyMapping_Length
PyMapping_SetItemString
PyMapping_Size
PyMarshal_Init
PyMarshal_ReadLastObjectFromFile
PyMarshal_ReadLongFromFile
PyMarshal_ReadObjectFromFile
PyMarshal_ReadObjectFromString
PyMarshal_ReadShortFromFile
PyMarshal_WriteLongToFile
PyMarshal_WriteObjectToFile
PyMarshal_WriteObjectToString
PyMemberDescr_Type
PyMember_Get
PyMember_GetOne
PyMember_Set
PyMember_SetOne
_PyMem_DebugFree
_PyMem_DebugMalloc
_PyMem_DebugRealloc
PyMem_Free
PyMem_Malloc
PyMemoryView_FromBuffer
PyMemoryView_FromObject
PyMemoryView_GetContiguous
PyMemoryView_Type
PyMem_Realloc
_Py_mergebitset
_Py_meta_grammar
PyMethod_Class
PyMethod_ClearFreeList
PyMethod_Fini
PyMethod_Function
PyMethod_New
PyMethod_Self
PyMethod_Type
_Py_Module
PyModule_AddIntConstant
PyModule_AddObject
PyModule_AddObject() needs module as first arg
PyModule_AddObject() needs non-NULL value
PyModule_AddStringConstant
_PyModule_Clear
PyModule_GetDict
PyModule_GetFilename
PyModule_GetName
PyModule_GetWarningsModule
PyModule_New
PyModule_Type
_Py_Name
_Py_NegativeRefcount
_Py_newbitset
_Py_newgrammar
Py_NewInterpreter
Py_NewInterpreter: call Py_Initialize first
_Py_NewReference
PyNode_AddChild
PyNode_Compile
PyNode_Free
PyNode_ListTree
PyNode_New
_Py_NoneStruct
Py_NoSiteFlag
_Py_NotImplementedStruct
Py_NoUserSiteDirectory
PyNullImporter_Type
PyNumber_Absolute
PyNumber_Add
PyNumber_And
PyNumber_AsSsize_t
PyNumber_Check
PyNumber_Coerce
PyNumber_CoerceEx
_PyNumber_ConvertIntegralToInt
PyNumber_Divide
PyNumber_Divmod
PyNumber_Float
PyNumber_FloorDivide
PyNumber_Index
PyNumber_InPlaceAdd
PyNumber_InPlaceAnd
PyNumber_InPlaceDivide
PyNumber_InPlaceFloorDivide
PyNumber_InPlaceLshift
PyNumber_InPlaceMultiply
PyNumber_InPlaceOr
PyNumber_InPlaceOr(ob, dup) == ob
PyNumber_InPlacePower
PyNumber_InPlaceRemainder
PyNumber_InPlaceRshift
PyNumber_InPlaceSubtract
PyNumber_InPlaceSubtract(ob, ob) == ob
PyNumber_InPlaceTrueDivide
PyNumber_InPlaceXor
PyNumber_Int
PyNumber_Invert
PyNumber_Long
PyNumber_Lshift
PyNumber_Multiply
PyNumber_Negative
PyNumber_Or
PyNumber_Positive
PyNumber_Power
PyNumber_Remainder
PyNumber_Rshift
PyNumber_Subtract
PyNumber_ToBase
PyNumber_ToBase: index not int or long
PyNumber_TrueDivide
PyNumber_Xor
((((((PyObject*)(ag->attr))->ob_type))->tp_flags & ((1L<<26))) != 0)
((((PyObject*)(a))->ob_type) == (&Arraytype) || PyType_IsSubtype((((PyObject*)(a))->ob_type), (&Arraytype)))
((((((PyObject*)(args))->ob_type))->tp_flags & ((1L<<26))) != 0)
PyObject_AsCharBuffer
PyObject_AsFileDescriptor
PyObject_AsReadBuffer
PyObject_AsWriteBuffer
((((((PyObject*)(base))->ob_type))->tp_flags & ((1L<<31))) != 0)
((((((PyObject*)(bases))->ob_type))->tp_flags & ((1L<<26))) != 0)
((((((PyObject*)(b))->ob_type))->tp_flags & ((1L<<31))) != 0)
((((PyObject*)(bytearray_obj))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(bytearray_obj))->ob_type), (&PyByteArray_Type)))
((((PyObject*)(bytesep))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(bytesep))->ob_type), (&PyByteArray_Type)))
PyObject_Call
PyObject_CallFunction
PyObject_CallFunctionObjArgs
_PyObject_CallFunction_SizeT
PyObject_CallMethod
PyObject_CallMethodObjArgs
_PyObject_CallMethod_SizeT
PyObject_CallObject
PyObject_CheckReadBuffer
PyObject_ClearWeakRefs
PyObject_Cmp
((((((PyObject*)(code))->ob_type))->tp_flags & ((1L<<27))) != 0)
PyObject_Compare
((((PyObject*)(consts))->ob_type) == &PyList_Type)
((((((PyObject*)(consts))->ob_type))->tp_flags & ((1L<<25))) != 0)
PyObject_CopyData
_PyObject_DebugCheckAddress
_PyObject_DebugCheckAddressApi
_PyObject_DebugDumpAddress
_PyObject_DebugFree
_PyObject_DebugFreeApi
_PyObject_DebugMalloc
_PyObject_DebugMallocApi
_PyObject_DebugMallocStats
_PyObject_DebugRealloc
_PyObject_DebugReallocApi
_PyObject_Del
PyObject_DelItem
PyObject_DelItemString
((((((PyObject*)(dict))->ob_type))->tp_flags & ((1L<<29))) != 0)
PyObject_Dir
((((PyObject*)(d))->ob_type) == (&PyWrapperDescr_Type) || PyType_IsSubtype((((PyObject*)(d))->ob_type), (&PyWrapperDescr_Type)))
((((((PyObject*)(d))->ob_type))->tp_flags & ((1L<<29))) != 0)
(((PyObject*)(dummy))->ob_type) == &localdummytype
_PyObject_Dump
((((((PyObject*)(encoded))->ob_type))->tp_flags & ((1L<<27))) != 0)
((((PyObject*)(f))->ob_type) == (&PyFile_Type) || PyType_IsSubtype((((PyObject*)(f))->ob_type), (&PyFile_Type)))
((((PyObject*)(f))->ob_type) == &PyFrozenSet_Type)
PyObject_Format
PyObject_Free
_PyObject_GC_Del
_PyObject_GC_Malloc
_PyObject_GC_New
_PyObject_GC_NewVar
_PyObject_GC_Resize
_PyObject_GC_Track
_PyObject_GC_UnTrack
PyObject_GC_UnTrack
PyObject_GenericGetAttr
_PyObject_GenericGetAttrWithDict
PyObject_GenericSetAttr
_PyObject_GenericSetAttrWithDict
PyObject_GetAttr
PyObject_GetAttrString
PyObject_GetBuffer
_PyObject_GetDictPtr
PyObject_GetItem
PyObject_GetIter
((((((PyObject*)(globals))->ob_type))->tp_flags & ((1L<<29))) != 0)
PyObject_HasAttr
PyObject_HasAttrString
PyObject_Hash
PyObject_HashNotImplemented
((((((PyObject*)(ig->item))->ob_type))->tp_flags & ((1L<<26))) != 0)
PyObject_Init
PyObject_InitVar
((((PyObject*)(input_obj))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(input_obj))->ob_type), (&PyByteArray_Type)))
PyObject_IsInstance
PyObject_IsSubclass
PyObject_IsTrue
((((PyObject*)(iterator))->ob_type) == &PySeqIter_Type)
((((PyObject*)(it->it_seq))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(it->it_seq))->ob_type), (&PyByteArray_Type)))
((((PyObject*)(it))->ob_type) == (&PyArrayIter_Type) || PyType_IsSubtype((((PyObject*)(it))->ob_type), (&PyArrayIter_Type)))
((((((PyObject*)(key))->ob_type))->tp_flags & ((1L<<27))) != 0)
PyObject_Length
_PyObject_LengthHint
((((((PyObject*)(lineno_obj))->ob_type))->tp_flags & ((1L<<27))) != 0)
((((((PyObject*)(list))->ob_type))->tp_flags & ((1L<<25))) != 0)
((((PyObject*)(localweakref))->ob_type) == (&_PyWeakref_RefType) || PyType_IsSubtype((((PyObject*)(localweakref))->ob_type), (&_PyWeakref_RefType)))
_PyObject_LookupSpecial
PyObject_Malloc
((((((PyObject*)(map))->ob_type))->tp_flags & ((1L<<26))) != 0)
(((PyObject*)(mp))->ob_type) == &PyDict_Type
((((((PyObject*)(mro))->ob_type))->tp_flags & ((1L<<25))) != 0)
((((((PyObject*)(mro))->ob_type))->tp_flags & ((1L<<26))) != 0)
((((((PyObject*)(name))->ob_type))->tp_flags & ((1L<<27))) != 0)
((((((PyObject*)(names))->ob_type))->tp_flags & ((1L<<25))) != 0)
_PyObject_New
((((PyObject*)(newbytes))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(newbytes))->ob_type), (&PyByteArray_Type)))
((((PyObject*)(newobj))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(newobj))->ob_type), (&PyByteArray_Type)))
((((((PyObject*)(newobj))->ob_type))->tp_flags & ((1L<<24))) != 0)
_PyObject_NewVar
_PyObject_NextNotImplemented
PyObject_Not
((((PyObject*)(obj))->ob_type) == (&localtype) || PyType_IsSubtype((((PyObject*)(obj))->ob_type), (&localtype)))
((((PyObject*)(obj))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(obj))->ob_type), (&PyByteArray_Type)))
(((PyObject*)(obj))->ob_type)->tp_weaklistoffset > 0
(((PyObject*)(obj))->ob_type)->tp_weaklistoffset + sizeof(PyObject *) <= (size_t)((((PyObject*)(obj))->ob_type)->tp_basicsize)
!((((PyObject*)(ob))->ob_type) == &PyFrozenSet_Type)
((((PyObject*)(ob))->ob_type) == &PySet_Type || (((PyObject*)(ob))->ob_type) == &PyFrozenSet_Type)
((((PyObject*)(ob))->ob_type) == &PySet_Type || (((PyObject*)(ob))->ob_type) == &PyFrozenSet_Type || PyType_IsSubtype((((PyObject*)(ob))->ob_type), &PySet_Type) || PyType_IsSubtype((((PyObject*)(ob))->ob_type), &PyFrozenSet_Type))
((((PyObject*)(op))->ob_type) == (&Arraytype) || PyType_IsSubtype((((PyObject*)(op))->ob_type), (&Arraytype)))
((((PyObject*)(op))->ob_type) == &PyDict_Type)
((((PyObject*)(op))->ob_type) == &PyList_Type)
(((((PyObject*)(op))->ob_type) == (&_PyWeakref_RefType) || PyType_IsSubtype((((PyObject*)(op))->ob_type), (&_PyWeakref_RefType))) || (((((PyObject*)(op))->ob_type) == &_PyWeakref_ProxyType) || ((((PyObject*)(op))->ob_type) == &_PyWeakref_CallableProxyType)))
((((((((PyObject*)(op))->ob_type)))->tp_flags & ((1L<<14))) != 0) && ((((PyObject*)(op))->ob_type)->tp_is_gc == ((void *)0) || (((PyObject*)(op))->ob_type)->tp_is_gc(op)))
((((PyObject*)(otherset))->ob_type) == &PySet_Type || (((PyObject*)(otherset))->ob_type) == &PyFrozenSet_Type || PyType_IsSubtype((((PyObject*)(otherset))->ob_type), &PySet_Type) || PyType_IsSubtype((((PyObject*)(otherset))->ob_type), &PyFrozenSet_Type))
((((((PyObject*)(path_hooks))->ob_type))->tp_flags & ((1L<<25))) != 0)
((((((PyObject*)(path_importer_cache))->ob_type))->tp_flags & ((1L<<29))) != 0)
PyObject_Print
((((((PyObject*)(pto->args))->ob_type))->tp_flags & ((1L<<26))) != 0)
((((((PyObject*)(raw))->ob_type))->tp_flags & ((1L<<25))) != 0)
_PyObject_RealIsInstance
_PyObject_RealIsSubclass
_PyObject_RealIsSubclass((PyObject *)(((PyObject*)(self))->ob_type), (PyObject *)(descr->d_type))
PyObject_Realloc
((((PyObject*)(ref))->ob_type) == (&_PyWeakref_RefType) || PyType_IsSubtype((((PyObject*)(ref))->ob_type), (&_PyWeakref_RefType)))
PyObject_Repr
((((((PyObject*)(res))->ob_type))->tp_flags & ((1L<<27))) != 0)
((((PyObject*)(result))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(result))->ob_type), (&PyByteArray_Type)))
((((((PyObject*)(result))->ob_type))->tp_flags & ((1L<<27))) != 0) || ((((((PyObject*)(result))->ob_type))->tp_flags & ((1L<<28))) != 0)
PyObject_RichCompare
PyObject_RichCompareBool
PyObject_SelfIter
((((PyObject*)(self))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(self))->ob_type), (&PyByteArray_Type)))
(((((PyObject*)(self))->ob_type) == &PyDictKeys_Type) || ((((PyObject*)(self))->ob_type) == &PyDictItems_Type))
((((PyObject*)(self))->ob_type) == (&PyFile_Type) || PyType_IsSubtype((((PyObject*)(self))->ob_type), (&PyFile_Type)))
((((PyObject*)(self))->ob_type) == (&PyStructType) || PyType_IsSubtype((((PyObject*)(self))->ob_type), (&PyStructType)))
(((((PyObject*)(self))->ob_type) == (&_PyWeakref_RefType) || PyType_IsSubtype((((PyObject*)(self))->ob_type), (&_PyWeakref_RefType))) || (((((PyObject*)(self))->ob_type) == &_PyWeakref_ProxyType) || ((((PyObject*)(self))->ob_type) == &_PyWeakref_CallableProxyType)))
!(((((((PyObject*)(self))->ob_type)))->tp_flags & ((1L<<14))) != 0) || ((PyGC_Head *)(self)-1)->gc.gc_refs != (-2)
((((((PyObject*)(self))->ob_type))->tp_flags & ((1L<<25))) != 0)
((((PyObject*)(seq))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(seq))->ob_type), (&PyByteArray_Type)))
((((((PyObject*)(seq))->ob_type))->tp_flags & ((1L<<25))) != 0)
((((((PyObject*)(seq))->ob_type))->tp_flags & ((1L<<26))) != 0)
PyObject_SetAttr
PyObject_SetAttrString
PyObject_SetItem
PyObject_Size
_PyObject_SlotCompare
((((((PyObject*)(slots))->ob_type))->tp_flags & ((1L<<26))) != 0)
((((PyObject*)(s))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(s))->ob_type), (&PyByteArray_Type)))
((((((PyObject*)(s))->ob_type))->tp_flags & ((1L<<27))) != 0)
((((PyObject*)(so))->ob_type) == &PySet_Type || (((PyObject*)(so))->ob_type) == &PyFrozenSet_Type || PyType_IsSubtype((((PyObject*)(so))->ob_type), &PySet_Type) || PyType_IsSubtype((((PyObject*)(so))->ob_type), &PyFrozenSet_Type))
_PyObject_Str
PyObject_Str
((((((PyObject*)(subclasses))->ob_type))->tp_flags & ((1L<<25))) != 0)
((((((PyObject*)(subclass))->ob_type))->tp_flags & ((1L<<31))) != 0)
((((PyObject*)(tmp))->ob_type) == &PyFloat_Type)
((((PyObject*)(tmp))->ob_type) == &PyLong_Type)
((((PyObject*)(tmp))->ob_type) == &PyString_Type)
((((((PyObject*)(tmp))->ob_type))->tp_flags & ((1L<<26))) != 0)
((((((PyObject*)(tmp))->ob_type))->tp_flags & ((1L<<27))) != 0)
((((((PyObject*)(tmp))->ob_type))->tp_flags & ((1L<<28))) != 0)
((((((PyObject*)(tmp))->ob_type))->tp_flags & ((1L<<31))) != 0)
((((PyObject*)(t))->ob_type) == &PyTuple_Type)
PyObject_Type
PyObject_Unicode
((((PyObject*)(u))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(u))->ob_type), (&PyByteArray_Type)))
((((((PyObject*)(utf8))->ob_type))->tp_flags & ((1L<<27))) != 0)
((((PyObject*)(value))->ob_type) == &PyCell_Type)
((((((PyObject*)(value))->ob_type))->tp_flags & ((1L<<24))) != 0)
((((PyObject*)(values[j]))->ob_type) == &PyCell_Type)
((((PyObject*)(values))->ob_type) == (&PyByteArray_Type) || PyType_IsSubtype((((PyObject*)(values))->ob_type), (&PyByteArray_Type)))
((((PyObject*)(v))->ob_type) == (&PyComplex_Type) || PyType_IsSubtype((((PyObject*)(v))->ob_type), (&PyComplex_Type)))
((((PyObject*)(v))->ob_type) == &PyDict_Type)
((((PyObject*)(v))->ob_type) == (&PyFloat_Type) || PyType_IsSubtype((((PyObject*)(v))->ob_type), (&PyFloat_Type)))
((((PyObject*)(v))->ob_type) == &PySTEntry_Type)
((((((PyObject*)(v))->ob_type))->tp_flags & ((1L<<24))) != 0)
((((((PyObject*)(w))->ob_type))->tp_flags & ((1L<<27))) != 0)
Py_OptimizeFlag
PyOS_AfterFork
PyOS_ascii_atof
_PyOS_ascii_formatd
PyOS_ascii_formatd is deprecated, use PyOS_double_to_string instead
_PyOS_ascii_strtod
PyOS_ascii_strtod and PyOS_ascii_atof are deprecated.  Use PyOS_string_to_double instead.
PyOS_double_to_string
PyOS_FiniInterrupts
_PyOS_GetOpt
PyOS_getsig
PyOS_InitInterrupts
PyOS_InputHook
PyOS_InterruptOccurred
PyOS_mystricmp
PyOS_mystrnicmp
_PyOS_optarg
_PyOS_opterr
_PyOS_optind
PyOS_Readline
PyOS_ReadlineFunctionPointer
_PyOS_ReadlineTState
_PyOS_ResetGetOpt
PyOS_setsig
PyOS_snprintf
PyOS_StdioReadline
PyOS_string_to_double
PyOS_strtol
PyOS_strtoul
_PyOS_URandom
PyOS_vsnprintf
_Py_PackageContext
_Py_parse_inf_or_nan
PyParser_AddToken
PyParser_ASTFromFile
PyParser_ASTFromString
PyParser_Delete
_PyParser_Grammar
PyParser_New
PyParser_ParseFile
PyParser_ParseFileFlags
PyParser_ParseFileFlagsEx
PyParser_ParseString
PyParser_ParseStringFlags
PyParser_ParseStringFlagsFilename
PyParser_ParseStringFlagsFilenameEx
PyParser_SetError
PyParser_SimpleParseFile
PyParser_SimpleParseFileFlags
PyParser_SimpleParseString
PyParser_SimpleParseStringFilename
PyParser_SimpleParseStringFlags
PyParser_SimpleParseStringFlagsFilename
_PyParser_TokenNames
_Py_Pass
_Py_pgen
_Py_Print
_Py_PrintReferenceAddresses
_Py_PrintReferences
_Py_printtree
PyProperty_Type
Py_Py3kWarningFlag
_Py_QnewFlag
_Py_Raise
_PyRandom_Init
PyRange_Type
_Py_ReadyTypes
_Py_RefTotal
_Py_ReleaseInternedStrings
_Py_Repr
Py_ReprEnter
Py_ReprLeave
PY_RESOURCE
_Py_Return
PyReversed_Type
PyRun_AnyFile
PyRun_AnyFileEx
PyRun_AnyFileExFlags
PyRun_AnyFileFlags
PyRun_File
PyRun_FileEx
PyRun_FileExFlags
PyRun_FileFlags
PyRun_InteractiveLoop
PyRun_InteractiveLoopFlags
PyRun_InteractiveOne
PyRun_InteractiveOneFlags
PyRun_SimpleFile
PyRun_SimpleFileEx
PyRun_SimpleFileExFlags
PyRun_SimpleString
PyRun_SimpleStringFlags
PyRun_String
PyRun_StringFlags
_Py_samebitset
PySeqIter_New
PySeqIter_Type
PySequence_Check
PySequence_Concat
PySequence_Contains
PySequence_Count
PySequence_DelItem
PySequence_DelSlice
PySequence_Fast
PySequence_GetItem
PySequence_GetSlice
PySequence_In
PySequence_Index
PySequence_InPlaceConcat
PySequence_InPlaceRepeat
_PySequence_IterSearch
PySequence_Length
PySequence_List
PySequence_Repeat
PySequence_SetItem
PySequence_SetSlice
PySequence_Size
PySequence_Tuple
_Py_set_387controlword
PySet_Add
PySet_Add(f, elem) == 0
PySet_Add(f, elem) == -1
PySet_Add(ob, dup) == -1
PySet_Add(ob, elem) == 0
PySet_Clear
PySet_Clear(dup2) == 0
PySet_Clear(f) == -1
_Py_SetComp
PySet_Contains
PySet_Contains(ob, dup) == -1
PySet_Contains(ob, elem) == 0
PySet_Contains(ob, elem) == 1
PySet_Contains(t, elem) == -1
PySet_Discard
PySet_Discard(f, elem) == -1
PySet_Discard(ob, dup) == -1
PySet_Discard(ob, elem) == 0
PySet_Discard(ob, elem) == 1
_PySet_Dummy
PySet_Fini
PySet_New
PySet_New((&_Py_NoneStruct)) == ((void *)0)
_PySet_Next
_PySet_NextEntry
(((PySetObject *)(f))->used) == 0
(((PySetObject *)(ob))->used) == 0
(((PySetObject *)(ob))->used) == 2
(((PySetObject *)(ob))->used) == 3
PySet_Pop
PySet_Pop(f) == ((void *)0)
PySet_Pop(ob) == ((void *)0)
Py_SetProgramName
Py_SetPythonHome
Py_SetRecursionLimit
PySet_Size
PySet_Size(dup2) == 0
PySet_Size(dup2) == 3
PySet_Size(f) == 3
PySet_Size(ob) == 3
PySet_Size(t) == -1
PySet_Type
_PySet_Update
_PySet_Update(dup2, dup) == 0
_PySet_Update(f, dup) == -1
_Py_showtree
PySignal_SetWakeupFd
_Py_Slice
_PySlice_FromIndices
PySlice_GetIndices
PySlice_GetIndicesEx
PySlice_New
PySlice_Type
PY_SOURCE
(Py_ssize_t)(unsigned char)(n) == (n)
PySSL_SetError
PyStaticMethod_New
PyStaticMethod_Type
PySTEntry_Type
PyST_GetScope
PyString_AsDecodedObject
PyString_AsDecodedString
PyString_AsEncodedObject
PyString_AsEncodedString
PyString_AsString
PyString_AsStringAndSize
PyString_Concat
PyString_ConcatAndDel
PyString_Decode
PyString_DecodeEscape
PyString_Encode
_PyString_Eq
PyString_Fini
PyString_Format
_PyString_FormatLong
PyString_FromFormat
PyString_FromFormatV
PyString_FromString
PyString_FromStringAndSize
_PyString_InsertThousandsGrouping
PyString_InternFromString
PyString_InternImmortal
PyString_InternInPlace
PyString_InternInPlace: strings only please!
_PyString_Join
PyString_Repr
_PyString_Resize
PyString_Size
PyString_Type
_PY_STRUCT_FLOAT_COERCE
_PY_STRUCT_RANGE_CHECKING
PyStructSequence_InitType
PyStructSequence_New
PyStructSequence_UnnamedField
_Py_Subscript
Py_SubversionRevision
Py_SubversionShortBranch
_Py_Suite
PySuper_Type
_Py_svnversion
_Py_swapcase__doc__
_Py_SwappedOp
PySymtable_Build
PySymtable_Free
PySymtable_Lookup
Py_SymtableString
PySys_AddWarnOption
PySys_GetFile
PySys_GetObject
PySys_HasWarnOptions
_PySys_Init
PySys_ResetWarnOptions
PySys_SetArgv
PySys_SetArgvEx
PySys_SetObject
PySys_SetPath
PySys_WriteStderr
PySys_WriteStdout
Py_TabcheckFlag
../Python/ast.c
../Python/bltinmodule.c
python: Can't reopen .pyc file
Python C API version mismatch for module %.100s: This Python has API version %d, module %.100s has version %d.
PYTHONCASEOK : ignore case in 'import' statements (Windows).
../Python/ceval.c
../Python/codecs.c
../Python/compile.c
PYTHONDEBUG
PYTHONDONTWRITEBYTECODE
../Python/dtoa.c
PYTHONDUMPREFS
../Python/errors.c
Python error: <stdin> is a directory, cannot continue
../Python/future.c
../Python/getargs.c
PYTHONHASHSEED
PYTHONHASHSEED: if this variable is set to 'random', the effect is the same
PYTHONHASHSEED must be "random" or an integer in range [0; 4294967295]
PYTHONHOME
PYTHONHOME   : alternate <prefix> directory (or <prefix>%c<exec_prefix>).
../Python/import.c
Python import machinery not initialized
Python import mechanism to link to one another.
PYTHONINSPECT
Python int too large to convert to C long
PYTHONIOENCODING
PYTHONIOENCODING: Encoding[:errors] used for stdin/stdout/stderr.
PYTHONMALLOCSTATS
../Python/marshal.c
../Python/modsupport.c
../Python/mysnprintf.c
PYTHONNOUSERSITE
../Python/../Objects/stringlib/formatter.h
PYTHONOPTIMIZE
PYTHONPATH
PYTHONPATH   : '%c'-separated list of directories prefixed to the
../Python/peephole.c
../Python/pyarena.c
../Python/pystate.c
../Python/pystrtod.c
../Python/Python-ast.c
../Python/pythonrun.c
../Python/random.c
Python %s
Python %s on %s
Python's standard exception class hierarchy.
PYTHONSTARTUP
PYTHONSTARTUP: file executed on interactive startup (no default)
../Python/structmember.c
../Python/symtable.c
../Python/sysmodule.c
../Python/thread.c
PYTHONTHREADDEBUG
../Python/traceback.c
PYTHONUNBUFFERED
PYTHONVERBOSE
PYTHONWARNINGS
../Python/_warnings.c
PYTHONY2K
PyThread_acquire_lock
PyThread_acquire_lock(%p, %d) called
PyThread_acquire_lock(%p, %d) -> %d
PyThread_allocate_lock
PyThread_allocate_lock called
PyThread_allocate_lock() -> %p
PyThread_create_key
_PyThread_CurrentFrames
PyThread_delete_key
PyThread_delete_key_value
PyThread_exit_thread
PyThread_exit_thread called
PyThread_free_lock
PyThread_free_lock(%p) called
PyThread_get_key_value
PyThread_get_key_value(autoTLSkey) == ((void *)0)
PyThread_get_stacksize
PyThread_get_thread_ident
PyThread_init_thread
PyThread_init_thread called
PyThread_ReInitTLS
PyThread_release_lock
PyThread_release_lock(%p) called
PyThread_set_key_value
PyThread_set_stacksize
PyThread_start_new_thread
PyThread_start_new_thread called
PyThreadState_Clear
PyThreadState_Clear: warning: thread still has a frame
_PyThreadState_Current
PyThreadState_Delete
PyThreadState_Delete: circular list(!) and tstate not found.
PyThreadState_DeleteCurrent
PyThreadState_DeleteCurrent: no current tstate
PyThreadState_Delete: invalid tstate
PyThreadState_Delete: NULL interp
PyThreadState_Delete: NULL tstate
PyThreadState_Delete: small circular list(!) and tstate not found.
PyThreadState_Delete: tstate is still current
PyThreadState_Get
PyThreadState_GetDict
_PyThreadState_GetFrame
PyThreadState_Get: no current thread
_PyThreadState_Init
PyThreadState_IsCurrent
PyThreadState_IsCurrent(tcur)
PyThreadState_New
PyThreadState_Next
_PyThreadState_Prealloc
PyThreadState_SetAsyncExc
PyThreadState_Swap
_Py_Ticker
_PyTime_DoubleToTimet
_Py_title__doc__
_Py_tok_dump
PyTokenizer_Free
PyTokenizer_FromFile
PyTokenizer_FromString
PyTokenizer_Get
PyTokenizer_RestoreEncoding
PyToken_OneChar
PyToken_ThreeChars
PyToken_TwoChars
Py_TPFLAGS_HAVE_GETCHARBUFFER needed
PyTraceBack_Here
PyTraceBack_Print
PyTraceBack_Type
_Py_translatelabels
_PyTrash_delete_later
_PyTrash_delete_nesting
_PyTrash_deposit_object
_PyTrash_destroy_chain
_Py_TrueStruct
_Py_TryExcept
_Py_TryFinally
_Py_Tuple
PyTuple_ClearFreeList
PyTuple_Fini
PyTuple_GetItem
PyTuple_GetSlice
PyTupleIter_Type
_PyTuple_MaybeUntrack
PyTuple_New
PyTuple_Pack
_PyTuple_Resize
PyTuple_SetItem
PyTuple_Size
PyTuple_Size(map) >= nmap
PyTuple_Size(t) == len
PyTuple_Type
PyType_ClearCache
PyType_GenericAlloc
PyType_GenericNew
PyType_IsSubtype
PyType_IsSubtype(type, &PyFloat_Type)
PyType_IsSubtype(type, &PyInt_Type)
PyType_IsSubtype(type, &PyLong_Type)
PyType_IsSubtype(type, &PyString_Type)
PyType_IsSubtype(type, &PyTuple_Type)
PyType_IsSubtype(type, &PyUnicode_Type)
_PyType_Lookup
PyType_Modified
PyType_Ready
PyType_Type
_Py_UnaryOp
PyUnicode_AsDecodedObject
_PyUnicode_BidirectionalNames
PyUnicode_BuildEncodingMap
_PyUnicode_CategoryNames
_PyUnicode_Database_Records
PyUnicodeDecodeError_Create
PyUnicodeDecodeError_GetEncoding
PyUnicodeDecodeError_GetEnd
PyUnicodeDecodeError_GetObject
PyUnicodeDecodeError_GetReason
PyUnicodeDecodeError_GetStart
PyUnicodeDecodeError_SetEnd
PyUnicodeDecodeError_SetReason
PyUnicodeDecodeError_SetStart
_PyUnicode_DecodeUnicodeInternal
PyUnicode_DecodeUTF7
PyUnicode_DecodeUTF7Stateful
_PyUnicode_EastAsianWidthNames
PyUnicodeEncodeError_Create
PyUnicodeEncodeError_GetEncoding
PyUnicodeEncodeError_GetEnd
PyUnicodeEncodeError_GetObject
PyUnicodeEncodeError_GetReason
PyUnicodeEncodeError_GetStart
PyUnicodeEncodeError_SetEnd
PyUnicodeEncodeError_SetReason
PyUnicodeEncodeError_SetStart
PyUnicode_EncodeUTF7
Py_UnicodeFlag
_PyUnicode_FormatAdvanced
PyUnicodeTranslateError_Create
PyUnicodeTranslateError_GetEnd
PyUnicodeTranslateError_GetObject
PyUnicodeTranslateError_GetReason
PyUnicodeTranslateError_GetStart
PyUnicodeTranslateError_SetEnd
PyUnicodeTranslateError_SetReason
PyUnicodeTranslateError_SetStart
PyUnicode_Type
_PyUnicode_TypeRecords
PyUnicodeUCS4_AsASCIIString
PyUnicodeUCS4_AsCharmapString
_PyUnicodeUCS4_AsDefaultEncodedString
PyUnicodeUCS4_AsEncodedObject
PyUnicodeUCS4_AsEncodedString
PyUnicodeUCS4_AsLatin1String
PyUnicodeUCS4_AsRawUnicodeEscapeString
PyUnicodeUCS4_AsUnicode
PyUnicodeUCS4_AsUnicodeEscapeString
PyUnicodeUCS4_AsUTF16String
PyUnicodeUCS4_AsUTF32String
PyUnicodeUCS4_AsUTF8String
PyUnicodeUCS4_AsWideChar
PyUnicodeUCS4_ClearFreelist
PyUnicodeUCS4_Compare
PyUnicodeUCS4_Concat
PyUnicodeUCS4_Contains
PyUnicodeUCS4_Count
PyUnicodeUCS4_Decode
PyUnicodeUCS4_DecodeASCII
PyUnicodeUCS4_DecodeCharmap
PyUnicodeUCS4_DecodeLatin1
PyUnicodeUCS4_DecodeRawUnicodeEscape
PyUnicodeUCS4_DecodeUnicodeEscape
PyUnicodeUCS4_DecodeUTF16
PyUnicodeUCS4_DecodeUTF16Stateful
PyUnicodeUCS4_DecodeUTF32
PyUnicodeUCS4_DecodeUTF32Stateful
PyUnicodeUCS4_DecodeUTF8
PyUnicodeUCS4_DecodeUTF8Stateful
PyUnicodeUCS4_Encode
PyUnicodeUCS4_EncodeASCII
PyUnicodeUCS4_EncodeCharmap
PyUnicodeUCS4_EncodeDecimal
PyUnicodeUCS4_EncodeLatin1
PyUnicodeUCS4_EncodeRawUnicodeEscape
PyUnicodeUCS4_EncodeUnicodeEscape
PyUnicodeUCS4_EncodeUTF16
PyUnicodeUCS4_EncodeUTF32
PyUnicodeUCS4_EncodeUTF8
PyUnicodeUCS4_Find
_PyUnicodeUCS4_Fini
PyUnicodeUCS4_Format
PyUnicodeUCS4_FromEncodedObject
PyUnicodeUCS4_FromFormat
PyUnicodeUCS4_FromFormatV
PyUnicodeUCS4_FromObject
PyUnicodeUCS4_FromOrdinal
PyUnicodeUCS4_FromString
PyUnicodeUCS4_FromStringAndSize
PyUnicodeUCS4_FromUnicode
PyUnicodeUCS4_FromWideChar
PyUnicodeUCS4_GetDefaultEncoding
PyUnicodeUCS4_GetMax
PyUnicodeUCS4_GetSize
_PyUnicodeUCS4_Init
_PyUnicodeUCS4_IsAlpha
_PyUnicodeUCS4_IsDecimalDigit
_PyUnicodeUCS4_IsDigit
_PyUnicodeUCS4_IsLinebreak
_PyUnicodeUCS4_IsLowercase
_PyUnicodeUCS4_IsNumeric
_PyUnicodeUCS4_IsTitlecase
_PyUnicodeUCS4_IsUppercase
_PyUnicodeUCS4_IsWhitespace
PyUnicodeUCS4_Join
PyUnicodeUCS4_Partition
PyUnicodeUCS4_Replace
PyUnicodeUCS4_Resize
PyUnicodeUCS4_RichCompare
PyUnicodeUCS4_RPartition
PyUnicodeUCS4_RSplit
PyUnicodeUCS4_SetDefaultEncoding
PyUnicodeUCS4_Split
PyUnicodeUCS4_Splitlines
PyUnicodeUCS4_Tailmatch
_PyUnicodeUCS4_ToDecimalDigit
_PyUnicodeUCS4_ToDigit
_PyUnicodeUCS4_ToLowercase
_PyUnicodeUCS4_ToNumeric
_PyUnicodeUCS4_ToTitlecase
_PyUnicodeUCS4_ToUppercase
PyUnicodeUCS4_Translate
PyUnicodeUCS4_TranslateCharmap
_PyUnicode_XStrip
Py_UniversalNewlineFgets
Py_UniversalNewlineFread
_Py_upper__doc__
Py_UseClassExceptionsFlag
Py_VaBuildValue
_Py_VaBuildValue_SizeT
(((PyVarObject*)(ag->attr))->ob_size) == nattrs
(((PyVarObject*)(ah))->ob_size) > 0
(((PyVarObject*)(arena->a_objects))->ob_size) == 0
(((PyVarObject*)(base))->ob_size) == 0
(((PyVarObject*)(ig->item))->ob_size) == nitems
(((PyVarObject*)(pieces))->ob_size) > 0
(((PyVarObject*)(self))->ob_size) <= self->allocated || self->allocated == -1
(((PyVarObject*)(t1))->ob_size) >= 0
(((PyVarObject*)(t2))->ob_size) >= 0
(((PyVarObject*)(t2))->ob_size) <= 2*shift
(((PyVarObject*)(t3))->ob_size) >= 0
(((PyVarObject*)(z))->ob_size) == size_z
Py_VerboseFlag
_PyWarnings_Init
_PyWeakref_CallableProxyType
_PyWeakref_ClearRef
PyWeakref_GetObject
_PyWeakref_GetWeakrefCount
PyWeakref_NewProxy
PyWeakref_NewRef
_PyWeakref_ProxyType
_PyWeakref_RefType
_Py_While
_Py_With
PyWrapperDescr_Type
PyWrapper_New
_Py_Yield
_Py_ZeroStruct
%p [%zd] 
%p [%zd] %s
q[4 + i] == 0xFB
q[4] == (unsigned char)api
QAIRTHRA
-Q arg : division options: -Qold (default), -Qwarn, -Qwarnall, -Qnew
q <= ((digit)1 << 15)
q < ((digit)1 << 15)
  q:long long; Q:unsigned long long
-Q option should be `-Qold', `-Qwarn', `-Qwarnall', or `-Qnew' only
QUADRANT
QUADRUPL
QUARTERS
QUATERNIO
Queries the entropy gather daemon (EGD) on the socket named by 'path'.
QUESTION
QUESTIONE
QUINARIU
QUINCUNX
QUINDICESIM
QUOTATIO
quotetabs
QUSHSHAYA
r == 0 || (((PyObject*)(result))->ob_refcnt) == 1
__radd__
radians(x)
RADIOACTIV
RADIXCHAR
RAHMATULLA
Raise a KeyboardInterrupt in the main thread.
raise: arg 3 must be a traceback or None
Raises IndexError if list is empty or index is out of range.
Raises KeyError if the set is empty.
Raises OverflowError on infinities and a ValueError on NaNs.
raise_stmt
Raises ValueError if the value is not present.
Raise ZipImportError if the module couldn't be found.
__rand__
RAND_add
RAND_add(string, entropy)
RAND_egd
RAND_egd() expected string, found %s
RAND_egd(path) -> bytes
Random()
Random() -> create a random number generator with its own internal state.
_random.Random
random_seed
random() -> x in the interval [0, 1).
RAND_status
RAND_status() -> 0 or 1
_range_error
range(i, j) returns [i, i+1, i+2, ..., j-1]; start (!) defaults to 0.
range() integer %s argument expected, got %s.
rangeiterator
range() result has too many items
range([start,] stop[, step]) -> list of integers
range() step argument must not be zero
[raw_]input
raw_input
[raw_]input: input too long
[raw_]input: lost sys.stdin
[raw_]input: lost sys.stdout
raw_input([prompt]) -> string
rawunicodeescape
raw_unicode_escape_decode
raw_unicode_escape_encode
RbPQciobsusuae0)
__rdiv__
__rdivmod__
Read a file descriptor.
readahead
readahead_get_line_skip
Read and execute a Python script from a file.
Read a string from standard input.  The trailing newline is stripped.
Read beyond end of file.
readbuffer_encode
read() -- DEPRECATED, use fromfile()
readdir64
read (e.g. because the data has a different Python version
read(fd, buffersize) -> string
readinto
readinto() -> Undocumented.  Don't use this; it may go away.
read([len]) -> string
readline
readline() -- Read one line
readlines
readline([size]) -> next line from the file, as a string.
readlines() -- Read all lines
readlines([size]) -> list of strings, each a line from the file.
readlink
readlink(path) -> path
Read n objects from the file object f and append them to the end of the
Read one value from the open file and return it. If no valid value is
readonly
read-only
readonly attribute
read([size]) -> read at most size bytes, returned as a string.
read([s]) -- Read s characters, or the rest of the string
Read up to len bytes from the SSL socket.
read-write
read-write buffer
real name
realpath
Re-calculating FIRST set for '%s' ???
  -- receive data and sender's address (into a buffer)
Receive up to buffersize bytes from the socket.  For the optional flags
RECEPTIV
RECORDER
RECORDIN
records.
RECTANGL
RECTANGLE
RECTANGULA
rect function
RECTILINEA
rect(r, phi) -> z: complex
recurse_down_subclasses
recursion from causing an overflow of the C stack and crashing Python.
recursion limit exceeded
recursion limit must be positive
    recursively the attributes of its class's base classes.
recv(buffersize[, flags]) -> data
recv(buflen[, flags]) -- receive data
recvfrom
recvfrom(buffersize[, flags]) -> (data, address info)
recvfrom(buflen[, flags]) -- receive data and sender's address
recvfrom_into
recvfrom_into(buffer[, nbytes, [, flags])
recvfrom_into(buffer[, nbytes[, flags]]) -> (nbytes, address info)
recv_into
recv_into(buffer, [nbytes[, flags]]) -> nbytes_read
recv_into(buffer[, nbytes[, flags]]) -- receive data (into a buffer)
RECYCLIN
__reduce__
reduce_2
reduce() arg 2 must support iteration
__reduce_ex__
_reduce_ex
reduce(function, sequence[, initial]) -> value
reduce() not supported in 3.x; use functools.reduce()
reduce() of empty sequence with no initial value
REDUPLICATION
<refcnt %ld at %p>
refcount: %ld
REFERENC
reference as an argument to getrefcount().
ReferenceError
references 'object'.  'callback', if given, is called with a
reference to the proxy when 'object' is about to be finalized.
ReferenceType
register
Register a codec search function. Search functions are expected to take
Register a file descriptor with the polling object.
REGISTERE
register_error
register_error(errors, handler)
register(fd [, eventmask] ) -> None
register(fd[, eventmask]) -> None
Registers a new fd or raises an IOError if the fd is already registered.
register(search_function)
Register the specified error handler under the name
registry
'registry' must be a dict
regular expression code size limit exceeded
related to conversion from str or comparing to str.
related to conversion problems.
RELATION
RELATIONA
relative to end of file, usually negative, although many platforms allow
release()
releaselevel
release_lock
(release_lock() is an obsolete synonym)
release_lock() -> None
Release the interpreter's import lock.
Release the lock, allowing another thread that is blocked waiting for
release unlocked lock
release() -- unlock of the lock
releasing %zd interned strings
RELIGION
reload() argument must be module
reload(): module %.200s not in sys.modules
reload(module) -> module
reload(): parent %.200s not in sys.modules
Reload the module.  The module must have been successfully imported before.
remaining characters have been mapped through the given
Remaining object addresses:
Remaining objects:
Remove a directory.
Remove a file descriptor being tracked by the polling object.
Remove a file (same as remove(path)).
Remove a file (same as unlink(path)).
Remove all elements from the deque.
Remove all elements from this set.
Remove all elements of another set from this set.
Remove and return an arbitrary set element.
Remove and return a single item from B. If no index
Remove and return the leftmost element.
Remove and return the rightmost element.
Remove an element from a set if it is a member.
Remove an element from a set; it must be a member.
removed from the result.
remove(path)
remove() -- remove first occurrence of an object
remove_subclass
Remove the first occurance of a value in B.
Remove the first occurrence of x in the array.
remove(x)
Rename a file or directory.
rename(old, new)
Rename state %d to %d.
render_field
RENTOGEN
    RE pattern in string. For each match, the iterator returns a
__repeat__
repeat(a, b) -- Return a * b, where a is a sequence, and b is an integer.
repeat argument cannot be negative
repeated string is too long
repeat(elem [,n]) --> elem, elem, elem, ... endlessly or up to n times
repeat(object [,times]) -> create an iterator which returns the object
repeat(%s)
repeat(%s, %zd)
replace bytes is too long
replace_delete_single_character
replace_delete_substring
replace_errors
replace_interleave
REPLACEMEN
    replacement repl.
replace_single_character
replace_single_character_in_place
replace string is too long
replace (str, old, new[, maxsplit]) -> string
replace_substring
replace_substring_in_place
Report whether another set contains this set.
Report whether this set contains another set.
__repr__
REPRESENT
representation.
representation of a floating point number!)  When converting a string, use
repr(object) -> string
__repr__ returned non-string (type %.200s)
requested number of bytes is more than a Python string can hold
Request that a generator exit.
Request to exit from the interpreter.
required argument is not a float
Required argument '%s' (pos %d) not found
required field "arg" missing from keyword
required field "args" missing from arguments
required field "args" missing from Call
required field "args" missing from FunctionDef
required field "args" missing from Lambda
required field "attr" missing from Attribute
required field "bases" missing from ClassDef
required field "body" missing from ClassDef
required field "body" missing from ExceptHandler
required field "body" missing from Exec
required field "body" missing from Expression
required field "body" missing from For
required field "body" missing from FunctionDef
required field "body" missing from If
required field "body" missing from IfExp
required field "body" missing from Interactive
required field "body" missing from Lambda
required field "body" missing from Module
required field "body" missing from Suite
required field "body" missing from TryExcept
required field "body" missing from TryFinally
required field "body" missing from While
required field "body" missing from With
required field "col_offset" missing from excepthandler
required field "col_offset" missing from expr
required field "col_offset" missing from stmt
required field "comparators" missing from Compare
required field "context_expr" missing from With
required field "ctx" missing from Attribute
required field "ctx" missing from List
required field "ctx" missing from Name
required field "ctx" missing from Subscript
required field "ctx" missing from Tuple
required field "decorator_list" missing from ClassDef
required field "decorator_list" missing from FunctionDef
required field "defaults" missing from arguments
required field "dims" missing from ExtSlice
required field "elt" missing from GeneratorExp
required field "elt" missing from ListComp
required field "elt" missing from SetComp
required field "elts" missing from List
required field "elts" missing from Set
required field "elts" missing from Tuple
required field "finalbody" missing from TryFinally
required field "func" missing from Call
required field "generators" missing from DictComp
required field "generators" missing from GeneratorExp
required field "generators" missing from ListComp
required field "generators" missing from SetComp
required field "handlers" missing from TryExcept
required field "id" missing from Name
required field "ifs" missing from comprehension
required field "iter" missing from comprehension
required field "iter" missing from For
required field "key" missing from DictComp
required field "keys" missing from Dict
required field "keywords" missing from Call
required field "left" missing from BinOp
required field "left" missing from Compare
required field "lineno" missing from excepthandler
required field "lineno" missing from expr
required field "lineno" missing from stmt
required field "name" missing from alias
required field "name" missing from ClassDef
required field "name" missing from FunctionDef
required field "names" missing from Global
required field "names" missing from Import
required field "names" missing from ImportFrom
required field "nl" missing from Print
required field "n" missing from Num
required field "operand" missing from UnaryOp
required field "op" missing from AugAssign
required field "op" missing from BinOp
required field "op" missing from BoolOp
required field "op" missing from UnaryOp
required field "ops" missing from Compare
required field "orelse" missing from For
required field "orelse" missing from If
required field "orelse" missing from IfExp
required field "orelse" missing from TryExcept
required field "orelse" missing from While
required field "right" missing from BinOp
required field "slice" missing from Subscript
required field "s" missing from Str
required field "target" missing from AugAssign
required field "target" missing from comprehension
required field "target" missing from For
required field "targets" missing from Assign
required field "targets" missing from Delete
required field "test" missing from Assert
required field "test" missing from If
required field "test" missing from IfExp
required field "test" missing from While
required field "value" missing from Assign
required field "value" missing from Attribute
required field "value" missing from AugAssign
required field "value" missing from DictComp
required field "value" missing from Expr
required field "value" missing from Index
required field "value" missing from keyword
required field "value" missing from Repr
required field "value" missing from Subscript
required field "values" missing from BoolOp
required field "values" missing from Dict
required field "values" missing from Print
Requires len(string) == calcsize(fmt).
Requires len(str) == self.size. See struct.__doc__ for more on format
requiring allocation in multiples of the system memory page size
RERENGGAN
reserved
reset_exc_info
reset() -- Reset the file position to the beginning
RESIDENCE
RESISTANCE
RESOLUTION
Resolve host and port into addrinfo struct.
resource
RESPONSE
# restore sys.%s
RESTRICTE
restricted attribute
resulting value put in the arg buffer by the operating system.  The length
result != input
result is too long
result_len>=0
result too large
Result too large to be represented.
result == ((void *)0) || ((((((PyObject*)(result))->ob_type))->tp_flags & ((1L<<25))) != 0)
RESUPINUS
ret <= 0
ret == 1
Retain newline.  A non-negative size argument limits the maximum
retrieved from the fcntl or termios library modules.
RETROFLE
Return 0 to child process and PID of child to parent process.
Return -1 on failure.
Return a callable object that calls the given method on its operand.
Return a callable object that fetches the given attribute(s) from its operand.
Return a callable object that fetches the given item(s) from its operand.
Return a capitalized version of S, i.e. make the first character
Return a chain object whose .next() method returns elements from the
Return a copy of B, where all characters occurring in the
Return a copy of B where all tab characters are expanded using spaces.
Return a copy of B with all ASCII characters converted to lowercase.
Return a copy of B with all ASCII characters converted to uppercase.
Return a copy of B with all occurrences of subsection
Return a copy of B with only its first character capitalized (ASCII)
Return a copy of B with uppercase ASCII characters converted
Return a copy of S converted to uppercase.
Return a copy of string str with all occurrences of substring
Return a copy of string S with all occurrences of substring
Return a copy of S where all tab characters are expanded using spaces.
Return a copy of S with all occurrences of substring
Return a copy of S with uppercase characters converted to lowercase
 Return a copy of the array.
Return a copy of the hash object.
Return a copy of the string s converted to lowercase.
Return a copy of the string s converted to uppercase.
Return a copy of the string S, where all characters have been mapped
Return a copy of the string s, where all characters occurring
Return a copy of the string s with leading and trailing
Return a copy of the string s with leading whitespace removed.
Return a copy of the string s with only its first character
Return a copy of the string s with trailing whitespace removed.
Return a copy of the string s with upper case characters
Return a copy of the string S with uppercase characters
Return a count object whose .next() method returns consecutive values.
Return a dictionary mapping each current thread T's thread id to T's
Return a duplicate of a file descriptor.
Return a formatted version of S as described by format_spec.
Return a formatted version of S, using substitutions from args and kwargs.
Return a frame object from the call stack.  If optional integer depth is
Return a hash value for the object.  Two objects with the same value have
Return a hexadecimal representation of a floating-point number.
Return a izip object whose .next() method returns a tuple where
Return a list containing an arithmetic progression of integers.
Return a list containing the names of the entries in the directory.
Return a list of all available group entries, in arbitrary order.
Return a list of all available password database entries, in arbitrary order.
Return a list of all available shadow password database entries, in arbitrary order.
   Return a list of all non-overlapping matches of pattern in string.
Return a list of objects tracked by the collector (excluding the list
Return a list of (suffix, mode, type) tuples describing the files
Return a list of the lines in B, breaking at line boundaries.
Return a list of the lines in S, breaking at line boundaries.
Return a list of the results of applying the function to the items of
Return a list of the sections in B, using sep as the delimiter,
Return a list of the sections in B, using sep as the delimiter.
Return a list of the words in S, using sep as the
Return a list of the words in the string s, using sep as the
Return a list of tuples, where each tuple contains the i-th element
Return an accurate floating point sum of values in the iterable.
Return an empty string at EOF.
Return an enumerate object.  iterable must be another object that supports
Return a new array whose items are restricted by typecode, and
Return a new hash object using the named algorithm.
Return a new socket object connected to the same system resource.
Return a nice string representation of the object.
Return an integer-valued system configuration variable.
    Return an iterator over all non-overlapping matches for the 
Return an iterator whose next() method returns selected values from an
Return an iterator whose values are returned from the function evaluated
Return an izip_longest object whose .next() method returns a tuple where
Return a non-zero integer that uniquely identifies the current thread
Return an open file object connected to a file descriptor.
Return a port number from a service name and protocol name.
Return a regular file object corresponding to the socket.
Return a reverse iterator
Return argument, also known as the phase angle, of a complex.
Return a shallow copy of a deque.
Return a shallow copy of a set.
Return a string composed of the words in list, with
Return a string containing values v1, v2, ... packed according to this
Return a string of one character with ordinal i; 0 <= i < 256.
Return a string representing the current working directory.
Return a string representing the path to which the symbolic link points.
Return a string-valued system configuration variable.
Return a string which is the concatenation of the strings in the
Return a titlecased version of B, i.e. ASCII words start with uppercase
Return a titlecased version of S, i.e. words start with title case
Return a titlecased version of S, i.e. words start with uppercase
Return a translation table (a string of 256 bytes long)
Return a tuple (address, length) giving the current memory address and
Return a tuple consisting of the two numeric arguments converted to
Return a tuple identifying the current operating system.
Return a tuple of floating point numbers indicating process times.
Return a tuple of function call statistics, if CALL_PROFILE was defined
return a type's method resolution order
Return a Unicode string of one character with ordinal i; 0 <= i <= 0x10ffff.
Return a unicode string representing the current working directory.
Return a unique name for a temporary file.
Return B centered in a string of length width.  Padding is
Return B left justified in a string of length width. Padding is
Return B right justified in a string of length width. Padding is
  return 'Cannot pickle %s objects' % a
Return data elements corresponding to true selector elements.
returned.
returned).
returned.  See getsignal() for possible return values.
returned.  The return value is the integer returned by the ioctl system
Return elements from the iterable until it is exhausted.
Return e raised to the power of x.
Return exp(x)-1.
Return False otherwise.
Return fmod(x, y), according to platform C.  x % y may differ.
Return index of first occurrence of x in the array.
Return information about the most recent exception caught by an except
Return list of supplemental group IDs for the process.
Return negative if x<y, zero if x==y, positive if x>y.
return next yielded value or raise StopIteration.
Return n random bytes suitable for cryptographic use.
Return number of occurrences of x in the array.
'return' outside function
Returns 1 if the OpenSSL PRNG has been seeded with enough data and 0 if not.
Returns a md5 hash object; optionally initialized with a string
Returns an epolling object
Returns an independent iterator.
Returns a pair of integers, whose ratio is exactly equal to the original
Returns a polling object, which supports registering and
Returns a reverse iterator.
Returns a sha1 hash object; optionally initialized with a string
Returns a sha224 hash object; optionally initialized with a string
Returns a sha256 hash object; optionally initialized with a string
Returns a sha384 hash object; optionally initialized with a string
Returns a sha512 hash object; optionally initialized with a string
Return S centered in a string of length width. Padding is
Return S centered in a Unicode string of length width. Padding is
Returns current value of given itimer.
return_self
  return self.args and ('%s' % self.args[0]) or '(what)'
Return size of C struct described by format string fmt.
Return S left-justified in a string of length width. Padding is
Return S left-justified in a Unicode string of length width. Padding is
returns None.  If a certificate was provided, but not validated, returns
Returns number of bytes read.  Raises SSLError if connection to EGD
Returns old values as a tuple: (delay, interval).
returns package A when fromlist is empty, but its submodule B when
Return S right-justified in a string of length width. Padding is
Return S right-justified in a Unicode string of length width. Padding is
Returns self, the complex conjugate of any float.
Returns self, the complex conjugate of any int.
Returns self, the complex conjugate of any long.
Returns size in memory, in bytes
Return state information for pickling.
Returns the bidirectional category assigned to the Unicode character
Returns the canonical combining class assigned to the Unicode
Returns the certificate for the peer.  If no certificate was provided,
Returns the character decomposition mapping assigned to the Unicode
Returns the complex conjugate of its argument. (3-4j).conjugate() == 3+4j.
Returns the decimal value assigned to the Unicode character unichr
Returns the default timeout in seconds (float) for new socket objects.
Returns the digit value assigned to the Unicode character unichr as
Returns the east asian width assigned to the Unicode character
Returns the general category assigned to the Unicode character
Returns the Integral closest to x between 0 and x.
Returns the mirrored property assigned to the Unicode character
Returns the name assigned to the Unicode character unichr as a
Returns the number of already decrypted bytes available for read,
Returns the number of bytes actually allocated.
Returns the numeric value assigned to the Unicode character unichr
Returns the size of B in memory, in bytes
Returns the sum of a sequence of numbers (NOT strings) plus the value
Returns the timeout in seconds (float) associated with socket 
return_stmt
Return string containing values v1, v2, ... packed according to fmt.
Returns true if automatic garbage collection is enabled.
Returns True if the float is an integer.
Returns true if the object is tracked by the garbage collector.
Returns True when the argument x is true, False otherwise.
Return successive entries from an iterable as long as the 
Return successive r-length combinations of elements in the iterable
Return successive r-length combinations of elements in the iterable.
Return successive r-length permutations of elements in the iterable.
Returns value.__format__(format_spec)
Return symbol and scope dictionaries used internally by compiler.
Return the absolute value of the argument.
Return the absolute value of the float x.
Return the actual login name.
Return the address of the local endpoint.  For IP sockets, the address
Return the address of the remote endpoint.  For IP sockets, the address
Return the arc cosine (measured in radians) of x.
Return the arc cosine of x.
Return the arc sine (measured in radians) of x.
Return the arc sine of x.
Return the arc tangent (measured in radians) of x.
Return the arc tangent (measured in radians) of y/x.
Return the arc tangent of x.
Return the base 10 logarithm of x.
Return the base-10 logarithm of x.
Return the binary representation of an integer or long integer.
Return the canonical string representation of the object.
Return the ceiling of x as a float.
return the certificate even if it wasn't validated.
Return the code object for the specified module. Raise ZipImportError
Return the configuration limit name for the file descriptor fd.
Return the configuration limit name for the file or directory path.
Return the cosine of x.
Return the cosine of x (measured in radians).
Return the CPU time or real time since the start of the process or since
Return the current action for the given signal.  The return value can be:
Return the current collection counts
Return the current collection thresholds
Return the current default string encoding used by the Unicode 
Return the current host name.
Return the current process group id.
Return the current process id
Return the current process's effective group id.
Return the current process's effective user id.
Return the current process's group id.
Return the current process's user id.
Return the current time in seconds since the Epoch.
Return the current value of the flags that are used for dlopen calls.
Return the current value of the recursion limit, the maximum depth
Return the data associated with 'pathname'. Raise IOError if
Return the dictionary containing the current scope's global variables.
Return the difference of two or more sets as a new set.
Return the digest value as a string of binary data.
Return the digest value as a string of hexadecimal digits.
Return the encoding used to convert Unicode filenames in
Return the epoll control file descriptor.
Return the error handler for the specified error handling name
Return the Euclidean distance, sqrt(x*x + y*y).
Return the exponential value e**x.
Return the filename for the specified module.
Return the floating point number represented by the string s.
Return the floor of x as a float.
Return the fractional and integer parts of x.  Both results carry the sign
Return the global debug tracing function set with sys.settrace.
Return the group database entry for the given group name.  If
Return the group database entry for the given numeric group ID.  If
Return the hexadecimal representation of an integer or long integer.
Return the highest index in B where subsection sub is found,
Return the highest index in s where substring sub is found,
Return the hyperbolic arc cosine (measured in radians) of x.
Return the hyperbolic arccosine of x.
Return the hyperbolic arc sine (measured in radians) of x.
Return the hyperbolic arc sine of x.
Return the hyperbolic arc tangent (measured in radians) of x.
Return the hyperbolic arc tangent of x.
Return the hyperbolic cosine of x.
Return the hyperbolic sine of x.
Return the hyperbolic tangent of x.
Return the identity of an object.  This is guaranteed to be unique among
Return the index where to insert item x in list a, assuming a is sorted.
Return the integer file descriptor of the socket.
Return the integer ordinal of a one-character string.
Return the integer represented by the string s in the given
Return the intersection of two or more sets as a new set.
Return the IP address (a string of the form '255.255.255.255') for a host.
Return the i-th element and delete it from the array. i defaults to -1.
Return the list of objects that are directly referred to by objs.
Return the list of objects that directly refer to any of objs.
Return the logarithm of x to the given base.
Return the long integer represented by the string s in the
Return the lowest index in B where subsection sub is found,
Return the lowest index in s where substring sub is found,
Return the magic number for .pyc or .pyo files.
Return the mantissa and exponent of x, as pair (m, e).
Return the name of the controlling terminal for this process.
Return the name of the generator's associated code object.
Return the name of the terminal device connected to 'fd'.
Return the natural logarithm of 1+x (base e).
Return the next item from the iterator. If default is given and the iterator
Return the normal form 'form' for the Unicode string unistr.  Valid
Return the number of currently running Python threads, excluding 
Return the number of items of a sequence or mapping.
Return the number of non-overlapping occurrences of subsection sub in
Return the number of non-overlapping occurrences of substring sub in
Return the number of occurrences of substring sub in string
Return the number of processes in the system run queue averaged over
Return the octal representation of an integer or long integer.
Return the parent's process id.
Return the password database entry for the given numeric user ID.
Return the password database entry for the given user name.
Return the process group associated with the terminal given by a fd.
Return the process return code from 'status'.
Return the profiling function set with sys.setprofile.
Return the protocol number for the named protocol.  (Rarely used.)
Return the reference count of object.  The count returned is generally
Return the service name from a port number and protocol name.
Return the shadow password database entry for the given user name.
Return the signal that stopped the process that provided
Return the signal that terminated the process that provided the 'status'
Return the sine of x.
Return the sine of x (measured in radians).
Return the size (in bytes) of this object
Return the size of object in bytes.
Return the source code for the specified module. Raise ZipImportError
Return the square root of x.
Return the string itself or the previously interned string object with the
    Return the string obtained by replacing the leftmost non-overlapping
Return the string that would be written to a file by dump(value, file).
Return the symmetric difference of two sets as a new set.
Return the tangent of x.
Return the tangent of x (measured in radians).
Return the thread stack size used when creating new threads.  The
Return the true host name, a list of aliases, and a list of IP addresses,
    Return the tuple (new_string, number_of_subs_made) found by replacing
Return the tuple ((x-x%y)/y, x%y).  Invariant: div*y + mod == x.
Return the union of sets as a new set.
Return the value for the locale information associated with key.
Return those items of sequence for which function(item) is false.
Return those items of sequence for which function(item) is true.
Return those items of sequence for which function(item) is true.  If
Return translation of msg.
Return translation of msg in domain.
Return translation of msg in domain and category.
Return True if all cased characters in B are lowercase and there is
Return True if all cased characters in B are uppercase and there is
Return True if all cased characters in S are lowercase and there is
Return True if all cased characters in S are uppercase and there is
Return True if all characters in B are alphabetic
Return True if all characters in B are alphanumeric
Return True if all characters in B are digits
Return True if all characters in B are whitespace
Return True if all characters in S are alphabetic
Return True if all characters in S are alphanumeric
Return True if all characters in S are digits
Return True if all characters in S are whitespace
Return True if B ends with the specified suffix, False otherwise.
Return True if B is a titlecased string and there is at least one
Return True if bool(x) is True for all values x in the iterable.
Return True if bool(x) is True for any x in the iterable.
Return True if B starts with the specified prefix, False otherwise.
Return True if S ends with the specified suffix, False otherwise.
Return True if S is a titlecased string and there is at least one
Return True if S starts with the specified prefix, False otherwise.
Return True if the file descriptor 'fd' is an open file descriptor
Return True if the import lock is currently held, else False.
Return True if the module specified by fullname is a package.
Return true if the process returning 'status' exited using the exit()
Return True if the process returning 'status' was continued from a
Return True if the process returning 'status' was dumped to a core file.
Return True if the process returning 'status' was stopped.
Return True if the process returning 'status' was terminated by a signal.
Return True if there are only decimal characters in S,
Return True if there are only numeric characters in S,
Return True if two sets have a null intersection.
Return tuple containing values unpacked according to this Struct's format.
  return value
Return whether an object is an instance of a class or of a subclass thereof.
Return whether class C is a subclass (i.e., a derived class) of class B.
Return whether the lock is in the locked state.
Return whether the object has an attribute with the given name.
Return whether the object is callable (i.e., some kind of function).
'return' with argument inside generator
Return x * (2**i).
Return x with the sign of y.
Return x**y (x to the power of y).
reverse()
reversed
__reversed__
reversed()
REVERSED
reversed(sequence) -> reverse iterator over values of the sequence
reverse() -- reverse the order of the items in the array
reverse_slice
Reverse the order of the items in the array.
Reverse the order of the values in B in place.
REVOLUTION
rfind(s, sub [,start [,end]]) -> int
__rfloordiv__
richcompare
RIEUL-CIEUC
RIEUL-HIEUH
RIEUL-KAPYEOUNPIEUP
RIEUL-KIYEOK
RIEUL-KIYEOK-HIEUH
RIEUL-KIYEOK-SIOS
RIEUL-MIEUM
RIEUL-MIEUM-HIEUH
RIEUL-MIEUM-KIYEOK
RIEUL-MIEUM-SIOS
RIEUL-NIEUN
RIEUL-PANSIOS
RIEUL-PHIEUPH
RIEUL-PIEUP
RIEUL-PIEUP-HIEUH
RIEUL-PIEUP-PHIEUPH
RIEUL-PIEUP-SIOS
RIEUL-PIEUP-TIKEUT
RIEUL-SIOS
RIEUL-SSANGKIYEOK
RIEUL-SSANGPIEUP
RIEUL-SSANGSIOS
RIEUL-SSANGTIKEUT
RIEUL-THIEUTH
RIEUL-TIKEUT
RIEUL-TIKEUT-HIEUH
RIEUL-YEORINHIEUH
RIEUL-YEORINHIEUH-HIEUH
RIEUL-YESIEUNG
RIGHT-FACIN
RIGHTHAN
RIGHT-HAN
right operand length must match slice length
right operand must be a single byte
RIGHT-POINTIN
RIGHT-SHADE
RIGHT-SHADOWE
RIGHTSHIFT
RIGHTSHIFTEQUAL
RIGHT-SID
RIGHT-TO-LEF
RIGHTWARD
RIGHTWARDS
RINFORZANDO
%r is not in list
rlecode_hqx
rledecode_hqx
rlist -- wait until ready for reading
__rlshift__
rmdir(path)
__rmod__
__rmul__
r must be non-negative
rn % 4 == 0
r.name('date', foo=1).
(r.name.first, r.name.last).
'\r', '\n', '\r\n' or a tuple containing all the newline types seen.
Rotate the deque n steps to the right (default n=1).  If n is negative, rotates left.
Round a number to a given precision in decimal digits (default 0 digits).
rounded value too large to represent
round(number[, ndigits]) -> floating point number
ROUND-TIPPE
routines.  File descriptors can be obtained with the fileno() method of
rpartition
__rpow__
__rrshift__
__rshift__
rshift(a, b) -- Same as a >> b.
r == spec->n_grouped_digits
rstrip(s) -> string
__rsub__
__rtruediv__
r(t(v(x(z(|(
RUKKAKHA
RULE-DELAYED
_run_module_as_main
RuntimeError
RuntimeWarning
-R     : use a pseudo-random salt to make hash() values of various types be
rv != -1
rv != ((void *)0) && deque->len <= deque->maxlen
__rxor__
%s0%c%%.%dl%c
%s0%se%d
s*:a2b_base64
s*:a2b_hex
s*:a2b_hqx
s*:a2b_uu
SACRIFICIA
SAGITTARIUS
SAILBOAT
SALLALLAHO
SALTILLO
SAMARITA
  !: same as >
same_slots_added
same value.
SANS-SERI
SANTIIMU
%s() arg is an empty sequence
%s arg must be None, str or unicode
%s arg must be None, unicode or str
%s argument has non-string str()
(s) && _asdl_i < (s)->size
%s assignment: '%s' deallocator differs from '%s'
%s assignment: '%s' object layout differs from '%s'
SATKAANKUU
SAURASHTR
saved, and restored afterwards.  This is intended to be called from
save_reduce
SAXIMATA
s*:b2a_base64
s*:b2a_hex
s*:b2a_hqx
s*:b2a_uu
%s.__bases__ must be tuple of old- or new-style classes, not '%s'
<%s buffer for %p, size %zd, offset %zd at %p>
<%s buffer ptr %p, size %zd at %p>
%s buffer type not available
SC_2_C_BIND
SC_2_C_DEV
SC_2_CHAR_TERM
SC_2_C_VERSION
SC_2_FORT_DEV
SC_2_FORT_RUN
SC_2_LOCALEDEF
SC_2_SW_DEV
SC_2_UPE
SC_2_VERSION
SC_AIO_LISTIO_MAX
SC_AIO_MAX
SC_AIO_PRIO_DELTA_MAX
SCANDICU
SCANDICUS
    Scan through string looking for a match, and return a corresponding
%s: can't open file '%s': [Errno %d] %s
S.capitalize() -> string
S.capitalize() -> unicode
SC_ARG_MAX
SC_ASYNCHRONOUS_IO
SC_ATEXIT_MAX
SC_AVPHYS_PAGES
SC_BC_BASE_MAX
SC_BC_DIM_MAX
SC_BC_SCALE_MAX
SC_BC_STRING_MAX
SC_CHAR_BIT
SC_CHARCLASS_NAME_MAX
SC_CHAR_MAX
SC_CHAR_MIN
SC_CHILD_MAX
SC_CLK_TCK
SC_COLL_WEIGHTS_MAX
SC_DELAYTIMER_MAX
S.center(width[, fillchar]) -> string
S.center(width[, fillchar]) -> unicode
SC_EQUIV_CLASS_MAX
SC_EXPR_NEST_MAX
SC_FSYNC
SC_GETGR_R_SIZE_MAX
SC_GETPW_R_SIZE_MAX
SCHROEDER
SC_INT_MAX
SC_INT_MIN
SC_IOV_MAX
SCISSORS
SC_JOB_CONTROL
SC_LINE_MAX
SC_LOGIN_NAME_MAX
SC_LONG_BIT
SC_MAPPED_FILES
SC_MB_LEN_MAX
SC_MEMLOCK
SC_MEMLOCK_RANGE
SC_MEMORY_PROTECTION
SC_MESSAGE_PASSING
%s.__cmp__(x,y) requires y to be a '%s', not a '%s'
SC_MQ_OPEN_MAX
SC_MQ_PRIO_MAX
SC_NGROUPS_MAX
SC_NL_ARGMAX
SC_NL_LANGMAX
SC_NL_MSGMAX
SC_NL_NMAX
SC_NL_SETMAX
SC_NL_TEXTMAX
SC_NPROCESSORS_CONF
SC_NPROCESSORS_ONLN
SC_NZERO
s#:compress
SCOPE_MASK
SC_OPEN_MAX
SCOPE_OFF
scope || (((PyStringObject *)(name))->ob_sval)[0] == '_'
SCORPIUS
S.count(sub[, start[, end]]) -> int
SC_PAGESIZE
SC_PAGE_SIZE
SC_PASS_MAX
SC_PHYS_PAGES
SC_PII_INTERNET
SC_PII_INTERNET_DGRAM
SC_PII_INTERNET_STREAM
SC_PII_OSI
SC_PII_OSI_CLTS
SC_PII_OSI_COTS
SC_PII_OSI_M
SC_PII_SOCKET
SC_PII_XTI
SC_PRIORITIZED_IO
SC_PRIORITY_SCHEDULING
SC_REALTIME_SIGNALS
SC_RE_DUP_MAX
SC_RTSIG_MAX
SC_SAVED_IDS
SC_SCHAR_MAX
SC_SCHAR_MIN
s*C(s-C(s
SC_SELECT
SC_SEMAPHORES
SC_SEM_NSEMS_MAX
SC_SEM_VALUE_MAX
SC_SHARED_MEMORY_OBJECTS
SC_SHRT_MAX
SC_SHRT_MIN
SC_SIGQUEUE_MAX
%s%c%s%s
SC_SSIZE_MAX
SC_STREAM_MAX
SC_SYNCHRONIZED_IO
SC_THREAD_ATTR_STACKADDR
SC_THREAD_ATTR_STACKSIZE
SC_THREAD_DESTRUCTOR_ITERATIONS
SC_THREAD_KEYS_MAX
SC_THREAD_PRIO_INHERIT
SC_THREAD_PRIO_PROTECT
SC_THREAD_PRIORITY_SCHEDULING
SC_THREAD_PROCESS_SHARED
SC_THREADS
SC_THREAD_SAFE_FUNCTIONS
SC_THREAD_STACK_MIN
SC_THREAD_THREADS_MAX
SC_TIMER_MAX
SC_TIMERS
SC_T_IOV_MAX
SC_TTY_NAME_MAX
SC_TZNAME_MAX
SC_UCHAR_MAX
SC_UINT_MAX
SC_UIO_MAXIOV
SC_ULONG_MAX
SC_USHRT_MAX
SC_VERSION
SC_WORD_BIT
SC_XBS5_ILP32_OFF32
SC_XBS5_ILP32_OFFBIG
SC_XBS5_LP64_OFF64
SC_XBS5_LPBIG_OFFBIG
SC_XOPEN_CRYPT
SC_XOPEN_ENH_I18N
SC_XOPEN_LEGACY
SC_XOPEN_REALTIME
SC_XOPEN_REALTIME_THREADS
SC_XOPEN_SHM
SC_XOPEN_UNIX
SC_XOPEN_VERSION
SC_XOPEN_XCU_VERSION
SC_XOPEN_XPG2
SC_XOPEN_XPG3
SC_XOPEN_XPG4
%s:%d: bad argument to internal function
S.decode([encoding[,errors]]) -> object
S.decode([encoding[,errors]]) -> string or unicode
(sdigit)vtop + zhi == -1 || (sdigit)vtop + zhi == 0
%s does not take keyword arguments
-s     : don't add user site directory to sys.path; also PYTHONNOUSERSITE
-S     : don't imply 'import site' on initialization
s#d:RAND_add
SEARCH_ERROR
Searches for the separator sep in B, and returns the part before it,
Searches for the separator sep in B, starting at the end of B,
Search for a module.  If path is omitted or None, search for a
Search for a module specified by 'fullname'. 'fullname' must be the
Search for the separator sep in S, and return the part before it,
Search for the separator sep in S, starting at the end of S, and return
search(string[, pos[, endpos]]) --> match object or None.
SEBATBEI
Second argument to a division or modulo operation was zero.
Second element of tuple returned by %s must be a tuple
second form is used, set the access and modified times to the current time.
  seconds (0-59)
seconds out of range
seconds, range [0, 61])
seed([n]) -> None.  Defaults to current time.
See help(pwd) for more on password database entries.
seeking beyond the end of a file).  If the file is opened in text mode,
seek(offset[, whence]) -> None.  Move to new file position.
seek(position, mode) -- mode 0: absolute; 1: relative; 2: relative to EOF
seek(position)       -- set the current position
         see man page for details on internal buffering relating to '-u'
See os.stat for more information.
See os.statvfs for more information.
See recv() for documentation about the flags.
See spwd.__doc__ for more on shadow password database entries.
See struct.__doc__ for more on format strings.
See the debugger chapter in the library manual.
See the library reference manual for formatting codes (same as strftime()).
See the library reference manual for formatting codes. When the time tuple
See the Pickler docstring for the meaning of optional argument proto.
See the profiler chapter in the library manual.
See the socket module for documentation.
select.epoll
select.epoll([sizehint=-1])
select.error
SELECTOR-1
SELECTOR-10
SELECTOR-100
SELECTOR-101
SELECTOR-102
SELECTOR-103
SELECTOR-104
SELECTOR-105
SELECTOR-106
SELECTOR-107
SELECTOR-108
SELECTOR-109
SELECTOR-11
SELECTOR-110
SELECTOR-111
SELECTOR-112
SELECTOR-113
SELECTOR-114
SELECTOR-115
SELECTOR-116
SELECTOR-117
SELECTOR-118
SELECTOR-119
SELECTOR-12
SELECTOR-120
SELECTOR-121
SELECTOR-122
SELECTOR-123
SELECTOR-124
SELECTOR-125
SELECTOR-126
SELECTOR-127
SELECTOR-128
SELECTOR-129
SELECTOR-13
SELECTOR-130
SELECTOR-131
SELECTOR-132
SELECTOR-133
SELECTOR-134
SELECTOR-135
SELECTOR-136
SELECTOR-137
SELECTOR-138
SELECTOR-139
SELECTOR-14
SELECTOR-140
SELECTOR-141
SELECTOR-142
SELECTOR-143
SELECTOR-144
SELECTOR-145
SELECTOR-146
SELECTOR-147
SELECTOR-148
SELECTOR-149
SELECTOR-15
SELECTOR-150
SELECTOR-151
SELECTOR-152
SELECTOR-153
SELECTOR-154
SELECTOR-155
SELECTOR-156
SELECTOR-157
SELECTOR-158
SELECTOR-159
SELECTOR-16
SELECTOR-160
SELECTOR-161
SELECTOR-162
SELECTOR-163
SELECTOR-164
SELECTOR-165
SELECTOR-166
SELECTOR-167
SELECTOR-168
SELECTOR-169
SELECTOR-17
SELECTOR-170
SELECTOR-171
SELECTOR-172
SELECTOR-173
SELECTOR-174
SELECTOR-175
SELECTOR-176
SELECTOR-177
SELECTOR-178
SELECTOR-179
SELECTOR-18
SELECTOR-180
SELECTOR-181
SELECTOR-182
SELECTOR-183
SELECTOR-184
SELECTOR-185
SELECTOR-186
SELECTOR-187
SELECTOR-188
SELECTOR-189
SELECTOR-19
SELECTOR-190
SELECTOR-191
SELECTOR-192
SELECTOR-193
SELECTOR-194
SELECTOR-195
SELECTOR-196
SELECTOR-197
SELECTOR-198
SELECTOR-199
SELECTOR-2
SELECTOR-20
SELECTOR-200
SELECTOR-201
SELECTOR-202
SELECTOR-203
SELECTOR-204
SELECTOR-205
SELECTOR-206
SELECTOR-207
SELECTOR-208
SELECTOR-209
SELECTOR-21
SELECTOR-210
SELECTOR-211
SELECTOR-212
SELECTOR-213
SELECTOR-214
SELECTOR-215
SELECTOR-216
SELECTOR-217
SELECTOR-218
SELECTOR-219
SELECTOR-22
SELECTOR-220
SELECTOR-221
SELECTOR-222
SELECTOR-223
SELECTOR-224
SELECTOR-225
SELECTOR-226
SELECTOR-227
SELECTOR-228
SELECTOR-229
SELECTOR-23
SELECTOR-230
SELECTOR-231
SELECTOR-232
SELECTOR-233
SELECTOR-234
SELECTOR-235
SELECTOR-236
SELECTOR-237
SELECTOR-238
SELECTOR-239
SELECTOR-24
SELECTOR-240
SELECTOR-241
SELECTOR-242
SELECTOR-243
SELECTOR-244
SELECTOR-245
SELECTOR-246
SELECTOR-247
SELECTOR-248
SELECTOR-249
SELECTOR-25
SELECTOR-250
SELECTOR-251
SELECTOR-252
SELECTOR-253
SELECTOR-254
SELECTOR-255
SELECTOR-256
SELECTOR-26
SELECTOR-27
SELECTOR-28
SELECTOR-29
SELECTOR-3
SELECTOR-30
SELECTOR-31
SELECTOR-32
SELECTOR-33
SELECTOR-34
SELECTOR-35
SELECTOR-36
SELECTOR-37
SELECTOR-38
SELECTOR-39
SELECTOR-4
SELECTOR-40
SELECTOR-41
SELECTOR-42
SELECTOR-43
SELECTOR-44
SELECTOR-45
SELECTOR-46
SELECTOR-47
SELECTOR-48
SELECTOR-49
SELECTOR-5
SELECTOR-50
SELECTOR-51
SELECTOR-52
SELECTOR-53
SELECTOR-54
SELECTOR-55
SELECTOR-56
SELECTOR-57
SELECTOR-58
SELECTOR-59
SELECTOR-6
SELECTOR-60
SELECTOR-61
SELECTOR-62
SELECTOR-63
SELECTOR-64
SELECTOR-65
SELECTOR-66
SELECTOR-67
SELECTOR-68
SELECTOR-69
SELECTOR-7
SELECTOR-70
SELECTOR-71
SELECTOR-72
SELECTOR-73
SELECTOR-74
SELECTOR-75
SELECTOR-76
SELECTOR-77
SELECTOR-78
SELECTOR-79
SELECTOR-8
SELECTOR-80
SELECTOR-81
SELECTOR-82
SELECTOR-83
SELECTOR-84
SELECTOR-85
SELECTOR-86
SELECTOR-87
SELECTOR-88
SELECTOR-89
SELECTOR-9
SELECTOR-90
SELECTOR-91
SELECTOR-92
SELECTOR-93
SELECTOR-94
SELECTOR-95
SELECTOR-96
SELECTOR-97
SELECTOR-98
SELECTOR-99
selectors
selectors to choose the data elements.
select.poll
select(rlist, wlist, xlist[, timeout]) -> (rlist, wlist, xlist)
__self__
__self_class__
  self[key] = value = self.default_factory()
self->ob_item != ((void *)0) || newsize == 0
self->ob_item != ((void *)0) || self->allocated == 0 || self->allocated == -1
self->ob_refcnt == 0
self->ob_refcnt > 0
!((self)->ob_type == &PyInstance_Type)
((((self->ob_type))->tp_flags & ((1L<<14))) != 0) && ((PyGC_Head *)(self)-1)->gc.gc_refs != (-2)
self->pos >= 0
self->proto > 0
self->proto >= 0 && self->proto < 256
self != ((void *)0)
s;embedded '\0' in input line
sem_destroy
SEMIBREVI
SEMICIRCL
SEMICIRCULA
SEMICOLO
SEMICOLON
SEMIDIREC
SEMIMINIM
sem_init
SEMISEXTILE
SEMI-VOICE
SEMIVOWE
sem_post
sem_trywait
sem_wait
S.encode([encoding[,errors]]) -> object
S.encode([encoding[,errors]]) -> string or unicode
Send a data string to the socket.  For the optional flags
sendall(data[, flags])
sendall(data[, flags]) -- send all data
send(arg) -> send 'arg' into generator,
send(data[, flags]) -> count
send(data[, flags]) -- send data, may not send all of it
S.endswith(suffix[, start[, end]]) -> bool
sendto(data[, flags], address) -> count
sendto(data[, flags], addr) -- send data to a given address
sendto() takes 2 or 3 arguments (%d given)
sent; this may be less than len(data) if the network is busy.
SEPARATO
SEPARATOR
separator is not found, return two empty strings and S.
sep must be None, str or unicode, not %.200s
sep:  string inserted between values, default a space.
SEPTEMBER
sep != ((void *)0) && ((((((PyObject*)(sep))->ob_type))->tp_flags & ((1L<<27))) != 0)
seq2 != ((void *)0)
(seq) && _asdl_i < (seq)->size
seq_for_testlist
       seq[start:stop:step]
sequence
sequenceIncludes
sequenceIncludes(a, b) -- Same as b in a (note reversed operands; deprecated).
sequence index must be integer
sequence index must be integer, not '%.200s'
Sequence index out of range.
sequence.index(x): x not in sequence
sequence is empty.
sequence item %zd: expected string, %.80s found
sequence item %zd: expected string or Unicode, %.80s found
 sequence of 9 integers.
sequences have the same length.  If the function is None, return a list of
seq != ((void *)0)
serialNumber
Serial release number
service/proto not found
SESQUIQUADRATE
SESTERTIU
set_add_entry
set_add_key
Set a named attribute on an object; setattr(x, 'y', v) is equivalent to
setarrayitem
Set a socket option.  See the Unix manual for level and option.
Set a timeout on socket operations.  'timeout' can be a float,
__setattr__
setattr(object, name, value)
setblocking
setblocking(0 | 1) -- set or clear the blocking I/O flag
setblocking(False) is equivalent to settimeout(0.0).
setblocking(flag)
setblocking(True) is equivalent to settimeout(None);
Set changed size during iteration
setcheckinterval
setcheckinterval() -- control how often the interpreter checks for events
setcheckinterval(n)
set_clear_internal
<setcomp>
SetComp field "generators" must be a list, not a %.200s
set comprehension
set_context
set_debug
set_debug(flags) -> None
set_debug() -- Set debugging flags.
setdefault
setdefaultencoding
setdefaultencoding(encoding)
setdefaulttimeout
setdefaulttimeout(timeout)
set_discard_key
setdlopenflags
setdlopenflags(n) -> None
setdlopenflags() -- set the flags to be used for dlopen() calls
setegid(gid)
seteuid(uid)
set_exc_info
Set field "elts" must be a list, not a %.200s
__setformat__
__setformat__() argument 1 must be 'double' or 'float'
__setformat__() argument 2 must be 'unknown', 'IEEE, little-endian' or 'IEEE, big-endian'
setgid(gid)
setgrent
setgroups
setgroups argument must be a sequence
setgroups(list)
set_insert_key
__setitem__
setitem(a, b, c) -- Same as a[b] = c.
set(iterable) -> new set object
setiterator
setiter_iternext
setitimer
setitimer() -- cause a signal (described below) after a specified
setitimer(which, seconds[, interval])
setlocale
setlogmask
set_merge
set() -> new empty set object
set_next
setpgid(pid, pgrp)
setpgrp()
setprofile
setprofile(function)
setprofile() -- set the global profiling function
setpwent
setrecursionlimit
setrecursionlimit(n)
setrecursionlimit() -- set the max recursion depth for the interpreter
setregid
setregid(rgid, egid)
setresgid
setresgid(rgid, egid, sgid)
setresuid
setresuid(ruid, euid, suid)
setreuid
setreuid(ruid, euid)
Sets data attribute .closed to True.  A closed file cannot be used for
Sets given itimer (one of ITIMER_REAL, ITIMER_VIRTUAL
setsid()
setslice
__setslice__
setslice(a, b, c, d) -- Same as a[b:c] = d.
setsockopt
setsockopt(level, option, value)
setsockopt(level, optname, value) -- set socket options
setspent
setstate
__setstate__
setstate(state)
setstate(state) -> None.  Restores generator state.
Sets the collection thresholds.  Setting threshold0 to zero disables
Sets the fd to be written to (with '\0') when a signal
set_table_resize
set tabsize=
Set the access and modified time of the file to the given values.  If the
Set the action for the given signal.  The action can be SIG_DFL,
Set the C library's textdmain to domain, returning the new domain.
Set the current default string encoding used by the Unicode implementation.
Set the current numeric umask and return the previous umask.
Set the current position of a file descriptor.
Set the current process's effective group id.
Set the current process's effective user id.
Set the current process's group id.
Set the current process's real and effective group ids.
Set the current process's real and effective user ids.
Set the current process's real, effective, and saved group ids.
Set the current process's real, effective, and saved user ids.
Set the current process's user id.
Set the default timeout in seconds (float) for new socket objects.
Set the flags used by the interpreter for dlopen calls, such as when the
Set the garbage collection debugging flags. Debugging information is
Set the global debug tracing function.  It will be called on each
Set the groups of the current process to list.
Set the maximum depth of the Python interpreter stack to n.  This
Set the process group associated with the terminal given by a fd.
Set the profiling function.  It will be called on each function call
Set the socket to blocking (flag is true) or non-blocking (false).
set_threshold
set_threshold() -- Set the collection thresholds.
set_threshold(threshold0, [threshold1, threshold2]) -> None
settimeout
settimeout(None | float) -- set or clear the timeout
settimeout(timeout)
Setting a timeout of zero is the same as setblocking(0).
setting function's dictionary to a non-dict
setting partial object's dictionary to a non-dict
setting stack size not supported
settrace
settrace(function)
settrace() -- set the global debug tracing function
setuid(uid)
setup_context
set_wakeup_fd
set_wakeup_fd(fd) -> fd
set_wakeup_fd only works in main thread
SEVENTEE
SEVENTEEN
SEVERANCE
s;execve() arg 3 contains a non-string key
s;execve() arg 3 contains a non-string value
S.expandtabs([tabsize]) -> string
S.expandtabs([tabsize]) -> unicode
%s expected %s%zd arguments, got %zd
<%s file '%s', mode '%s' at %p>
<%s file u'%s', mode '%s' at %p>
S.find(sub [,start [,end]]) -> int
S.format(*args, **kwargs) -> string
S.format(*args, **kwargs) -> unicode
S.__format__(format_spec) -> string
S.__format__(format_spec) -> unicode
s#:fromhex
s#:fromstring
s:get_frozen_object
s:gethostbyaddr
s:gethostbyname
s:gethostbyname_ex
s:getprotobyname
s:getpwnam
s:getspnam
%s() got an unexpected keyword argument
Shadow password database entries are reported as 9-tuples of type struct_spwd,
SHALSHELET
SHAMROCK
# %s has bad magic
# %s has bad mtime
<%s HASH object @ %p>
SHAVIYANI
SHE-GOAT
shell program
SHESHLAM
shift_expr
SHIYYAALAA
SHORTENER
short format requires SHRT_MIN <= number <= SHRT_MAX
SHORT-TWIG-A
SHORT-TWIG-BJARKA
SHORT-TWIG-HAGAL
SHORT-TWIG-MAD
SHORT-TWIG-NAU
SHORT-TWIG-OS
SHORT-TWIG-SO
SHORT-TWIG-TY
SHORT-TWIG-YR
should be a list of names to emulate ``from name import ...'', or an
should be understood that tuples, lists and dictionaries are only
SHOULDERE
should not be relied on.
showwarning
shutdown
_shutdown
shutdown(flag)
shutdown(how) -- shut down traffic in one or both directions
shutdown(s) -> socket
Shut down the reading side of the socket (flag == SHUT_RD), the writing side
SHUT_RDWR
s#|I:adler32
s|i:atoi
s|i:atol
SICKNESS
s#|i:compress
s*|I:crc32
s#|I:crc32
s*i:crc_hqx
s#|i:decompress
s#|i:expandtabs
S_IFREG, S_IFCHR, S_IFBLK, and S_IFIFO. For S_IFCHR and S_IFBLK,
sigaction
SIG_DFL -- if the default action for the signal is in effect
SIG_DFL -- used to refer to the system default handler
sigemptyset
SIG_IGN -- if the signal is being ignored
SIG_IGN, or a callable Python object.  The previous action is
SIG_IGN -- used to ignore the signal
siginterrupt
siginterrupt(sig, flag) -> None
SIGINT, SIGTERM, etc. -- signal numbers
signal constants:
signal handler must be signal.SIG_IGN, signal.SIG_DFL, or a callable object
signal.ItimerError
signal number out of range
signal only works in main thread
signal() -- set the action for a given signal
signal(sig, action) -> action
Signal the end from iterator.next().
signed char is greater than maximum
signed char is less than minimum
signed short integer is greater than maximum
signed short integer is less than minimum
Sign not allowed in string format specifier
Sign not allowed with integer format specifier 'c'
SIGRTMAX
SIGRTMIN
SIGVTALRM
SIGWINCH
siiiiiii
s|ii:mknod
|si:makefile
s|i:mkfifo
Simple atomic objects will return false.
simple_stmt
Simple type for output to strings.
Simple type for treating strings as input file streams
SIMPLIFIE
simultaneously existing objects.  (Hint: it's the object's memory address.)
%s: inconsistent use of tabs and spaces in indentation
s#|in:decompress
S.index(sub [,start [,end]]) -> int
S.indices(len) -> (start, stop, stride)
s:inet_aton
s#:inet_ntoa
Single '{' encountered in format string
Single '}' encountered in format string
single_input
single (interactive) statement, or 'eval' to compile an expression.
SINGLE-LIN
single-segment buffer object expected
single-segment read-write buffer
s:init_builtin
s:init_frozen
<?.%s instance at %p>
S:intern
%s:%i object at %p has negative ref count %zd
SIOS-CHIEUCH
SIOS-CIEUC
s*iO:sendto
SIOS-HIEUH
SIOS-IEUNG
SIOS-KAPYEOUNPIEUP
SIOS-KHIEUKH
SIOS-MIEUM
SIOS-NIEUN
SIOS-PANSIOS
SIOS-PHIEUPH
SIOS-PIEUP-KIYEOK
SIOS-RIEUL
SIOS-SSANGSIOS
SIOS-THIEUTH
S.isalnum() -> bool
S.isalpha() -> bool
'%s' is an invalid keyword argument for this function
s:is_builtin
S.isdecimal() -> bool
S.isdigit() -> bool
s*|i:send
s*|i:sendall
s:is_frozen
S.islower() -> bool
S.isnumeric() -> bool
S.isspace() -> bool
S.istitle() -> bool
S.isupper() -> bool
s|i:test_decode_certificate
SIX-PER-E
SIX-STRIN
SIXTEENT
SIXTEENTH
SIXTEENTHS
SIXTY-FOURT
size >= 0
size > 0
size == 1 || size == 4
size == 3 || size == 6
Size defaults to the current file position, as returned by tell().
sizehint
sizehint is used to optimize internal data structures. It doesn't limit
sizehint must be a positive integer or -1 for the default size. The
sizehint must be greater zero, got %d
size in bytes of the C type used to represent a digit
size must be 0 or a positive value
size must be zero or positive
size not valid: %zd bytes
__sizeof__
size of a digit in bits
sizeof_digit
__sizeof__() -> int
size of object in memory, in bytes
(sizeof (x) == sizeof (float) ? __finitef (x) : sizeof (x) == sizeof (double) ? __finite (x) : __finitel (x))
(sizeof (x) == sizeof (float) ? __finitef (x) : sizeof (x) == sizeof (double) ? __finite (x) : __finitel (x)) && x != 0.0
(size_t)i < sizeof(decomp)
(size_t)itemsize <= sizeof(tmp)
(size_t)offset < __builtin_offsetof (PyHeapTypeObject, as_buffer)
(size_t)slicelength <= (4294967295U) / sizeof(PyObject*)
size_v >= size_w && size_w >= 2
size_z > 0
S.join(iterable) -> string
S.join(iterable) -> unicode
s->kind == AugAssign_kind
s->kind == FunctionDef_kind
s->kind == If_kind
s->kind == ImportFrom_kind
s->kind == Print_kind
s->kind == Slice_kind
s->kind == With_kind
skip+len < 2147483647
skipped between successive calls.  Works like a slice() on a list
sk_pop_free
sk_value
SLASHEQUAL
slc->kind == Index_kind && slc->v.Index.value
sleep() -- delay for a number of seconds given as a float
sleep(seconds)
slice indices must be integers or None or have an __index__ method
slice of a to be searched.
(slices) && _asdl_i < (slices)->size
slice([start,] stop[, step])
slice step cannot be zero
slightly faster than range() and more memory efficient.
%s (line %ld)
sl:initgroups
S.ljust(width[, fillchar]) -> int
S.ljust(width[, fillchar]) -> string
slllllll
|Sll:openlog
s#:loads
s:lookup
s#:lookup
s:lookup_error
_slotnames
__slotnames__
__slots__
__slots__ items must be strings, not '%.200s'
__slots__ must be identifiers
slot state is not a dictionary
slot_tp_del
slot_tp_new
<slot wrapper '%s' of '%s' objects>
S.lower() -> string
S.lower() -> unicode
slow_mode || (((((long_step)->ob_type)->tp_flags & ((1L<<23))) != 0) && (((PyIntObject *)(long_step))->ob_ival) == 1)
S.lstrip([chars]) -> string or unicode
S.lstrip([chars]) -> unicode
Small block threshold = %d, in %u size classes.
small_stmt
# %s matches %s
sm_dealloc
%s module %.200s not properly initialized
s:new_module
%s.__new__(): not enough arguments
%s.__new__(%s) is not safe, use %s.__new__()
%s.__new__(%s): %s is not a subtype of %s
%s.__new__(X): X is not a type object (%s)
SNOWFLAKE
s:NullImporter
SO_ACCEPTCONN
<%s object at %p>
SO_BROADCAST
sockaddr resolved to multiple addresses
SOCK_DGRAM
<socket>
_socket.CAPI
?_socket.CAPI
Socket closed without SSL shutdown handshake
socket.error
socket([family[, type[, proto]]]) -> socket object
socket.gaierror
socket.herror
<socket object, fd=%ld, family=%d, type=%d, protocol=%d>
socketpair
socketpair([family[, type[, proto]]]) -> (socket object, socket object)
socketpair() function.
@_socket.socket
sockets the address is a tuple (ifname, proto [,pkttype [,hatype]])
socket.timeout
SocketType
SOCK_RAW
SOCK_RDM
sock_recvfrom_into
sock_recv_into
SOCK_SEQPACKET
SOCK_STREAM
SO_DEBUG
SO_DONTROUTE
SO_ERROR
so->fill <= so->mask
so->fill > so->used
s|O:find_module
softspace
SOFTWARE-FUNCTIO
SO_KEEPALIVE
SO_LINGER
so->lookup != ((void *)0)
SOL_SOCKET
SOL_TIPC
SOMAXCONN
Some I/O error occurred
S|O:module.__init__
sO!:normalize
s|O!O:execfile
SO_OOBINLINE
s|OOOi:__import__
SO!O!:type
sO&:pathconf
SO_RCVBUF
SO_RCVLOWAT
SO_RCVTIMEO
sO:register_error
SO_REUSEADDR
sorted(iterable, cmp=None, key=None, reverse=False) --> new sorted list
sortwrapper
soself->s_codes != ((void *)0)
s*O:sendto
SO_SNDBUF
SO_SNDLOWAT
SO_SNDTIMEO
s(O){sOss}
sOs(ssi):load_module
s|O:strftime
so->table == ((void *)0) && so->fill == 0 && so->used == 0
SOUTH-SLAVE
S. Out of bounds indices are clipped in a manner consistent with the
so != ((void *)0) && ((((PyObject*)(so))->ob_type) == &PySet_Type || (((PyObject*)(so))->ob_type) == &PyFrozenSet_Type)
s|O:zipimporter.find_module
space at end of lines is.  When istext is not set, \r and \n (CR/LF) are 
Spaces between two numbers are accepted.
(space, tab, return, newline, formfeed, vertical tab).
s_pack_internal
s_pack_into
S.pack_into(buffer, offset, v1, v2, ...)
S.pack(v1, v2, ...) -> string
  spam=an_input_stream.read(5)
  spam=an_input_stream.read()       # and read it all
  spam=an_input_stream.readline()
spamdict
spamlist
S.partition(sep) -> (head, sep, tail)
Special case (not in native mode unless 'long long' in platform C):
Special case (only available in native format):
Special cases (preceding decimal count indicates length):
specified access to the path.  The mode argument can be F_OK to test
specified as another value, step determines how many values are 
Specifying a negative protocol version selects the highest
specifying the default protocol.  Keyword arguments are accepted.
sp_expire
SPHERICA
sp_inact
(split and splitfields are synonymous)
splitfields
splitfields(s [,sep [,maxsplit]]) -> list of strings
splitlines
splits are done. If sep is not specified, any whitespace string
splits are done. If sep is not specified or is None, any
split(s [,sep [,maxsplit]]) -> list of strings
    Split string by the occurrences of pattern.
split(string[, maxsplit = 0])  --> list.
SPLITTIN
sp_lstchg
sp_namp, sp_pwdp, sp_lstchg, sp_min, sp_max, sp_warn, sp_inact, sp_expire, sp_flag.
  (sp_nam,sp_pwd,sp_lstchg,sp_min,sp_max,sp_warn,sp_inact,sp_expire,sp_flag)
s_pop: parser stack underflow -- FATAL
SPRECHGESAN
s;[priority,] message string
s_push: parser stack overflow
                    sp_warn, sp_inact, sp_expire, sp_flag)
spwd.struct_spwd
spwd.struct_spwd: Results from getsp*() routines.
<square>
src != ((void *)0)
 SRE 2.2.2 Copyright (c) 1997-2002 by Secret Labs AB 
sre_match
S.replace(old, new[, count]) -> string
S.replace(old, new[, count]) -> unicode
%s() requires a code object with %zd free vars, not %zd
%s() requires a dict argument, not '%s'
%s requires closure of length %zd, not %zd
_sre.SRE_Match
_sre.SRE_Pattern
_sre.SRE_Scanner
sre_umatch
S.rfind(sub [,start [,end]]) -> int
S.rindex(sub [,start [,end]]) -> int
S.rjust(width[, fillchar]) -> string
S.rjust(width[, fillchar]) -> unicode
s*:rlecode_hqx
s*:rledecode_hqx
S.rpartition(sep) -> (head, sep, tail)
S.rsplit([sep [,maxsplit]]) -> list of strings
S.rstrip([chars]) -> string or unicode
S.rstrip([chars]) -> unicode
<%s '%s'>
%s: '%s'
s && (s[0] == 'a' || s[0] == 'b' || s[0] == 'c')
SSANGARAEA
SSANGCIEUC
SSANGCIEUC-HIEUH
SSANGHIEUH
SSANGIEUNG
SSANGKIYEOK
SSANGMIEUM
SSANGNIEUN
SSANGPIEUP
SSANGRIEUL
SSANGRIEUL-KHIEUKH
SSANGSIOS
SSANGSIOS-KIYEOK
SSANGSIOS-PIEUP
SSANGSIOS-TIKEUT
SSANGTHIEUTH
SSANGTIKEUT
SSANGTIKEUT-PIEUP
SSANGYEORINHIEUH
|ss:decode
%s%%%s.%dl%c
|ss:encode
s:setdefaultencoding
s|s:getservbyname
|s*:sha1
|s*:sha224
|s*:sha256
|s*:sha384
|s*:sha512
%s should return bool or int, returned %s
<%s.%s instance at %p>
s|si:popen
%s: '%s' is a directory, cannot continue
S.__sizeof__() -> size of S in memory, in bytes
_ssl.c:291: Both the key & certificate files must be specified
_ssl.c:298: Both the key & certificate files must be specified for server-side operation
_ssl.c:316: Invalid SSL protocol variant specified.
_ssl.c:323: No cipher can be selected.
_ssl.c:331: No root certificates specified for verification of other-side certificates.
_ssl.c:489: The handshake operation timed out
_ssl.c:493: Underlying socket has been closed.
_ssl.c:497: Underlying socket too large for select().
_ssl.c:725: No method for internalizing subjectAltName!
_ssl.c:%d: %s
SSL_CIPHER_get_bits
SSL_CIPHER_get_name
SSL_CIPHER_get_version
SSL_ctrl
SSL_CTX_ctrl
SSL_CTX_free
SSL_CTX_get_verify_mode
SSL_CTX_load_verify_locations
SSL_CTX_new
SSL_CTX_set_cipher_list
SSL_CTX_set_verify
SSL_CTX_use_certificate_chain_file
SSL_CTX_use_PrivateKey_file
SSL_do_handshake
SSLeay_version
SSLError
SSL_ERROR_EOF
SSL_ERROR_INVALID_ERROR_CODE
SSL_ERROR_SSL
SSL_ERROR_SYSCALL
SSL_ERROR_WANT_CONNECT
SSL_ERROR_WANT_READ
SSL_ERROR_WANT_WRITE
SSL_ERROR_WANT_X509_LOOKUP
SSL_ERROR_ZERO_RETURN
SSL_free
SSL_get_current_cipher
SSL_get_error
SSL_get_peer_certificate
SSL_get_rbio
SSL_get_shutdown
SSL_get_wbio
%s (%s, line %ld)
SSL_library_init
SSL_load_error_strings
ss:load_package
SSL_pending
SSL_read
SSL_set_accept_state
SSL_set_connect_state
SSL_set_fd
SSL_set_read_ahead
SSL_shutdown
ssl.SSLContext
ssl.SSLError
SSLv23_method
SSLv3_method
sslwrap(socket, server_side, [keyfile, certfile, certs_mode, protocol,
SSL_write
<%s.%s object at %p>
ss|O!:load_compiled
ss|O!:load_dynamic
ss|O!:load_source
S.splitlines([keepends]) -> list of strings
S.split([sep [,maxsplit]]) -> list of strings
ss:putenv
<%s '%s.%s'>
%s%s%s, %.20s, %.9s
ss:__setformat__
%s%s%sj%s
sss:symtable
%s%s takes at most %d argument%s (%d given)
s[start:end].  Optional arguments start and end are
S.startswith(prefix[, start[, end]]) -> bool
s:statvfs
!((s)->s_top == &(s)->s_base[1500])
  s:string (array of char); p: pascal string (with count byte).
S.strip([chars]) -> string or unicode
S.strip([chars]) -> unicode
S:Struct
s:strxfrm
S.swapcase() -> string
S.swapcase() -> unicode
s:system
STACCATISSIMO
STACCATO
stackadj
stack and crashing Python.  The highest possible limit is platform-
__stack_chk_fail
stackdepth_walk
stacklevel
stack_pointer >= f->f_valuestack
stack_pointer != ((void *)0)
stack_size
stack_size([size]) -> size
Stack unwind with exception set and why=%d
STALLION
StandardError
standardized by the C Standard and the POSIX standard (a thinly
standard Unix timezone format as documented in the tzset man page
STANDSTILL
ST_APPEND
starargs
STAREQUAL
starmap()
starmap(function, sequence) --> starmap object
starmap(fun, seq) --> fun(*seq[0]), fun(*seq[1]), ...
Start a new thread and return its identifier.  The thread will call the
starting at the end of B and working to the front.
start_new
(start_new() is an obsolete synonym)
start_new_thread
start_new_thread(function, args[, kwargs])
((((start)->ob_type)->tp_flags & ((1L<<23))) != 0) || ((((((PyObject*)(start))->ob_type))->tp_flags & ((1L<<24))) != 0)
start of the object (or at the specified offset). The slice will
starts.  whence is as with fileobj.seek(), specifically:
startswith
startswith first arg must be str, unicode, or tuple, not %s
start, which defaults to zero) and a value yielded by the iterable argument.
state is not a dictionary
state vector is the wrong size
state vector must be a tuple
stat_float_times
stat_float_times([newval]) -> oldval
staticmeth
staticmeth(*args, **kw)
staticmethod
staticmethod(function) -> method
Static methods in Python are similar to those found in Java or C++.
Static objects:
st_atime
stat(path) -> stat result
stat_result
stat_result: Result from stat or lstat.
status >= 0
statvfs(path) -> statvfs result
statvfs_result
statvfs_result: Result from statvfs or fstatvfs.
st_blksize
st_blocks
st_ctime
<stderr>
__stderr__
stderr -- standard error object; used for error messages
__stderr__ -- the original stderr; don't touch!
__stdin__
stdin -- standard input file object; used by raw_input() and input()
__stdin__ -- the original stdin; don't touch!
<stdout>
__stdout__
stdout -- standard output file object; used by the print statement
__stdout__ -- the original stdout; don't touch!
step != 0
Step for islice() must be a positive integer or None.
S.title() -> string
S.title() -> unicode
ST_MANDLOCK
st_mtime
(stmts) && _asdl_i < (stmts)->size
st_nlink
ST_NOATIME
ST_NODEV
ST_NODIRATIME
ST_NOEXEC
ST_NOSUID
Stop argument for islice() must be None or an integer: 0 <= x <= maxint.
StopIteration
STOPPAGE
STOPPING
store_tuple_elements
STRAGGISMATA
STRAIGHTNESS
STRAINER
S.translate(table [,deletechars]) -> string
S.translate(table) -> unicode
   str, bytes and datetime objects.  It can also be set to an integer
strcmp(mp->name, "__dict__") != 0
strcmp(mp->name, "__weakref__") != 0
!strcmp((((&(n)->n_child[1]))->n_str), "or")
strcoll arguments must be strings
ST_RDONLY
stream != ((void *)0)
ST_RELATIME
STRENGTH
strerror
strerror() argument out of range
strerror(code) -> string
STRETCHE
strftime
strftime() -- convert time tuple to string according to format specification
strftime(format[, tuple]) -> string
strict_errors
STRIKETHROUGH
<string>
string argument.  It can thus be an open file object, a StringIO
string content.  If the argument is outside the integer range a
string_hash
String has incomplete number of bytes
string. If no name is defined, default is returned, or, if not
string index out of range
string indices must be integers
string indices must be integers, not %.200s
StringIO
StringIO([s]) -- Return a StringIO-like stream for reading or writing
string is too large
string is too large to make repr
string is too long for a Python string
string length not a multiple of item size
stringlib_capitalize
stringlib_center
stringlib_expandtabs
stringlib_isalnum
stringlib_isalpha
stringlib_isdigit
stringlib_islower
stringlib_isspace
stringlib_istitle
stringlib_isupper
stringlib_ljust
stringlib_lower
stringlib_rjust
stringlib_swapcase
stringlib_title
stringlib_upper
stringlib_zfill
string must be of size 1
string of information.
string of that length; otherwise it is an integer.
string of the same length containing whatever the operating system put in
string or buffer
string or iterable over elements of the appropriate type.
string or None
string or pinned buffer
string or read-only buffer
string or read-only character buffer
string or single-segment read-only buffer
string or unicode or text buffer
string representation of a floating point number!)  When converting a
string_richcompare
strings.
    strings and version 2 (added in Python 2.5) uses a binary format for
strings are too large to concat
string S[start:end].  Optional arguments start and end are interpreted
string_str
string,string -> int. Compares two strings according to the locale.
string -> string. Returns a string that behaves for cmp locale-aware.
string.  This doesn't understand other non-printing characters.
string too long for Python string
string to parse is too long
string, use the optional base.  It is an error to supply a base when
string without null bytes
string without null bytes or None
Strip leading and trailing bytes contained in the argument.
Strip leading bytes contained in the argument.
strip(s) -> string
Strip trailing bytes contained in the argument.
strlen(buf) == 10
str(object) -> string
STROKE-1
STROKE-10
STROKE-11
STROKE-2
STROKE-3
STROKE-4
STROKE-5
STROKE-6
STROKE-7
STROKE-8
STROKE-9
strop_atof
strop functions are obsolete; use string methods
strptime
_strptime
strptime() -- parse string to time tuple according to format specification
strptime(string, format) -> struct_time
_strptime_time
__str__ returned non-string (type %.200s)
str_subtype_new
struct.error
struct format string
struct_group
struct_passwd
struct_pwent
struct_rusage
structseq index must be integer
Struct's format. See struct.__doc__ for more on format strings.
struct size in bytes
struct_spwd
struct_time
str != ((void *)0)
ST_SYNCHRONOUS
St#|t#:translate
stttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttuvvvvvvvvvvvvvvvvwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwxxyz{|}}~
ST_WRITE
sub(a, b) -- Same as a - b.
__subclasscheck__
__subclasscheck__() -> bool
__subclasses__
__subclasses__() -> list of immediate subclasses
__subclasshook__
  subclass of ImportError, so it can be caught as ImportError, too.
subclass != ((void *)0)
SUBGROUP
subjectAltName
SUBJOINE
SUBLINEA
subn(repl, string[, count = 0]) --> (newstring, number of subs)
suboffsets
SUBPUNCTIS
sub(repl, string[, count = 0]) --> newstring
SUBSCRIP
subscript
subscriptlist
subsection not found
 Subset %d
Subset DFA %s
SUBSTITUT
SUBSTITUTE
SUBSTITUTIO
substring not found
subtract
subtype_clear
subtype_dealloc
subtype_getweakref
subtype_traverse
subversion
SUCCEEDS
such mapping is defined.
such that sub is contained within B[start,end].  Optional
such that sub is contained within s[start,end].  Optional
such that sub is contained within S[start:end].  Optional
sufficient stack space for the interpreter itself.
suffix can also be a tuple of strings to try.
SUITABLE
suitable for use in string.translate.  The strings frm and to
Suite field "body" must be a list, not a %.200s
suite should not be possible
sum() can't sum strings [use ''.join(seq) instead]
SUMMATIO
SUMMATION
sum(sequence[, start]) -> value
SUNDANES
s_unpack
s#:unpack
s_unpack_from
S.unpack_from(buffer[, offset]) -> (v1, v2, ...)
S.unpack(str) -> (v1, v2, ...)
s:unsetenv
s*:update
<super: <class '%s'>, NULL>
<super: <class '%s'>, <%s object>>
        super(C, self).meth(arg)
super_dealloc
SUPERFIXE
super_getattro
SUPERIMPOSE
SUPERSCRIP
SUPERSET
super(type, obj) -> bound super object; requires isinstance(obj, type)
super(type, obj): obj must be an instance or subtype of type
super(type, type2) -> bound super object; requires issubclass(type2, type)
super(type) -> unbound super object
SUPERVISE
S.upper() -> string
S.upper() -> unicode
supply its own iterator, or be a sequence.
support.  Any line ending in the input file will be seen as a '\n'
supported; and recursive lists and dictionaries should not be written
supported as long as the values contained therein are themselves
Support for POSIX locales.
SUPRALINEA
SURROUND
SUSPENSIO
s != ((void *)0)
s->v.Slice.step == ((void *)0)
swapcase
swapcase(s) -> string
SWAPPING
s*:write
SYLLABIC
SYMBOL-1
SYMBOL-10
SYMBOL-11
SYMBOL-12
SYMBOL-13
SYMBOL-14
SYMBOL-15
SYMBOL-16
SYMBOL-17
SYMBOL-18
SYMBOL-19
SYMBOL-2
SYMBOL-20
SYMBOL-21
SYMBOL-22
SYMBOL-23
SYMBOL-24
SYMBOL-25
SYMBOL-26
SYMBOL-27
SYMBOL-29
SYMBOL-3
SYMBOL-30
SYMBOL-32
SYMBOL-36
SYMBOL-37
SYMBOL-38
SYMBOL-39
SYMBOL-4
SYMBOL-40
SYMBOL-42
SYMBOL-43
SYMBOL-45
SYMBOL-47
SYMBOL-48
SYMBOL-49
SYMBOL-5
SYMBOL-50
SYMBOL-51
SYMBOL-52
SYMBOL-53
SYMBOL-54
SYMBOL-6
SYMBOL-7
SYMBOL-8
SYMBOL-9
symbols: %s
Symbols that are not relevant to the underlying system are not defined.
symlink(src, dst)
SYMMETRI
symmetric_difference
symmetric_difference_update
SYMMETRY
symtable
_symtable
symtable() arg 3 must be 'exec' or 'eval' or 'single'
symtable entry
<symtable entry %.100s(%ld), line %d>
symtable_visit_params
SYNCHRONOU
SYNDESMO
SyntaxError
SyntaxError_dealloc
SyntaxWarning
SYRMATIKI
sysconf(name) -> integer
sysconf_names
sys.exc_clear() not supported in 3.x; use except clauses
sys.excepthook is missing
sys.flags
sys.float_info
sys.long_info
sys.meta_path must be a list of import hooks
sys.path_hooks must be a list of import hooks
sys.path_importer_cache must be a dict
sys.path.insert(0) failed
sys.path must be a list of directory names
sys.setdlopenflags(0).  To share symbols across extension modules, call as
sys.setdlopenflags(ctypes.RTLD_GLOBAL).  Symbolic names for the flag modules
system call.
system(command) -> exit_status
SystemError
SystemExit
SystemExit_dealloc
system -- for portability, check for either value).
sys.version_info
s*|z:ascii_decode
s#|z:escape_decode
S|z:escape_encode
S.zfill(width) -> string
S.zfill(width) -> unicode
s*|zii:utf_16_ex_decode
s*|zii:utf_32_ex_decode
s:zipimporter
s:zipimporter.get_code
s:zipimporter.get_data
s:zipimporter.get_filename
s:zipimporter.get_source
s:zipimporter.is_package
s:zipimporter.load_module
s*|zi:utf_16_be_decode
s*|zi:utf_16_decode
s*|zi:utf_16_le_decode
s*|zi:utf_32_be_decode
s*|zi:utf_32_decode
s*|zi:utf_32_le_decode
s*|zi:utf_7_decode
s*|zi:utf_8_decode
s*|z:latin_1_decode
s*|zO:charmap_decode
s*|z:raw_unicode_escape_decode
s#|z:readbuffer_encode
s*|z:unicode_escape_decode
tabcheck
TabError
table[i].key != ((void *)0)
table of interned strings whose purpose is to speed up dictionary lookups.
table != ((void *)0)
table, which must be a bytes object of length 256.
tabsize must be at least 1
Tab size set to %d
:tabstop=
TABULATION
tab-width:
taken from the optional dictionary kwargs.  The thread exits when the
takewhile
takewhile()
takewhile(predicate, iterable) --> takewhile object
takewhile(pred, seq) --> seq[0], seq[1], until pred fails
TAKHALLUS
(targets) && _asdl_i < (targets)->size
target != ((void *)0)
TA*-TAlqTAZL
TAVIYANI
TAWELLEME
tb_frame
tb_lasti
tb_lineno
tcgetpgrp
tcgetpgrp(fd) -> pgid
T.count(value) -> integer -- return number of occurrences of value
TCP_CORK
TCP_DEFER_ACCEPT
TCP_INFO
TCP_KEEPCNT
TCP_KEEPIDLE
TCP_KEEPINTVL
TCP_LINGER2
TCP_MAXSEG
TCP_NODELAY
TCP_QUICKACK
TCP_SYNCNT
TCP_WINDOW_CLAMP
tcsetpgrp
tcsetpgrp(fd, pgid)
tcur->gilstate_counter >= 0
TEARDROP-BARBE
TEARDROP-SHANKE
TEARDROP-SPOKE
teedataobject_getitem
tee(iterable, n=2) --> tuple of n independent iterators.
tee(it, n=2) --> (it1, it2 , ... itn) splits one iterator into n
TELEGRAP
TELEPHON
TELEPHONE
tell() -> current file position, an integer (may be a long integer).
tell() -- get the current position.
Tell the Python interpreter to check for asynchronous events every
tempnam([dir[, prefix]]) -> string
tempnam has been removed in 3.x; use the tempfile module
tempnam is a potential security risk to your program
TERMINATOR
test_c_api
_test_decode_cert
test_descr.py in the standard test suite requires it in order to complete.
testlist
testlist1
testlist_comp
testlist_safe
test suite, you can recompile Python without Modules/xxsubtype.c.
TETARTIMORION
TETRAFONIAS
TETRAGRA
TETRAPLI
TETRASEME
TETRASIMOU
textdomain
textdomain(domain) -> string
T_FMT_AMPM
t->gilstate_counter == 0
tgt != ((void *)0)
than 0, make sure the file is opened in binary mode, both when
THANTHAKHAT
that are ready.
that evaluates lazily.
that every interval seconds.
that find_module() looks for.
that point to 'object'.
that the offset is not an optional argument.  See struct.__doc__ for 
The actual value can be retrieved by calling gmtime(0).
The 'archive' attribute of zipimporter objects contains the name of the
The argument arg is optional, and defaults to 0; it may be an int or a
The arguments are the same as for socket() except the default family is
the argument sequence(s).  If more than one sequence is given, the
The array must be a type 'u' array; otherwise a ValueError
The basestring type cannot be instantiated
The blocking operation is not interruptible.
    The block was made by call #%zu to debug malloc/realloc.
the buffer API, not just str. Requires len(buffer[offset:]) >= self.size.
the buffer length in bytes.
the buffer.  The length of the arg buffer in this case is not allowed to
The buffer will reference a slice of the target object from the
The builtins True and False are the only two instances of the class bool.
 the C language standard for struct tm.  For example, the value of the
the class associated with a method
The class bool is a subclass of the class int, and cannot be subclassed.
the class invoking super()
The class must be a classic class.
the cmp argument is not supported in 3.x
The column number is reset to zero after each newline occurring in the
the compilation of the code.
The constructor is:
The decompressor object can no longer be used after this call.
the default dir() logic is used and returns:
The default factory is called without arguments to produce
The default handler for SIGINT installed by Python.
               The default module search path uses %s.
the denominator of a rational number in lowest terms
The dictionary errno.errorcode maps numeric codes to symbol names,
The directory and a prefix may be specified as strings; they may be omitted
the distance from 0 and phi the phase angle.
The dont_inherit argument, if non-zero, stops the compilation inheriting
    The %d pad bytes at p-%d are 
    The %d pad bytes at tail=%p are 
the effects of any future statements in effect in the code calling
The Epoch is system-defined; on Unix, it is generally January 1st, 1970.
The epoll interface supports all file descriptors that support poll.
The fd must be non-blocking.
The file must be an open file object opened in binary mode ('rb' or
The file must be an open file object such as sys.stdout or returned by
The filename will be used for run-time error messages.
the file on disk reflects the data written.
The file parameter must have a write() method that accepts a single
the file wasn't found.
The fill character cannot be converted to Unicode
The fill character must be exactly one character long
the first argument must be callable
the first call to clock().  This has as much precision as the system
the first is the signal number, the second is the interrupted stack frame.
The first three arguments are sequences of file descriptors to be waited for:
The flag constants are defined in the ctypes and DLFCN modules.
The flags argument, if present, controls which future statements influence
The form using a tuple, isinstance(x, (A, B, ...)), is a shortcut for
  The function exc_info() should be used instead of these three,
the function (or other callable) implementing a method
The functions in this module allow compression and decompression using the
The gid is an integer, name and password are strings.  (Note that most
The globals and locals are dictionaries, defaulting to the current
The globals must be a dictionary and locals can be any mapping,
the groups of which the specified username is a member, plus the specified
the imaginary part of a complex number
the initial output buffer size.
the instance invoking super(); may be None
the instance to which a method is bound; None for unbound methods
the items of the sequence (or a list of tuples if more than one sequence).
the i-th element comes from the i-th iterable argument.  The .next()
The itimer can be cleared by setting seconds to zero.
the last 1, 5, and 15 minutes or raises OSError if the load average
The leftmost iterators are in the outermost for-loop, so the output tuples
    the leftmost non-overlapping occurrences of pattern with the
the length in items of the buffer used to hold array's contents
The length should be multiplied by the itemsize attribute to calculate
The list is in arbitrary order.  It does not include the special
the local timezone used by methods such as localtime, but this behaviour
the lock, and return None once the lock is acquired.
the lock to acquire the lock.  The lock must be in the locked state,
the main thread. The returned number comprises all threads created
THEMATISMO
the maximum number of monitored events.
The MD5 and SHA1 algorithms are always supported.
The mode and buffersize arguments are as for the built-in open() function.
The mode must be 'exec' to compile a module, 'single' to compile a
The module name cannot contain '.'; to search for a submodule of a
The module name must include the full package name, if any.
The module uses the same names and symbols as defined by the
The most base type
The name must be a string; the optional doc argument can have any type.
Then repeat the sequence indefinitely.
The number of unreachable objects is returned.
the numerator of a rational number in lowest terms
the object's class
The operation did not complete (connect)
The operation did not complete (read)
The operation did not complete (write)
The operation did not complete (X509 lookup)
the operation simply removes the characters in deletechars.
The optional 4th argument specifies a timeout in seconds; it may be
The optional argdefs tuple specifies the default argument values.
the optional base.  It is an error to supply a base when converting a
The optional closure tuple supplies the bindings for free variables.
The optional first format char indicates byte order, size and alignment:
The optional name string overrides the name from the code object.
The optional 'path' argument is ignored -- it's there for compatibility
The optional proto argument tells the pickler to use the given
The optional protocol name, if given, should be 'tcp' or 'udp',
The optional size argument, if given, is an approximate bound on the
the OS will be reflected in the contents of the buffer after the call has
The other representation is a tuple of 9 integers giving local time.
the packed bytes into the writable buffer buf starting at offset.  Note
the part before it, the separator itself, and the part after it.  If the
The previous fd is returned.
the Python version, and the hardware/OS platform and version.
The read operation timed out
the real part of a complex number
There are two standard representations of time.  One is the number
THEREFORE
The remaining arguments are the same as for socket().
The remaining chars indicate types of args and must match exactly;
the remote end is closed and all data is read, return the empty string.
The result is computed in a way which is accurate for x near zero.
The return value i is such that all e in a[:i] have e <= x, and all e in
The return value i is such that all e in a[:i] have e < x, and all e in
The return value is a tuple of three lists corresponding to the first three
the return value of fcntl is a string of that length, containing the
THERMODYNAMIC
the same hash value.  The reverse is not necessarily true, but likely.
These are exactly the valid indices for a list of 4 elements.
these can be preceded by a decimal repeat count:
the separator itself, and the part after it.  If the separator is not
  These three are only available in an interactive session after a
the size, in bytes, of one array item
the socket family
the socket protocol
the socket timeout
the socket type
The source may be a string representing a Python expression
The sp_namp and sp_pwdp are strings, the rest are integers.
the stack size, such as requiring a minimum stack size larger than 32kB or
the 'status' value.
the StringIO module that is written in C.  It does not provide the
The substitutions are identified by braces ('{' and '}').
the suggested approach in the absence of more specific information).
The 'threading' module provides a more convenient interface.
the timeout feature and is equivalent to setblocking(1).
The time value as returned by gmtime(), localtime(), and strptime(), and
The tuple items are:
the typecode character used to create the array
the type of objects stored in them is constrained.
the type of the instance invoking super(); may be None
The uid and gid items are integers, all others are strings. An
the unconsumed_tail attribute.
the underlying socket object.
The value argument can either be an integer or a string.
the value for this attribute is one of None (no newline read yet),
The value must be a supported type. Raise a ValueError exception if
The value of each symbol is the corresponding integer value,
The variable struct.error is an exception raised on errors.
The write operation timed out
they are not modified.  The locals are currently unused.  The fromlist
They provide a way for an extension module to export a C interface
(they will cause infinite loops).
THIRTEEN
THIRTY-ONE
THIRTY-SECON
This affects how floats are converted to and from binary strings.
This always returns a floating point number.  Precision may be negative.
thisaval
__thisclass__
this compiler does not handle Suites
this constructor takes no arguments
this database is based on the UnicodeData.txt file version
this __dict__ descriptor does not support '%.200s' objects
This function avoids the loss of precision involved in the direct evaluation of exp(x)-1 for small x.
This function can be used to read past a pickle without instantiating
This function is also available as "hexlify()".
This function is also available as "unhexlify()"
This function is meant for internal and specialized purposes only.
This function should be used for internal and specialized
This function should be used for specialized purposes only.
This function will not follow symbolic links.
This has no effect if the element is already present.
(This is done by calling getattr(object, name) and catching exceptions.)
This is equivalent to asctime(localtime(seconds)). When the time tuple is
This is equivalent to (real + imag*1j) where imag defaults to 0.
This is essentially a wrapper around the fcntl() locking calls.  fd is the
This is invoked early on by abc.ABCMeta.__subclasscheck__().
This is like connect(address), but returns an error code (the errno value)
This is needed for lower-level file interfaces, such os.read().
This is synonymous to ``raise SystemExit''.  It will cause the current
This is the largest integral value <= x.
This is the smallest integral value >= x.
This lock should be used by import hooks to ensure thread-safety
This may be used to identify per-thread resources.
This module contains functions that can read and write Python values in
This module defines an object type which can efficiently represent
this module directly.
This module exports a set of functions implemented in C corresponding
This module exports three objects:
This module is always available. It provides access to mathematical
This module is always available.  It provides access to the
This module makes available standard errno system symbols.
This module performs file control and I/O control on file 
This module provides access to operating system functionality that is
This module provides access to some objects used or maintained by the
This module provides access to the garbage collector for reference cycles.
This module provides access to the Unicode Character Database which
This module provides access to the Unix password database.
This module provides access to the Unix shadow password database.
This module provides a simple useful replacement for
This module provides mechanisms to use signal handlers in Python.
This module provides primitive operations to write multi-threaded programs.
This module provides support for maintaining a list in sorted order without
This module provides the components needed to build your own
This module provides various functions to manipulate time values.
This module supports asynchronous I/O on multiple file descriptors.
This object has no __dict__
This object has no __weakref__
This object may be accessed either as a 9-tuple of
This object may be accessed either as a tuple of
This takes a file-like object for writing a pickle data stream.
This thread state must be current when releasing
THOUSAND
thousands_sep
Thousands separators not allowed with integer format specifier 'c'
thread.error
threading
thread._local
Thread-local data
_thread._localdummy
Thread-local dummy
thread.local.%p
thread.lock
thread to exit silently unless the exception is caught.
THREE-LIN
THREE-PER-E
through `start_new_thread()` as well as `threading.Thread`, and not
through the given translation table, which must be a mapping of
throw() third argument must be a traceback object
throw(typ[,val[,tb]]) -> raise exception in generator,
THUNDERSTORM
TIKEUT-CHIEUCH
TIKEUT-CIEUC
TIKEUT-KIYEOK
TIKEUT-MIEUM
TIKEUT-PIEUP
TIKEUT-RIEUL
TIKEUT-SIOS
TIKEUT-SIOS-KIYEOK
TIKEUT-THIEUTH
timed out
time() -> floating point number
time of last access
time of last change
time of last modification
timeout is too large
timeout must be a float or None
timeout must be an integer or None
timeout period too long
Timeout value out of range
time() -- return current time in seconds since the Epoch as a float
# times object malloc called
timestamp out of range for platform time_t
time.struct_time
times() -> (utime, stime, cutime, cstime, elapsed_time)
timezone
timezone -- difference in seconds between UTC and local standard time
timezone is set to the systems best guess of wallclock time.
T.index(value, [start, [stop]]) -> integer -- return first index of value.
TIPC_ADDR_ID
TIPC_ADDR_NAME
TIPC_ADDR_NAMESEQ
TIPC_CFG_SRV
TIPC_CLUSTER_SCOPE
TIPC_CONN_TIMEOUT
TIPC_CRITICAL_IMPORTANCE
TIPC_DEST_DROPPABLE
TIPC_HIGH_IMPORTANCE
TIPC_IMPORTANCE
TIPC_LOW_IMPORTANCE
TIPC_MEDIUM_IMPORTANCE
TIPC_NODE_SCOPE
TIPC_PUBLISHED
TIPC_SRC_DROPPABLE
TIPC_SUB_CANCEL
TIPC_SUB_PORTS
TIPC_SUBSCR_TIMEOUT
TIPC_SUB_SERVICE
TIPC_TOP_SRV
TIPC_WAIT_FOREVER
TIPC_WITHDRAWN
TIPC_ZONE_SCOPE
-t     : issue warnings about inconsistent tab usage (-tt: issue errors)
tls find_key: circular list(!)
tls find_key: small circular list(!)
TLS/SSL connection has been closed
TLSv1_method
tm_isdst
<tmpfile>
tmpfile64
tmpfile() -> file object
tmpfile has been removed in 3.x; use the tempfile module
'/tmp/myimport.zip', or '/tmp/myimport.zip/mydirectory', if mydirectory is a
tmpnam has been removed in 3.x; use the tempfile module
tmpnam is a potential security risk to your program
tmpnam_r
tmpnam() -> string
                          tm_sec,tm_wday,tm_yday,tm_isdst)
                       tm_sec, tm_wday, tm_yday, tm_isdst)
T.__new__(S, ...) -> a new object with type S, a subtype of T
TOANDAKHIAT
To both, return fd of newly opened pseudo-terminal.
((((t))->ob_type == &PyClass_Type) || (((((((PyObject*)((t)))->ob_type))->tp_flags & ((1L<<31))) != 0) && ((((PyTypeObject*)(t))->tp_flags & ((1L<<30))) != 0)))
To compute the product of an iterable with itself, specify the number
  To customize printing in an interactive session or to install a custom
To declare a class method, use this idiom:
To declare a static method, use this idiom:
tofile(f)
tofile() -- write all items to a file object
to/from Python values.
TOGETHER
tok_backup: beginning of buffer
tok->cur - tok->buf < 2147483647
tok->decoding_buffer == ((void *)0)
tok->decoding_state != 0
tok->decoding_state == 1
Token %s/'%s' ... 
tok_stdin_decode
tolist() -> list
tolist() only supports byte views
tolist() only supports one-dimensional objects
tolist() -- return the array converted to an ordinary list
to lowercase ASCII and vice versa.
To map error codes to error messages, use the function os.strerror(),
to 'object'.
Tools that operate on functions.
Too many decimal digits in format string
too many digits in integer
too many file descriptors in select()
too many groups
too many levels of indentation
too many statically nested blocks
too many tuple nesting levels in argument format string
too many values to unpack
Too much data for base64 line
to open a file is with the builtin open() function.
to other extension modules, so that extension modules can use the
  top-level exception handler, assign other functions to replace these.
TOP-LIGHTE
TORCULUS
-t or -tt
tostring
tostring() -- return the array converted to a string
tostring() -> string
total number of bytes in the lines returned.
total size, in bytes
total size of all interned strings: %zd/%zd mortal/immortal
total struct size too long
to tell how much data has been sent.
to the default encoding. errors may be given to set a different error
to the file. The object will not be properly read back by load()
to the front.  If maxsplit is given, at most maxsplit splits are
to the intrinsic operators of Python.  For example, operator.add(x, y)
  to these, it is possible to redirect all of the interpreter's I/O.
tounicode
tounicode() may only be called on type 'u' arrays
tounicode() -> unicode
to use YP/NIS and may not be accessible via getgrnam or getgrgid.
to Zip archives.
tp_compare didn't return -1, 0 or 1
tp_compare didn't return -1 or -2 for exception
traceback
  traceback has been printed.
tracebacklimit
Traceback (most recent call last):
trailing comma not allowed without surrounding parentheses
Trailing garbage
Trailing \ in string
translate
Translate an error code to a message string.
translate(s,table [,deletechars]) -> string
Translating label %s ...
Translating labels ...
translation table must be 256 characters long
translation table, which must be a string of length 256.
translation table, which must be a string of length 256 or None.
TRANSMISSIO
TRANSMISSION
TRANSPOSITIO
TRANSVERSA
TRAPEZIUM
TREADING
TREMOLO-1
TREMOLO-2
TREMOLO-3
TRESILLO
TRIANGLE
TRIANGLE-HEADE
TRIANGLE-ROUN
TRIANGULA
TRICOLON
TRIFOLIAT
TRIFONIAS
TRIGORGON
TRIGRAMMO
TRISIMOU
TRITIMORION
TROEZENIA
TROKUTAST
TROMIKOLYGISMA
TROMIKON
TROMIKOPARAKALESMA
TROMIKOPSIFISTON
TROMIKOSYNAGMA
__truediv__
truediv(a, b) -- Same as a / b when __future__.division is in effect.
True if the epoll handler is closed
True if the file is closed
__trunc__
truncate
Truncate a file to a specified length.
... truncated
truncated data
truncated input
truncated \uXXXX
truncated \uXXXX escape
truncated \UXXXXXXXX escape
truncated \xXX escape
truncate([size]) -> None.  Truncate the file to at most size bytes.
Truncates x to the nearest Integral toward 0. Uses the __trunc__ magic method.
truncate(): truncate the file at the current position.
Truncating an Integral returns itself.
Truncation of value to char
Truncation of value to short
Truncation of value to unsigned char
Truncation of value to unsigned short
__trunc__ returned non-Integral (type %.200s)
trunc(x:Real) -> Integral
truth(a) -- Return True if a is true, False otherwise.
TryExcept
TryExcept field "body" must be a list, not a %.200s
TryExcept field "handlers" must be a list, not a %.200s
TryExcept field "orelse" must be a list, not a %.200s
TryFinally
TryFinally field "body" must be a list, not a %.200s
TryFinally field "finalbody" must be a list, not a %.200s
# trying %s
# trying %s%c%s
Try `python -h' for more information.
try_stmt
t_size >= b_size
T.__sizeof__() -- size of T in memory, in bytes
tstate->frame->f_exc_traceback == ((void *)0)
tstate->frame->f_exc_value == ((void *)0)
tstate != ((void *)0)
TTAYANNA
t#t#:maketrans
t#t#|nn:count
t#t#|nn:find
t#t#|nn:rfind
t#t#t#|n:replace
TTUDDAAG
ttyname(fd) -> string
TUKWENTIS
tuple assignment index out of range
tuple() -> empty tuple
Tuple field "elts" must be a list, not a %.200s
tuple index out of range
tuple.index(x): x not in tuple
tuple indices must be integers, not %.200s
tuple(iterable) -> tuple initialized from iterable's items
tupleiterator
tupleiter_dealloc
tupleiter_next
tuple of arguments to future partial calls
tuple_of_constants
tuple parameter unpacking has been removed in 3.x
tuplerepr
tuple returned by %s must contain 2 through 5 elements
tuple_subtype_new
TURNSTILE
TUTEYASAT
TUVWXYZ[\]^_`abcdddddddddddddddddddddddddddddddddddddddddddddddddddedddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddfgddddddddh))ijklmnopqr
TWENTY-EIGHT
TWENTY-FIVE
TWENTY-FOUR
TWENTY-NINE
TWENTY-ONE
TWENTY-SEVEN
TWENTY-SIX
TWENTY-THREE
TWENTY-TWO
TWO-HEADE
t#:write
Type %.100s doesn't define __format__
Type %.100s doesn't define __sizeof__
Type %.100s doesn't support the buffer API
type '%.100s' is not an acceptable base type
type '%.100s' participates in gc and is a base type but has inappropriate tp_free slot
Type basestring cannot be instantiated; it is the base for str and unicode.
TYPE_CLASS
type_clear
typecode
    Type code   C Type             Minimum size in bytes 
typecode -- the typecode character used to create the array
type_dealloc
TypeError
TYPE_FUNCTION
Type "help", "copyright", "credits" or "license" for more information.
type inequality comparisons not supported in 3.x
type_init
type.__init__() takes 1 or 3 arguments
type.__init__() takes no keyword arguments
type is specified at object creation time by using a type code, which
TYPE_MODULE
type(name, bases, dict) -> a new type
type_new
!"'type' not in [duoxX]"
type object '%.50s' has no attribute '%.400s'
type(object) -> the object's type
((((type))->ob_type == &PyClass_Type) || (((((((PyObject*)((type)))->ob_type))->tp_flags & ((1L<<31))) != 0) && ((((PyTypeObject*)(type))->tp_flags & ((1L<<30))) != 0)))
type of node to be created, being combined (bitwise OR) with one of
type 'partial' takes at least one argument
type    : %s
typestr must be 'double' or 'float'.  fmt must be one of 'unknown',
typestr must be 'double' or 'float'.  This function returns whichever of
type_subclasses
type() takes 1 or 3 arguments
type->tp_dict != ((void *)0)
(type->tp_flags & (1L<<13)) == 0
type->tp_flags & (1L<<9)
type_traverse
type != ((void *)0)
type != ((void *)0) && type->tp_alloc != ((void *)0)
Typical use to call a cooperative superclass method:
t#|z:charbuffer_encode
tzname -- tuple of (standard time zone name, DST time zone name)
t#|z#n:split
tzset() -- change the local timezone
\U%02x%02x%02x%02x
u#;array item must be unicode character
ubyte format requires 0 <= number <= 255
'U' cannot be combined with 'w' or '+' mode.
ucd_3_2_0
U:charmap_build
ucnhash_CAPI
u#:fromunicode
UILLEANN
UKRAINIA
U:listdir
umask(new_mask) -> old_mask
UMBRELLA
unable to determine login name
unable to get file status from '%s'
unable to select on socket
unaccepted connections that the system will allow before refusing new
uname() -> (sysname, nodename, release, version, machine)
unary op %d should not be possible
UNASPIRATED
UNAVAILABLE
UnboundLocalError
unbound methods must have non-NULL im_class
<unbound method %s.%s>
unbound method %s%s must be called with %s instance as first argument (got %s%s instead)
uncollectable
unconsumed_tail
unconvertible time
undefined behavior.
undefined character name '%s'
UNDERBAR
UNDERDOT
UNDERLIN
Underlying socket has been closed.
Underlying socket too large for select().
UNDERTIE
unexpected binary operation %d on a constant
unexpected character after line continuation character
Unexpected data in internal list
unexpected end of data
unexpected EOF while parsing
unexpected exception during garbage collection
unexpected expression in assignment %d (line %d)
unexpected flow_stmt: %d
unexpected import name: %d
unexpected indent
unexpected node in varargslist: %d @ %d
Unexpected node-type in from-import
unexpected NULL from tmpnam_r
unexpected special character
unexpected token in 'if' statement: %s
unexpected unary operation %d on a constant
unexpected unindent
unhandled atom %d
Unhandled exception in thread started by 
unhandled expr: %d
unhandled factor: %d
unhandled small_stmt: TYPE=%d NCH=%d
unhashable instance
unhashable type
unhashable type: '%.200s'
unhexlify
unichr() arg not in range(0x110000) (wide Python build)
unichr as integer. Returns 1 if the character has been identified as
unichr as string.
unichr as string. If no such value is defined, an empty string is
unichr(i) -> Unicode character
__unicode__
unicode argument without an encoding
(unicode conversion error)
unicodedata
unicodedata_decomposition
UnicodeData File Format 5.2.0 (see
unicodedata.UCD
unicodedata.ucnhash_CAPI
UnicodeDecodeError
Unicode decoding error.
UnicodeEncodeError
Unicode encoding error.
Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
UnicodeError
UnicodeError_dealloc
Unicode error handler
(unicode error) %s
(unicode error) unknown error
unicodeescape
unicode_escape_decode
unicode_escape_encode
unicode_hash
unicode_internal
unicode_internal_decode
unicode_internal_encode
unicode_literals
Unicode ordinals to Unicode ordinals, Unicode strings or None.
Unicode related error.
unicode(string [, encoding[, errors]]) -> object
Unicode string S[start:end].  Optional arguments start and end are
unicode_subtype_new
UnicodeTranslateError
Unicode translation error.
Unicode unequal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
UnicodeWarning
unidata_version
unindent does not match any outer indentation level
uninitialized classmethod object
<uninitialized file>
uninitialized staticmethod object
UNIVERSA
universal newline mode can only be used with modes starting with 'r'
<unknown>
unknown action
unknown address family
unknown address family %d
Unknown Bluetooth protocol
unknown boolop found
unknown cmpop found
unknown comprehension type %d
Unknown conversion specifier %c
Unknown conversion specifier \x%x
unknown decode error
unknown dlopen() error
unknown encoding: %s
unknown error handler name '%.400s'
unknown expr_context found
@Unknown format code '%c' for object of type '%.200s'
Unknown format code '%c' for object of type '%.200s'
Unknown format code '\x%x' for object of type '%.200s'
'unknown', 'IEEE, big-endian' or 'IEEE, little-endian' best describes the
unknown import statement: starts with command '%s'
Unknown newlines value 0x%x
unknown opcode
!"unknown operation"
unknown operator found
Unknown OP label %s
Unknown option: -%c
(unknown parser marker combination)
unknown parsing error
unknown scope for %.100s in %.100s(%s) in %s
unknown symbol table entry
unknown unaryop found
unknown Unicode character name
unless base is 0.
Unlike atan(y/x), the signs of both x and y are considered.
Unlike unpack, unpack_from can unpack values from any object supporting
unlink(path)
unlock it.  A thread attempting to lock a lock that it has already locked
Unmapped characters are left untouched. Characters mapped to None
UNMARRIE
unmarshallable object
unmatched '{' in format
Unmatched left paren in format string
unmatched paren in format
Unmatched right paren in format string
unnamed field
unpacked tuple should have %s%zd elements, but has %zd
unpack_from
unpack_from requires a buffer argument
unpack_from requires a buffer of at least %zd bytes
unpack_iterable
unpack requires a string argument of length %zd
Unpack the buffer, containing packed C structure data, according to
Unpack the string containing packed C structure data, according to fmt.
UnpickleableError
Unpickler
Unpickler(file) -- Create an unpickler.
UnpicklingError
unpickling stack underflow
         unpredictable between separate invocations of the interpreter, as
unqualified exec is not allowed in function '%.100s' it %s
unreadable attribute
Unrecognized action (%s) in warnings.filters:
unrecognized configuration name
unrecognized lockf argument
UNREF invalid object
UNREF negative refcnt
unregister
unregistered extension code %ld
unregister(fd) -> None
unregistering file descriptors, and then polling them for I/O events.
unsetenv
unsetenv(key)
unsigned byte integer is greater than maximum
unsigned byte integer is less than minimum
((unsigned char)((*tok->str) & 0xff)) == c
unsigned int is less than minimum
unsigned long is less than minimum
(unsigned long long)(long)(x) == (x)
unsigned short is greater than maximum
unsigned short is less than minimum
(unspecified)
Unspecified run-time error.
unsupported address family
unsupported format character '%c' (0x%x) at index %zd
unsupported hash type
unsupported langinfo constant
unsupported locale setting
unsupported operand type(s) for %.100s: '%.100s' and '%.100s'
unsupported operand type(s) for ** or pow(): '%.100s' and '%.100s'
unsupported operand type(s) for pow(): '%.100s', '%.100s', '%.100s'
unsupported pickle protocol: %d
unterminated shift sequence
until all data is sent.  If an error occurs, it's impossible
unused_arena_objects == ((void *)0)
unused_arena_objects != ((void *)0)
unused_data
Unversioned directory
UPADHMANIYA
Update and return a dictionary containing the current scope's local variables.
Update a set with the intersection of itself and another.
Update a set with the symmetric difference of itself and another.
Update a set with the union of itself and others.
update_refs
update_symbols
Update this hash object's state with the provided string.
update() -- updates the current digest with an additional string
uppercase
upper(s) -> string
UP-POINTIN
Up to maxevents are returned to the caller.
urandom(n) -> str
usable_arenas->address != 0
usable_arenas == ao
(usable_arenas == ao && ao->prevarena == ((void *)0)) || ao->prevarena->nextarena == ao
usable_arenas->freepools == ((void *)0)
usable_arenas->freepools != ((void *)0) || usable_arenas->pool_address <= (block*)usable_arenas->address + (256 << 10) - (4 * 1024)
usable_arenas->nextarena == ((void *)0) || usable_arenas->nextarena->prevarena == usable_arenas
usable_arenas->nfreepools > 0
usable_arenas == ((void *)0)
usable_arenas == ((void *)0) || usable_arenas->address != 0
usage: %s [option] ... [-c cmd | -m mod | file | -] [arg] ...
used by the builtin import mechanism for sys.path items that are paths
used for special methods; variants without leading and trailing
used in Python's test suite.
               used to profile the time spent by the application
           Use  of negative indices is not supported.
           Use of negative indices is not supported.
user ID of owner
user id too big
user name
users are not explicitly listed as members of the groups they are in
UserWarning
Use the real uid/gid to test for access to a path.  Note that most
ushort format requires 0 <= number <= USHRT_MAX
Using default static PYTHONPATH.
using the ssl() function.
utf_16_be_decode
utf_16_be_encode
utf_16_decode
utf_16_encode
utf_16_ex_decode
utf_16_le_decode
utf_16_le_encode
utf-32-be
utf_32_be_decode
utf_32_be_encode
utf_32_decode
utf_32_encode
utf_32_ex_decode
utf_32_le_decode
utf_32_le_encode
utf_7_decode
utf_7_encode
utf_8_decode
utf_8_encode
utf8 == ((void *)0)
utime() arg 2 must be a tuple (atime, mtime)
utime(path, (atime, mtime))
utime(path, None)
u->u_fblock[u->u_nfblocks].fb_block == b
u->u_fblock[u->u_nfblocks].fb_type == t
-u     : unbuffered binary stdout and stderr; also PYTHONUNBUFFERED=x
u->u_nfblocks > 0
    'u'         Unicode character  2 
%u unused pools * %d bytes
\Uxxxxxxxx out of range
valid directory inside the archive.
  value=an_output_stream.getvalue()
ValueError
ValueError exception is raised 
value has (or contains an object that has) an unsupported type.
value not found in bytearray
((((value)->ob_type)->tp_flags & ((1L<<23))) != 0)
Value returned by %s must be string or tuple
(values) && _asdl_i < (values)->size
values,as if it had been read from a file using the fromfile() method).
values for form are 'NFC', 'NFKC', 'NFD', and 'NFKD'.
value too large to convert to float: %.200s
value != ((void *)0)
VAMAGOMUKH
VAMAGOMUKHA
varargslist
Variables:
VARIATIO
varnames
      varnames, filename, name, firstlineno, lnotab[, freevars[, cellvars]])
vars() argument must have __dict__ attribute
vars(): no locals!?
vars([object]) -> dictionary
VBAREQUAL
v_complement
v defaults to None.
vdigits_start <= 0 && 0 <= digits_len && digits_len <= vdigits_end
vdigits_start < decpt && decpt <= vdigits_end
VERSICLE
__version__
--version
version -- indicates the format that the module uses. Version 0 is the
version_info
Version information as a named tuple.
version_info -- version information as a named tuple
version of the data.
version -- the version of this interpreter as a string
<vertical>
VERTICAL
VERTICAL-00-00
VERTICAL-00-01
VERTICAL-00-02
VERTICAL-00-03
VERTICAL-00-04
VERTICAL-00-05
VERTICAL-00-06
VERTICAL-01-00
VERTICAL-01-01
VERTICAL-01-02
VERTICAL-01-03
VERTICAL-01-04
VERTICAL-01-05
VERTICAL-01-06
VERTICAL-02-00
VERTICAL-02-01
VERTICAL-02-02
VERTICAL-02-03
VERTICAL-02-04
VERTICAL-02-05
VERTICAL-02-06
VERTICAL-03-00
VERTICAL-03-01
VERTICAL-03-02
VERTICAL-03-03
VERTICAL-03-04
VERTICAL-03-05
VERTICAL-03-06
VERTICAL-04-00
VERTICAL-04-01
VERTICAL-04-02
VERTICAL-04-03
VERTICAL-04-04
VERTICAL-04-05
VERTICAL-04-06
VERTICAL-05-00
VERTICAL-05-01
VERTICAL-05-02
VERTICAL-05-03
VERTICAL-05-04
VERTICAL-05-05
VERTICAL-05-06
VERTICAL-06-00
VERTICAL-06-01
VERTICAL-06-02
VERTICAL-06-03
VERTICAL-06-04
VERTICAL-06-05
VERTICAL-06-06
VERTICALL
VERTICALLY
vfprintf
vgetargs1
vgetargskeywords
viewitems
viewkeys
viewvalues
VISARGAYA
VISIGOTHI
visit_decref
visit_reachable
v_lshift
((v)->ob_type == &PyInstance_Type)
((((v)->ob_type)->tp_flags & ((1L<<23))) != 0)
((((v)->ob_type)->tp_flags & ((1L<<23))) != 0) || ((((((PyObject*)(v))->ob_type))->tp_flags & ((1L<<24))) != 0)
VOICELES
(void *)block != (void *)0xcbcbcbcb
(void *)block != (void *)0xdbdbdbdb
(void *)block != (void *)0xfbfbfbfb
VOWEL-CARRIE
-V     : print the Python version number and exit (also --version)
v_rshift
vsign != 0
vtop <= wm1
-v     : verbose (trace import statements); also PYTHONVERBOSE=x
v != ((void *)0)
v != ((void *)0) && ((((((PyObject*)(v))->ob_type))->tp_flags & ((1L<<24))) != 0)
"""""""""""""""W
wait3(options) -> (pid, status, rusage)
wait4(pid, options) -> (pid, status, rusage)
Wait for an incoming connection.  Return a new socket representing the
Wait for completion of a child process.
Wait for completion of a given child process.
Wait for events on the epoll file descriptor for a maximum time of timeout
waitpid(pid, options) -> (pid, status)
wait() -> (pid, status)
Wait until a signal arrives.
Wait until one or more file descriptors are ready for some kind of I/O.
WANDERER
* wants int
-W arg : warning control; arg is action:message:category:module:lineno
warn_explicit
__warningregistry__
warnings
_warnings
_warnings.defaultaction not found
_warnings.filters item %zd isn't a 5-tuple
_warnings.filters must be a list
_warnings provides basic warning filtering support.
warnings.showwarning() must be set to a function or method
warnoptions
WASALLAM
WASSALLAM
was unobtainable
WAW-AYIN-RESH
'wbits' is window buffer size.
WCONTINUED
WCOREDUMP
WCOREDUMP(status) -> bool
weakcallableproxy
weakly-referenced object no longer exists
weak object has gone away
weakproxy
<weakproxy at %p to %.100s at %p>
_weakref
__weakref__
<weakref at %p; dead>
<weakref at %p; to '%.50s' at %p>
<weakref at %p; to '%.50s' at %p (%s)>
Weak-reference support module.
__weakrefoffset__
Weak ref proxy used after referent went away.
__weakref__ slot disallowed: either we already got one, or __itemsize__ != 0
WEDGE-TAILE
  weekday (0-6, Monday is 0)
WEST-CRE
WEXITSTATUS
WEXITSTATUS(status) -> integer
WHEELCHAI
When a default argument is given, it is returned when the attribute doesn't
When enabled, this function returns detailed, implementation-specific
When importing a module from a package, note that __import__('A.B', ...)
when importing modules.
when opened for writing or appending; it will be truncated when
When operation is LOCK_SH or LOCK_EX, it can also be bitwise ORed with
when Python was built.  Otherwise, return None.
When 'seconds' is not passed in, convert the current time instead.
When step is given, it specifies the increment (or decrement).
when the function raises an unhandled exception; a stack trace will be
When the socket module is first imported, the default is None.
               when the system is executing on behalf of the process.
When the time tuple is not present, current time as returned by localtime()
When using a tuple as the second argument issubclass(X, (A, B, ...)),
whether this is a stream (SOCK_STREAM, this is the default)
    while 1:
 while calling a Python object
while compressing
while compressing data
while copying compression object
while copying decompression object
while creating compression object
while creating decompression object
while decompressing
while decompressing data
While field "body" must be a list, not a %.200s
While field "orelse" must be a list, not a %.200s
while finishing compression
while finishing data decompression
while flushing
 while getting the repr of a list
 while getting the repr of a tuple
 while getting the str of an object
 while pickling an object
while preparing to decompress data
while_stmt
WHITE-FEATHERE
whitespace
Whitespace between formats is ignored.
whitespace removed.
whitespace string is a separator and empty strings are
whitespace string is a separator and empty strings are removed
whose value is independent from a particular invocation of Python can be
why != WHY_YIELD
WIANGWAAK
WIDE-HEADE
width too big
WIFCONTINUED
WIFCONTINUED(status) -> bool
WIFEXITED
WIFEXITED(status) -> bool
WIFSIGNALED
WIFSIGNALED(status) -> bool
WIFSTOPPED
WIFSTOPPED(status) -> bool
w*|ii:recvfrom_into
w*|ii:recv_into
wildcard resolved to multiple address
will be called with an exception instance containing
will be interrupted.
will be restarted when interrupted by signal sig, else system calls
will block until another thread unlocks it.  Deadlocks may ensue.
will include only the text up to the current file position.
with a argument tuple taken from the given sequence.
With an argument, equivalent to object.__dict__.
With an argument, this will only block if the argument is true,
With a single iterable argument, return its largest item.
With a single iterable argument, return its smallest item.
With a type as second argument, return whether that is the object's type.
with BOM
With field "body" must be a list, not a %.200s
with_item
With no arguments, run a full collection.  The optional argument
With optional end, stop comparing B at that position.
With optional end, stop comparing S at that position.
With optional start, test B beginning at that position.
With optional start, test S beginning at that position.
Without arguments, equivalent to locals().
without creating your own custom type.
with_statement
with_stmt
with the importer protocol.
With two arguments, equivalent to x**y.  With three arguments,
With two or more arguments, return the largest argument.
With two or more arguments, return the smallest argument.
wlist -- wait until ready for writing
WOODS-CRE
WORDSPACE
working to the front.  If maxsplit is given, at most maxsplit
w_PyLong
wrapperdescr_call
wrapper_descriptor
wrapper %s doesn't take keyword arguments
wrap_sq_item
wrasgc != next
writable buffers are not hashable
writable contiguous buffer requested for a non-contiguousobject.
Write all items (as machine values) to the file object f.  Also called as
Write a string to a file descriptor.
write() -- DEPRECATED, use tofile()
write(fd, string) -> byteswritten
writelines
writelines() argument must be a sequence of strings
writelines() requires an iterable argument
writelines(sequence_of_strings) -> None.  Write the strings to the file.
writeobject with NULL file
write(s) -> len
Writes the string s into the SSL object.  Returns the number
write(str) -> None.  Write string str to file.
write(s) -- Write a string to the file
Write the packed bytes into the writable buffer buf starting at offset.
Write the value on the open file. The value must be a supported type.
Writing negative value into unsigned field
writing or appending.  The file will be created if it doesn't exist
written and read by this module. The following types are supported:
written to sys.stderr.
wrong number of children for 'except' clause: %d
wrong number of tokens for 'while' statement: %d
# wrote %s
wr->wr_object == op
wr->wr_object == (&_Py_NoneStruct)
wsign != 0
WSTOPSIG
WSTOPSIG(status) -> integer
WTERMSIG
WTERMSIG(status) -> integer
WUNTRACED
w && ((((w)->ob_type)->tp_flags & ((1L<<23))) != 0)
wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
WXYZ[\]^_`abcdef
X509_free
X509_get_ext
X509_get_ext_by_NID
X509_get_issuer_name
X509_get_serialNumber
X509_get_subject_name
X509_NAME_entry_count
X509_NAME_ENTRY_get_data
X509_NAME_ENTRY_get_object
X509_NAME_get_entry
X509_NAME_oneline
X509V3_EXT_get
x.__abs__() <==> abs(x)
x.__add__(y) <==> x+y
x.__and__(y) <==> x&y
x.__call__(...) <==> x(...)
x.__cmp__(y) <==> cmp(x,y)
x.__coerce__(y) <==> coerce(x, y)
x.__contains__(y) <==> y in x
x.__contains__(y) <==> y in x.
x.__delattr__('name') <==> del x.name
    @x.deleter
x.__delitem__(y) <==> del x[y]
x.__delslice__(i, j) <==> del x[i:j]
x.__divmod__(y) <==> divmod(x, y)
x_divrem
x.__div__(y) <==> x/y
x.__eq__(y) <==> x==y
    x = firstval
x.__float__() <==> float(x)
x.__floordiv__(y) <==> x//y
x.__getattribute__('name') <==> x.name
x.__getitem__(y) <==> x[y]
x.__getslice__(i, j) <==> x[i:j]
x.__ge__(y) <==> x>=y
x.__gt__(y) <==> x>y
x.__hash__() <==> hash(x)
x.__hex__() <==> hex(x)
x.__iadd__(y) <==> x+=y
x.__iand__(y) <==> x&=y
x.__idiv__(y) <==> x/=y
x.__ifloordiv__(y) <==> x//y
x.__ilshift__(y) <==> x<<=y
x.__imod__(y) <==> x%=y
x.__imul__(y) <==> x*=y
x.__init__(...) initializes x; see help(type(x)) for signature
x.__int__() <==> int(x)
x.__invert__() <==> ~x
x.__ior__(y) <==> x|=y
x.__ipow__(y) <==> x**=y
x.__irshift__(y) <==> x>>=y
-X is reserved for implementation-specific arguments
x.__isub__(y) <==> x-=y
x.__iter__() <==> iter(x)
x.__itruediv__(y) <==> x/y
x.__ixor__(y) <==> x^=y
(x)->L[1] || (x)->L[0]
x.__len__() <==> len(x)
x.__le__(y) <==> x<=y
xlist -- wait for an ``exceptional condition''
x.__long__() <==> long(x)
x.__lshift__(y) <==> x<<y
x.__lt__(y) <==> x<y
__xmknod
xmlcharrefreplace
'xmlcharrefreplace' as well as any other name registered with
xmlcharrefreplace_errors
x.__mod__(y) <==> x%y
xmody && ((y ^ xmody) >= 0)
x.__mul__(n) <==> x*n
x.__mul__(y) <==> x*y
x.__neg__() <==> -x
x.next() -> the next value, or raise StopIteration
x.__ne__(y) <==> x!=y
x.__nonzero__() <==> x != 0
x.__oct__() <==> oct(x)
xor(a, b) -- Same as a ^ b.
xor_expr
x.__or__(y) <==> x|y
  x: pad byte (no data); c:char; b:signed byte; B:unsigned byte;
x.__pos__() <==> +x
x.__pow__(y[, z]) <==> pow(x, y[, z])
    x = property(getx, setx, delx, "I'm the 'x' property.")
x.__radd__(y) <==> y+x
x.__rand__(y) <==> y&x
xrange()
xrange() arg 3 must not be zero
xrange(%ld)
xrange(%ld, %ld)
xrange(%ld, %ld, %ld)
xrange object index out of range
xrange() result has too many items
xrange([start,] stop[, step]) -> xrange object
x.__rdivmod__(y) <==> divmod(y, x)
x.__rdiv__(y) <==> y/x
xreadlines
xreadlines() -> returns self.
x.__repr__() <==> repr(x)
x.__rfloordiv__(y) <==> y//x
x.__rlshift__(y) <==> y<<x
x.__rmod__(y) <==> y%x
x.__rmul__(n) <==> n*x
x.__rmul__(y) <==> y*x
x.__ror__(y) <==> y|x
x.__rrshift__(y) <==> y>>x
x.__rshift__(y) <==> x>>y
x.__rsub__(y) <==> y-x
x.__rtruediv__(y) <==> y/x
x.__rxor__(y) <==> y^x
x.__setattr__('name', value) <==> x.name = value
x.__setitem__(i, y) <==> x[i]=y
x.__setslice__(i, j, y) <==> x[i:j]=y
    @x.setter
XSHAAYATHIYA
x_size > 0
-x     : skip first line of source, allowing use of non-Unix forms of #!cmd
__xstat64
        x += step
x.__str__() <==> str(x)
x.__sub__(y) <==> x-y
x.__truediv__(y) <==> x/y
x != ((void *)0)
x.__xor__(y) <==> x^y
xxsubtype
xxsubtype is an example module showing how to subtype builtin types from C.
xxsubtype.spamdict
xxsubtype.spamlist
XXX ambiguity!
XXX block stack overflow
XXX block stack underflow
XXX lineno: %d, opcode: %d
XXX readobject called with exception set
XXX too high nonterminal number!
XXX too many states!
XXX undetected error
%X:%X:%X:%X:%X:%X%c
``x.y = v''.
x[y:z] <==> x[y.__index__():z.__index__()]
x%z%|%~%
Y5 `5 g5 
YAJURVEDI
YAMAKKAN
YaRwNDx > 0.0
year >= 1900 required
year, for example, 1993
  year (four digits, e.g. 1998)
year out of range
YEORINHIEUH
YESIEUNG
YESIEUNG-HIEUH
YESIEUNG-MIEUM
YESIEUNG-PANSIOS
YESIEUNG-SIOS
yet finished.
yield_expr
yield expression
'yield' outside function
yield_stmt
        yield x
You have to be root to be able to use this module.
You probably don't want to use this function.  It exists mainly to be
your system's :file:`float.h` for more information.
YOUTHFULNESS
YPOGEGRAMMENI
YPOKRISI
YPOKRISIS
y.__rpow__(x[, z]) <==> pow(x, y[, z])
YUUKALEAPINTU
ZAVIYANI
Z_BEST_COMPRESSION
Z_BEST_SPEED
Z_DEFAULT_COMPRESSION
Z_DEFAULT_STRATEGY
[%zd refs]
ZeroDivisionError
Zero padding is not allowed in complex format specifier
zero y in b2d
Z_FILTERED
Z_FINISH
Z_FULL_FLUSH
Z_HUFFMAN_ONLY
zip argument #%zd must support iteration
_zip_directory_cache
- _zip_directory_cache: a dict, mapping archive paths to zip directory
zipfile targeted.
zipimport
zipimport: can not open file %s
zipimport: can't read data
zipimporter
zipimporter()
- zipimporter: a class; its constructor takes a path to a Zip archive.
zipimporter(archivepath) -> zipimporter object
<zipimporter object "%.300s">
<zipimporter object "%.300s%c%.150s">
ZipImportError
- ZipImportError: exception raised by zipimporter objects. It's a
'ZipImportError is raised if 'archivepath' doesn't point to a valid Zip
# zipimport: found %ld names in %s
zipimport: no memory to allocate source buffer
zipimport provides support for importing Python modules from Zip archives.
zipimport.zipimporter
zipimport.ZipImportError
# zipimport: zlib %s
Zip path name is too long
zip(seq1 [, seq2 [...]]) -> [(seq1[0], seq2[0] ...), (...)]
ZLIB_1.2.0
zlib.Compress
zlib.Decompress
zlib.error
zlib library, which is based on GNU zip.
ZLIB_VERSION
Z_NO_FLUSH
z#|n:unpack_from
Z_SYNC_FLUSH
%zu arenas * %d bytes/arena
    %zu bytes originally requested
ZWARAKAY
|zz:tempnam
