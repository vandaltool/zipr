       ;;
ABSLIB=""
	    ABSLIB="$dir/$LIB"
	ABSLIB="$LIB"
# ...and preloaded libs
    -b|--fd-base)
		   [-b|--fd-base fd] [-h|--help] [-v|--version]
#!/bin/bash
  case "$1" in
case $GETOPTEST in
cat - >&2 <<EOF
                   [--] [command]
    done
      echo >&2 "fakeroot: $i"
       echo "fakeroot version 1.18.2"
       else
eval set -- "$FAKE_TEMP"
       exit 0
  exit 1
exit $RESULT
export FAKED_MODE
export FAKEROOT_FD_BASE
       FAKED="$1"
FAKED=${FAKEROOT_BINDIR}/faked-tcp
       FAKED_MODE="unknown-is-real"
FAKED_MODE="unknown-is-root"
FAKEDOPTS=""
         FAKEDOPTS=$FAKEDOPTS" --load"
       FAKEDOPTS=$FAKEDOPTS" --save-file $1"
       FAKEDOPTS=$FAKEDOPTS" --unknown-is-real"
FAKEROOT_BINDIR=/usr/bin
fakeroot, create a fake root environment.
       FAKEROOT_FD_BASE="$1"
FAKEROOTKEY=`echo $KEY_PID|cut -d: -f1`
  FAKEROOTKEY=$FAKEROOTKEY LD_LIBRARY_PATH="$PATHS"  LD_PRELOAD="$LIB" "$@"
  FAKEROOTKEY=$FAKEROOTKEY LD_LIBRARY_PATH="$PATHS"  LD_PRELOAD="$LIB" ${SHELL:-/bin/sh}
  #FAKEROOTKEY=$FAKEROOTKEY  LD_PRELOAD="$LIB" "$@"
  #FAKEROOTKEY=$FAKEROOTKEY  LD_PRELOAD="$LIB" ${SHELL:-/bin/sh}
FAKEROOT_PREFIX=/usr
    FAKE_TEMP=`getopt l:f:i:s:ub:vh "$@"`
    FAKE_TEMP=`getopt -l lib: -l faked: -l unknown-is-real -l fd-base: -l version -l help -- +l:f:i:s:ub:vh "$@"`
fatal ()
  fatal "error while starting the \`faked' daemon."
    fatal "FAKEROOTKEY set to $FAKEROOTKEY" \
    fatal "preload library \`$LIB' not found, aborting."
    -f|--faked)
       fi
    for dir in `echo $PATHS | sed 's/:/ /g'`
GETOPTEST=`getopt --version`
getopt*) # GNU getopt
    -h|--help)
                   [-i file] [-s file] [-u|--unknown-is-real]
if [ -n "$PATHS" ]
       if test -f "$1"; then
if test $libfound = no
if test "$?" -ne 0; then
if test -n "$FAKEROOTKEY"
if test -n "$LD_LIBRARY_PATH"; then
if test -n "$LD_PRELOAD"; then
	if test -r "$dir/$LIB"
    if test -r "$LIB"
if test $USEABSLIBPATH -ne 0 ; then
if test -z "$FAKEROOTKEY" || test -z "$PID"; then
if test -z "$*"; then
if [ "$WAITINTRAP" -eq 0 ]; then
# Keep other library paths
KEY_PID=`eval $FAKED $FAKEDOPTS $PIPEIN`
  LIB=$ABSLIB
       LIB=`eval echo "$1"`
libfound=no
	    libfound=yes
	libfound=yes
LIB=libfakeroot-tcp.so
  LIB="$LIB $LD_PRELOAD"
    -l|--lib)
  local i
# Local Variables:
# make sure the preload is available
# mode: shell-script
          "nested operation not yet supported"
       [ -p $1 ] || WAITINTRAP=1
       PATHS=
  PATHS="$PATHS:$LD_LIBRARY_PATH"
PATHS=/usr/lib/i386-linux-gnu/libfakeroot:${FAKEROOT_PREFIX}/lib64/libfakeroot:${FAKEROOT_PREFIX}/lib32/libfakeroot
PID=`echo $KEY_PID|cut -d: -f2`
PIPEIN=""
         PIPEIN="<$1"
*) # POSIX getopt ?
  RESULT=$?
       shift
shift #get rid of the '--'
  stderr "$@"
stderr ()
         stderr "database file \`$1' does not exist."
# strip /bin/fakeroot to find install prefix
    then
# the requested program with fake root privileges.
# This script first starts faked (the daemon), and then it will run
  trap 'FAKEROOTKEY=$FAKEROOTKEY LD_LIBRARY_PATH="$PATHS" LD_PRELOAD="$LIB" /bin/ls -l / >/dev/null 2>&1; while kill -s HUP $PID 2>/dev/null; do sleep 0.1; done' EXIT INT
  #trap 'FAKEROOTKEY=$FAKEROOTKEY LD_PRELOAD="$LIB" /bin/ls -l / >/dev/null 2>&1; while kill -s HUP $PID 2>/dev/null; do sleep 0.1; done' EXIT INT
  trap "kill -s HUP $PID" EXIT INT
unset FAKEROOTKEY
       usage
usage () {
   usage: fakeroot [-l|--lib fakerootlib] [-f|--faked fakedbin]
USEABSLIBPATH=0
    -u|--unknown-is-real)
    -v|--version)
WAITINTRAP=0
while test "X$1" != "X--"; do
