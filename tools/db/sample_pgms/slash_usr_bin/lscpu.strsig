%02x%02x	%04x%04x	%*[^
%-23s0x%s
32-bit, 
64-bit, 
9T$4wwso
Architecture:
bindtextdomain
bogomips
BogoMIPS:
bogomips per cpu
Book(s):
Byte Order:
cannot allocate %zu bytes
cannot duplicate string
control_d
Core(s) per socket:
cpu family
CPU family:
CPU MHz:
CPU op-mode(s):
CPU Topology SW:%d%d%d%d%d%d
__ctype_b_loc
__ctype_tolower_loc
dcgettext
%d%s%jd%s
;D$<t/;\$Hs
;D$<tw;\$Hs
;D$$tz9t$Ls
__errno_location
error: cannot open %s
error: uname failed
failed to callocate cpu set
failed to parse CPU list %s
failed to parse CPU mask %s
failed to read: %s
features
__fprintf_chk
getopt_long
GLIBC_2.0
GLIBC_2.1
GLIBC_2.2
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.6
GLIBC_2.7
__gmon_start__
 -h, --help          print this help
Hypervisor vendor:
Instruction
_IO_putc
_IO_stdin_used
KVMKVMKVM
l$,9l$(s
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
Little Endian
localeconv
Microsoft
Microsoft Hv
NUMA node%d CPU(s):
NUMA node(s):
Off-line CPU(s) list:
Off-line CPU(s) mask:
On-line CPU(s) list:
On-line CPU(s) mask:
Options:
parse error: %s
 -p, --parse <list>  print out a parsable instead of a readable format
__printf_chk
/proc/bus/pci/devices
/proc/cpuinfo
/proc/sysinfo
/proc/xen
/proc/xen/capabilities
__progname
program_invocation_short_name
# programs. Each different item in every column has an unique ID
%s cache:
__sched_cpualloc
__sched_cpucount
__sched_cpufree
setlocale
__snprintf_chk
Socket(s):
Socket(s) per book:
 %s [options]
%s: '%s'
 -s, --sysroot <dir> use directory DIR as system root
__stack_chk_fail
# starting from zero.
stepping
Stepping:
__strdup
strncasecmp
__strtoull_internal
/sys/devices/system/cpu/cpu%d
/sys/devices/system/cpu/cpu%d/cache/index%d
/sys/devices/system/cpu/cpu%d/cache/index%d/level
/sys/devices/system/cpu/cpu%d/cache/index%d/shared_cpu_map
/sys/devices/system/cpu/cpu%d/cache/index%d/size
/sys/devices/system/cpu/cpu%d/cache/index%d/type
/sys/devices/system/cpu/cpu%d/topology/book_siblings
/sys/devices/system/cpu/cpu%d/topology/core_siblings
/sys/devices/system/cpu/cpu%d/topology/thread_siblings
/sys/devices/system/cpu/kernel_max
/sys/devices/system/cpu/online
/sys/devices/system/node/node%d
/sys/devices/system/node/node%d/cpumap
# The following is the parsable format, which can be fed to other
Thread(s) per core:
unknown column: %s
/usr/share/locale
util-linux
vendor_id
Vendor ID:
Virtualization:
Virtualization type:
VMwareVMware
__vsnprintf_chk
XenVMMXenVMM
 -x, --hex           print hexadecimal masks rather than lists of CPUs
%zd-%zd,
%zd,%zd,
