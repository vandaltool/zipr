[ $? != 0 ] && {
	-[Adrn])  opts="$opts $1"; shift ;;
	-[aUOvQ])  warning $1; shift ;;
#!/bin/sh
#                                   <buc@citadel.stu.neva.ru>
    case "$1" in
#   Copyright (c)  2007             Dmitry K. Butskoy
	*)  echo "$prgname: Internal parsing error" >&2; exit 2 ;;
    echo "$prgname: Option '$1' is not implemented in this wrapper" >&2
    echo "Usage: $prgname [-adnruvAMOPQU$] [-w wait] [-S start_ttl]
[ $# -eq 0 ] && {
    esac
	     esac
eval set -- "$PARSED"
exec /usr/bin/traceroute.db $opts $1 $2
    exit 2
	-f)  opts="$opts --sport=$2"; shift 2 ;;
#  from ftp://ftp.login.com/pub/software/traceroute/
	-[gmpqstw])  opts="$opts $1 $2"; shift 2 ;;
	-I)  case "$2" in
		icmp)  opts="$opts -I" ;;
#   License:  GPL v2 or any later
		[-m max_ttl] [-p port] [-q nqueries] [-g gateway] [-t tos]
	-M)  opts="$opts --mtu"; shift ;;
	-$)  opts="-f 64 -m 64 -q 1"; shift ;;
		*)  opts="$opts -P $2" ;;
PARSED=`getopt 'adnruvAMOPQU$w:S:m:p:q:g:t:s:I:f:T:' "$@"`
prgname=$0
	-P)  spray=1; shift ;;
#   See COPYING for the status of this software.
#  Shell wrapper providing traceroute-nanog(8) command line interface.
	     shift 2  ;;
	--)  shift; break ;;
	-S)  opts="$opts -f $2"; shift 2 ;;
spray=""
		[-s src_addr] [-I proto]  host  [data_size]" >&2
		tcp)  opts="$opts -T" ;;
#  The original implementation of traceroute-nanog(8) can be obtained
	-T)  warning $1; shift 2 ;;
	-u)  ;;
		udp)   ;;
		udplite)  opts="$opts -UL" ;;
    usage
usage () {
warning () {
while [ $# -gt 0 ]
[ -z "$spray" ] && opts="$opts -N 1"
