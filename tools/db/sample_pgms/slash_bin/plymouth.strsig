answer_state->command != ((void *)0)
answer_via_command
ask-for-password
ask-question
Ask user a question
Ask user for password
__asprintf_chk
__assert_fail
Become sensitive to a keystroke
Boot splash control client
Check if boot daemon has an active vt
Check of boot daemon is running
client->daemon_can_take_request_watch != ((void *)0)
client->disconnect_handler_user_data == ((void *)0)
client->disconnect_handler == ((void *)0)
!client->is_connected
client->loop == ((void *)0)
client->loop != ((void *)0)
client != ((void *)0)
Command to send keystroke to via standard input
Command to send password to via standard input
Command to send the answer to via standard input
deactivate
Display a message
Don't explicitly hide boot splash on exit
Don't pause boot progress bar while asking
dont-pause-progress
Enable verbose debug logging
__errno_location
error: unexpectedly disconnected from boot status daemon
Get directory where splash plugins are installed
get_kernel_command_line
get-splash-plugin-path
GLIBC_2.0
GLIBC_2.2
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.8
__gmon_start__
has-active-vt
hide-splash
Hide splash screen
ignore-keystroke
i <= number_of_delimiters
_IO_stdin_used
_Jv_RegisterClasses
Keys to become sensitive to
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
/lib/plymouth/
libply.so.2
Message to display when asking for password
Message to display when asking the question
message != ((void *)0)
new-root-dir
Number of times to ask before giving up (requires --command)
number-of-tries
on_disconnect
on_multiple_password_answers
on_password_answer_failure
on_password_request
on_password_request_execute
Pause boot progress bar
ply_array_add_element
ply_array_free
ply_array_new
ply_array_steal_elements
ply_boot_client_ask_daemon_for_cached_passwords
ply_boot_client_ask_daemon_for_password
ply_boot_client_ask_daemon_question
ply_boot_client_ask_daemon_to_ignore_keystroke
ply_boot_client_ask_daemon_to_watch_for_keystroke
ply_boot_client_attach_to_event_loop
./ply-boot-client.c
ply_boot_client_cancel_requests_waiting_for_replies
ply_boot_client_cancel_unsent_requests
ply_boot_client_connect
ply_boot_client_detach_from_event_loop
ply_boot_client_disconnect
ply_boot_client_flush
ply_boot_client_get_request_string
ply_boot_client_on_hangup
ply_boot_client_ping_daemon
ply_boot_client_process_incoming_replies
ply_boot_client_process_pending_requests
ply_boot_client_queue_request
ply_boot_client_send_request
ply_boot_client_tell_daemon_system_is_initialized
ply_boot_client_tell_daemon_to_change_root
ply_boot_client_tell_daemon_to_deactivate
ply_boot_client_tell_daemon_to_display_message
ply_boot_client_tell_daemon_to_hide_splash
ply_boot_client_tell_daemon_to_quit
ply_boot_client_tell_daemon_to_reactivate
ply_boot_client_tell_daemon_to_show_splash
ply_boot_client_update_daemon
/ply-boot-protocol
ply_command_parser_add_command
ply_command_parser_add_options
ply_command_parser_get_command_options
ply_command_parser_get_help_string
ply_command_parser_get_options
ply_command_parser_new
ply_command_parser_parse_arguments
ply_connect_to_unix_socket
ply_event_loop_exit
ply_event_loop_free
ply_event_loop_new
ply_event_loop_process_pending_events
ply_event_loop_run
ply_event_loop_stop_watching_fd
ply_event_loop_watch_fd
ply_event_loop_watch_for_exit
ply_free_string_array
ply_list_append_data
ply_list_free
ply_list_get_first_node
ply_list_get_length
ply_list_get_length (client->requests_to_send) == 0
ply_list_get_length (client->requests_to_send) != 0
ply_list_get_length (client->requests_waiting_for_replies) == 0
ply_list_get_next_node
ply_list_new
ply_list_node_get_data
ply_list_remove_node
ply_logger_flush
ply_logger_get_error_default
ply_logger_inject_with_non_literal_format_string
ply_logger_is_tracing_enabled
ply_logger_toggle_tracing
plymouth
./plymouth.c
plymouth:debug
ply_open_unidirectional_pipe
ply_read
ply_read_uint32
ply_write
__printf_chk
proc/cmdline
*q != delimiter
reactivate
read-write
received unexpected response from boot status daemon
Remove sensitivity to a keystroke
report-error
request_argument == ((void *)0) || strlen (request_argument) <= (127 * 2 + 1)
request_command != ((void *)0)
request->command != ((void *)0)
request_node != ((void *)0)
request != ((void *)0)
retain-splash
root_dir != ((void *)0)
Root filesystem is about to change
Root filesystem is no longer read-only
[%s] %45.45s:command died with signal %s
[%s] %45.45s:command failed
[%s] %45.45s:command was successful
[%s] %45.45s:could not run command: %m
[%s] %45.45s:couldn't open it: %m
[%s] %45.45s:couldn't read it: %m
[%s] %45.45s:daemon has a few candidate passwords for us to try
[%s] %45.45s:daemon has no candidate passwords for us to try
[%s] %45.45s:daemon not available, running command on our own
[%s] %45.45s:daemon not running
[%s] %45.45s:detaching from event loop
[%s] %45.45s:disconnect
[%s] %45.45s:executing password request (command %s)
[%s] %45.45s:has active vt? failed
[%s] %45.45s:Kernel command line is: '%s'
[%s] %45.45s:on multiple password answers
[%s] %45.45s:opening /proc/cmdline
[%s] %45.45s:password answer failure
[%s] %45.45s:Password request
[%s] %45.45s:ping failed
[%s] %45.45s:reading kernel command line
[%s] %45.45s:running command '%s'
show-splash
Show splash screen
size > 0
split_string
__stack_chk_fail
__strdup
strlen (request->argument) <= (127 * 2 + 1)
__strndup
strsignal
Tell boot daemon an update about boot progress
Tell boot daemon root filesystem is mounted read-write
Tell boot daemon that new root filesystem is mounted
Tell boot daemon there were errors during boot
Tell boot daemon to deactivate
Tell boot daemon to quit
Tell boot daemon to reactivate
Tell daemon about boot status changes
Tell daemon about root filesystem changes
Tell daemon the current boot status
Tell daemon to hide splash screen
Tell daemon to show splash screen
The message text
This help message
Unpause boot progress bar
unpause-progress
update-root-fs
Wait for boot daemon to quit
watch-keystroke
