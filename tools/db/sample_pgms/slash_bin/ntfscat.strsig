2012.1.15AR.1
    -a, --attribute TYPE       Display this attribute type
ABSOLUTELY NO WARRANTY; for details read the GNU General Public License to be
Access is denied because the NTFS journal file is unclean. Choices are:
Access is denied because the NTFS volume is already exclusively opened.
-a:fh?i:n:qVvr
and may lead to data corruption.
and you are welcome to redistribute it under certain conditions.  It comes with
 A) Shutdown Windows properly.
attribute
$ATTRIBUTE_LIST
attribute-name
Attribute name was truncated.
Attribute type was truncated.
AT_UNNAMED
    automatically initialize the journal.
 B) Click the 'Safely Remove Hardware' icon in the Windows taskbar
__bss_start
Cannot find attribute type 0x%x.
Copyright (c) 2003-2005 Anton Altaparmakov
Copyright (c) 2003-2005 Richard Russon
Copyright (c) 2003-2005 Szabolcs Szakacsits
Copyright (c) 2007      Yura Pakhuchiy
could be identified for example by the help of the 'fuser' command.
Couldn't create a search context.
Couldn't open $Bitmap
Couldn't open inode %llu.
Couldn't open $MFT/$DATA
Couldn't parse attribute.
Couldn't parse inode number.
Couldn't read $Bitmap
Couldn't read $MFT/$BITMAP
Couldn't read MFT Record %llu
Couldn't translate attribute name to current locale.
Couldn't translate attribute type to current locale.
Couldn't translate filename to current locale.
 C) Use 'Eject' from Windows Explorer to safely remove the device.
__cxa_finalize
Developers' email address: ntfs-3g-devel@lists.sf.net
different device under /dev/mapper, (e.g. /dev/mapper/nvidia_eahaabcc1)
 D) If you ran chkdsk previously then boot Windows again which will
distribution are broken. Please report to your distribution developers
$EA_INFORMATION
__errno_location
Error closing inode %llu.
ERROR: couldn't mount volume
ERROR: Couldn't open inode
ERROR: Couldn't output all data!
ERROR: Couldn't read file
Error getting information about %s
Error reading inode %llu.
Error reading inode %llu.  Aborting.
 E) Submit 'force' option (WARNING: This solution it not recommended).
Failed to determine whether %s is mounted
Failed to mount '%s'
Failed to set locale, using default '%s'.
    -f, --force                Use less caution
$FILE_NAME
find_first_attribute
 F) ntfsmount: Mount the volume read-only by using the 'ro' mount option.
Forced to continue.
found in the file "COPYING" distributed with this program, or online at:
getopt_long
GLIBC_2.0
GLIBC_2.1.3
GLIBC_2.2
GLIBC_2.3.4
__gmon_start__
    -h, --help                 Print this help
http://www.gnu.org/copyleft/gpl.html
    -i, --inode NUM            Display this inode
$INDEX_ALLOCATION
$INDEX_ROOT
Internal error, strtoll didn't return a suffix.
Invalid attribute name '%s'
Invalid number '%.*s'.
Invalid size '%s'.
Invalid size suffix '%s'.  Use T, G, M, or K.
_IO_stdin_used
_Jv_RegisterClasses
libc.so.6
__libc_start_main
/lib/ld-linux.so.2
libntfs-3g.so.831
$LOGGED_UTILITY_STREAM
made to NTFS by this software.
Maybe you selected the wrong device? Or the whole disk instead of a
<MFT%llu>
mft_next_record
    -n, --attribute-name NAME  Display this attribute name
NOTE: If you had not scheduled check and last time accessed this volume
    notification area before disconnecting the device.
(NOT to us!) that init scripts kill ntfsmount or mount.ntfs-fuse during
ntfs_attr_close
ntfs_attr_find_in_attrdef
ntfs_attr_get_search_ctx
ntfs_attr_lookup
ntfs_attr_mst_pread
ntfs_attr_open
ntfs_attr_pread
ntfs_attr_put_search_ctx
ntfs_bugs
ntfscat.c
ntfs_check_if_mounted
ntfs_gpl
ntfs_home
NTFS_INDEX_I30
ntfs_inode_close
ntfs_inode_open
NTFS is inconsistent. Run chkdsk /f on Windows then reboot it TWICE!
ntfs_log_clear_levels
ntfs_log_get_levels
ntfs_log_handler_stderr
ntfs_log_parse_option
ntfs_log_redirect
ntfs_log_set_handler
ntfs_log_set_levels
ntfs_malloc
ntfs_mbstoucs
ntfs_mount
ntfs_pathname_to_inode
ntfs_ucsnlen
ntfs_ucstombs
ntfs_umount
$OBJECT_ID
off properly, so mounting could be done safely.
Out of memory.  Aborting.
parse_options
partition (e.g. /dev/hda, not /dev/hda1)? Or the other way around?
Pathname was truncated.
Please boot into Windows TWICE, or use the 'force' option.
$PROPERTY_SET
    -q, --quiet                Less output
$REPARSE_POINT
$SECURITY_DESCRIPTOR
setlocale
shutdown instead of proper umount.
snprintf
__snprintf_chk
$STANDARD_INFORMATION
%s v%s (libntfs-3g) - Concatenate files and print on the standard output.
T$\3D$X	
The device %s doesn't exist
The device '%s' doesn't have a valid NTFS.
The directory structure is too deep (over %d) nested directories.
The NTFS partition is hibernated. Please resume Windows and turned it 
The usage of the /f parameter is very IMPORTANT! No modification was
The volume may be already mounted, or another software may use it which
This program is free software, released under the GNU General Public License
to mount NTFS. Please see the 'dmraid' documentation for help.
<UNKNOWN>
Unknown attribute type 0x%02x
Unknown option '%s'.
Usage: %s [options] device [file]
Use the force option to ignore this error.
using ntfsmount and shutdown system properly, then init scripts in your
utils_attr_get_name
utils_cluster_in_use
utils_inode_get_name
utils_mftrec_in_use
utils_mount_volume
utils_parse_size
utils_set_locale
utils_valid_device
$VOLUME_INFORMATION
Volume is scheduled for check.
$VOLUME_NAME
    -v, --verbose              More output
    -V, --version              Version information
WARNING: Dirty volume mount was forced by the 'force' mount option.
__xstat64
You can't specify both a file and inode.
You can use force option to avoid this check, but this is not recommended
You may not use --quiet and --verbose at the same time.
You must specify a device.
You must specify a file or inode with the -i option.
You must specify exactly one attribute.
You must specify exactly one file.
You must specify exactly one inode.
You seem to have a SoftRAID/FakeRAID hardware and must use an activated,
