
AC_INIT(myconfig, version-0.1)


AC_PREFIX_DEFAULT($ZIPR_INSTALL)
AC_PROG_CC
AC_CANONICAL_HOST

AC_ARG_ENABLE([debugging],              [  --enable-debugging                enable -g when compiling])
AC_ARG_ENABLE([cgc],              	[  --enable-cgc                enable -DCGC when compiling for CGC binaries])

OPTIMIZE="-O3"
if test "$enable_debugging" = yes; then
        OPTIMIZE="-g  -DDEBUG"
fi



AR=ar
CC=gcc
CXX=g++
CFLAGS="$OPTIMIZE -fPIC -I$SECURITY_TRANSFORMS_HOME/include/elfio/elfio-2.2/ -I$ZIPR_SDK/include -I$SECURITY_TRANSFORMS_HOME/libIRDB/include -I$SECURITY_TRANSFORMS_HOME/beaengine/include -I$SECURITY_TRANSFORMS_HOME/include -I$SECURITY_TRANSFORMS_HOME/tools/transforms"
CXXFLAGS="$CFLAGS"
LD=gcc
LDFLAGS="-shared -o libscfi.zpi"
AS=nasm
ASFLAGS="-felf"

case "$host" in
	i686-pc-cygwin)
		LDFLAGS="$LDFLAGS -L$ZIPR_INSTALL/lib -lzipr"
	;;
	*)
		
	;;
esac


if test "$enable_cgc" = yes; then
	echo Enabling CGC build.
        CFLAGS="$CFLAGS -DCGC -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64"
        CXXFLAGS="$CXXFLAGS -DCGC -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64"
        ASFLAGS="$ASFLAGS -DCGC -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64"

fi

AC_OUTPUT(Makefile)

AC_SUBST(DIRS)
AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(CXX)
AC_SUBST(CXXFLAGS)
AC_SUBST(LD)
AC_SUBST(LDFLAGS)
AC_SUBST(AS)
AC_SUBST(ASFLAGS)
AC_SUBST(ARCH)
AC_SUBST(AR)
AC_SUBST(OS)
AC_SUBST(LIB)
AC_SUBST(OPTIMIZE, $OPTIMIZE)
echo prefix=$prefix
AC_SUBST(prefix, $prefix)

AC_OUTPUT
