diff -rpuN umbrella/uvadev.peasoup/security_transforms/third_party/ELFIO/elfio-2.2/elfio/elfio_header.hpp elfio/elfio_header.hpp
--- umbrella/uvadev.peasoup/security_transforms/third_party/ELFIO/elfio-2.2/elfio/elfio_header.hpp	2012-11-27 04:34:09.000000000 -0500
+++ elfio/elfio_header.hpp	2013-11-22 10:03:00.640843581 -0500
@@ -23,6 +23,7 @@ THE SOFTWARE.
 #ifndef ELF_HEADER_HPP
 #define ELF_HEADER_HPP
 
+#include <istream>
 #include <fstream>
 
 namespace ELFIO {
@@ -31,7 +32,7 @@ class elf_header
 {
   public:
     virtual ~elf_header() {};
-    virtual bool load( std::ifstream& stream )       = 0;
+    virtual bool load( std::istream& stream )       = 0;
     virtual bool save( std::ofstream& stream ) const = 0;
 
     // ELF header functions
@@ -98,7 +99,7 @@ template< class T > class elf_header_imp
     }
 
     bool
-    load( std::ifstream& stream )
+    load( std::istream& stream )
     {
         stream.seekg( 0 );
         stream.read( reinterpret_cast<char*>( &header ), sizeof( header ) );
diff -rpuN umbrella/uvadev.peasoup/security_transforms/third_party/ELFIO/elfio-2.2/elfio/elfio.hpp elfio/elfio.hpp
--- umbrella/uvadev.peasoup/security_transforms/third_party/ELFIO/elfio-2.2/elfio/elfio.hpp	2013-05-16 11:37:39.000000000 -0400
+++ elfio/elfio.hpp	2013-11-22 10:03:00.640843581 -0500
@@ -35,6 +35,7 @@ THE SOFTWARE.
 #include <algorithm>
 #include <vector>
 #include <typeinfo>
+#include <istream>
 
 #include <elfio/elf_types.hpp>
 #include <elfio/elfio_utils.hpp>
@@ -99,7 +100,13 @@ class elfio
         stream.open( file_name.c_str(), std::ios::in | std::ios::binary );
         if ( !stream ) {
             return false;
-        }
+        }  
+	return load(stream);
+    }
+    bool load( std::istream &stream ) 
+    {
+	clean();
+
 
         unsigned char e_ident[EI_NIDENT];
 
@@ -323,7 +330,7 @@ class elfio
     }
 
 //------------------------------------------------------------------------------
-    Elf_Half load_sections( std::ifstream& stream )
+    Elf_Half load_sections( std::istream& stream )
     {
         Elf_Half  entry_size = header->get_section_entry_size();
         Elf_Half  num        = header->get_sections_num();
@@ -355,7 +362,7 @@ class elfio
     }
 
 //------------------------------------------------------------------------------
-    bool load_segments( std::ifstream& stream )
+    bool load_segments( std::istream& stream )
     {
         Elf_Half  entry_size = header->get_segment_entry_size();
         Elf_Half  num        = header->get_segments_num();
diff -rpuN umbrella/uvadev.peasoup/security_transforms/third_party/ELFIO/elfio-2.2/elfio/elfio_section.hpp elfio/elfio_section.hpp
--- umbrella/uvadev.peasoup/security_transforms/third_party/ELFIO/elfio-2.2/elfio/elfio_section.hpp	2013-03-25 03:57:36.000000000 -0400
+++ elfio/elfio_section.hpp	2013-11-22 10:03:00.640843581 -0500
@@ -25,6 +25,7 @@ THE SOFTWARE.
 
 #include <string>
 #include <fstream>
+#include <istream>
 
 namespace ELFIO {
 
@@ -55,7 +56,7 @@ class section
 
   protected:
     virtual void set_index( Elf_Half )                = 0;
-    virtual void load( std::ifstream& f,
+    virtual void load( std::istream& f,
                        std::streampos header_offset ) = 0;
     virtual void save( std::ofstream& f,
                        std::streampos header_offset,
@@ -203,7 +204,7 @@ class section_impl : public section
 
 //------------------------------------------------------------------------------
     void
-    load( std::ifstream& stream,
+    load( std::istream& stream,
           std::streampos header_offset )
     {
         std::fill_n( reinterpret_cast<char*>( &header ), sizeof( header ), '\0' );
diff -rpuN umbrella/uvadev.peasoup/security_transforms/third_party/ELFIO/elfio-2.2/elfio/elfio_segment.hpp elfio/elfio_segment.hpp
--- umbrella/uvadev.peasoup/security_transforms/third_party/ELFIO/elfio-2.2/elfio/elfio_segment.hpp	2013-05-01 15:17:01.000000000 -0400
+++ elfio/elfio_segment.hpp	2013-11-22 10:03:00.640843581 -0500
@@ -23,6 +23,7 @@ THE SOFTWARE.
 #ifndef ELFIO_SEGMENT_HPP
 #define ELFIO_SEGMENT_HPP
 
+#include <istream>
 #include <fstream>
 #include <vector>
 
@@ -52,7 +53,7 @@ class segment
 
   protected:
     virtual void set_index( Elf_Half )                                             = 0;
-    virtual void load( std::ifstream& stream, std::streampos header_offset ) const = 0;
+    virtual void load( std::istream& stream, std::streampos header_offset ) const = 0;
     virtual void save( std::ofstream& f, std::streampos header_offset,
                        std::streampos data_offset )                                = 0;
 };
@@ -142,7 +143,7 @@ class segment_impl : public segment
 
 //------------------------------------------------------------------------------
     void
-    load( std::ifstream& stream,
+    load( std::istream& stream,
           std::streampos header_offset ) const
     {
         stream.seekg( header_offset );
